{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","pipes","directiveTypes","directives","declaredInputs","encapsulation","Emulated","styles","animations","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","invertObject","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","extractDirectiveDef","pipeDefs","extractPipeDef","selectors","viewQuery","features","viewProviders","id","feature","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","MONKEY_PATCH_KEY_NAME","getContext","mpValue","readPatchedData","lViewData","nodeIndex","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","tNode","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","findViaNativeElement","existingCtx","lNode","getLNodeFromViewData","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","lNodeIndex","localRefs","getLElementFromComponent","componentInstance","readElementValue","readPatchedLViewData","child","componentIndices","components","elementComponentIndex","lElementIndex","startIndex","count","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","getLNode","hostView","isContentQueryHost","getRootView","getParentLNode","getHostElementNode","hostTNode","getContainerNode","embeddedView","containerHostIndex","dynamicLContainerNode","getContainerRenderParent","tViewNode","view","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParentNode","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","elementNode","executeNodeAction","lContainerNode","childContainerData","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","lContainer","parentView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","tContainer","destroyLView","getLViewChild","viewData","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentLNode","parentEl","parentTNode","renderParent","getBeforeNodeForView","ngContainer","parentNative","appendProjectedNode","projectedLNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","createEmptyStylingContext","element","sanitizer","initialStylingValues","getOrCreatePlayerContext","stylingContext","allocPlayerContext","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","ROOT_EXPANDO_INSTRUCTIONS","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","executeInitAndContentHooks","createLViewData","blueprint","createLNodeObject","createNodeAtIndex","parentInSameView","tParent","isState","createTNode","tData","tNode_1","dynamicContainerNode","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","generateExpandoBlock","totalHostVars","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","instantiateDirectivesDirectly","clone","addComponentLogic","directiveCreate","saveResolvedLocalsInData","localIndex","directiveCount","elementIndex","NO_CHANGE","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","listener","eventName","listenerFn","useCapture","getPreviousOrParentNode","listen","storeCleanupFn","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","getTNode","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","enableBindings","disableBindings","tViews","injectorIndex","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","load","lElement","allocStylingContext","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNative","textBinding","existingNode","textContent","directive","baseDirectiveCreate","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","addToViewTree","queueHostBindingForCheck","dirIndex","createLContainer","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","rootContext","nothingScheduled","scheduleTick","res_1","clean","scheduler","playerHandler","flushPlayers","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadQueryList","queryListIdx","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","createRootComponent","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","rootTView","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","RendererStyleFlags2","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","setUpBloom","parentLoc","getParentInjectorLocation","parentIndex","getParentInjectorView","parentData","bloomIndex","footer","viewOffset","location","startView","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","getOrCreateNodeInjector","directiveInject","getOrCreateInjectable","injectRenderer2","getOrCreateRenderer2","injectAttribute","attrNameToInject","bloomHash","bloomHashBitOrFactory","tokenId","startInjectorIndex","injectorView","parentLocation","shouldNotSearchParent","injectorHasToken","searchDirectivesOnInjector","searchMatchesQueuedForCreation","formerInjector","nodeFlags","NodeInjector","_tNode","_hostView","_injectorIndex","setEnvironment","getFactoryOf","typeAny","getInheritedFactory","PublicFeature","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","R3_ELEMENT_REF_FACTORY","injectElementRef","R3_TEMPLATE_REF_FACTORY","injectTemplateRef","R3_CHANGE_DETECTOR_REF_FACTORY","injectChangeDetectorRef","createViewRef","isComponent","componentIndex","hostComponentView","R3_VIEW_CONTAINER_REF_FACTORY","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_tContainerNode","_hostTNode","_viewRefs","clear","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","destroyed","_getHostNode","move","newIndex","shift","hostLNode","ElementRef","nativeElement","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","wrapper","rootFlags","tElementNode","componentTag","projection$$1","nodeList","firstTNode","previousTNode","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","factoryFn","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµinjectRenderer2","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","R3_COMPILE_COMPONENT","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","R3_COMPILE_DIRECTIVE","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","R3_COMPILE_INJECTABLE","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","R3_COMPILE_NGMODULE","setScopeOnDeclaredComponents","declaration","R3_COMPILE_PIPE","compilePipe","compilePipeFromMetadata","R3_COMPILE_NGMODULE_DEFS","R3_PATCH_COMPONENT_DEF_WTIH_SCOPE","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","VERSION","full","major","minor","patch","Injectable","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","ChangeDetectorRef","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","element$$1","Render3DebugContext","currentTNode","dirStart","CorePlayerHandler","_players","player","play","queuePlayer","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_INJECTABLE__POST_NGCC__","R3_COMPILE_NGMODULE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","R3_ELEMENT_REF_FACTORY__POST_NGCC__","R3_TEMPLATE_REF_FACTORY__POST_NGCC__","R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$1","Éµi18nApply","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","lastNodeIndex","textTNode","removedNode","removedTNode","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµaddPlayer","addPlayer","elementContext","animationContext","getRootContext","viewOrComponent","ÉµgetPlayers","getPlayers","ÉµcompileNgModuleFactory__POST_NGCC__","compileNgModuleFactory__POST_NGCC__","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__","ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__","ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-rc.0+83.sha-7ea5161\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 16;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER = 10;\n    var SANITIZER = 11;\n    var TAIL = 12;\n    var CONTAINER_INDEX = 13;\n    var CONTENT_QUERIES = 14;\n    var DECLARATION_VIEW = 15;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var lNode = getLNodeFromViewData(lViewData, nodeIndex);\n                var existingCtx = readPatchedData(lNode.native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, lNode.native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var lNode = getLNodeFromViewData(lViewData, index);\n                        var context = createLContext(lViewData, index, lNode.native);\n                        attachPatchData(lNode.native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, lNodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: lNodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * A simplified lookup function for finding the LElementNode from a component instance.\n     *\n     * This function exists for tree-shaking purposes to avoid having to pull in everything\n     * that `getContext` has in the event that an Angular application doesn't need to have\n     * any programmatic access to an element's context (only change detection uses this function).\n     */\n    function getLElementFromComponent(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var lNode;\n        if (Array.isArray(lViewData)) {\n            var lNodeIndex = findViaComponent(lViewData, componentInstance);\n            lNode = readElementValue(lViewData[lNodeIndex]);\n            var context = createLContext(lViewData, lNodeIndex, lNode.native);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            lNode = readElementValue(context.lViewData[context.nodeIndex]);\n        }\n        return lNode;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, native) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var lNode = getLNodeFromViewData(lViewData, tNode.index);\n            if (lNode.native === native) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var lNodeData = readElementValue(lViewData[elementComponentIndex]).data;\n                if (lNodeData[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootNode = lViewData[HEADER_OFFSET];\n            var rootComponent = rootNode.data[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Retruns the instance of the LElementNode at the given index in the LViewData.\n     *\n     * This function will also unwrap the inner value incase it's stuffed into an\n     * array (which is what happens when [style] and [class] bindings are present\n     * in the view instructions for the element being returned).\n     */\n    function getLNodeFromViewData(lViewData, lElementIndex) {\n        var value = lViewData[lElementIndex];\n        return value ? readElementValue(value) : null;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function getLNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent LNode of a given node. */\n    function getParentLNode(tNode, currentView) {\n        return tNode.parent == null ? getHostElementNode(currentView) :\n            getLNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host LElementNode given a view. Will return null if the host element is an\n     * LViewNode, since they are being phased out.\n     */\n    function getHostElementNode(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getLNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getContainerNode(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ?\n                embeddedView[PARENT][containerHostIndex].dynamicLContainerNode :\n                null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return getParentLNode(tNode, embeddedView[PARENT]);\n        }\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getContainerNode(tViewNode, view);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParentNode, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            if (tNode.type === 3 /* Element */) {\n                var elementNode = getLNode(tNode, currentView);\n                executeNodeAction(action, renderer, parent_1, elementNode.native, beforeNode);\n                if (elementNode.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, elementNode.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainerNode = currentView[tNode.index];\n                executeNodeAction(action, renderer, parent_1, lContainerNode.native, beforeNode);\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                if (childContainerData[VIEWS].length) {\n                    currentView = childContainerData[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index].native;\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var parentNode = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        var parent = parentNode ? parentNode.native : null;\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (parent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, tContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        destroyLView(view);\n        detachView(lContainer, removeIndex, !!tContainer.detached);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getContainerNode(tNode, state).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentLNode(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getContainerNode(viewTNode, view);\n        if (container == null || container.data[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var parentLNode = getParentLNode(childTNode, currentView);\n        var parentEl = parentLNode ? parentLNode.native : null;\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var container = getContainerNode(parentTNode, currentView);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent.native, childEl, getBeforeNodeForView(index, views, container));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var node = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, node.native, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, container) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getLNode(viewTNode.child, view).native : container.native;\n        }\n        else {\n            return container.native;\n        }\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parentEl The parent element from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(tNode, child, currentView) {\n        var parentNative = getParentLNode(tNode, currentView).native;\n        if (child !== null && canInsertNativeNode(tNode, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, child) :\n                parentNative.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedLNode The node to process\n     * @param parentNode The last parent element to be processed\n     * @param tProjectionNode\n     * @param currentView Current LView\n     * @param projectionView Projection view\n     */\n    function appendProjectedNode(projectedLNode, projectedTNode, tProjectionNode, currentView, projectionView) {\n        appendChild(projectedLNode.native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(projectedLNode.native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = projectedLNode.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, projectedLNode.native);\n            }\n        }\n        else if (projectedTNode.type === 4 /* ElementContainer */) {\n            var ngContainerChildTNode = projectedTNode.child;\n            while (ngContainerChildTNode) {\n                var ngContainerChild = getLNode(ngContainerChildTNode, projectionView);\n                appendProjectedNode(ngContainerChild, ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                ngContainerChildTNode = ngContainerChildTNode.next;\n            }\n        }\n        if (projectedLNode.dynamicLContainerNode) {\n            projectedLNode.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(projectedLNode.dynamicLContainerNode.native, tProjectionNode, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            element || null, null, sanitizer || null, initialStylingValues || [null], 0, 0, null, null\n        ];\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (ngDevMode && !context) {\n            throw new Error('Only elements that exist in an Angular application can be used for player access');\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var value = lViewData[nodeIndex];\n        var stylingContext = value;\n        if (!Array.isArray(value)) {\n            stylingContext = lViewData[nodeIndex] = createEmptyStylingContext(value);\n        }\n        return stylingContext[1 /* PlayerContext */] || allocPlayerContext(stylingContext);\n    }\n    function allocPlayerContext(data) {\n        return data[1 /* PlayerContext */] = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[5 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 4 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        styles = styles || null;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = classes === context[6 /* PreviousMultiClassValue */];\n        var ignoreAllStyleUpdates = styles === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            context[6 /* PreviousMultiClassValue */] = classes;\n            if (typeof classes == 'string') {\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            }\n        }\n        classes = (classes || EMPTY_OBJ);\n        if (!ignoreAllStyleUpdates) {\n            context[7 /* PreviousMultiStyleValue */] = styles;\n        }\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                context.push(flag, prop, value);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[5 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[3 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[4 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[2 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 4 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 4 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 4 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 4 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentNode() {\n        return previousOrParentTNode == null || previousOrParentTNode === viewData[HOST_NODE] ?\n            getHostElementNode(viewData) :\n            getLNode(previousOrParentTNode, viewData);\n    }\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setEnvironment(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    // Root component will always have an element index of 0 and an injector size of 1\n    var ROOT_EXPANDO_INSTRUCTIONS = [0, 1];\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        setHostBindings();\n        var parentFirstTemplatePass = firstTemplatePass;\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings() {\n        if (tView.expandoInstructions) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        if (typeof viewData[bindingRootIndex] === 'number') {\n                            // We've hit an injector. It may or may not exist depending on whether\n                            // there is a public directive on this node.\n                            bindingRootIndex += INJECTOR_SIZE;\n                        }\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, native, state) {\n        return { native: native, data: state, dynamicLContainerNode: null };\n    }\n    function createNodeAtIndex(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, native, isState ? state : null);\n        var tNode;\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in tView.node.\n            tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode_1 = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentTNode) {\n                    previousOrParentTNode.next = tNode_1;\n                    if (previousOrParentTNode.dynamicContainerNode)\n                        previousOrParentTNode.dynamicContainerNode.next = tNode_1;\n                }\n            }\n            tNode = tData[adjustedIndex];\n            if (!tView.firstChild && type === 3 /* Element */) {\n                tView.firstChild = tNode;\n            }\n            // Now link ourselves into the tree.\n            if (isParent && previousOrParentTNode) {\n                if (previousOrParentTNode.child == null && parentInSameView ||\n                    previousOrParentTNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentTNode.child = tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components do not save host TNodes)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = tNode;\n            if (lViewData[TVIEW].firstTemplatePass) {\n                lViewData[TVIEW].node = tNode;\n            }\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createNodeAtIndex(-1, 2 /* View */, null, null, null, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings();\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(tNode, currentView) {\n        return getLNode(tNode, currentView).native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (!bindingsEnabled)\n            return;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        generateExpandoBlock(tNode, matches);\n        var totalHostVars = 0;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(totalHostVars);\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoBlock(tNode, matches) {\n        var directiveCount = matches ? matches.length / 2 : 0;\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, directiveCount);\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        addComponentLogic(def);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def, null);\n                    }\n                    else {\n                        matches.push(def, null);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            return directiveCreate(matches[valueIndex] = viewData.length, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, def) {\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                // Component view must be set on node before the factory is created so\n                // ChangeDetectorRefs have a way to store component view on creation.\n                if (def.template) {\n                    addComponentLogic(def);\n                }\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var tNode = previousOrParentTNode;\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(tNode, viewData) : viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            directives: null,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetComponentState();\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            tView.expandoInstructions = ROOT_EXPANDO_INSTRUCTIONS.slice();\n            if (def.diPublic)\n                def.diPublic(def);\n            tNode.flags =\n                viewData.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n        return viewData[HEADER_OFFSET];\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var node = getPreviousOrParentNode();\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(node.native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                node.native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = getTNode(index);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: parent ? parent.injectorIndex : -1,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = getTNode(index);\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var hostNode = getLNode(previousOrParentTNode, viewData);\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, hostNode);\n        if (directiveDef.template) {\n            hostNode.data[CONTEXT] = directive;\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(def) {\n        var hostNode = getLNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(hostNode.native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        hostNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentTNode;\n        if (firstTemplatePass) {\n            queueComponentIndexForCheck();\n            previousOrParentTNode.flags =\n                viewData.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, hostNode) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (hostNode) {\n            attachPatchData(hostNode.native, viewData);\n        }\n        viewData[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if (flags === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n            tView.data.push(directiveDef);\n            tView.blueprint.push(null);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index, directiveDef);\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(hostNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(currentView, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            null // renderParent, set after node creation\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var lContainer = createLContainer(viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n        lContainer[RENDER_PARENT] = getRenderParent(tNode, viewData);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        viewData[previousOrParentTNode.index].data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var lContainer = viewData[previousOrParentTNode.index].data;\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var container = viewData[containerTNode.index];\n        var currentView = viewData;\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var lContainer = container.data;\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createNodeAtIndex(viewBlockId, 2 /* View */, null, null, null, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = readElementValue(viewData[adjustedElementIndex]);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                var lNode = projectedView[nodeToProject.index];\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(lNode, nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= 1 /* DetectChanges */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = getLElementFromComponent(component);\n        ngDevMode &&\n            assertDefined(hostNode, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var elementNode = getLElementFromComponent(component);\n        markViewDirty(elementNode.data);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    function getTNode(index) {\n        return tView.data[index + HEADER_OFFSET];\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = viewData.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            component = createRootComponent(elementNode, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(elementNode.data, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(elementNode, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at next index in viewData\n        var component = baseDirectiveCreate(rootView.length, componentDef.factory(), componentDef, elementNode);\n        rootContext.components.push(component);\n        elementNode.data[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (rootView[TVIEW].firstTemplatePass)\n            prefillHostVars(componentDef.hostVars);\n        setHostBindings();\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 15 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$1(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$1(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        if (tView.firstTemplatePass) {\n            var id = type[NG_ELEMENT_ID];\n            // Set a unique ID on the directive type, so if something tries to inject the directive,\n            // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n            if (id == null) {\n                id = type[NG_ELEMENT_ID] = nextNgElementId++;\n            }\n            // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n            // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n            var bloomBit = id & BLOOM_MASK;\n            // Create a mask that targets the specific bit associated with the directive.\n            // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n            // to bit positions 0 - 31 in a 32 bit integer.\n            var mask = 1 << bloomBit;\n            // Use the raw bloomBit number to determine which bloom filter bucket we should check\n            // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n            var b7 = bloomBit & 0x80;\n            var b6 = bloomBit & 0x40;\n            var b5 = bloomBit & 0x20;\n            var tData = tView.data;\n            if (b7) {\n                b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n            }\n            else {\n                b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n            }\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            setUpBloom(tView.data, tNode); // foundation for node bloom\n            setUpBloom(hostView, null); // foundation for cumulative bloom\n            setUpBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = parentLoc & 32767 /* InjectorIndexMask */;\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var parentData = parentView[TVIEW].data;\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (parentLoc !== -1) {\n            for (var i = 0; i < PARENT_INJECTOR; i++) {\n                var bloomIndex = parentIndex + i;\n                // Creates a cumulative bloom filter that merges the parent's bloom filter\n                // and its own cumulative bloom (which contains tokens for all ancestors)\n                hostView[injectorIndex + i] = parentView[bloomIndex] | parentData[bloomIndex];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function setUpBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = location >> 15 /* ViewOffsetShift */;\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, def) {\n        bloomAdd(injectorIndex, view[TVIEW], def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), _getViewData(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var hostTNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(hostTNode, _getViewData(), token, flags);\n    }\n    function injectRenderer2() {\n        return getOrCreateRenderer2(_getViewData());\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(hostTNode, hostView, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function')\n            return bloomHash();\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash != null) {\n            var startInjectorIndex = getInjectorIndex(hostTNode, hostView);\n            var injectorIndex = startInjectorIndex;\n            var injectorView = hostView;\n            var parentLocation = -1;\n            // If we should skip this injector or if an injector doesn't exist on this node (e.g. all\n            // directives on this node are private), start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */ || injectorIndex === -1) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(hostTNode, hostView) :\n                    injectorView[injectorIndex + PARENT_INJECTOR];\n                if (shouldNotSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                    injectorView = getParentInjectorView(parentLocation, injectorView);\n                }\n            }\n            while (injectorIndex !== -1) {\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match. Outer loop is necessary in case we get a false positive injector.\n                while (injectorIndex !== -1) {\n                    // Check the current injector. If it matches, stop searching for an injector.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView[TVIEW].data)) {\n                        break;\n                    }\n                    parentLocation = injectorView[injectorIndex + PARENT_INJECTOR];\n                    if (shouldNotSearchParent(flags, parentLocation)) {\n                        injectorIndex = -1;\n                        break;\n                    }\n                    // If the ancestor bloom filter value has the bit corresponding to the directive, traverse\n                    // up to find the specific injector. If the ancestor bloom filter does not have the bit, we\n                    // can abort.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView)) {\n                        injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        injectorView = getParentInjectorView(parentLocation, injectorView);\n                    }\n                    else {\n                        injectorIndex = -1;\n                        break;\n                    }\n                }\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (injectorIndex === -1) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var instance = void 0;\n                if (instance = searchDirectivesOnInjector(injectorIndex, injectorView, token)) {\n                    return instance;\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                if (injectorIndex === startInjectorIndex && hostView === injectorView &&\n                    (instance = searchMatchesQueuedForCreation(token, injectorView[TVIEW]))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // Traverse up the tree and continue searching.\n                injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                injectorView = getParentInjectorView(parentLocation, injectorView);\n            }\n        }\n        var moduleInjector = hostView[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(token, hostTView) {\n        var matches = hostTView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches);\n                }\n            }\n        }\n        return null;\n    }\n    function searchDirectivesOnInjector(injectorIndex, injectorView, token) {\n        var tNode = injectorView[TVIEW].data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var count = nodeFlags & 4095 /* DirectiveCountMask */;\n        if (count !== 0) {\n            var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var defs = injectorView[TVIEW].data;\n            for (var i = start; i < end; i++) {\n                // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                // and matches the given token, return the directive instance.\n                var directiveDef = defs[i];\n                if (directiveDef.type === token && directiveDef.diPublic) {\n                    return injectorView[i];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function injectorHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldNotSearchParent(flags, parentLocation) {\n        return flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ && (parentLocation >> 15 /* ViewOffsetShift */) > 0);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === Renderer2) {\n                return getOrCreateRenderer2(this._hostView);\n            }\n            setEnvironment(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getLNode(tNode, view).native);\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, tContainerNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, tContainerNode.parent.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostNode = getLNode(hostTNode, hostView);\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, _getViewData());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _tContainerNode, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._tContainerNode = _tContainerNode;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        var parentTNode = parentView[TVIEW].data[parentIndex];\n                        return parentLocation === -1 ? new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._tContainerNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._tContainerNode.parent.index);\n                    var container$$1 = this._getHostNode().dynamicLContainerNode;\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], container$$1);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._tContainerNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._tContainerNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype._getHostNode = function () { return getLNode(this._hostTNode, this._hostView); };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        var hostLNode = getLNode(hostTNode, hostView);\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer = createLContainer(hostView, true);\n        var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var lContainerNode = createLNodeObject(0 /* Container */, comment, lContainer);\n        lContainer[RENDER_PARENT] = getRenderParent(hostTNode, hostView);\n        appendChild(comment, hostTNode, hostView);\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode =\n                createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n        }\n        hostLNode.dynamicLContainerNode = lContainerNode;\n        addToViewTree(hostView, hostTNode.index, lContainer);\n        return new R3ViewContainerRef(lContainer, hostTNode.dynamicContainerNode, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var componentView = getLNode(hostTNode, hostView).data;\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY = injectElementRef;\n    var R3_TEMPLATE_REF_FACTORY = injectTemplateRef;\n    var R3_CHANGE_DETECTOR_REF_FACTORY = injectChangeDetectorRef;\n    var R3_VIEW_CONTAINER_REF_FACTORY = injectViewContainerRef;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return R3_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                tElementNode = getTNode(0);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(elementNode, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                var componentView = elementNode.data;\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createNodeAtIndex(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    // TODO: Remove LNode arg when we remove dynamicContainerNode\n    function appendI18nNode(node, tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(node.native, tNode, viewData);\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(node.dynamicLContainerNode.native, tNode, viewData);\n            return tNode.dynamicContainerNode;\n        }\n        return tNode;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementIndex = instruction & 536870911 /* IndexMask */;\n                    var element$$1 = load(elementIndex);\n                    var elementTNode = getTNode(elementIndex);\n                    localPreviousTNode =\n                        appendI18nNode(element$$1, elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    var node = load(nodeIndex);\n                    localPreviousTNode =\n                        appendI18nNode(node, getTNode(nodeIndex), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var lastNodeIndex = viewData.length - 1 - HEADER_OFFSET;\n                    var textTNode = createNodeAtIndex(lastNodeIndex, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(loadElement(lastNodeIndex), textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(removeIndex);\n                    var removedTNode = getTNode(removeIndex);\n                    removeChild(removedTNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedTNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(removedTNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedTNode.dynamicContainerNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return R3_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµinjectRenderer2': injectRenderer2,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    var animations = metadata.animations !== null ? new compiler.WrappedNodeExpr(metadata.animations) : null;\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: animations }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n    var R3_COMPILE_NGMODULE_DEFS = compileNgModuleDefs;\n    var R3_PATCH_COMPONENT_DEF_WTIH_SCOPE = patchComponentDefWithScope;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-rc.0+83.sha-7ea5161');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_NGCC__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return R3_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return R3_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var tNode = this.view[TVIEW].data[this.nodeIndex];\n                    return new NodeInjector(tNode, this.view);\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                // TODO(vicb): why/when\n                var directiveDefs = this.view[TVIEW].data;\n                if (this.nodeIndex === null || directiveDefs == null) {\n                    return [];\n                }\n                var currentTNode = this.view[TVIEW].data[this.nodeIndex];\n                var dirStart = currentTNode >> 15 /* DirectiveStartingIndexShift */;\n                var dirEnd = dirStart + (currentTNode & 4095 /* DirectiveCountMask */);\n                return directiveDefs.slice(dirStart, dirEnd);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function addPlayer(ref, player) {\n        var elementContext = getContext(ref);\n        var animationContext = getOrCreatePlayerContext(elementContext.native, elementContext);\n        animationContext.push(player);\n        player.addEventListener(200 /* Destroyed */, function () {\n            var index = animationContext.indexOf(player);\n            if (index >= 0) {\n                animationContext.splice(index, 1);\n            }\n            player.destroy();\n        });\n        var rootContext = getRootContext(elementContext.lViewData);\n        var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n        playerHandler.queuePlayer(player, ref);\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        // change detection may or may not happen therefore\n        // the core code needs to be kicked off to flush the animations\n        rootContext.flags |= 2 /* FlushPlayers */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    function getPlayers(ref) {\n        return getOrCreatePlayerContext(ref);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY;\n    var R3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY;\n    var R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY;\n    var R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectRenderer2 = injectRenderer2;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = R3_COMPILE_NGMODULE_DEFS;\n    exports.ÉµpatchComponentDefWithScope = R3_PATCH_COMPONENT_DEF_WTIH_SCOPE;\n    exports.ÉµcompileComponent = R3_COMPILE_COMPONENT;\n    exports.ÉµcompileDirective = R3_COMPILE_DIRECTIVE;\n    exports.ÉµcompilePipe = R3_COMPILE_PIPE;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_NGCC__ = compileNgModuleFactory__POST_NGCC__;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}