{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","template","styleUrls","clearResolutionOfComponentResourcesQueue","clear","unwrapResponse","response","EMPTY_OBJ","EMPTY_ARRAY$1","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","throwError","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","VIEWS","NATIVE","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateDirectiveIntoContext","directiveRef","dirs","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","splice","destroy","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","defaultStyleSanitizer","isPromise","then","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","projectionNext","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","lViewOrLContainer","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","detectedIndex","getDirectiveRegistryValuesIndexOf","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialStyles","renderInitialStylingValues","renderInitialClasses","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","patchStylingMapIntoContext","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","flag","prepareInitialFlag","insertNewMultiProperty","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setDirectiveDirty","updateSingleStylingValue","offset","input","isClassBased","forceOverride","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setContextPlayersDirty","store","DashCase","style","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","getInitialIndex","getMultiClassesStartIndex","getMultiStylesStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","classesStartIndex","registerMultiMapEntry","keyValues","dirtyYes","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","readCachedMapValue","isMultiValueCacheHit","count","limit","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","applyOnCreateInstructions","fns","onElementCreationFns","_CLEAN_PROMISE","Promise","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","checkView","directiveDefIdx","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","currentQueries","addNode","clone","executeContentQueries","isContentQueryHost","elementContainerEnd","elementCreate","lastAttrIndex","stylingAttrsStartIndex","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","listener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","getInitialStyleStringValue","initialStyleValues","styleString","flushHooksUpTo","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","initElementStyling","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","elementHostAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","stillDirty","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","booleanOrNull","updateClassProp","elementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","ignoreAllStyleUpdates","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","multiClassesEndIndex","textNative","textBinding","element_2","previousExpandoLength","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","parent_2","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode$$1","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","ComponentFactory$$1","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","ELEMENT_MARKER","COMMENT_MARKER","addAllToArray","items","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","cursor","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedNodes","readCreateOpCodes","lastCreatedNode","findLastNode","removeNode","createDynamicNodeAtIndex","currentTNode","opCode","textRNode","destinationNodeIndex","destinationTNode","elementNodeIndex","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_r3Injector","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","queryRefresh","queryListImpl","staticViewQuery","loadViewQuery","contentQuery","tViewContentQueries","staticContentQuery","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵstaticViewQuery","ɵstaticContentQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵflushHooksUpTo","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","isContentQuery","lifecycle","usesOnChanges","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","convertToR3QueryPredicate","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.7+64.sha-869e1cd.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, and QUERIES are indices 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var VIEWS = 6;\n    var NATIVE = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the flushHooksUpTo instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateDirectiveIntoContext(context, null);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateDirectiveIntoContext(context, directiveRef) {\n        // this is a new directive which we have not seen yet.\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var i = dirs.length;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        dirs.push(null, null, null, null);\n        dirs[i + 0 /* DirectiveValueOffset */] = directiveRef;\n        dirs[i + 2 /* DirtyFlagOffset */] = false;\n        dirs[i + 3 /* StyleSanitizerOffset */] = null;\n        // -1 is used to signal that the directive has been allocated, but\n        // no actual style or class bindings have been registered yet...\n        dirs[i + 1 /* SinglePropValuesIndexOffset */] = -1;\n        return i;\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 9 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(attrName))\n                    break;\n                // TODO(FW-1137): Skip namespaced attributes\n                // TODO(FW-1139): supports classes/styles in @Attribute injection\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        lView.debug = new LViewDebug(lView);\n    }\n    function attachLContainerDebug(lContainer) {\n        lContainer.debug = new LContainerDebug(lContainer);\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer[VIEWS].map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n            !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveRef) {\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveRef);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     * @param directiveRef the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveRef) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[2 /* DirectiveRegistryPosition */];\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directives, directiveRef || null);\n        if (detectedIndex === -1) {\n            // this is a new directive which we have not seen yet.\n            detectedIndex = allocateDirectiveIntoContext(context, directiveRef);\n        }\n        var directiveIndex = detectedIndex / 4 /* Size */;\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial style data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStyles(element, context, renderer) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * Runs through the initial class data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialClasses(element, context, renderer) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 3 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[2 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[5 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            detectedIndex = directiveRefs.length;\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            allocateDirectiveIntoContext(context, directiveRef);\n            directiveRefs[detectedIndex + 1 /* SinglePropValuesIndexOffset */] =\n                nextOffsetInsertionIndex;\n            directiveRefs[detectedIndex + 3 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[0 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit incase a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value incase it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values incase earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, true, directiveRef, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, false, directiveRef, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveRef, forceOverride) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[0 /* ElementPosition */];\n            var multiStartIndex = getMultiStylesStartIndex(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!valueExists(valueToApply, isClassBased)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directiveRef) {\n        var directiveIndex;\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = getDirectiveRegistryValuesIndexOf(dirs, directiveRef);\n        if (index === -1) {\n            // if the directive was not allocated then this means that styling is\n            // being applied in a dynamic way AFTER the element was already instantiated\n            index = dirs.length;\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n            dirs.push(null, null, null, null);\n            dirs[index + 0 /* DirectiveValueOffset */] = directiveRef;\n            dirs[index + 2 /* DirtyFlagOffset */] = false;\n            dirs[index + 1 /* SinglePropValuesIndexOffset */] = -1;\n            var classesStartIndex = getMultiClassesStartIndex(context) || 9 /* SingleStylesStartPosition */;\n            registerMultiMapEntry(context, directiveIndex, true, context.length);\n            registerMultiMapEntry(context, directiveIndex, false, classesStartIndex);\n        }\n        else {\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n        }\n        return directiveIndex;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces incase they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be\n     * compared to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, unwrapRNode(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n                var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n                if (stylingAttrsStartIndex >= 0) {\n                    tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n                }\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n            renderInitialStyles(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Flushes all the lifecycle hooks for directives up until (and excluding) that node index\n     *\n     * @param index The index of the element in the `LView`\n     */\n    function flushHooksUpTo(index) {\n        var lView = getLView();\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        if (directive) {\n            // this will ALWAYS happen first before the bindings are applied so that the ordering\n            // of directives is correct (otherwise if a follow-up directive contains static styling,\n            // which is applied through elementHostAttrs, then it may end up being listed in the\n            // context directive array before a former one (because the former one didn't contain\n            // any static styling values))\n            allocateDirectiveIntoContext(tNode.stylingTemplate, directive);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () { return initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive); });\n        }\n        else {\n            // this will make sure that the root directive (the template) will always be\n            // run FIRST before all the other styling properties are populated into the\n            // context...\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive);\n        }\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var lastAttrIndex = setUpAttributes(native, attrs);\n        var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n        if (stylingAttrsStartIndex >= 0) {\n            if (tNode.stylingTemplate) {\n                patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directive);\n            }\n            else {\n                tNode.stylingTemplate =\n                    initializeStaticContext(attrs, stylingAttrsStartIndex, directive);\n            }\n        }\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive, forceOverride) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive, forceOverride);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     * @param forceOverride Whether or not this value will be applied regardless of where it is being\n     *        set within the directive priority structure.\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, directive, forceOverride);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element. This instruction is also called for host bindings that write to\n     * `[style]` and `[class]` (the directive param helps the instruction code determine where the\n     * binding values come from).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directive) {\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n        }\n        updateStylingMap(stylingContext, classes, styles, directive);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            [],\n            native,\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttachedToChangeDetector(hostView) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ?\n                    matchingProjectionSelectorIndex(componentChild, selectors, textSelectors) :\n                    0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            namespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        NgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.7+64.sha-869e1cd.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    function findLastNode(node) {\n        while (node.next) {\n            node = node.next;\n        }\n        if (node.child) {\n            return findLastNode(node.child);\n        }\n        return node;\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = previousOrParentTNode;\n        if (lastCreatedNode.child) {\n            lastCreatedNode = findLastNode(lastCreatedNode.child);\n        }\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     */\n    function staticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = viewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function staticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = contentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵstaticViewQuery': staticViewQuery,\n        'ɵstaticContentQuery': staticContentQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵflushHooksUpTo': flushHooksUpTo,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$2(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().ownPropMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = moduleDef.declarations.reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵstaticViewQuery = staticViewQuery;\n    exports.ɵstaticContentQuery = staticContentQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵflushHooksUpTo = flushHooksUpTo;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}