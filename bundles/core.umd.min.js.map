{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","_a","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","getNextLNodeWithProjection","pNextOrParent","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","nextNode","parent_1","native","executeNodeAction","dynamicLContainerNode","lContainerNode","childContainerData","head","currentNode","insertBefore","removeChild","destroyNode","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","splice","lView","detachView","removeIndex","removedLview","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","appendChild","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","rendererFactory","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","fill","CIRCULAR$1","getCurrentSanitizer","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","refreshView","refreshDynamicChildren","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","sanitizer","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","adjustedIndex","tData","previousTNode","dynamicContainerNode","lViewData","_isParent","_previousOrParentNode","rf","createView","namespaceHTML","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","end","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","createElement","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","resetApplicationState","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element_1","load","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","setProperty","tViews","initialInputs","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassNamed","className","lElement","addClass","classList","add","removeClass","remove","elementClass","elementStyleNamed","styleName","suffixOrSanitizer","removeStyle","DashCase","removeProperty","setStyle","elementStyle","style","styleValue","textNode","createTextNode","createText","textBinding","existingNode","setValue","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","embeddedViewEnd","setRenderParentInProjectedNodes","renderParent","nodeToProject","lastNodeToProject","tail","adjustedElementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","findComponentHost","store","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","projection","nodeIndex","localIndex","selectorIndex","nodesForSelector","loadInternal","previouslyProjected","viewRootLNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","component","detectChanges","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolationV","different","content","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","loadDirective","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","currValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","Set","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","ngInjectorDef","ngModule","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","styles","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","getRenderer","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","viewRef","insert","createComponent","componentFactory","notImplemented","adjustedIdx","_adjustIndex","move","newIndex","shift","_tView","_renderer","_queries","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","feature","features","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","PRIVATE_PREFIX","NgOnChangesFeature","inputPropertyNames","definition","proto","_loop_1","pubKey","minKey","propertyName","privateMinKey","originalProperty","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","EMPTY$1","newObj","minifiedKey","defineDirective","definePipe","pipeDef","pure","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","NgModuleRef","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$1","ComponentRef$$1","destroyCbs","location","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","NgModuleFactory$$1","moduleType","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","query","containerValues","clonedQuery","list","viewValuesIdx","setDirty","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","dirty","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµk","Éµkn","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµrS","Éµs","Éµsn","Éµst","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_PIPE_DEF","NG_MODULE_DEF","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","WrappedNodeExpr","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","param","_pendingPromises","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","isOutput","bindingPropertyName","lifecycle","usesOnChanges","typeSourceSpan","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable","hasAProvider","expression","computeProvidedIn","jitExpression","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponentDecorator","compileComponent","templateStr","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","ngSelectorScope","Pipe","Input","Output","HostBinding","HostListener","NgModule","compileNgModule","emitInline","declaration","preR3NgModuleCompile","VERSION","full","major","split","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","classes","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","response","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","e_1","_c","e_1_1","return","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµwhenRendered","whenRendered","getRootContext","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","staticText","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.1+37.sha-ee2af9b\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakeable Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, chainFn, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            var TypeDecorator = function TypeDecorator(cls) {\n                typeFn && typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                return cls;\n            };\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n            var _a;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n            var _a;\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n            };\n            var _a;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n        var _a;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 14;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 13 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n        function ngDevModeResetPerfCounters() {\n            global['ngDevMode'] = {\n                firstTemplatePass: 0,\n                tNode: 0,\n                tView: 0,\n                rendererCreateTextNode: 0,\n                rendererSetText: 0,\n                rendererCreateElement: 0,\n                rendererAddEventListener: 0,\n                rendererSetAttribute: 0,\n                rendererRemoveAttribute: 0,\n                rendererSetProperty: 0,\n                rendererSetClassName: 0,\n                rendererAddClass: 0,\n                rendererRemoveClass: 0,\n                rendererSetStyle: 0,\n                rendererRemoveStyle: 0,\n                rendererDestroy: 0,\n                rendererDestroyNode: 0,\n            };\n        }\n        ngDevModeResetPerfCounters();\n        return ngDevModeResetPerfCounters;\n    })(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global));\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Must use this method for CD (instead of === ) since NaN !== NaN\n    */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     *  Function that throws a \"not implemented\" error so it's clear certain\n     *  behaviors/methods aren't yet ready.\n     *\n     * @returns Not implemented error\n     */\n    function notImplemented() {\n        return new Error('NotImplemented');\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return viewData[node.tNode.child.index];\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1)\n            return null;\n        var parent = node.tNode.parent;\n        return parent ? node.view[parent.index] : node.view[HOST_NODE];\n    }\n    /**\n     * Get the next node in the LNode tree, taking into account the place where a node is\n     * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n     *\n     * @param node The node whose next node in the LNode tree must be found.\n     * @return LNode|null The next sibling in the LNode tree.\n     */\n    function getNextLNodeWithProjection(node) {\n        var pNextOrParent = node.pNextOrParent;\n        if (pNextOrParent) {\n            // The node is projected\n            var isLastProjectedNode = pNextOrParent.tNode.type === 1 /* Projection */;\n            // returns pNextOrParent if we are not at the end of the list, null otherwise\n            return isLastProjectedNode ? null : pNextOrParent;\n        }\n        // returns node.next because the the node is not projected\n        return getNextLNode(node);\n    }\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            if (node.tNode.type === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n                nextNode = getNextLNode(node);\n            }\n            else if (node.tNode.type === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (node.tNode.type === 1 /* Projection */) {\n                // For Projection look at the first projected node\n                nextNode = node.data.head;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode == null) {\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                var currentNode = node;\n                node = getNextLNodeWithProjection(currentNode);\n                while (currentNode && !node) {\n                    // if node.pNextOrParent is not null here, it is not the next node\n                    // (because, at this point, nextNode is null, so it is the parent)\n                    currentNode = currentNode.pNextOrParent || getParentLNode(currentNode);\n                    if (currentNode === rootNode) {\n                        return null;\n                    }\n                    // When the walker exits a container, the beforeNode has to be restored to the previous\n                    // value.\n                    if (currentNode && !currentNode.pNextOrParent &&\n                        currentNode.tNode.type === 0 /* Container */) {\n                        beforeNode = currentNode.native;\n                    }\n                    node = currentNode && getNextLNodeWithProjection(currentNode);\n                }\n            }\n            else {\n                node = nextNode;\n            }\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = viewNode.data;\n        }\n        if (index < views.length) {\n            viewNode.data[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            viewNode.data[NEXT] = null;\n        }\n        // Notify query that a new view has been added\n        var lView = viewNode.data;\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // If the container's renderParent is null, we know that it is a root node of its own parent view\n        // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n        // nodes twice - once now and once when its parent inserts its views).\n        if (container.data[RENDER_PARENT] !== null) {\n            // Find the node to insert in front of\n            var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n            addRemoveViewFromContainer(container, viewNode, true, beforeNode);\n        }\n        // Sets the attached flag\n        viewNode.data[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(container, viewNode, false);\n        // Notify query that view has been removed\n        var removedLview = viewNode.data;\n        if (removedLview[QUERIES]) {\n            removedLview[QUERIES].removeView();\n        }\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = viewData[cleanup[i + 1]].native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    /**\n     * Returns whether a native element should be inserted in the given parent.\n     *\n     * The native node can be inserted when its parent is:\n     * - A regular element => Yes\n     * - A component host element =>\n     *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n     *      template)\n     *      => don't add as the parent component will project if needed.\n     *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n     *      add it\n     * - View element => delay insertion, will be done on `viewEnd()`\n     *\n     * @param parent The parent in which to insert the child\n     * @param currentView The LView being processed\n     * @return boolean Whether the child element should be inserted.\n     */\n    function canInsertNativeNode(parent, currentView) {\n        var parentIsElement = parent.tNode.type === 3 /* Element */;\n        return parentIsElement &&\n            (parent.view !== currentView || parent.data === null /* Regular Element. */);\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only add element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                parent.native.appendChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a Container and we are adding it to Element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assignee the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = currentParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, null);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = currentParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    var rendererFactory;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries || (currentQueries = (previousOrParentNode.queries || new QueryType()));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic children, triggers content hooks, sets host bindings,\n     * refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     * */\n    function refreshView() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicChildren();\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i += 2) {\n                componentRefresh(components[i], components[i + 1]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData && viewData[INJECTOR$1],\n            renderer,\n            sanitizer || null,\n            null // tail\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            pNextOrParent: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode =\n                state[TVIEW].node || createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        var rf = 2 /* Update */;\n        try {\n            isParent = true;\n            previousOrParentNode = null;\n            if (viewNode == null) {\n                var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n                if (queries) {\n                    lView[QUERIES] = queries.createView();\n                }\n                viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n                rf = 1 /* Create */;\n            }\n            oldView = enterView(viewNode.data, viewNode);\n            namespaceHTML();\n            tView.template(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshView();\n            }\n            else {\n                viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n            // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n            var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(oldView, isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n        return viewNode;\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshView();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(0, HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native;\n        if (isProceduralRenderer(renderer)) {\n            native = renderer.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = renderer.createElement(name);\n            }\n            else {\n                native = renderer.createElementNS(_currentNamespace, name);\n            }\n        }\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs)\n            setUpAttributes(native, attrs);\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(dirIndex) {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 13 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = load(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = load(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 13 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassNamed(index, className, value) {\n        if (value !== NO_CHANGE) {\n            var lElement = load(index);\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                    lElement.native.classList.add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                    lElement.native.classList.remove(className);\n            }\n        }\n    }\n    /**\n     * Set the `className` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[class]=\"exp\"` usage.\n     *\n     * `elementClass` instruction writes the value to the \"element's\" `className` property.\n     *\n     * @param index The index of the element to update in the data array\n     * @param value A value indicating a set of classes which should be applied. The method overrides\n     *   any existing classes. The value is stringified (`toString`) before it is applied to the\n     *   element.\n     */\n    function elementClass(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `className`. In the\n            // future\n            // we will add logic here which would work with the animation code.\n            var lElement = load(index);\n            ngDevMode && ngDevMode.rendererSetClassName++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n                lElement.native['className'] = stringify$1(value);\n        }\n    }\n    function elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n        if (value !== NO_CHANGE) {\n            var lElement = load(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                isProceduralRenderer(renderer) ?\n                    renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                    lElement.native['style'].removeProperty(styleName);\n            }\n            else {\n                var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n                if (typeof suffixOrSanitizer == 'string')\n                    strValue = strValue + suffixOrSanitizer;\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                    lElement.native['style'].setProperty(styleName, strValue);\n            }\n        }\n    }\n    /**\n     * Set the `style` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage.\n     *\n     *\n     * @param index The index of the element to update in the LViewData array\n     * @param value A value indicating if a given style should be added or removed.\n     *   The expected shape of `value` is an object where keys are style names and the values\n     *   are their corresponding values to set. If value is falsy, then the style is removed. An absence\n     *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n     *   performed.\n     */\n    function elementStyle(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n            // we will add logic here which would work with the animation code.\n            var lElement = load(index);\n            if (isProceduralRenderer(renderer)) {\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                renderer.setProperty(lElement.native, 'style', value);\n            }\n            else {\n                var style = lElement.native['style'];\n                for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                    var styleName = keys[i];\n                    var styleValue = value[styleName];\n                    if (styleValue == null) {\n                        ngDevMode && ngDevMode.rendererRemoveStyle++;\n                        style.removeProperty(styleName);\n                    }\n                    else {\n                        ngDevMode && ngDevMode.rendererSetStyle++;\n                        style.setProperty(styleName, styleValue);\n                    }\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = load(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(index, directive, directiveDef) {\n        var instance = baseDirectiveCreate(index, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(index, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck(directiveIndex);\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            canInsertNativeNode(parentLNode, currentView) ? parentLNode :\n                null // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews =\n                template ? createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry) : [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        if (queries) {\n            // check if a given container node matches\n            queries.addNode(node);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = load(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    function refreshDynamicChildren() {\n        for (var current = getLViewChild(viewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], renderer);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshView();\n        isParent = false;\n        var viewNode = previousOrParentNode = viewData[HOST_NODE];\n        var containerNode = getParentLNode(previousOrParentNode);\n        if (containerNode) {\n            ngDevMode && assertNodeType(viewNode, 2 /* View */);\n            ngDevMode && assertNodeType(containerNode, 0 /* Container */);\n            var lContainer = containerNode.data;\n            if (creationMode) {\n                // When projected nodes are going to be inserted, the renderParent of the dynamic container\n                // used by the ViewContainerRef must be set.\n                setRenderParentInProjectedNodes(lContainer[RENDER_PARENT], viewNode);\n                // it is a new view, insert it into collection of views for a given container\n                insertView(containerNode, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /**\n     * For nodes which are projected inside an embedded view, this function sets the renderParent\n     * of their dynamic LContainerNode.\n     * @param renderParent the renderParent of the LContainer which contains the embedded view.\n     * @param viewNode the embedded view.\n     */\n    function setRenderParentInProjectedNodes(renderParent, viewNode) {\n        if (renderParent != null) {\n            var node = getChildLNode(viewNode);\n            while (node) {\n                if (node.tNode.type === 1 /* Projection */) {\n                    var nodeToProject = node.data.head;\n                    var lastNodeToProject = node.data.tail;\n                    while (nodeToProject) {\n                        if (nodeToProject.dynamicLContainerNode) {\n                            nodeToProject.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n                        }\n                        nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n                    }\n                }\n                node = getNextLNode(node);\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(directiveIndex, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            ngDevMode && assertDataInRange(directiveIndex, directives);\n            detectChangesInternal(hostView, element, getDirectiveInstance(directives[directiveIndex]));\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(index, selectors, textSelectors) {\n        var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n        var distributedNodes = new Array(noOfNodeBuckets);\n        for (var i = 0; i < noOfNodeBuckets; i++) {\n            distributedNodes[i] = [];\n        }\n        var componentNode = findComponentHost(viewData);\n        var componentChild = getChildLNode(componentNode);\n        while (componentChild !== null) {\n            // execute selector matching logic if and only if:\n            // - there are selectors defined\n            // - a node has a tag name / attributes that can be matched\n            if (selectors && componentChild.tNode) {\n                var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors);\n                distributedNodes[matchedIdx].push(componentChild);\n            }\n            else {\n                distributedNodes[0].push(componentChild);\n            }\n            componentChild = getNextLNode(componentChild);\n        }\n        ngDevMode && assertDataNext(index + HEADER_OFFSET);\n        store(index, distributedNodes);\n    }\n    /**\n     * Updates the linked list of a projection node, by appending another linked list.\n     *\n     * @param projectionNode Projection node whose projected nodes linked list has to be updated\n     * @param appendedFirst First node of the linked list to append.\n     * @param appendedLast Last node of the linked list to append.\n     */\n    function appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n        ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n        if (!appendedLast) {\n            // nothing to append\n            return;\n        }\n        var projectionNodeData = projectionNode.data;\n        if (projectionNodeData.tail) {\n            projectionNodeData.tail.pNextOrParent = appendedFirst;\n        }\n        else {\n            projectionNodeData.head = appendedFirst;\n        }\n        projectionNodeData.tail = appendedLast;\n        appendedLast.pNextOrParent = projectionNode;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param localIndex - index under which distribution of projected nodes was memorized\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, localIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, { head: null, tail: null });\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is memorized on a component's view level\n        var componentNode = findComponentHost(viewData);\n        var componentLView = componentNode.data;\n        var distributedNodes = loadInternal(localIndex, componentLView);\n        var nodesForSelector = distributedNodes[selectorIndex];\n        // build the linked list of projected nodes:\n        for (var i = 0; i < nodesForSelector.length; i++) {\n            var nodeToProject = nodesForSelector[i];\n            if (nodeToProject.tNode.type === 1 /* Projection */) {\n                // Reprojecting a projection -> append the list of previously projected nodes\n                var previouslyProjected = nodeToProject.data;\n                appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n            }\n            else {\n                // Projecting a single node\n                appendToProjectionNode(node, nodeToProject, nodeToProject);\n            }\n        }\n        var currentParent = getParentLNode(node);\n        if (canInsertNativeNode(currentParent, viewData)) {\n            ngDevMode && assertNodeType(currentParent, 3 /* Element */);\n            // process each node in the list of projected nodes:\n            var nodeToProject = node.data.head;\n            var lastNodeToProject = node.data.tail;\n            while (nodeToProject) {\n                appendProjectedNode(nodeToProject, currentParent, viewData);\n                nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n            }\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var template = hostView[TVIEW].template;\n        try {\n            namespaceHTML();\n            template(getRenderFlags(hostView), component);\n            refreshView();\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation bindings with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    function getDirectiveInstance(instanceOrArray) {\n        // Directives with content queries store an array in directives[directiveIndex]\n        // with the instance as the first index\n        return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        var component;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n                var _a;\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, throw.\n            if (def == null) {\n                throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n            var _a;\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef(viewNode, template, context) {\n            var _this = _super.call(this, viewNode.data, context) || this;\n            _this._viewContainerRef = null;\n            _this._lViewNode = viewNode;\n            return _this;\n        }\n        EmbeddedViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            _super.prototype.destroy.call(this);\n        };\n        EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        // This means that after 255, some directives will share slots, leading to some false positives\n        // when checking for a directive's presence.\n        var bloomBit = id % BLOOM_SIZE;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        if (bloomBit < 128) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n                (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n        }\n        else {\n            bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n                (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Searches for an instance of the given directive type up the injector tree and returns\n     * that instance if found.\n     *\n     * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n     * checks that bit against the bloom filter structure to identify an injector that might have\n     * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n     * for a match.\n     *\n     * If not found, it will propagate up to the next parent injector until the token\n     * is found or the top is reached.\n     *\n     * @param di Node injector where the search should start\n     * @param token The directive type to search for\n     * @param flags Injection flags (e.g. CheckParent)\n     * @returns The instance found\n     */\n    function getOrCreateInjectable(di, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic). If there is no hash, fall back to the module injector.\n        if (bloomHash === null) {\n            var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n            var formerInjector = setCurrentInjector(moduleInjector);\n            try {\n                return inject(token, flags);\n            }\n            finally {\n                setCurrentInjector(formerInjector);\n            }\n        }\n        else {\n            var injector = di;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 13 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return getDirectiveInstance(node.view[DIRECTIVES][i]);\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        // No directive was found for the given token.\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a directive type, this function returns the bit in an injector's bloom filter\n     * that should be used to determine whether or not the directive is present.\n     *\n     * When the directive was added to the bloom filter, it was given a unique ID that can be\n     * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n     * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n     * BLOOM_SIZE is reached).\n     *\n     * @param type The directive type\n     * @returns The bloom bit to check for the directive\n     */\n    function bloomHashBit(type) {\n        var id = type[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id % BLOOM_SIZE : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                    (bloomBit < 96 ? injector.bf2 : injector.bf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                    (bloomBit < 224 ? injector.bf6 : injector.bf7);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if ((value & mask) === mask) {\n                return injector;\n            }\n            else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                    (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                    (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            injector = (value & mask) ? injector.parent : null;\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode = createTNode(0 /* Container */, -1, null, null, null, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef(lContainerNode);\n        }\n        return di.viewContainerRef;\n    }\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef(_lContainerNode) {\n            this._lContainerNode = _lContainerNode;\n            this._viewRefs = [];\n        }\n        ViewContainerRef.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n            throw notImplemented();\n        };\n        ViewContainerRef.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            viewRef.attachToViewContainerRef(this);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef(elementRef, _tView, _renderer, _queries) {\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n            this.elementRef = elementRef;\n        }\n        TemplateRef.prototype.createEmbeddedView = function (context) {\n            var viewNode = renderEmbeddedTemplate(null, this._tView, context, this._renderer, this._queries);\n            return new EmbeddedViewRef(viewNode, this._tView.template, context);\n        };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs),\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || [],\n            declarations: def.declarations || [],\n            imports: def.imports || [],\n            exports: def.exports || [],\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * Creates an NgOnChangesFeature function for a component's features list.\n     *\n     * It accepts an optional map of minified input property names to original property names,\n     * if any input properties have a public alias.\n     *\n     * The NgOnChangesFeature function that is returned decorates a component with support for\n     * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature({name: 'name'})]\n     * });\n     * ```\n     *\n     * @param inputPropertyNames Map of input property names, if they are aliased\n     * @returns DirectiveDefFeature\n     */\n    function NgOnChangesFeature(inputPropertyNames) {\n        return function (definition) {\n            var inputs = definition.inputs;\n            var proto = definition.type.prototype;\n            var _loop_1 = function (pubKey) {\n                var minKey = inputs[pubKey];\n                var propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n                var privateMinKey = PRIVATE_PREFIX + minKey;\n                var originalProperty = Object.getOwnPropertyDescriptor(proto, minKey);\n                var getter = originalProperty && originalProperty.get;\n                var setter = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minKey, {\n                    get: getter ||\n                        (setter ? undefined : function () { return this[privateMinKey]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges = {}, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey);\n                        var currentChange = simpleChanges[propertyName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[propertyName] =\n                                new SimpleChange(this[privateMinKey], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey] = value;\n                        }\n                        setter && setter.call(this, value);\n                    }\n                });\n            };\n            for (var pubKey in inputs) {\n                _loop_1(pubKey);\n            }\n            // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n            // so the call order is changes-init-check in creation mode. In subsequent\n            // change detection runs, only the check wrapper will be called.\n            if (definition.onInit != null) {\n                definition.onInit = onChangesWrapper(definition.onInit);\n            }\n            definition.doCheck = onChangesWrapper(definition.doCheck);\n        };\n        function onChangesWrapper(delegateHook) {\n            return function () {\n                var simpleChanges = this[PRIVATE_PREFIX];\n                if (simpleChanges != null) {\n                    this.ngOnChanges(simpleChanges);\n                    this[PRIVATE_PREFIX] = null;\n                }\n                delegateHook && delegateHook.apply(this);\n            };\n        }\n    }\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n    var EMPTY$1 = {};\n    /** Swaps the keys and values of an object. */\n    function invertObject(obj) {\n        if (obj == null)\n            return EMPTY$1;\n        var newObj = {};\n        for (var minifiedKey in obj) {\n            newObj[obj[minifiedKey]] = minifiedKey;\n        }\n        return newObj;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n            var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            // TODO(misko): this is the wrong injector here.\n            return new ComponentRef$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n             * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n             * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n             * given component won't work (as these are always called at the level above a component).\n             *\n             * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n             * component instance. So passing in the root view (1 level above the component) is sufficient.\n             * We might  want to think about creating a fake component for the top level? Or overwrite\n             * detectChanges with a function that calls tickRootContext? */\n            _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n            _this.injector = injector;\n            _this.location = new ElementRef$1(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n         * delivers events synchronously or asynchronously.\n         *\n         * @param isAsync By default, events are delivered synchronously (default value: `false`).\n         * Set to `true` for asynchronous event delivery.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n            // mutate parent.\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = query.containerValues;\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 13 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'Éµa': elementAttribute,\n        'Éµb': bind,\n        'ÉµC': container,\n        'ÉµcR': containerRefreshStart,\n        'Éµcr': containerRefreshEnd,\n        'Éµd': loadDirective,\n        'ÉµNH': namespaceHTML,\n        'ÉµNM': namespaceMathML,\n        'ÉµNS': namespaceSVG,\n        'ÉµE': elementStart,\n        'Éµe': elementEnd,\n        'ÉµEe': element,\n        'Éµf0': pureFunction0,\n        'Éµf1': pureFunction1,\n        'Éµf2': pureFunction2,\n        'Éµf3': pureFunction3,\n        'Éµf4': pureFunction4,\n        'Éµf5': pureFunction5,\n        'Éµf6': pureFunction6,\n        'Éµf7': pureFunction7,\n        'Éµf8': pureFunction8,\n        'ÉµfV': pureFunctionV,\n        'Éµi1': interpolation1,\n        'Éµi2': interpolation2,\n        'Éµi3': interpolation3,\n        'Éµi4': interpolation4,\n        'Éµi5': interpolation5,\n        'Éµi6': interpolation6,\n        'Éµi7': interpolation7,\n        'Éµi8': interpolation8,\n        'ÉµiV': interpolationV,\n        'Éµk': elementClass,\n        'Éµkn': elementClassNamed,\n        'ÉµL': listener,\n        'Éµld': load,\n        'ÉµP': projection,\n        'Éµp': elementProperty,\n        'Éµpb1': pipeBind1,\n        'Éµpb2': pipeBind2,\n        'Éµpb3': pipeBind3,\n        'Éµpb4': pipeBind4,\n        'ÉµpbV': pipeBindV,\n        'ÉµpD': projectionDef,\n        'ÉµPp': pipe,\n        'ÉµQ': query,\n        'ÉµqR': queryRefresh,\n        'ÉµrS': reserveSlots,\n        'Éµs': elementStyle,\n        'Éµsn': elementStyleNamed,\n        'Éµst': store,\n        'ÉµT': text,\n        'Éµt': textBinding,\n        'ÉµV': embeddedViewStart,\n        'Éµv': embeddedViewEnd,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    function compileNgModule(type, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var def = null;\n        Object.defineProperty(type, NG_MODULE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta = {\n                        type: wrap(type),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                        declarations: declarations.map(wrap),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n                }\n                return def;\n            },\n        });\n        declarations.forEach(function (declaration) {\n            // Some declared components may be compiled asynchronously, and thus may not have their\n            // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n            // the `ngSelectorScope` property of the declared type.\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                patchComponentDefWithScope(declaration.ngComponentDef, type);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = type;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, module) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _pendingPromises = [];\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will return a `Promise` which will resolve when compilation completes and the component becomes\n     * usable.\n     */\n    function compileComponent(type, metadata) {\n        // TODO(alxhub): implement ResourceLoader support for template compilation.\n        if (!metadata.template) {\n            throw new Error('templateUrl not yet supported');\n        }\n        var templateStr = metadata.template;\n        var def = null;\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (def === null) {\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(templateStr, \"ng://\" + type.name + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + type.name + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        patchComponentDefWithScope(def, type.ngSelectorScope);\n                    }\n                }\n                return def;\n            },\n        });\n        return null;\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var def = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n                }\n                return def;\n            },\n        });\n        return null;\n    }\n    /**\n     * A wrapper around `compileComponent` which is intended to be used for the `@Component` decorator.\n     *\n     * This wrapper keeps track of the `Promise` returned by `compileComponent` and will cause\n     * `awaitCurrentlyCompilingComponents` to wait on the compilation to be finished.\n     */\n    function compileComponentDecorator(type, metadata) {\n        var res = compileComponent(type, metadata);\n        if (res !== null) {\n            _pendingPromises.push(res);\n        }\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var inputs = {};\n        var outputs = {};\n        var host = extractHostBindings(metadata, propMetadata);\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                if (isInput(ann)) {\n                    inputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (isOutput(ann)) {\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host, inputs: inputs, outputs: outputs,\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                if (isHostBinding(ann)) {\n                    properties[ann.hostPropertyName || field] = field;\n                }\n                else if (isHostListener(ann)) {\n                    listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                }\n            });\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, meta) {\n        // TODO(alxhub): handle JIT of bare @Injectable().\n        if (!meta) {\n            return;\n        }\n        var def = null;\n        Object.defineProperty(type, 'ngInjectableDef', {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var deps = undefined;\n                    if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                        deps = reflectDependencies(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps) || [];\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var expression = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        deps: deps,\n                    }).expression;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponentDecorator;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n    /**\n     * Pipe decorator and metadata.\n     *\n     * Use the `@Pipe` annotation to declare that a given class is a pipe. A pipe\n     * class must also implement `PipeTransform` interface.\n     *\n     * To use the pipe include a reference to the pipe class in\n     * `NgModule.declarations`.\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n    /**\n     * Input decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * Output decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * HostListener decorator and metadata.\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that will allow:\n     * - any non-Angular elements with a `-` in their name,\n     * - any properties on elements with a `-` in their name which is the common rule for custom\n     * elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that will allow any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * NgModule decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('6.1.0-beta.1+37.sha-ee2af9b');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    isPeriodic: t.data.isPeriodic,\n                    delay: t.data.delay,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    // Added by Zones for XHRs\n                    // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                    xhr: t.data.target\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler$$1 = compilerFactory.createCompiler([options]);\n            return compiler$$1.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n        var ApplicationRef_1;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef$1 = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n            var _a;\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var res = {};\n        try {\n            for (var _a = __values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var t = _b.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n        var e_1, _c;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n        var e_2, _a;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _b = __read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n        var _b;\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef$1(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef$1));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef$1);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\n    var TemplateRefTokenKey = tokenKey(TemplateRef$1);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n                var _a;\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            var def = resolveDefinition(this._ngModuleDefFactory);\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (unsafeResourceUrl instanceof String &&\n            unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, 'Html');\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, 'Style');\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, 'Script');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, 'Url');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef$1;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef$1;\n    exports.ViewContainerRef = ViewContainerRef$1;\n    exports.EmbeddedViewRef = EmbeddedViewRef$1;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyle;\n    exports.Éµsn = elementStyleNamed;\n    exports.Éµk = elementClass;\n    exports.Éµkn = elementClassNamed;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}