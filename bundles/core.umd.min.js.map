{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","compiler","rxjs","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","_a","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","NgModule","ngModule","R3_COMPILE_NGMODULE","preR3NgModuleCompile","moduleType","ngInjectorDef","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","getNextLNodeWithProjection","pNextOrParent","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","nextNode","parent_1","native","executeNodeAction","dynamicLContainerNode","lContainerNode","childContainerData","head","currentNode","insertBefore","removeChild","destroyNode","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","splice","lView","detachView","removeIndex","removedLview","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","appendChild","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","rendererFactory","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","CIRCULAR$1","getCurrentSanitizer","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","refreshView","refreshDynamicChildren","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","sanitizer","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","adjustedIndex","tData","previousTNode","dynamicContainerNode","lViewData","_isParent","_previousOrParentNode","rf","createView","namespaceHTML","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","end","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","createElement","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","resetApplicationState","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element_1","load","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","setProperty","tViews","initialInputs","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassNamed","className","lElement","addClass","classList","add","removeClass","remove","elementClass","elementStyleNamed","styleName","suffixOrSanitizer","removeStyle","DashCase","removeProperty","setStyle","elementStyle","style","styleValue","textNode","createTextNode","createText","textBinding","existingNode","setValue","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","embeddedViewEnd","setRenderParentInProjectedNodes","renderParent","nodeToProject","lastNodeToProject","tail","adjustedElementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","findComponentHost","viewRootLNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","component","detectChanges","initBindings","bindingUpdated","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","different","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","store","loadInternal","loadDirective","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","currValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","Set","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","styles","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","getRenderer","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","viewRef","insert","createComponent","componentFactory","notImplemented","adjustedIdx","_adjustIndex","move","newIndex","shift","_tView","_renderer","_queries","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","feature","features","ngComponentDef","ngDirectiveDef","ngPipeDef","PRIVATE_PREFIX","NgOnChangesFeature","inputPropertyNames","definition","proto","_loop_1","pubKey","minKey","propertyName","privateMinKey","originalProperty","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","EMPTY$1","newObj","minifiedKey","defineDirective","ComponentRef$1","ComponentRef","ComponentFactory$1","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver$1","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$$1","ComponentFactory$$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$$1","destroyCbs","location","NgModuleRef$1","NgModuleRef","NgModuleFactory$1","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","bootstrap","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipeBind1","pipeInstance","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","pure","NgModuleFactory$$1","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","query","containerValues","clonedQuery","list","viewValuesIdx","setDirty","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","dirty","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","defineNgModule","declarations","transitiveCompileScopes","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","Éµk","Éµkn","ÉµL","Éµld","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµQ","ÉµqR","Éµs","Éµsn","Éµst","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_PIPE_DEF","NG_MODULE_DEF","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","pipe","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","WrappedNodeExpr","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","param","_pendingPromises","directiveMetadata","field","ann","isOutput","bindingPropertyName","listeners","properties","lifecycle","usesOnChanges","typeSourceSpan","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable$1","hasAProvider","expression","compileInjectable","computeProvidedIn","jitExpression","compileNgModule$1","emitInline","compileNgModule","declaration","ngSelectorScope","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponentDecorator","compileComponent","templateStr","parseTemplate","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","Pipe","Input","Output","HostBinding","hostPropertyName","HostListener","VERSION","full","major","split","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","classes","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","response","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","e_1","_c","e_1_1","return","merge$1","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance$1","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey","INJECTORRefTokenKey","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefinePipe","definePipe","pipeDef","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµP","projection","localIndex","selectorIndex","nodesForSelector","previouslyProjected","ÉµiV","interpolationV","ÉµpD","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","ÉµrS","reserveSlots","numSlots","ÉµPp","pipeName","getPipeDef","ÉµwhenRendered","whenRendered","getRootContext","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","staticText","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.1+26.sha-6d246d6\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/compiler'), require('rxjs'), require('rxjs/operators')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', '@angular/compiler', 'rxjs', 'rxjs/operators'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.ng.compiler,global.rxjs,global.rxjs.operators));\n}(this, (function (exports,compiler,rxjs,operators) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @experimental\n */\nfunction defineInjectable(opts) {\n    return {\n        providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n    };\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @experimental\n */\nfunction defineInjector(options) {\n    return {\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakeable Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, __spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        var TypeDecorator = function TypeDecorator(cls) {\n            typeFn && typeFn.apply(void 0, __spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        };\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n        var _a;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, __spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        return function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * @usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *\n *  @Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n *\n */\n\n(function (ChangeDetectionStrategy) {\n    /**\n     * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n/**\n * Describes the status of the detector.\n */\n\n(function (ChangeDetectorStatus) {\n    /**\n     * `CheckOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * `Destroyed` means that the change detector is destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @experimental\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @experimental\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @experimental\n */\nvar INJECTOR = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    Injector.create = function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    Injector.ngInjectableDef = defineInjectable({\n        providedIn: 'any',\n        factory: function () { return inject(INJECTOR); },\n    });\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = {};\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'Éµ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) {\n        // Just use IDENT\n    }\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var value;\n    if (record && !(flags & 4 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n    var _a;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nvar _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\nfunction inject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        var injectableDef = token.ngInjectableDef;\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    else {\n        return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n    }\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var flags = 0;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= 8 /* Optional */;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= 4 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(type, flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, __spread([void 0], args)))();\n    }; };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GET_PROPERTY_NAME$1 = {};\nvar USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\nvar EMPTY_ARRAY = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE$1 in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            var _a;\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n    }\n}\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction preR3InjectableCompile(injectableType, options) {\n    if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n        injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\n/**\n* Injectable decorator and metadata.\n*\n* @Annotation\n*/\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n    return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defineNgModule(def) {\n    var res = {\n        type: def.type,\n        bootstrap: def.bootstrap || [],\n        declarations: def.declarations || [],\n        imports: def.imports || [],\n        exports: def.exports || [],\n        transitiveCompileScopes: null,\n    };\n    return res;\n}\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n *\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * @experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = __spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/**\n * NgModule decorator and metadata.\n *\n *\n * @Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\n\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!actual.ngComponentDef) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\nvar HEADER_OFFSET = 14;\n// Below are constants for LViewData indices to help us look up LViewData members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nvar TVIEW = 0;\nvar PARENT = 1;\nvar NEXT = 2;\nvar QUERIES = 3;\nvar FLAGS = 4;\nvar HOST_NODE = 5;\nvar BINDING_INDEX = 6;\nvar DIRECTIVES = 7;\nvar CLEANUP = 8;\nvar CONTEXT = 9;\nvar INJECTOR$1 = 10;\nvar RENDERER = 11;\nvar SANITIZER = 12;\nvar TAIL = 13;\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LViewData[DIRECTIVES]\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nfunction queueLifecycleHooks(flags, tView) {\n    if (tView.firstTemplatePass) {\n        var start = flags >> 13;\n        var count = flags & 4095;\n        var end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = start; i < end; i++) {\n            var def = tView.directives[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView[FLAGS] & 16 /* RunInit */) {\n        executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n        currentView[FLAGS] &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    var hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nfunction callHooks(data, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        arr[i + 1].call(data[arr[i]]);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n    function ngDevModeResetPerfCounters() {\n        global['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n        };\n    }\n    ngDevModeResetPerfCounters();\n    return ngDevModeResetPerfCounters;\n})(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n    typeof global != 'undefined' && global));\n\n/** Called when directives inject each other (creating a circular dependency) */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n}\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n    if (checkNoChangesMode) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\nvar ACTIVE_INDEX = 0;\n// PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n// As we already have these constants in LViewData, we don't need to re-create them.\nvar VIEWS = 4;\nvar RENDER_PARENT = 5;\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(node, type) {\n    assertDefined(node, 'should be called with a node');\n    assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(node, 'should be called with a node');\n    var found = types.some(function (type) { return node.tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* Must use this method for CD (instead of === ) since NaN !== NaN\n*/\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @returns Not implemented error\n */\nfunction notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nfunction flatten(list) {\n    var result = [];\n    var i = 0;\n    while (i < list.length) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Retrieves the sibling node for the given node. */\nfunction getNextLNode(node) {\n    // View nodes don't have TNodes, so their next must be retrieved through their LView.\n    if (node.tNode.type === 2 /* View */) {\n        var viewData = node.data;\n        return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n    }\n    return node.tNode.next ? node.view[node.tNode.next.index] : null;\n}\n/** Retrieves the first child of a given node */\nfunction getChildLNode(node) {\n    if (node.tNode.child) {\n        var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n        return viewData[node.tNode.child.index];\n    }\n    return null;\n}\nfunction getParentLNode(node) {\n    if (node.tNode.index === -1)\n        return null;\n    var parent = node.tNode.parent;\n    return parent ? node.view[parent.index] : node.view[HOST_NODE];\n}\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param node The node whose next node in the LNode tree must be found.\n * @return LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node) {\n    var pNextOrParent = node.pNextOrParent;\n    if (pNextOrParent) {\n        // The node is projected\n        var isLastProjectedNode = pNextOrParent.tNode.type === 1;\n        // returns pNextOrParent if we are not at the end of the list, null otherwise\n        return isLastProjectedNode ? null : pNextOrParent;\n    }\n    // returns node.next because the the node is not projected\n    return getNextLNode(node);\n}\n/**\n * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n * one found, or on all of them.\n *\n * @param startingNode the node from which the walk is started.\n * @param rootNode the root node considered.\n * @param action identifies the action to be performed on the LElement nodes.\n * @param renderer the current renderer.\n * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n * required for action modes Insert and Destroy.\n * @param beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n */\nfunction walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n    var node = startingNode;\n    while (node) {\n        var nextNode = null;\n        var parent_1 = renderParentNode ? renderParentNode.native : null;\n        if (node.tNode.type === 3 /* Element */) {\n            // Execute the action\n            executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n            if (node.dynamicLContainerNode) {\n                executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n            }\n            nextNode = getNextLNode(node);\n        }\n        else if (node.tNode.type === 0 /* Container */) {\n            executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n            var lContainerNode = node;\n            var childContainerData = lContainerNode.dynamicLContainerNode ?\n                lContainerNode.dynamicLContainerNode.data :\n                lContainerNode.data;\n            if (renderParentNode) {\n                childContainerData[RENDER_PARENT] = renderParentNode;\n            }\n            nextNode =\n                childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n            if (nextNode) {\n                // When the walker enters a container, then the beforeNode has to become the local native\n                // comment node.\n                beforeNode = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.native :\n                    lContainerNode.native;\n            }\n        }\n        else if (node.tNode.type === 1 /* Projection */) {\n            // For Projection look at the first projected node\n            nextNode = node.data.head;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = getChildLNode(node);\n        }\n        if (nextNode == null) {\n            /**\n             * Find the next node in the LNode tree, taking into account the place where a node is\n             * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n             *\n             * If there is no sibling node, then it goes to the next sibling of the parent node...\n             * until it reaches rootNode (at which point null is returned).\n             */\n            var currentNode = node;\n            node = getNextLNodeWithProjection(currentNode);\n            while (currentNode && !node) {\n                // if node.pNextOrParent is not null here, it is not the next node\n                // (because, at this point, nextNode is null, so it is the parent)\n                currentNode = currentNode.pNextOrParent || getParentLNode(currentNode);\n                if (currentNode === rootNode) {\n                    return null;\n                }\n                // When the walker exits a container, the beforeNode has to be restored to the previous\n                // value.\n                if (currentNode && !currentNode.pNextOrParent &&\n                    currentNode.tNode.type === 0 /* Container */) {\n                    beforeNode = currentNode.native;\n                }\n                node = currentNode && getNextLNodeWithProjection(currentNode);\n            }\n        }\n        else {\n            node = nextNode;\n        }\n    }\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction executeNodeAction(action, renderer, parent, node, beforeNode) {\n    if (action === 0 /* Insert */) {\n        isProceduralRenderer(renderer) ?\n            renderer.insertBefore(parent, node, beforeNode) :\n            parent.insertBefore(node, beforeNode, true);\n    }\n    else if (action === 1 /* Detach */) {\n        isProceduralRenderer(renderer) ?\n            renderer.removeChild(parent, node) :\n            parent.removeChild(node);\n    }\n    else if (action === 2 /* Destroy */) {\n        ngDevMode && ngDevMode.rendererDestroyNode++;\n        renderer.destroyNode(node);\n    }\n}\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var parentNode = container.data[RENDER_PARENT];\n    var parent = parentNode ? parentNode.native : null;\n    if (parent) {\n        var node = getChildLNode(rootNode);\n        var renderer = container.view[RENDERER];\n        walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView[TVIEW].childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        var next = null;\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            // If LViewData, traverse down to child.\n            var view = viewOrContainer;\n            if (view[TVIEW].childIndex > -1)\n                next = getLViewChild(view);\n        }\n        else {\n            // If container, traverse down to its first LViewData.\n            var container = viewOrContainer;\n            if (container[VIEWS].length)\n                next = container[VIEWS][0].data;\n        }\n        if (next == null) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && viewOrContainer[NEXT];\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param container The container into which the view should be inserted\n * @param viewNode The view to insert\n * @param index The index at which to insert the view\n * @returns The inserted view\n */\nfunction insertView(container, viewNode, index) {\n    var state = container.data;\n    var views = state[VIEWS];\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1].data[NEXT] = viewNode.data;\n    }\n    if (index < views.length) {\n        viewNode.data[NEXT] = views[index].data;\n        views.splice(index, 0, viewNode);\n    }\n    else {\n        views.push(viewNode);\n        viewNode.data[NEXT] = null;\n    }\n    // Notify query that a new view has been added\n    var lView = viewNode.data;\n    if (lView[QUERIES]) {\n        lView[QUERIES].insertView(index);\n    }\n    // If the container's renderParent is null, we know that it is a root node of its own parent view\n    // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n    // nodes twice - once now and once when its parent inserts its views).\n    if (container.data[RENDER_PARENT] !== null) {\n        // Find the node to insert in front of\n        var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n        addRemoveViewFromContainer(container, viewNode, true, beforeNode);\n    }\n    // Sets the attached flag\n    viewNode.data[FLAGS] |= 8 /* Attached */;\n    return viewNode;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param container The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @returns The detached view\n */\nfunction detachView(container, removeIndex) {\n    var views = container.data[VIEWS];\n    var viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n    }\n    views.splice(removeIndex, 1);\n    addRemoveViewFromContainer(container, viewNode, false);\n    // Notify query that view has been removed\n    var removedLview = viewNode.data;\n    if (removedLview[QUERIES]) {\n        removedLview[QUERIES].removeView();\n    }\n    // Unsets the attached flag\n    viewNode.data[FLAGS] &= ~8 /* Attached */;\n    return viewNode;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param container The container from which to remove a view\n * @param removeIndex The index of the view to remove\n * @returns The removed view\n */\nfunction removeView(container, removeIndex) {\n    var viewNode = container.data[VIEWS][removeIndex];\n    detachView(container, removeIndex);\n    destroyLView(viewNode.data);\n    return viewNode;\n}\n/** Gets the child of the given LViewData */\nfunction getLViewChild(viewData) {\n    if (viewData[TVIEW].childIndex === -1)\n        return null;\n    var hostNode = viewData[viewData[TVIEW].childIndex];\n    return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param view The view to be destroyed.\n */\nfunction destroyLView(view) {\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view[FLAGS] |= 32 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var node;\n    if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getParentLNode(node).data;\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state[PARENT] === rootView ? null : state[PARENT];\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param view The LViewData to clean up\n */\nfunction cleanUpView(viewOrContainer) {\n    if (viewOrContainer[TVIEW]) {\n        var view = viewOrContainer;\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            view[RENDERER].destroy();\n        }\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(viewData) {\n    var cleanup = viewData[TVIEW].cleanup;\n    if (cleanup != null) {\n        for (var i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                // This is a listener with the native renderer\n                var native = viewData[cleanup[i + 1]].native;\n                var listener = viewData[CLEANUP][cleanup[i + 2]];\n                native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                i += 2;\n            }\n            else if (typeof cleanup[i] === 'number') {\n                // This is a listener with renderer2 (cleanup fn can be found by index)\n                var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                cleanupFn();\n            }\n            else {\n                // This is a cleanup function that is grouped with the index of its context\n                var context = viewData[CLEANUP][cleanup[i + 1]];\n                cleanup[i].call(context);\n            }\n        }\n        viewData[CLEANUP] = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view[TVIEW];\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view[DIRECTIVES], destroyHooks);\n    }\n}\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(viewData) {\n    var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(viewData, pipeDestroyHooks);\n    }\n}\n/**\n * Returns whether a native element should be inserted in the given parent.\n *\n * The native node can be inserted when its parent is:\n * - A regular element => Yes\n * - A component host element =>\n *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n *      template)\n *      => don't add as the parent component will project if needed.\n *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n *      add it\n * - View element => delay insertion, will be done on `viewEnd()`\n *\n * @param parent The parent in which to insert the child\n * @param currentView The LView being processed\n * @return boolean Whether the child element should be inserted.\n */\nfunction canInsertNativeNode(parent, currentView) {\n    var parentIsElement = parent.tNode.type === 3;\n    return parentIsElement &&\n        (parent.view !== currentView || parent.data === null /* Regular Element. */);\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}\n *\n * @param parent The parent to which to append the child\n * @param child The child that should be appended\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        // We only add element if not in View or not projected.\n        var renderer = currentView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n            parent.native.appendChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param node The node to process\n * @param currentParent The last parent element to be processed\n * @param currentView Current LView\n */\nfunction appendProjectedNode(node, currentParent, currentView) {\n    appendChild(currentParent, node.native, currentView);\n    if (node.tNode.type === 0 /* Container */) {\n        // The node we are adding is a Container and we are adding it to Element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assignee the final projection location in those cases.\n        var lContainer = node.data;\n        lContainer[RENDER_PARENT] = currentParent;\n        var views = lContainer[VIEWS];\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(node, views[i], true, null);\n        }\n    }\n    if (node.dynamicLContainerNode) {\n        node.dynamicLContainerNode.data[RENDER_PARENT] = currentParent;\n        appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    var mode = 4;\n    var nodeAttrs = tNode.attrs;\n    var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && current !== tNode.tagName) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                var nodeAttrValue = void 0;\n                var maybeAttrName = nodeAttrs[attrIndexInNode];\n                if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                }\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n */\nfunction findAttrIndexInNode(name, attrs) {\n    if (attrs === null)\n        return -1;\n    var selectOnlyMode = false;\n    var i = 0;\n    while (i < attrs.length) {\n        var maybeAttrName = attrs[i];\n        if (maybeAttrName === name) {\n            return i;\n        }\n        else if (maybeAttrName === 0 /* NamespaceURI */) {\n            // NOTE(benlesh): will not find namespaced attributes. This is by design.\n            i += 4;\n        }\n        else {\n            if (maybeAttrName === 1 /* SelectOnly */) {\n                selectOnlyMode = true;\n            }\n            i += selectOnlyMode ? 1 : 2;\n        }\n    }\n    return -1;\n}\nfunction isNodeMatchingSelectorList(tNode, selector) {\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n *\n * Note: Element is not actually stored at index 0 because of the LViewData\n * header, but the host bindings function expects an index that is NOT adjusted\n * because it will ultimately be fed to instructions like elementProperty.\n */\nvar _ROOT_DIRECTIVE_INDICES = [0, 0];\n/**\n * TView.data needs to fill the same number of slots as the LViewData header\n * so the indices of nodes are consistent between LViewData and TView.data.\n *\n * It's much faster to keep a blueprint of the pre-filled array and slice it\n * than it is to create a new array and fill it each time a TView is created.\n */\nvar HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n/**\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n */\nvar CIRCULAR$1 = '__CIRCULAR__';\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\nfunction getRenderer() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return renderer;\n}\nfunction getCurrentSanitizer() {\n    return viewData && viewData[SANITIZER];\n}\n/** Used to set the parent property when nodes are created. */\nvar previousOrParentNode;\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\nvar tView;\nvar currentQueries;\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentQueries || (currentQueries = (previousOrParentNode.queries || new QueryType()));\n}\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return creationMode;\n}\n/**\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar viewData;\n/**\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n */\nvar directives;\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = []);\n}\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\n/** Whether or not this is the first time the current view has been processed. */\nvar firstTemplatePass = true;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, host) {\n    var oldView = viewData;\n    directives = newView && newView[DIRECTIVES];\n    tView = newView && newView[TVIEW];\n    creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && tView.firstTemplatePass;\n    renderer = newView && newView[RENDERER];\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    viewData = newView;\n    currentQueries = newView && newView[QUERIES];\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n */\nfunction leaveView(newView, creationOnly) {\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    viewData[FLAGS] |= 16 /* RunInit */;\n    viewData[BINDING_INDEX] = -1;\n    enterView(newView, null);\n}\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic children, triggers content hooks, sets host bindings,\n * refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n * */\nfunction refreshView() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n    }\n    refreshDynamicChildren();\n    if (!checkNoChangesMode) {\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    setHostBindings(tView.hostBindings);\n    refreshChildComponents(tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(bindings) {\n    if (bindings != null) {\n        var defs = tView.directives;\n        for (var i = 0; i < bindings.length; i += 2) {\n            var dirIndex = bindings[i];\n            var def = defs[dirIndex];\n            def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i += 2) {\n            componentRefresh(components[i], components[i + 1]);\n        }\n    }\n}\nfunction executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\nfunction createLViewData(renderer, tView, context, flags, sanitizer) {\n    return [\n        tView,\n        viewData,\n        null,\n        null,\n        flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n        null,\n        -1,\n        null,\n        null,\n        context,\n        viewData && viewData[INJECTOR$1],\n        renderer,\n        sanitizer || null,\n        null // tail\n    ];\n}\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n */\nfunction createLNodeObject(type, currentView, parent, native, state, queries) {\n    return {\n        native: native,\n        view: currentView,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: state,\n        queries: queries,\n        tNode: null,\n        pNextOrParent: null,\n        dynamicLContainerNode: null\n    };\n}\nfunction createLNode(index, type, native, name, attrs, state) {\n    var parent = isParent ? previousOrParentNode :\n        previousOrParentNode && getParentLNode(previousOrParentNode);\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    var tParent = parent && parent.view === viewData ? parent.tNode : null;\n    var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    var isState = state != null;\n    var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n    if (index === -1 || type === 2 /* View */) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in TView.node.\n        node.tNode =\n            state[TVIEW].node || createTNode(type, index, null, null, tParent, null);\n    }\n    else {\n        var adjustedIndex = index + HEADER_OFFSET;\n        // This is an element or container or projection node\n        ngDevMode && assertDataNext(adjustedIndex);\n        var tData = tView.data;\n        viewData[adjustedIndex] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (adjustedIndex >= tData.length) {\n            var tNode = tData[adjustedIndex] =\n                createTNode(type, adjustedIndex, name, attrs, tParent, null);\n            if (!isParent && previousOrParentNode) {\n                var previousTNode = previousOrParentNode.tNode;\n                previousTNode.next = tNode;\n                if (previousTNode.dynamicContainerNode)\n                    previousTNode.dynamicContainerNode.next = tNode;\n            }\n        }\n        node.tNode = tData[adjustedIndex];\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                previousOrParentNode.tNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                previousOrParentNode.tNode.child = node.tNode;\n            }\n        }\n    }\n    // View nodes and host elements need to set their host node (components set host nodes later)\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        var lViewData = state;\n        ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n        lViewData[HOST_NODE] = node;\n        if (firstTemplatePass)\n            lViewData[TVIEW].node = node.tNode;\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n//////////////////////////\n//// Render\n//////////////////////////\n/**\n * Resets the application state.\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = null;\n}\n/**\n *\n * @param hostNode Existing node to render into.\n * @param template Template function with the instructions.\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param directives Directive defs that should be used for matching\n * @param pipes Pipe defs that should be used for matching\n */\n\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nfunction renderEmbeddedTemplate(viewNode, tView, context, renderer, queries) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    var oldView;\n    var rf = 2;\n    try {\n        isParent = true;\n        previousOrParentNode = null;\n        if (viewNode == null) {\n            var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (queries) {\n                lView[QUERIES] = queries.createView();\n            }\n            viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n            rf = 1 /* Create */;\n        }\n        oldView = enterView(viewNode.data, viewNode);\n        namespaceHTML();\n        tView.template(rf, context);\n        if (rf & 2 /* Update */) {\n            refreshView();\n        }\n        else {\n            viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n        }\n    }\n    finally {\n        // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n        // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n        var isCreationOnly = (rf & 1 /* Create */) === 1;\n        leaveView(oldView, isCreationOnly);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n    }\n    return viewNode;\n}\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    var oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            namespaceHTML();\n            template(getRenderFlags(hostView), componentOrContext);\n            refreshView();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(_ROOT_DIRECTIVE_INDICES);\n            componentRefresh(0, HEADER_OFFSET);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n */\nfunction getRenderFlags(view) {\n    return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n//////////////////////////\n//// Namespace\n//////////////////////////\nvar _currentNamespace = null;\nfunction namespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg/';\n}\nfunction namespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\nfunction namespaceHTML() {\n    _currentNamespace = null;\n}\n//////////////////////////\n//// Element\n//////////////////////////\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction element(index, name, attrs, localRefs) {\n    elementStart(index, name, attrs, localRefs);\n    elementEnd();\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LViewData array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    var native;\n    if (isProceduralRenderer(renderer)) {\n        native = renderer.createElement(name, _currentNamespace);\n    }\n    else {\n        if (_currentNamespace === null) {\n            native = renderer.createElement(name);\n        }\n        else {\n            native = renderer.createElementNS(_currentNamespace, name);\n        }\n    }\n    ngDevMode && assertDataInRange(index - 1);\n    var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n    if (attrs)\n        setUpAttributes(native, attrs);\n    appendChild(getParentLNode(node), native, viewData);\n    createDirectivesAndLocals(localRefs);\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the current node\n */\nfunction createDirectivesAndLocals(localRefs) {\n    var node = previousOrParentNode;\n    if (firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n    }\n    else {\n        instantiateDirectivesDirectly();\n    }\n    saveResolvedLocalsInData();\n}\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n */\nfunction cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n    var exportsMap = localRefs ? { '': -1 } : null;\n    var matches = tView.currentMatches = findDirectiveMatches(tNode);\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            var valueIndex = i + 1;\n            resolveDirective(def, valueIndex, matches, tView);\n            saveNameToExportMap(matches[valueIndex], def, exportsMap);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/** Matches the current node against all available selectors. */\nfunction findDirectiveMatches(tNode) {\n    var registry = tView.directiveRegistry;\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                if (def.template) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                }\n                if (def.diPublic)\n                    def.diPublic(def);\n                (matches || (matches = [])).push(def, null);\n            }\n        }\n    }\n    return matches;\n}\nfunction resolveDirective(def, valueIndex, matches, tView) {\n    if (matches[valueIndex] === null) {\n        matches[valueIndex] = CIRCULAR$1;\n        var instance = def.factory();\n        (tView.directives || (tView.directives = [])).push(def);\n        return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n    }\n    else if (matches[valueIndex] === CIRCULAR$1) {\n        // If we revisit this directive before it's resolved, we know it's circular\n        throwCyclicDependencyError(def.type);\n    }\n    return null;\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(dirIndex) {\n    if (firstTemplatePass) {\n        (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n    }\n}\n/** Stores index of directive and host element so it will be queued for binding refresh during CD.\n */\nfunction queueHostBindingForCheck(dirIndex) {\n    // Must subtract the header offset because hostBindings functions are generated with\n    // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n}\n/** Sets the context for a ChangeDetectorRef to the given instance. */\nfunction initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        injector.changeDetectorRef._setComponentContext(view, instance);\n    }\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * This function instantiates the given directives.\n */\nfunction instantiateDirectivesDirectly() {\n    var tNode = previousOrParentNode.tNode;\n    var count = tNode.flags & 4095;\n    if (count > 0) {\n        var start = tNode.flags >> 13;\n        var end = start + count;\n        var tDirectives = tView.directives;\n        for (var i = start; i < end; i++) {\n            var def = tDirectives[i];\n            directiveCreate(i, def.factory(), def);\n        }\n    }\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LViewData in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData() {\n    var localNames = previousOrParentNode.tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i + 1];\n            var value = index === -1 ? previousOrParentNode.native : directives[index];\n            viewData.push(value);\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param template The template from which to get static data\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(template, directives, pipes) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return template.ngPrivateData ||\n        (template.ngPrivateData = createTView(-1, template, directives, pipes));\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nfunction createTView(viewIndex, template, directives, pipes) {\n    ngDevMode && ngDevMode.tView++;\n    return {\n        id: viewIndex,\n        template: template,\n        node: null,\n        data: HEADER_FILLER.slice(),\n        childIndex: -1,\n        bindingStartIndex: -1,\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        hostBindings: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        currentMatches: null\n    };\n}\nfunction setUpAttributes(native, attrs) {\n    var isProc = isProceduralRenderer(renderer);\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n            i += 2;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            if (attrName === 0 /* NamespaceURI */) {\n                // Namespaced attributes\n                var namespaceURI = attrs[i + 1];\n                var attrName_1 = attrs[i + 2];\n                var attrVal = attrs[i + 3];\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                i += 4;\n            }\n            else {\n                // Standard attributes\n                var attrVal = attrs[i + 1];\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName, attrVal) :\n                    native.setAttribute(attrName, attrVal);\n                i += 2;\n            }\n        }\n    }\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n *\n * @returns LElementNode created\n */\nfunction hostElement(tag, rNode, def, sanitizer) {\n    resetApplicationState();\n    var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n    if (firstTemplatePass) {\n        node.tNode.flags = 4096 /* isComponent */;\n        if (def.diPublic)\n            def.diPublic(def);\n        tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var node = previousOrParentNode;\n    var native = node.native;\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n        var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n        var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        storeCleanupFn(viewData, cleanupFn);\n    }\n    else {\n        var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        var cleanupInstances = getCleanup(viewData);\n        cleanupInstances.push(wrappedListener);\n        if (firstTemplatePass) {\n            getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n        }\n    }\n    var tNode = node.tNode;\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n */\nfunction createOutput(outputs, listener) {\n    for (var i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(outputs[i], directives);\n        var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n        storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nfunction storeCleanupWithContext(view, context, cleanupFn) {\n    if (!view)\n        view = viewData;\n    getCleanup(view).push(context);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n    }\n}\n/** Mark the end of the element. */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var element_1 = load(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                element_1.native.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                element_1.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    var node = load(index);\n    var tNode = node.tNode;\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    var inputData = tNode && tNode.inputs;\n    var dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value) : value;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                native[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param parent The parent of this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n    ngDevMode && ngDevMode.tNode++;\n    return {\n        type: type,\n        index: adjustedIndex,\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: parent,\n        dynamicContainerNode: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(inputs[i], directives);\n        directives[inputs[i]][inputs[i + 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param number lNodeFlags logical node flags\n * @param Direction direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    var count = tNodeFlags & 4095;\n    var propStore = null;\n    if (count > 0) {\n        var start = tNodeFlags >> 13;\n        var end = start + count;\n        var isInput = direction === 0;\n        var defs = tView.directives;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param index The index of the element to update in the data array\n * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value A value indicating if a given class should be added or removed.\n */\nfunction elementClassNamed(index, className, value) {\n    if (value !== NO_CHANGE) {\n        var lElement = load(index);\n        if (value) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                lElement.native.classList.add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                lElement.native.classList.remove(className);\n        }\n    }\n}\n/**\n * Set the `className` property on a DOM element.\n *\n * This instruction is meant to handle the `[class]=\"exp\"` usage.\n *\n * `elementClass` instruction writes the value to the \"element's\" `className` property.\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating a set of classes which should be applied. The method overrides\n *   any existing classes. The value is stringified (`toString`) before it is applied to the\n *   element.\n */\nfunction elementClass(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `className`. In the\n        // future\n        // we will add logic here which would work with the animation code.\n        var lElement = load(index);\n        ngDevMode && ngDevMode.rendererSetClassName++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n            lElement.native['className'] = stringify$1(value);\n    }\n}\nfunction elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n    if (value !== NO_CHANGE) {\n        var lElement = load(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].removeProperty(styleName);\n        }\n        else {\n            var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string')\n                strValue = strValue + suffixOrSanitizer;\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].setProperty(styleName, strValue);\n        }\n    }\n}\n/**\n * Set the `style` property on a DOM element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage.\n *\n *\n * @param index The index of the element to update in the LViewData array\n * @param value A value indicating if a given style should be added or removed.\n *   The expected shape of `value` is an object where keys are style names and the values\n *   are their corresponding values to set. If value is falsy, then the style is removed. An absence\n *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n *   performed.\n */\nfunction elementStyle(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n        // we will add logic here which would work with the animation code.\n        var lElement = load(index);\n        if (isProceduralRenderer(renderer)) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer.setProperty(lElement.native, 'style', value);\n        }\n        else {\n            var style = lElement.native['style'];\n            for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                var styleName = keys[i];\n                var styleValue = value[styleName];\n                if (styleValue == null) {\n                    ngDevMode && ngDevMode.rendererRemoveStyle++;\n                    style.removeProperty(styleName);\n                }\n                else {\n                    ngDevMode && ngDevMode.rendererSetStyle++;\n                    style.setProperty(styleName, styleValue);\n                }\n            }\n        }\n    }\n}\n//////////////////////////\n//// Text\n//////////////////////////\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Value to write. This value will be stringified.\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    var textNode = createTextNode(value, renderer);\n    var node = createLNode(index, 3 /* Element */, textNode, null, null);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(getParentLNode(node), textNode, viewData);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n        var existingNode = load(index);\n        ngDevMode && assertDefined(existingNode, 'LNode should exist');\n        ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n            existingNode.native.textContent = stringify$1(value);\n    }\n}\n//////////////////////////\n//// Directive\n//////////////////////////\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @param directive The directive instance.\n * @param directiveDef DirectiveDef object which contains information about the template.\n */\nfunction directiveCreate(index, directive, directiveDef) {\n    var instance = baseDirectiveCreate(index, directive, directiveDef);\n    ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    var tNode = previousOrParentNode.tNode;\n    var isComponent = directiveDef.template;\n    if (isComponent) {\n        addComponentLogic(index, directive, directiveDef);\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(index);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n    }\n    return instance;\n}\nfunction addComponentLogic(directiveIndex, instance, def) {\n    var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n    // We need to set the host node/data here because when the component LNode was created,\n    // we didn't yet know it was a component (just an element).\n    previousOrParentNode.data = componentView;\n    componentView[HOST_NODE] = previousOrParentNode;\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck(directiveIndex);\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n */\nfunction baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        viewData[DIRECTIVES] = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    if (firstTemplatePass) {\n        var flags = previousOrParentNode.tNode.flags;\n        if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n            // When the first directive is created:\n            // - save the index,\n            // - set the number of directives to 1\n            previousOrParentNode.tNode.flags =\n                index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n        }\n        else {\n            // Only need to bump the size when subsequent directives are created\n            ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n            previousOrParentNode.tNode.flags++;\n        }\n    }\n    else {\n        var diPublic = directiveDef.diPublic;\n        if (diPublic)\n            diPublic(directiveDef);\n    }\n    if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n        setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            instance[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var attrs = tNode.attrs;\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        var minifiedInputName = inputs[attrName];\n        var attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrValue);\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param parentLNode the LNode in which the container's content will be rendered\n * @param currentView The parent view of the LContainer\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(parentLNode, currentView, isForViewContainerRef) {\n    ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n    return [\n        isForViewContainerRef ? null : 0,\n        currentView,\n        null,\n        null,\n        [],\n        canInsertNativeNode(parentLNode, currentView) ? parentLNode :\n            null // renderParent\n    ];\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param index The index of the container in the data array\n * @param template Optional inline template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction container(index, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n    var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n    var lContainer = createLContainer(currentParent, viewData);\n    var comment = renderer.createComment(ngDevMode ? 'container' : '');\n    var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n    appendChild(getParentLNode(node), comment, viewData);\n    if (firstTemplatePass) {\n        node.tNode.tViews =\n            template ? createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry) : [];\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n    var queries = node.queries;\n    if (queries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer[QUERIES] = queries.container();\n    }\n    createDirectivesAndLocals(localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    if (queries) {\n        // check if a given container node matches\n        queries.addNode(node);\n    }\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nfunction containerRefreshStart(index) {\n    previousOrParentNode = load(index);\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    previousOrParentNode.data[ACTIVE_INDEX] = 0;\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(viewData, tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var container = previousOrParentNode;\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var nextIndex = container.data[ACTIVE_INDEX];\n    // remove extra views at the end of the container\n    while (nextIndex < container.data[VIEWS].length) {\n        removeView(container, nextIndex);\n    }\n}\nfunction refreshDynamicChildren() {\n    for (var current = getLViewChild(viewData); current !== null; current = current[NEXT]) {\n        // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n        // header.\n        if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n            var container_1 = current;\n            for (var i = 0; i < container_1[VIEWS].length; i++) {\n                var lViewNode = container_1[VIEWS][i];\n                // The directives and pipes are not needed here as an existing view is only being refreshed.\n                var dynamicViewData = lViewNode.data;\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], renderer);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param containerNode where to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    var views = containerNode.data[VIEWS];\n    for (var i = startIdx; i < views.length; i++) {\n        var viewAtPositionId = views[i].data[TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var lContainer = container.data;\n    var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n    if (viewNode) {\n        previousOrParentNode = viewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(viewNode.data, viewNode);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (lContainer[QUERIES]) {\n            newView[QUERIES] = lContainer[QUERIES].createView();\n        }\n        enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n    }\n    return getRenderFlags(viewNode.data);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param parent The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var containerTViews = parent.tNode.tViews;\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] =\n            createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry);\n    }\n    return containerTViews[viewIndex];\n}\n/** Marks the end of an embedded view. */\nfunction embeddedViewEnd() {\n    refreshView();\n    isParent = false;\n    var viewNode = previousOrParentNode = viewData[HOST_NODE];\n    var containerNode = getParentLNode(previousOrParentNode);\n    if (containerNode) {\n        ngDevMode && assertNodeType(viewNode, 2 /* View */);\n        ngDevMode && assertNodeType(containerNode, 0 /* Container */);\n        var lContainer = containerNode.data;\n        if (creationMode) {\n            // When projected nodes are going to be inserted, the renderParent of the dynamic container\n            // used by the ViewContainerRef must be set.\n            setRenderParentInProjectedNodes(lContainer[RENDER_PARENT], viewNode);\n            // it is a new view, insert it into collection of views for a given container\n            insertView(containerNode, viewNode, lContainer[ACTIVE_INDEX]);\n        }\n        lContainer[ACTIVE_INDEX]++;\n    }\n    leaveView(viewData[PARENT]);\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * For nodes which are projected inside an embedded view, this function sets the renderParent\n * of their dynamic LContainerNode.\n * @param renderParent the renderParent of the LContainer which contains the embedded view.\n * @param viewNode the embedded view.\n */\nfunction setRenderParentInProjectedNodes(renderParent, viewNode) {\n    if (renderParent != null) {\n        var node = getChildLNode(viewNode);\n        while (node) {\n            if (node.tNode.type === 1 /* Projection */) {\n                var nodeToProject = node.data.head;\n                var lastNodeToProject = node.data.tail;\n                while (nodeToProject) {\n                    if (nodeToProject.dynamicLContainerNode) {\n                        nodeToProject.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n                    }\n                    nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n                }\n            }\n            node = getNextLNode(node);\n        }\n    }\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n */\nfunction componentRefresh(directiveIndex, adjustedElementIndex) {\n    ngDevMode && assertDataInRange(adjustedElementIndex);\n    var element = viewData[adjustedElementIndex];\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode &&\n        assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n    var hostView = element.data;\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        ngDevMode && assertDataInRange(directiveIndex, directives);\n        detectChangesInternal(hostView, element, getDirectiveInstance(directives[directiveIndex]));\n    }\n}\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view) {\n    return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nfunction projectionDef(index, selectors, textSelectors) {\n    var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var distributedNodes = new Array(noOfNodeBuckets);\n    for (var i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var componentNode = findComponentHost(viewData);\n    var componentChild = getChildLNode(componentNode);\n    while (componentChild !== null) {\n        // execute selector matching logic if and only if:\n        // - there are selectors defined\n        // - a node has a tag name / attributes that can be matched\n        if (selectors && componentChild.tNode) {\n            var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors);\n            distributedNodes[matchedIdx].push(componentChild);\n        }\n        else {\n            distributedNodes[0].push(componentChild);\n        }\n        componentChild = getNextLNode(componentChild);\n    }\n    ngDevMode && assertDataNext(index + HEADER_OFFSET);\n    store(index, distributedNodes);\n}\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param projectionNode Projection node whose projected nodes linked list has to be updated\n * @param appendedFirst First node of the linked list to append.\n * @param appendedLast Last node of the linked list to append.\n */\nfunction appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n    ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n    if (!appendedLast) {\n        // nothing to append\n        return;\n    }\n    var projectionNodeData = projectionNode.data;\n    if (projectionNodeData.tail) {\n        projectionNodeData.tail.pNextOrParent = appendedFirst;\n    }\n    else {\n        projectionNodeData.head = appendedFirst;\n    }\n    projectionNodeData.tail = appendedLast;\n    appendedLast.pNextOrParent = projectionNode;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param localIndex - index under which distribution of projected nodes was memorized\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nfunction projection(nodeIndex, localIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, { head: null, tail: null });\n    // `<ng-content>` has no content\n    isParent = false;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var componentNode = findComponentHost(viewData);\n    var componentLView = componentNode.data;\n    var distributedNodes = loadInternal(localIndex, componentLView);\n    var nodesForSelector = distributedNodes[selectorIndex];\n    // build the linked list of projected nodes:\n    for (var i = 0; i < nodesForSelector.length; i++) {\n        var nodeToProject = nodesForSelector[i];\n        if (nodeToProject.tNode.type === 1 /* Projection */) {\n            // Reprojecting a projection -> append the list of previously projected nodes\n            var previouslyProjected = nodeToProject.data;\n            appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n        }\n        else {\n            // Projecting a single node\n            appendToProjectionNode(node, nodeToProject, nodeToProject);\n        }\n    }\n    var currentParent = getParentLNode(node);\n    if (canInsertNativeNode(currentParent, viewData)) {\n        ngDevMode && assertNodeType(currentParent, 3 /* Element */);\n        // process each node in the list of projected nodes:\n        var nodeToProject = node.data.head;\n        var lastNodeToProject = node.data.tail;\n        while (nodeToProject) {\n            appendProjectedNode(nodeToProject, currentParent, viewData);\n            nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lViewData LViewData for which we want a host element node\n * @returns The host node\n */\nfunction findComponentHost(lViewData) {\n    var viewRootLNode = lViewData[HOST_NODE];\n    while (viewRootLNode.tNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n        lViewData = lViewData[PARENT];\n        viewRootLNode = lViewData[HOST_NODE];\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n    return viewRootLNode;\n}\n/**\n * Adds LViewData or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param currentView The view where LViewData or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n * @param state The LViewData or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(currentView, adjustedHostIndex, state) {\n    if (currentView[TAIL]) {\n        currentView[TAIL][NEXT] = state;\n    }\n    else if (firstTemplatePass) {\n        tView.childIndex = adjustedHostIndex;\n    }\n    currentView[TAIL] = state;\n    return state;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/** If node is an OnPush component, marks its LViewData dirty. */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n        node.data[FLAGS] |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function wrapListenerIn_markViewDirty(e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/** Marks current view and all ancestors dirty */\nfunction markViewDirty(view) {\n    var currentView = view;\n    while (currentView[PARENT] != null) {\n        currentView[FLAGS] |= 4 /* Dirty */;\n        currentView = currentView[PARENT];\n    }\n    currentView[FLAGS] |= 4 /* Dirty */;\n    ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n    scheduleTick(currentView[CONTEXT]);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            tickRootContext(rootContext);\n            res_1(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\n\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        var rootComponent = rootContext.components[i];\n        var hostNode = _getComponentHostLElementNode(rootComponent);\n        ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n        renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n    }\n}\n/**\n * Retrieve the root view from any component by walking the parent `LViewData` until\n * reaching the root `LViewData`.\n *\n * @param component any component\n */\nfunction getRootView(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    var lViewData = lElementNode.view;\n    while (lViewData[PARENT]) {\n        lViewData = lViewData[PARENT];\n    }\n    return lViewData;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var hostNode = _getComponentHostLElementNode(component);\n    ngDevMode &&\n        assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n    detectChangesInternal(hostNode.data, hostNode, component);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nfunction checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nfunction detectChangesInternal(hostView, hostNode, component) {\n    var oldView = enterView(hostView, hostNode);\n    var template = hostView[TVIEW].template;\n    try {\n        namespaceHTML();\n        template(getRenderFlags(hostView), component);\n        refreshView();\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    markViewDirty(lElementNode.view);\n}\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n */\nfunction initBindings() {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n    if (tView.bindingStartIndex === -1) {\n        tView.bindingStartIndex = viewData.length;\n    }\n    viewData[BINDING_INDEX] = tView.bindingStartIndex;\n}\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nfunction bind(value) {\n    return bindingUpdated(value) ? value : NO_CHANGE;\n}\n/**\n * Reserves slots for pure functions (`pureFunctionX` instructions)\n *\n * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n *\n *  ----------------------------------------------------------------------------\n *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n *  ----------------------------------------------------------------------------\n *                                         ^\n *                                         TView.bindingStartIndex\n *\n * Pure function instructions are given an offset from TView.bindingStartIndex.\n * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n * are stored.\n *\n * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n */\nfunction reserveSlots(numSlots) {\n    // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n    // whether it happens or not during the first change detection pass - pure functions checks\n    // might be skipped when short-circuited.\n    viewData.length += numSlots;\n    viewData.fill(NO_CHANGE, -numSlots);\n    // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n    // called first in the update section.\n    initBindings();\n}\n/**\n * Sets up the binding index before executing any `pureFunctionX` instructions.\n *\n * The index must be restored after the pure function is executed\n *\n * {@link reserveSlots}\n */\nfunction moveBindingIndexToReservedSlot(offset) {\n    var currentSlot = viewData[BINDING_INDEX];\n    viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n    return currentSlot;\n}\n/**\n * Restores the binding index to the given value.\n *\n * This function is typically used to restore the index after a `pureFunctionX` has\n * been executed.\n */\nfunction restoreBindingIndex(index) {\n    viewData[BINDING_INDEX] = index;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var different = false;\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 2 expressions. */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation bindings with 3 expressions. */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/** Create an interpolation binding with 4 expressions. */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 5 expressions. */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 6 expressions. */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 7 expressions. */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 8 expressions. */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n    }\n    viewData[adjustedIndex] = value;\n}\n/** Retrieves a value from current `viewData`. */\nfunction load(index) {\n    return loadInternal(index, viewData);\n}\n/** Retrieves a value from any `LViewData`. */\nfunction loadInternal(index, arr) {\n    ngDevMode && assertDataInRange(index + HEADER_OFFSET, arr);\n    return arr[index + HEADER_OFFSET];\n}\n/** Retrieves a value from the `directives` array. */\nfunction loadDirective(index) {\n    ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, directives);\n    return directives[index];\n}\n/** Gets the current binding value and increments the binding index. */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n    ngDevMode &&\n        assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return viewData[viewData[BINDING_INDEX]++];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (viewData[BINDING_INDEX] === -1)\n        initBindings();\n    var bindingIndex = viewData[BINDING_INDEX];\n    if (bindingIndex >= viewData.length) {\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else if (isDifferent(viewData[bindingIndex], value)) {\n        throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else {\n        viewData[BINDING_INDEX]++;\n        return false;\n    }\n    return true;\n}\n/** Updates binding if changed, then returns the latest value. */\nfunction checkAndUpdateBinding(value) {\n    bindingUpdated(value);\n    return value;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(exp1, exp2) {\n    var different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\nfunction getTView() {\n    return tView;\n}\nfunction getDirectiveInstance(instanceOrArray) {\n    // Directives with content queries store an array in directives[directiveIndex]\n    // with the instance as the first index\n    return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\nfunction assertHasParent() {\n    assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n}\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n}\n/**\n * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n *\n * If not, they might not have been actually reserved.\n */\nfunction assertReservedSlotInitialized(slotOffset, numSlots) {\n    if (firstTemplatePass) {\n        var startIndex = tView.bindingStartIndex - slotOffset;\n        for (var i = 0; i < numSlots; i++) {\n            assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n        }\n    }\n}\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertDefined(component, 'expecting component got null');\n    var lElementNode = component[NG_HOST_SYMBOL];\n    ngDevMode && assertDefined(component, 'object is not a component');\n    return lElementNode;\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nvar ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && assertComponentType(componentType);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var sanitizer = opts.sanitizer || null;\n    var componentDef = componentType.ngComponentDef;\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    var component;\n    // The first index of the first selector is the tag name.\n    var componentTag = componentDef.selectors[0][0];\n    var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n    var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    rootView[INJECTOR$1] = opts.injector || null;\n    var oldView = enterView(rootView, null);\n    var elementNode;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n        // Create directive instance with factory() and store at index 0 in directives array\n        rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        executeInitAndContentHooks();\n        setHostBindings(ROOT_DIRECTIVE_INDICES);\n        detectChangesInternal(elementNode.data, elementNode, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\nfunction createRootContext(scheduler) {\n    return {\n        components: [],\n        scheduler: scheduler,\n        clean: CLEAN_PROMISE,\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\n\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext(component) {\n    var rootContext = getRootView(component)[CONTEXT];\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param component Component for which the host element should be retrieved.\n */\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var key = record.trackById;\n        var recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, __spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory$$1.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, __spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR$2 = {};\nvar EMPTY_ARRAY$2 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR$2 = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR$2 === undefined) {\n        NULL_INJECTOR$2 = new NullInjector();\n    }\n    return NULL_INJECTOR$2;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @experimental\n */\nfunction createInjector(defType, parent, additionalProviders) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n        additionalProviders &&\n            deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    R3Injector.prototype.destroy = function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = 0 /* Default */; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 4 /* SkipSelf */)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) &&\n                        token.ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     */\n    R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = defOrWrappedDef.ngInjectorDef;\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n        // extra providers.\n        var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n            EMPTY_ARRAY$2;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, throw.\n        if (def == null) {\n            throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    R3Injector.prototype.processProvider = function (provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        else {\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + stringify(token));\n            }\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR$2) {\n            throw new Error(\"Circular dep for \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$2;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefRecord(token) {\n    var def = token.ngInjectableDef;\n    if (def === undefined) {\n        throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n    }\n    return makeRecord(def.factory);\n}\nfunction providerToRecord(provider) {\n    var token = resolveForwardRef(provider);\n    var value = NOT_YET;\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(provider.useExisting); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = provider.useClass || token;\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefRecord(classRef_1);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\nfunction makeRecord(factory, value, multi) {\n    if (value === void 0) { value = NOT_YET; }\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction isValueProvider(value) {\n    return USE_VALUE in value;\n}\nfunction isExistingProvider(value) {\n    return !!value.useExisting;\n}\nfunction isFactoryProvider(value) {\n    return !!value.useFactory;\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && value.ngOnDestroy &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n */\n\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n})(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        var _a;\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    exports.ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl(compView);\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$1 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef = /** @class */ (function () {\n    function ViewRef(_view, context) {\n        this._view = _view;\n        this.context = context;\n    }\n    /** @internal */\n    ViewRef.prototype._setComponentContext = function (view, context) {\n        this._view = view;\n        this.context = context;\n    };\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: function () {\n            return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n    ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n    ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n    ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n    return ViewRef;\n}());\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef(viewNode, template, context) {\n        var _this = _super.call(this, viewNode.data, context) || this;\n        _this._viewContainerRef = null;\n        _this._lViewNode = viewNode;\n        return _this;\n    }\n    EmbeddedViewRef.prototype.destroy = function () {\n        if (this._viewContainerRef && viewAttached(this._view)) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            this._viewContainerRef = null;\n        }\n        _super.prototype.destroy.call(this);\n    };\n    EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n    return EmbeddedViewRef;\n}(ViewRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injector The node injector in which the directive should be registered\n * @param type The directive to register\n */\nfunction bloomAdd(injector, type) {\n    var id = type[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    // This means that after 255, some directives will share slots, leading to some false positives\n    // when checking for a directive's presence.\n    var bloomBit = id % BLOOM_SIZE;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    if (bloomBit < 128) {\n        // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n        bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n            (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n    }\n    else {\n        bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n            (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n    }\n}\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param node for which an injector should be retrieved / created.\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    var nodeInjector = node.nodeInjector;\n    var parent = getParentLNode(node);\n    var parentInjector = parent && parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return nodeInjector;\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null\n    };\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param def The definition of the directive to be made public\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param def The definition of the directive to be made public\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\nfunction directiveInject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @returns The ElementRef instance to use\n */\nfunction injectElementRef() {\n    return getOrCreateElementRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @experimental\n */\nfunction injectAttribute(attrNameToInject) {\n    ngDevMode && assertPreviousIsParent();\n    var lElement = getPreviousOrParentNode();\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    var tElement = lElement.tNode;\n    ngDevMode && assertDefined(tElement, 'expecting tNode');\n    var attrs = tElement.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName == attrNameToInject) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @returns The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    var currentNode = di.node;\n    if (isComponent(currentNode.tNode)) {\n        return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n    }\n    else if (currentNode.tNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n    }\n    return null;\n}\n/** Gets or creates ChangeDetectorRef for the closest host component */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    var hostNode = getClosestComponentAncestor(currentNode);\n    var hostInjector = hostNode.nodeInjector;\n    var existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        new ViewRef(hostNode.data, hostNode\n            .view[DIRECTIVES][hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.tNode.type === 2 /* View */) {\n        node = node.view[HOST_NODE];\n    }\n    return node;\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @param di Node injector where the search should start\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nfunction getOrCreateInjectable(di, token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095;\n            if (count !== 0) {\n                var start = nodeFlags >> 13;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return getDirectiveInstance(node.view[DIRECTIVES][i]);\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n}\nfunction searchMatchesQueuedForCreation(node, token) {\n    var matches = node.view[TVIEW].currentMatches;\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            if (def.type === token) {\n                return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param type The directive type\n * @returns The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    var id = type[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param injector The starting node injector to check\n * @param  bloomBit The bit to check in each injector's bloom filter\n * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n * @returns An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n    // match.\n    var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n    while (injector) {\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value = void 0;\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                (bloomBit < 224 ? injector.bf6 : injector.bf7);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n            return null;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\n/**\n * Checks whether the current injector and its parent are in the same host view.\n *\n * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n * the injector and its parent view don't match because it means we'd cross the view boundary.\n */\nfunction sameHostView(injector) {\n    return !!injector.parent && injector.parent.node.view === injector.node.view;\n}\nvar ReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param di The node injector where we should store a created ElementRef\n * @returns The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef(di.node.native));\n}\n\n\n\n\n/** A ref to a node's native element. */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    if (!di.viewContainerRef) {\n        var vcRefHost = di.node;\n        ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n        var hostParent = getParentLNode(vcRefHost);\n        var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n        var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n        appendChild(hostParent, comment, vcRefHost.view);\n        if (vcRefHost.queries) {\n            lContainerNode.queries = vcRefHost.queries.container();\n        }\n        var hostTNode = vcRefHost.tNode;\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode = createTNode(0 /* Container */, -1, null, null, null, null);\n        }\n        lContainerNode.tNode = hostTNode.dynamicContainerNode;\n        vcRefHost.dynamicLContainerNode = lContainerNode;\n        addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n        di.viewContainerRef = new ViewContainerRef(lContainerNode);\n    }\n    return di.viewContainerRef;\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef(_lContainerNode) {\n        this._lContainerNode = _lContainerNode;\n        this._viewRefs = [];\n    }\n    ViewContainerRef.prototype.clear = function () {\n        var lContainer = this._lContainerNode.data;\n        while (lContainer[VIEWS].length) {\n            this.remove(0);\n        }\n    };\n    ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n    Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n        get: function () {\n            var lContainer = this._lContainerNode.data;\n            return lContainer[VIEWS].length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n        throw notImplemented();\n    };\n    ViewContainerRef.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var lViewNode = viewRef._lViewNode;\n        var adjustedIdx = this._adjustIndex(index);\n        viewRef.attachToViewContainerRef(this);\n        insertView(this._lContainerNode, lViewNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n        var index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n    };\n    ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n    ViewContainerRef.prototype.remove = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainerNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n    };\n    ViewContainerRef.prototype.detach = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        detachView(this._lContainerNode, adjustedIdx);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n    };\n    ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n        if (shift === void 0) { shift = 0; }\n        if (index == null) {\n            return this._lContainerNode.data[VIEWS].length + shift;\n        }\n        if (ngDevMode) {\n            assertGreaterThan(index, -1, 'index must be positive');\n            // +1 because it's legal to insert at the end.\n            assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n        }\n        return index;\n    };\n    return ViewContainerRef;\n}());\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @param di The node injector where we should store a created TemplateRef\n * @returns The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    if (!di.templateRef) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        var hostNode = di.node;\n        var hostTNode = hostNode.tNode;\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n    }\n    return di.templateRef;\n}\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef(elementRef, _tView, _renderer, _queries) {\n        this._tView = _tView;\n        this._renderer = _renderer;\n        this._queries = _queries;\n        this.elementRef = elementRef;\n    }\n    TemplateRef.prototype.createEmbeddedView = function (context) {\n        var viewNode = renderEmbeddedTemplate(null, this._tView, context, this._renderer, this._queries);\n        return new EmbeddedViewRef(viewNode, this._tView.template, context);\n    };\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nfunction defineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var pipeTypes = componentDefinition.pipes;\n    var directiveTypes = componentDefinition.directives;\n    var def = {\n        type: type,\n        diPublic: null,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || null,\n        hostBindings: componentDefinition.hostBindings || null,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs),\n        outputs: invertObject(componentDefinition.outputs),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n        directiveDefs: directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null,\n        pipeDefs: pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null,\n        selectors: componentDefinition.selectors\n    };\n    var feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\nfunction extractDirectiveDef(type) {\n    var def = type.ngComponentDef || type.ngDirectiveDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    var def = type.ngPipeDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return def;\n}\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * Creates an NgOnChangesFeature function for a component's features list.\n *\n * It accepts an optional map of minified input property names to original property names,\n * if any input properties have a public alias.\n *\n * The NgOnChangesFeature function that is returned decorates a component with support for\n * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature({name: 'name'})]\n * });\n * ```\n *\n * @param inputPropertyNames Map of input property names, if they are aliased\n * @returns DirectiveDefFeature\n */\nfunction NgOnChangesFeature(inputPropertyNames) {\n    return function (definition) {\n        var inputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (pubKey) {\n            var minKey = inputs[pubKey];\n            var propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n            var privateMinKey = PRIVATE_PREFIX + minKey;\n            var originalProperty = Object.getOwnPropertyDescriptor(proto, minKey);\n            var getter = originalProperty && originalProperty.get;\n            var setter = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minKey, {\n                get: getter ||\n                    (setter ? undefined : function () { return this[privateMinKey]; }),\n                set: function (value) {\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges = {}, writable: true });\n                    }\n                    var isFirstChange = !this.hasOwnProperty(privateMinKey);\n                    var currentChange = simpleChanges[propertyName];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[propertyName] =\n                            new SimpleChange(this[privateMinKey], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey, { value: value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey] = value;\n                    }\n                    setter && setter.call(this, value);\n                }\n            });\n        };\n        for (var pubKey in inputs) {\n            _loop_1(pubKey);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    };\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            delegateHook && delegateHook.apply(this);\n        };\n    }\n}\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\nvar EMPTY$1 = {};\n/** Swaps the keys and values of an object. */\nfunction invertObject(obj) {\n    if (obj == null)\n        return EMPTY$1;\n    var newObj = {};\n    for (var minifiedKey in obj) {\n        newObj[obj[minifiedKey]] = minifiedKey;\n    }\n    return newObj;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = defineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nfunction definePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$1 = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\nvar ComponentFactory$1 = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\nvar ComponentFactoryResolver$1 = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef$1 = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * @experimental\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * @experimental\n */\n\n(function (RendererStyleFlags2) {\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n/**\n * @experimental\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ComponentFactoryResolver$$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactoryResolver$$1, _super);\n    function ComponentFactoryResolver$$1() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n        ngDevMode && assertComponentType(component);\n        var componentDef = component.ngComponentDef;\n        return new ComponentFactory$$1(componentDef);\n    };\n    return ComponentFactoryResolver$$1;\n}(ComponentFactoryResolver$1));\nfunction toRefArray(map) {\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/**\n * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n */\nvar ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nvar SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nvar ComponentFactory$$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactory$$1, _super);\n    function ComponentFactory$$1(componentDef) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.componentType = componentDef.type;\n        _this.selector = componentDef.selectors[0][0];\n        _this.ngContentSelectors = [];\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n        ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n        var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n        var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n        // The first index of the first selector is the tag name.\n        var componentTag = this.componentDef.selectors[0][0];\n        var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n        // Create the root view. Uses empty TView and ContentTemplate.\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n        // rootView is the parent when bootstrapping\n        var oldView = enterView(rootView, null);\n        var component;\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, this.componentDef);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        }\n        finally {\n            enterView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        // TODO(misko): this is the wrong injector here.\n        return new ComponentRef$$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n    };\n    return ComponentFactory$$1;\n}(ComponentFactory$1));\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$$1 = /** @class */ (function (_super) {\n    __extends(ComponentRef$$1, _super);\n    function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n        var _this = _super.call(this) || this;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n         * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n         * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n         * given component won't work (as these are always called at the level above a component).\n         *\n         * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n         * component instance. So passing in the root view (1 level above the component) is sufficient.\n         * We might  want to think about creating a fake component for the top level? Or overwrite\n         * detectChanges with a function that calls tickRootContext? */\n        _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n        _this.injector = injector;\n        _this.location = new ElementRef$1(hostNode);\n        _this.componentType = componentType;\n        return _this;\n    }\n    ComponentRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    ComponentRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return ComponentRef$$1;\n}(ComponentRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n *\n */\nvar NgModuleRef$1 = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @experimental\n */\nvar NgModuleFactory$1 = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver$1,\n    useFactory: function () { return new ComponentFactoryResolver$$1(); },\n    deps: [],\n};\nvar NgModuleRef$$1 = /** @class */ (function (_super) {\n    __extends(NgModuleRef$$1, _super);\n    function NgModuleRef$$1(ngModuleType, parentInjector) {\n        var _this = _super.call(this) || this;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.destroyCbs = [];\n        var ngModuleDef = ngModuleType.ngModuleDef;\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        _this._bootstrapComponents = ngModuleDef.bootstrap;\n        var additionalProviders = [\n            COMPONENT_FACTORY_RESOLVER, {\n                provide: NgModuleRef$1,\n                useValue: _this,\n            }\n        ];\n        _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n        _this.instance = _this.injector.get(ngModuleType);\n        _this.componentFactoryResolver = new ComponentFactoryResolver$$1();\n        return _this;\n    }\n    NgModuleRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    NgModuleRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return NgModuleRef$$1;\n}(NgModuleRef$1));\nvar NgModuleFactory$$1 = /** @class */ (function (_super) {\n    __extends(NgModuleFactory$$1, _super);\n    function NgModuleFactory$$1(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        return _this;\n    }\n    NgModuleFactory$$1.prototype.create = function (parentInjector) {\n        return new NgModuleRef$$1(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory$$1;\n}(NgModuleFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param pureFn Function that returns a value\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = getCreationMode() ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated(exp) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated2(exp1, exp2);\n    var value = bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    var value = bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = false;\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    var tView = getTView();\n    var pipeDef;\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[adjustedIndex];\n    }\n    var pipeInstance = pipeDef.factory();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nfunction pipeBindV(index, slotOffset, values) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\nfunction isPure(index) {\n    return getTView().data[index + HEADER_OFFSET].pure;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * @usageNotes\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof rxjs.Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(rxjs.Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n        // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n        // mutate parent.\n        if (descend) {\n            this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    LQueries_.prototype.child = function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    };\n    LQueries_.prototype.container = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.createView = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.insertView = function (index) {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    };\n    LQueries_.prototype.addNode = function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    LQueries_.prototype.removeView = function () {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    };\n    return LQueries_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param node Node on which directives are present.\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node, type) {\n    var defs = node.view[TVIEW].directives;\n    var flags = node.tNode.flags;\n    var count = flags & 4095;\n    var start = flags >> 13;\n    var end = start + count;\n    for (var i = start; i < end; i++) {\n        var def = defs[i];\n        if (def.type === type && def.diPublic) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        var matchingIdx = getIdxOfMatchingDirective(node, read);\n        if (matchingIdx !== null) {\n            return node.view[DIRECTIVES][matchingIdx];\n        }\n    }\n    return null;\n}\nfunction add(query, node) {\n    var nodeInjector = getOrCreateNodeInjectorForNode(node);\n    while (query) {\n        var predicate = query.predicate;\n        var type = predicate.type;\n        if (type) {\n            var directiveIdx = getIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                // a node is matching a predicate - determine what to read\n                // if read token and / or strategy is not specified, use type as read token\n                var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            var selector = predicate.selector;\n            for (var i = 0; i < selector.length; i++) {\n                var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\nfunction createPredicate(predicate, read) {\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : predicate,\n        selector: isArray ? predicate : null,\n        read: read\n    };\n}\nfunction createQuery(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: queryList._valuesTree,\n        containerValues: null\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /** @internal */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList_.prototype.filter = function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList_.prototype.find = function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList_.prototype.reduce = function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList_.prototype.some = function (fn) {\n        return this._values.some(fn);\n    };\n    QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n    QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n    QueryList_.prototype.toString = function () { return this._values.toString(); };\n    QueryList_.prototype.reset = function (res) {\n        this._values = flatten(res);\n        this.dirty = false;\n    };\n    QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    QueryList_.prototype.setDirty = function () { this.dirty = true; };\n    QueryList_.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList = QueryList_;\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var queryList = new QueryList();\n    var queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(null, queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nfunction queryRefresh(queryList) {\n    var queryListImpl = queryList;\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nvar angularCoreEnv = {\n    'ÉµdefineComponent': defineComponent,\n    'ÉµdefineDirective': defineDirective,\n    'defineInjectable': defineInjectable,\n    'ÉµdefineNgModule': defineNgModule,\n    'ÉµdirectiveInject': directiveInject,\n    'inject': inject,\n    'ÉµinjectAttribute': injectAttribute,\n    'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n    'ÉµinjectElementRef': injectElementRef,\n    'ÉµinjectTemplateRef': injectTemplateRef,\n    'ÉµinjectViewContainerRef': injectViewContainerRef,\n    'ÉµNgOnChangesFeature': NgOnChangesFeature,\n    'Éµa': elementAttribute,\n    'Éµb': bind,\n    'ÉµC': container,\n    'ÉµcR': containerRefreshStart,\n    'Éµcr': containerRefreshEnd,\n    'Éµd': loadDirective,\n    'ÉµNH': namespaceHTML,\n    'ÉµNM': namespaceMathML,\n    'ÉµNS': namespaceSVG,\n    'ÉµE': elementStart,\n    'Éµe': elementEnd,\n    'ÉµEe': element,\n    'Éµf0': pureFunction0,\n    'Éµf1': pureFunction1,\n    'Éµf2': pureFunction2,\n    'Éµf3': pureFunction3,\n    'Éµf4': pureFunction4,\n    'Éµf5': pureFunction5,\n    'Éµf6': pureFunction6,\n    'Éµf7': pureFunction7,\n    'Éµf8': pureFunction8,\n    'ÉµfV': pureFunctionV,\n    'Éµi1': interpolation1,\n    'Éµi2': interpolation2,\n    'Éµi3': interpolation3,\n    'Éµi4': interpolation4,\n    'Éµi5': interpolation5,\n    'Éµi6': interpolation6,\n    'Éµi7': interpolation7,\n    'Éµi8': interpolation8,\n    'Éµk': elementClass,\n    'Éµkn': elementClassNamed,\n    'ÉµL': listener,\n    'Éµld': load,\n    'Éµp': elementProperty,\n    'Éµpb1': pipeBind1,\n    'Éµpb2': pipeBind2,\n    'Éµpb3': pipeBind3,\n    'Éµpb4': pipeBind4,\n    'ÉµpbV': pipeBindV,\n    'ÉµQ': query,\n    'ÉµqR': queryRefresh,\n    'Éµs': elementStyle,\n    'Éµsn': elementStyleNamed,\n    'Éµst': store,\n    'ÉµT': text,\n    'Éµt': textBinding,\n    'ÉµV': embeddedViewStart,\n    'Éµv': embeddedViewEnd,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TARGET = {};\nvar NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\nvar NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\nvar NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\nvar NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ARRAY$3 = [];\nfunction compileNgModule$1(type, ngModule) {\n    var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n    var def = null;\n    Object.defineProperty(type, NG_MODULE_DEF, {\n        get: function () {\n            if (def === null) {\n                var meta = {\n                    type: wrap(type),\n                    bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                    declarations: declarations.map(wrap),\n                    imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                    exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                    emitInline: true,\n                };\n                var res = compiler.compileNgModule(meta);\n                def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n            }\n            return def;\n        },\n    });\n    declarations.forEach(function (declaration) {\n        // Some declared components may be compiled asynchronously, and thus may not have their\n        // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n        // the `ngSelectorScope` property of the declared type.\n        if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n            // An `ngComponentDef` field exists - go ahead and patch the component directly.\n            patchComponentDefWithScope(declaration.ngComponentDef, type);\n        }\n        else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n            // Set `ngSelectorScope` for future reference when the component compilation finishes.\n            declaration.ngSelectorScope = type;\n        }\n    });\n}\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nfunction patchComponentDefWithScope(componentDef, module) {\n    componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n        .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n        .filter(function (def) { return !!def; }); };\n    componentDef.pipeDefs = function () {\n        return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n    };\n}\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n */\nfunction transitiveScopesFor(moduleType) {\n    if (!isNgModule(moduleType)) {\n        throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n    }\n    var def = moduleType.ngModuleDef;\n    if (def.transitiveCompileScopes !== null) {\n        return def.transitiveCompileScopes;\n    }\n    var scopes = {\n        compilation: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n        exported: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n    };\n    def.declarations.forEach(function (declared) {\n        var declaredWithDefs = declared;\n        if (declaredWithDefs.ngPipeDef !== undefined) {\n            scopes.compilation.pipes.add(declared);\n        }\n        else {\n            // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n            // had its template compiled yet. In either case, it gets added to the compilation's\n            // directives.\n            scopes.compilation.directives.add(declared);\n        }\n    });\n    def.imports.forEach(function (imported) {\n        var importedTyped = imported;\n        if (!isNgModule(importedTyped)) {\n            throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n        }\n        // When this module imports another, the imported module's exported directives and pipes are\n        // added to the compilation scope of this module.\n        var importedScope = transitiveScopesFor(importedTyped);\n        importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n        importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n    });\n    def.exports.forEach(function (exported) {\n        var exportedTyped = exported;\n        // Either the type is a module, a pipe, or a component/directive (which may not have an\n        // ngComponentDef as it might be compiled asynchronously).\n        if (isNgModule(exportedTyped)) {\n            // When this module exports another, the exported module's exported directives and pipes are\n            // added to both the compilation and exported scopes of this module.\n            var exportedScope = transitiveScopesFor(exportedTyped);\n            exportedScope.exported.directives.forEach(function (entry) {\n                scopes.compilation.directives.add(entry);\n                scopes.exported.directives.add(entry);\n            });\n            exportedScope.exported.pipes.forEach(function (entry) {\n                scopes.compilation.pipes.add(entry);\n                scopes.exported.pipes.add(entry);\n            });\n        }\n        else if (exportedTyped.ngPipeDef !== undefined) {\n            scopes.exported.pipes.add(exportedTyped);\n        }\n        else {\n            scopes.exported.directives.add(exportedTyped);\n        }\n    });\n    def.transitiveCompileScopes = scopes;\n    return scopes;\n}\nfunction flatten$1(values) {\n    var out = [];\n    values.forEach(function (value) {\n        if (Array.isArray(value)) {\n            out.push.apply(out, __spread(flatten$1(value)));\n        }\n        else {\n            out.push(value);\n        }\n    });\n    return out;\n}\nfunction expandModuleWithProviders(value) {\n    if (isModuleWithProviders(value)) {\n        return value.ngModule;\n    }\n    return value;\n}\nfunction wrap(value) {\n    return new compiler.WrappedNodeExpr(value);\n}\nfunction isModuleWithProviders(value) {\n    return value.ngModule !== undefined;\n}\nfunction isNgModule(value) {\n    return value.ngModuleDef !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n *\n */\nvar TemplateRef$1 = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n *\n */\nvar ViewContainerRef$1 = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _reflect = null;\nfunction getReflect() {\n    return (_reflect = _reflect || new ReflectionCapabilities());\n}\nfunction reflectDependencies(type) {\n    return convertDependencies(getReflect().parameters(type));\n}\nfunction convertDependencies(deps) {\n    return deps.map(function (dep) { return reflectDependency(dep); });\n}\nfunction reflectDependency(dep) {\n    var meta = {\n        token: new compiler.LiteralExpr(null),\n        host: false,\n        optional: false,\n        resolved: compiler.R3ResolvedDependencyType.Token,\n        self: false,\n        skipSelf: false,\n    };\n    function setTokenAndResolvedType(token) {\n        if (token === ElementRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n        }\n        else if (token === Injector) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n        }\n        else if (token === TemplateRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n        }\n        else if (token === ViewContainerRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n        }\n        else {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n        }\n        meta.token = new compiler.WrappedNodeExpr(token);\n    }\n    if (Array.isArray(dep)) {\n        if (dep.length === 0) {\n            throw new Error('Dependency array must have arguments.');\n        }\n        for (var j = 0; j < dep.length; j++) {\n            var param = dep[j];\n            if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                meta.optional = true;\n            }\n            else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                meta.skipSelf = true;\n            }\n            else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                meta.self = true;\n            }\n            else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                meta.host = true;\n            }\n            else if (param instanceof Inject) {\n                meta.token = new compiler.WrappedNodeExpr(param.token);\n            }\n            else if (param instanceof Attribute) {\n                if (param.attributeName === undefined) {\n                    throw new Error(\"Attribute name must be defined.\");\n                }\n                meta.token = new compiler.LiteralExpr(param.attributeName);\n                meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n            }\n            else {\n                setTokenAndResolvedType(param);\n            }\n        }\n    }\n    else {\n        setTokenAndResolvedType(dep);\n    }\n    return meta;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _pendingPromises = [];\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will return a `Promise` which will resolve when compilation completes and the component becomes\n * usable.\n */\nfunction compileComponent(type, metadata) {\n    // TODO(alxhub): implement ResourceLoader support for template compilation.\n    if (!metadata.template) {\n        throw new Error('templateUrl not yet supported');\n    }\n    var templateStr = metadata.template;\n    var def = null;\n    Object.defineProperty(type, NG_COMPONENT_DEF, {\n        get: function () {\n            if (def === null) {\n                // The ConstantPool is a requirement of the JIT'er.\n                var constantPool = new compiler.ConstantPool();\n                // Parse the template and check for errors.\n                var template = compiler.parseTemplate(templateStr, \"ng://\" + type.name + \"/template.html\");\n                if (template.errors !== undefined) {\n                    var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                    throw new Error(\"Errors during JIT compilation of template for \" + type.name + \": \" + errors);\n                }\n                // Compile the component metadata, including template, into an expression.\n                // TODO(alxhub): implement inputs, outputs, queries, etc.\n                var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                // If component compilation is async, then the @NgModule annotation which declares the\n                // component may execute and set an ngSelectorScope property on the component type. This\n                // allows the component to patch itself with directiveDefs from the module after it finishes\n                // compiling.\n                if (hasSelectorScope(type)) {\n                    patchComponentDefWithScope(def, type.ngSelectorScope);\n                }\n            }\n            return def;\n        },\n    });\n    return null;\n}\nfunction hasSelectorScope(component) {\n    return component.ngSelectorScope !== undefined;\n}\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nfunction compileDirective(type, directive) {\n    var def = null;\n    Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n        get: function () {\n            if (def === null) {\n                var constantPool = new compiler.ConstantPool();\n                var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n            }\n            return def;\n        },\n    });\n    return null;\n}\n/**\n * A wrapper around `compileComponent` which is intended to be used for the `@Component` decorator.\n *\n * This wrapper keeps track of the `Promise` returned by `compileComponent` and will cause\n * `awaitCurrentlyCompilingComponents` to wait on the compilation to be finished.\n */\nfunction compileComponentDecorator(type, metadata) {\n    var res = compileComponent(type, metadata);\n    if (res !== null) {\n        _pendingPromises.push(res);\n    }\n}\n/**\n * Returns a promise which will await the compilation of any `@Component`s which have been defined\n * since the last time `awaitCurrentlyCompilingComponents` was called.\n */\n\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type, metadata) {\n    // Reflect inputs and outputs.\n    var props = getReflect().propMetadata(type);\n    var inputs = {};\n    var outputs = {};\n    var _loop_1 = function (field) {\n        props[field].forEach(function (ann) {\n            if (isInput(ann)) {\n                inputs[field] = ann.bindingPropertyName || field;\n            }\n            else if (isOutput(ann)) {\n                outputs[field] = ann.bindingPropertyName || field;\n            }\n        });\n    };\n    for (var field in props) {\n        _loop_1(field);\n    }\n    return {\n        name: type.name,\n        type: new compiler.WrappedNodeExpr(type),\n        selector: metadata.selector,\n        deps: reflectDependencies(type),\n        host: {\n            attributes: {},\n            listeners: {},\n            properties: {},\n        },\n        inputs: inputs,\n        outputs: outputs,\n        queries: [],\n        lifecycle: {\n            usesOnChanges: type.prototype.ngOnChanges !== undefined,\n        },\n        typeSourceSpan: null,\n    };\n}\nfunction isInput(value) {\n    return value.ngMetadataName === 'Input';\n}\nfunction isOutput(value) {\n    return value.ngMetadataName === 'Output';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nfunction compileInjectable$1(type, meta) {\n    // TODO(alxhub): handle JIT of bare @Injectable().\n    if (!meta) {\n        return;\n    }\n    var def = null;\n    Object.defineProperty(type, 'ngInjectableDef', {\n        get: function () {\n            if (def === null) {\n                // Check whether the injectable metadata includes a provider specification.\n                var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                    isUseValueProvider(meta) || isUseExistingProvider(meta);\n                var deps = undefined;\n                if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                    deps = reflectDependencies(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    deps = meta.deps && convertDependencies(meta.deps);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    deps = meta.deps && convertDependencies(meta.deps) || [];\n                }\n                // Decide which flavor of factory to generate, based on the provider specified.\n                // Only one of the use* fields should be set.\n                var useClass = undefined;\n                var useFactory = undefined;\n                var useValue = undefined;\n                var useExisting = undefined;\n                if (!hasAProvider) {\n                    // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                    // The deps will have been reflected above, causing the factory to create the class by\n                    // calling\n                    // its constructor with injected deps.\n                    useClass = new compiler.WrappedNodeExpr(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    // The user explicitly specified useClass, and may or may not have provided deps.\n                    useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                }\n                else if (isUseValueProvider(meta)) {\n                    // The user explicitly specified useValue.\n                    useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    // The user explicitly specified useFactory.\n                    useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                }\n                else if (isUseExistingProvider(meta)) {\n                    // The user explicitly specified useExisting.\n                    useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                }\n                else {\n                    // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                    throw new Error(\"Unreachable state.\");\n                }\n                var expression = compiler.compileInjectable({\n                    name: type.name,\n                    type: new compiler.WrappedNodeExpr(type),\n                    providedIn: computeProvidedIn(meta.providedIn),\n                    useClass: useClass,\n                    useFactory: useFactory,\n                    useValue: useValue,\n                    useExisting: useExisting,\n                    deps: deps,\n                }).expression;\n                def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n            }\n            return def;\n        },\n    });\n}\nfunction computeProvidedIn(providedIn) {\n    if (providedIn == null || typeof providedIn === 'string') {\n        return new compiler.LiteralExpr(providedIn);\n    }\n    else {\n        return new compiler.WrappedNodeExpr(providedIn);\n    }\n}\nfunction isUseClassProvider(meta) {\n    return meta.useClass !== undefined;\n}\nvar GET_PROPERTY_NAME$2 = {};\nvar USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\nfunction isUseValueProvider(meta) {\n    return USE_VALUE$2 in meta;\n}\nfunction isUseFactoryProvider(meta) {\n    return meta.useFactory !== undefined;\n}\nfunction isUseExistingProvider(meta) {\n    return meta.useExisting !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ivyEnabled = true;\nvar R3_COMPILE_COMPONENT = compileComponentDecorator;\nvar R3_COMPILE_DIRECTIVE = compileDirective;\nvar R3_COMPILE_INJECTABLE = compileInjectable$1;\nvar R3_COMPILE_NGMODULE = compileNgModule$1;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive decorator and metadata.\n *\n * @Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n/**\n * Component decorator and metadata.\n *\n * @Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n}, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n/**\n * Pipe decorator and metadata.\n *\n * Use the `@Pipe` annotation to declare that a given class is a pipe. A pipe\n * class must also implement `PipeTransform` interface.\n *\n * To use the pipe include a reference to the pipe class in\n * `NgModule.declarations`.\n *\n * @Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Input decorator and metadata.\n *\n * @Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Output decorator and metadata.\n *\n * @Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * HostBinding decorator and metadata.\n *\n * @Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * HostListener decorator and metadata.\n *\n * @Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n *\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\nvar VERSION = new Version('6.1.0-beta.1+26.sha-6d246d6');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus = __decorate([\n        Injectable(),\n        __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n        __metadata(\"design:paramtypes\", [Array])\n    ], ApplicationInitStatus);\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console = __decorate([\n        Injectable()\n    ], Console);\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n    Compiler = __decorate([\n        Injectable()\n    ], Compiler);\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = _this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                isPeriodic: t.data.isPeriodic,\n                delay: t.data.delay,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                // Added by Zones for XHRs\n                // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                xhr: t.data.target\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone])\n    ], Testability);\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], TestabilityRegistry);\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @experimental\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n *\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var compilerFactory = this.injector.get(CompilerFactory);\n        var options = optionsReducer({}, compilerOptions);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    PlatformRef.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Injector])\n    ], PlatformRef);\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new rxjs.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new rxjs.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n    }\n    ApplicationRef_1 = ApplicationRef;\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * @usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory$1) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef$1);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    ApplicationRef.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef_1._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    ApplicationRef.prototype.attachView = function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    ApplicationRef.prototype.detachView = function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef = ApplicationRef_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n            ErrorHandler,\n            ComponentFactoryResolver$1,\n            ApplicationInitStatus])\n    ], ApplicationRef);\n    return ApplicationRef;\n    var ApplicationRef_1;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @experimental\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @experimental\n */\nfunction getModuleFactory(id) {\n    var factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n */\nvar QueryList$1 = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten$2(res);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    QueryList.prototype.setDirty = function () { this.dirty = true; };\n    /** internal */\n    QueryList.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @experimental\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader = __decorate([\n        Injectable(),\n        __param(1, Optional()),\n        __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n    ], SystemJsNgModuleLoader);\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef$1 = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * @usageNotes\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two `TemplateRef`s:\n *\n * Outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate `TemplateRef`s.\n *\n * The outer/inner `TemplateRef`s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @experimental\n */\nvar EmbeddedViewRef$1 = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: function () {\n            return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @experimental\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * @experimental\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\n\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\nvar APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver$1, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * This module includes the providers of @angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * @experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule = __decorate([\n        NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n        __metadata(\"design:paramtypes\", [ApplicationRef])\n    ], ApplicationModule);\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        var body = xhr.response.body;\n        body.removeChild(body.firstChild);\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var res = {};\n    try {\n        for (var _a = __values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var t = _b.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n    var e_1, _c;\n}\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var res = {};\n    try {\n        for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n    var e_2, _a;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = el.firstChild;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    };\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n *\n */\n\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(exports.SecurityContext || (exports.SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var ns = null;\n    var name = null;\n    if (namespaceAndName) {\n        _b = __read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = undefined;\n        var suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = def.element;\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode$$1 = elData.renderElement;\n    var name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef$1);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance$1(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey$1:\n            case INJECTORRefTokenKey$1:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        if (providerDef) {\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance$1(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n            var injectableDef = depDef.token.ngInjectableDef;\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance$1(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = this._inputs;\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory$1));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef$1));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef$1(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = view.parent;\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef$1);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef$1));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        var flags = 0;\n        if (injectFlags & 4 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver$1); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef$1);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\nvar TemplateRefTokenKey = tokenKey(TemplateRef$1);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n            view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey$$1];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery$1() {\n    return new QueryList$1();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, __spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode$$1;\n    var renderer = view.renderer;\n    renderNode$$1 = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery$1();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = nodeDef.provider;\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = nodeDef.parent;\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n}\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, __spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, __spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(getDebugNode(node));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = getDebugNode(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var el = this.delegate.selectRootElement(selectorOrNode);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        var def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (unsafeResourceUrl instanceof String &&\n        unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, 'Html');\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, 'Style');\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, 'Script');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, 'Url');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.defineInjectable = defineInjectable;\nexports.defineInjector = defineInjector;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injectable = Injectable;\nexports.inject = inject;\nexports.INJECTOR = INJECTOR;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.createInjector = createInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory$1;\nexports.ComponentRef = ComponentRef$1;\nexports.ComponentFactoryResolver = ComponentFactoryResolver$1;\nexports.ElementRef = ElementRef$1;\nexports.NgModuleFactory = NgModuleFactory$1;\nexports.NgModuleRef = NgModuleRef$1;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList$1;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef$1;\nexports.ViewContainerRef = ViewContainerRef$1;\nexports.EmbeddedViewRef = EmbeddedViewRef$1;\nexports.ViewRef = ViewRef$1;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\nexports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\nexports.ÉµdevModeEqual = devModeEqual;\nexports.ÉµisListLikeIterable = isListLikeIterable;\nexports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ÉµConsole = Console;\nexports.Éµinject = inject;\nexports.ÉµsetCurrentInjector = setCurrentInjector;\nexports.ÉµAPP_ROOT = APP_ROOT;\nexports.ÉµivyEnabled = ivyEnabled;\nexports.ÉµComponentFactory = ComponentFactory$1;\nexports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ÉµReflectionCapabilities = ReflectionCapabilities;\nexports.ÉµRenderDebugInfo = RenderDebugInfo;\nexports.Éµ_sanitizeHtml = _sanitizeHtml;\nexports.Éµ_sanitizeStyle = _sanitizeStyle;\nexports.Éµ_sanitizeUrl = _sanitizeUrl;\nexports.Éµglobal = _global;\nexports.ÉµlooseIdentical = looseIdentical;\nexports.Éµstringify = stringify;\nexports.ÉµmakeDecorator = makeDecorator;\nexports.ÉµisObservable = isObservable;\nexports.ÉµisPromise = isPromise;\nexports.ÉµclearOverrides = clearOverrides;\nexports.ÉµoverrideComponentView = overrideComponentView;\nexports.ÉµoverrideProvider = overrideProvider;\nexports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ÉµdefineComponent = defineComponent;\nexports.ÉµdefineDirective = defineDirective;\nexports.ÉµdefinePipe = definePipe;\nexports.ÉµdetectChanges = detectChanges;\nexports.ÉµrenderComponent = renderComponent;\nexports.ÉµdirectiveInject = directiveInject;\nexports.ÉµinjectTemplateRef = injectTemplateRef;\nexports.ÉµinjectViewContainerRef = injectViewContainerRef;\nexports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\nexports.ÉµinjectAttribute = injectAttribute;\nexports.ÉµPublicFeature = PublicFeature;\nexports.ÉµNgOnChangesFeature = NgOnChangesFeature;\nexports.ÉµmarkDirty = markDirty;\nexports.ÉµNC = NO_CHANGE;\nexports.ÉµC = container;\nexports.ÉµE = elementStart;\nexports.ÉµNH = namespaceHTML;\nexports.ÉµNM = namespaceMathML;\nexports.ÉµNS = namespaceSVG;\nexports.ÉµEe = element;\nexports.ÉµL = listener;\nexports.ÉµT = text;\nexports.ÉµV = embeddedViewStart;\nexports.ÉµQ = query;\nexports.Éµd = loadDirective;\nexports.ÉµP = projection;\nexports.Éµb = bind;\nexports.Éµi1 = interpolation1;\nexports.Éµi2 = interpolation2;\nexports.Éµi3 = interpolation3;\nexports.Éµi4 = interpolation4;\nexports.Éµi5 = interpolation5;\nexports.Éµi6 = interpolation6;\nexports.Éµi7 = interpolation7;\nexports.Éµi8 = interpolation8;\nexports.ÉµiV = interpolationV;\nexports.Éµpb1 = pipeBind1;\nexports.Éµpb2 = pipeBind2;\nexports.Éµpb3 = pipeBind3;\nexports.Éµpb4 = pipeBind4;\nexports.ÉµpbV = pipeBindV;\nexports.Éµf0 = pureFunction0;\nexports.Éµf1 = pureFunction1;\nexports.Éµf2 = pureFunction2;\nexports.Éµf3 = pureFunction3;\nexports.Éµf4 = pureFunction4;\nexports.Éµf5 = pureFunction5;\nexports.Éµf6 = pureFunction6;\nexports.Éµf7 = pureFunction7;\nexports.Éµf8 = pureFunction8;\nexports.ÉµfV = pureFunctionV;\nexports.ÉµcR = containerRefreshStart;\nexports.Éµcr = containerRefreshEnd;\nexports.ÉµqR = queryRefresh;\nexports.Éµe = elementEnd;\nexports.Éµp = elementProperty;\nexports.ÉµpD = projectionDef;\nexports.ÉµrS = reserveSlots;\nexports.Éµa = elementAttribute;\nexports.Éµs = elementStyle;\nexports.Éµsn = elementStyleNamed;\nexports.Éµk = elementClass;\nexports.Éµkn = elementClassNamed;\nexports.Éµt = textBinding;\nexports.Éµv = embeddedViewEnd;\nexports.Éµst = store;\nexports.Éµld = load;\nexports.ÉµPp = pipe;\nexports.ÉµwhenRendered = whenRendered;\nexports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\nexports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\nexports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\nexports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\nexports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\nexports.ÉµsanitizeHtml = sanitizeHtml;\nexports.ÉµsanitizeStyle = sanitizeStyle;\nexports.ÉµsanitizeUrl = sanitizeUrl;\nexports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\nexports.ÉµregisterModuleFactory = registerModuleFactory;\nexports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$1;\nexports.ÉµEMPTY_MAP = EMPTY_MAP;\nexports.Éµand = anchorDef;\nexports.Éµccf = createComponentFactory;\nexports.Éµcmf = createNgModuleFactory;\nexports.Éµcrt = createRendererType2;\nexports.Éµdid = directiveDef;\nexports.Éµeld = elementDef;\nexports.ÉµelementEventFullName = elementEventFullName;\nexports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ÉµinlineInterpolate = inlineInterpolate;\nexports.Éµinterpolate = interpolate;\nexports.Éµmod = moduleDef;\nexports.Éµmpd = moduleProvideDef;\nexports.Éµncd = ngContentDef;\nexports.Éµnov = nodeValue;\nexports.Éµpid = pipeDef;\nexports.Éµprd = providerDef;\nexports.Éµpad = pureArrayDef;\nexports.Éµpod = pureObjectDef;\nexports.Éµppd = purePipeDef;\nexports.Éµqud = queryDef;\nexports.Éµted = textDef;\nexports.Éµunv = unwrapValue;\nexports.Éµvid = viewDef;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}