{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ΔdefineInjectable","opts","providedIn","undefined","defineInjectable","ΔdefineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","Δinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ΔgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ViewEncapsulation","Set","componentNeedsResolution","old","response","EMPTY_OBJ","EMPTY_ARRAY","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","ΔresolveWindow","element","ownerDocument","defaultView","ΔresolveDocument","ΔresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","throwError","_renderCompCount","ΔdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ΔsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ΔdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ΔsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ΔdefineBase","baseDefinition","ΔdefineDirective","ΔdefinePipe","pipeDef","pure","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","NATIVE","VIEWS","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ΔenableBindings","ΔdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ΔrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","getSelectedIndex","_currentNamespace","ΔnamespaceSVG","ΔnamespaceMathML","ΔnamespaceHTML","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","destroy","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ΔgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","ELEMENT_MARKER","COMMENT_MARKER","toDebug","debug","assertDefined","actual","toHtml","includeChildren","node","isTextNode","nodeType","Node","TEXT_NODE","outerHTML","textContent","split","innerHTML","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","html","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","bindingIndex","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","throwMultipleComponentError","tagName","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","attrValue","NO_CHANGE","enqueueHostInstruction","priority","instructionFn","instructionFnArgs","buffer","findNextInsertionIndex","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","isMultiValueCacheHit","ignoreAllStyleUpdates","readCachedMapValue","classesPlayerBuilder","ClassAndStylePlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","playerBuildersAreDirty","classesPlayerBuilderIndex","hasPlayerBuilderChanged","setPlayerBuilder","stylesPlayerBuilderIndex","multiStylesStartIndex","getMultiStylesStartIndex","multiClassesStartIndex","getMultiClassesStartIndex","multiClassesEndIndex","totalNewEntries","patchStylingMapIntoContext","setContextPlayersDirty","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","updateClassProp","offset","input","forceOverride","updateSingleStylingValue","updateStyleProp","isClassBased","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","value_1","currPlayerIndex","newIndex","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","store","DashCase","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","a","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","keyValues","dirs","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","match","toLowerCase","registerMultiMapEntry","count","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","current","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElement","createElementNS","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","setNodeStylingTemplate","attrsStartIndex","stylingAttrsStartIndex","executeContentQueries","isContentQueryHost","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tParent","propertyMetadataStartIndex","propertyMetadataEndIndex","initialInputs","tViews","projectionNext","projection","onElementCreationFns","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","parent_2","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","lastBindingIndex","CLEAN_PROMISE","initializeTNodeInputs","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","setInputsForProperty","applyOnCreateInstructions","fns","ΔallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","markDirty","getLContainer","embeddedView","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","e_1","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","head","head_1","head_1_1","e_1_1","return","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","appendChild","childEl","childTNode","e_2","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","e_2_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","removeChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","Δcontainer","containerInternal","addTContainerToQueries","Δtemplate","tContainerNode","ΔcontainerRefreshStart","ΔcontainerRefreshEnd","nextIndex","addNode","comment","createComment","Δreference","getContextLView","Δload","ΔdirectiveInject","ΔinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","accumulatedClasses","trim","accumulatedStyles","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","warn","sanitizeSrcset","srcset","tagSet","tags","_b","_c","merge","sets","sets_1","sets_1_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","traverseContent","startElement","chars","nodeValue","endElement","checkClobberedElement","nodeName","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ΔsanitizeHtml","getSanitizer","sanitize","HTML","ΔsanitizeStyle","unsafeStyle","STYLE","ΔsanitizeUrl","unsafeUrl","URL","ΔsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ΔsanitizeScript","unsafeScript","SCRIPT","ΔsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ΔdefaultStyleSanitizer","ΔelementStyling","classBindingNames","styleBindingNames","initElementStyling","ΔelementHostStyling","directiveStylingIndex","getActiveDirectiveStylingIndex","registerHostDirective","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","staticModeOnly","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","ΔelementStyleProp","styleIndex","valueToAdd","resolveStylePropValue","ΔelementHostStyleProp","hostElementIndex","ΔelementClassProp","classIndex","booleanOrNull","ΔelementHostClassProp","ΔelementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","ΔelementHostStylingMap","ΔelementStylingApply","elementStylingApplyInternal","ΔelementHostStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","allowFlush","flushQueue","isContextDirty","flushPlayerBuilders","multiStartIndex","directiveIndex_1","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","ΔelementStart","initialStylesIndex","initialClassesIndex","getElementDepthCount","increaseElementDepthCount","inputData","currentQueries","clone","ΔelementEnd","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","Δelement","ΔelementAttribute","strValue","ΔelementHostAttrs","ΔelementContainerStart","ΔelementContainerEnd","ΔembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","ΔembeddedViewEnd","viewHost","ΔgetCurrentView","isPromise","isObservable","subscribe","Δlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ΔcomponentHostSyntheticListener","loadRendererFn","lCleanupIndex","wrapListener","cleanupFn","listen","propsLength","subscription","idx","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","preventDefault","returnValue","ΔnextContext","level","nextContextImpl","walkUpViews","nestingLevel","ΔprojectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","Δprojection","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","Δbind","ΔelementProperty","nativeOnly","elementPropertyInternal","ΔcomponentHostSyntheticProperty","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","bindingMetadata","ΔinterpolationV","Δinterpolation1","v0","Δinterpolation2","i0","v1","Δinterpolation3","i1","v2","Δinterpolation4","i2","v3","Δinterpolation5","i3","v4","Δinterpolation6","i4","v5","Δinterpolation7","i5","v6","Δinterpolation8","i6","v7","Δselect","Δtext","textNative","ΔtextBinding","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ΔNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ΔInheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ΔProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","addAllToArray","items","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","Δi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","cursor","Δi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","Δi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","Δi18n","Δi18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","Δi18nExp","expression","Δi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","ΔpureFunction0","slotOffset","pureFn","thisArg","ΔpureFunction1","exp","ΔpureFunction2","ΔpureFunction3","ΔpureFunction4","ΔpureFunction5","exp5","ΔpureFunction6","exp6","ΔpureFunction7","exp7","ΔpureFunction8","exp8","ΔpureFunctionV","exps","Δpipe","pipeName","getPipeDef$1","pipeInstance","ΔpipeBind1","unwrapValue$1","isPure","transform","ΔpipeBind2","ΔpipeBind3","ΔpipeBind4","ΔpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","flatten","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","ΔqueryRefresh","queryListImpl","ΔstaticViewQuery","ΔviewQuery","ΔloadViewQuery","ΔcontentQuery","contentQuery","tViewContentQueries","ΔstaticContentQuery","ΔloadContentQuery","ΔtemplateRefExtractor","angularCoreEnv","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$3","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesInheritance","part","viewQueries","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.11+59.sha-39bfd1a.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function ΔdefineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ΔdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ΔdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ΔdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function Δinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use Δinject instead.\n     * @publicApi\n     */\n    var inject = Δinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(Δinject(type, flags));\n            }\n            else {\n                args.push(Δinject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ΔdefineInjectable': ΔdefineInjectable,\n        'ΔdefineInjector': ΔdefineInjector,\n        'Δinject': Δinject,\n        'ΔgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ΔdefineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'any',\n            factory: function () { return Δinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n            stylingMap: 0,\n            stylingMapCacheMiss: 0,\n            stylingProp: 0,\n            stylingPropCacheMiss: 0,\n            stylingApply: 0,\n            stylingApplyCacheMiss: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     *\n     * @publicApi\n     */\n    function ΔresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @publicApi\n     */\n    function ΔresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @publicApi\n     */\n    function ΔresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @publicApi\n     */\n    function ΔdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @publicApi\n     */\n    function ΔsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @publicApi\n     */\n    function ΔdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @publicApi\n     */\n    function ΔsetNgModuleScope(type, scope) {\n        var ngModuleDef = getNgModuleDef(type, true);\n        ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n        ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n        ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ΔdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @publicApi\n     */\n    function ΔdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ΔdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ΔdefineDirective = ΔdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @publicApi\n     */\n    function ΔdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    var VIEWS = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ΔdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ΔenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @publicApi\n     */\n    function ΔenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ΔdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ΔenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @publicApi\n     */\n    function ΔdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @publicApi\n     */\n    function ΔrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        ngDevMode &&\n            assertGreaterThan(_selectedIndex, -1, 'select() should be called prior to retrieving the selected index');\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @publicApi\n     */\n    function ΔnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @publicApi\n     */\n    function ΔnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements no `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @publicApi\n     */\n    function ΔnamespaceHTML() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStylingMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @publicApi\n     */\n    function ΔgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @publicApi\n     */\n    function ΔgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ΔgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer[VIEWS].map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /*\n     * This file contains the logic to defer all hostBindings-related styling code to run\n     * at a later point, instead of immediately (as is the case with how template-level\n     * styling instructions are run).\n     *\n     * Certain styling instructions, present within directives, components and sub-classed\n     * directives, are evaluated at different points (depending on priority) and will therefore\n     * not be applied to the styling context of an element immediately. They are instead\n     * designed to be applied just before styling is applied to an element.\n     *\n     * (The priority for when certain host-related styling operations are executed is discussed\n     * more within `interfaces/styling.ts`.)\n     */\n    function registerHostDirective(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (!buffer) {\n            buffer = context[8 /* HostInstructionsQueue */] = [DEFAULT_TEMPLATE_DIRECTIVE_INDEX];\n        }\n        buffer[0 /* LastRegisteredDirectiveIndexPosition */] = directiveIndex;\n    }\n    /**\n     * Queues a styling instruction to be run just before `renderStyling()` is executed.\n     */\n    function enqueueHostInstruction(context, priority, instructionFn, instructionFnArgs) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        var index = findNextInsertionIndex(buffer, priority);\n        buffer.splice(index, 0, priority, instructionFn, instructionFnArgs);\n    }\n    /**\n     * Figures out where exactly to to insert the next host instruction queue entry.\n     */\n    function findNextInsertionIndex(buffer, priority) {\n        for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n            var p = buffer[i + 0 /* DirectiveIndexOffset */];\n            if (p > priority) {\n                return i;\n            }\n        }\n        return buffer.length;\n    }\n    /**\n     * Iterates through the host instructions queue (if present within the provided\n     * context) and executes each queued instruction entry.\n     */\n    function flushQueue(context) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n                var fn = buffer[i + 1 /* InstructionFnOffset */];\n                var args = buffer[i + 2 /* ParamsOffset */];\n                fn.apply(void 0, __spread(args));\n            }\n            buffer.length = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Determines whether or not to allow the host instructions queue to be flushed or not.\n     *\n     * Because the hostBindings function code is unaware of the presence of other host bindings\n     * (as well as the template function) then styling is evaluated multiple times per element.\n     * To prevent style and class values from being applied to the element multiple times, a\n     * flush is only allowed when the last directive (the directive that was registered into\n     * the styling context) attempts to render its styling.\n     */\n    function allowFlush(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            return buffer[0 /* LastRegisteredDirectiveIndexPosition */] ===\n                directiveIndex;\n        }\n        return true;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveIndex);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveIndex) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveIndex, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var isNewDirective = findOrPatchDirectiveIntoRegistry(context, directiveIndex, false, styleSanitizer);\n        if (!isNewDirective) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 10 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveIndex, staticModeOnly, styleSanitizer) {\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        var singlePropStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        // this means that the directive has already been registered into the registry\n        if (index < directiveRegistry.length &&\n            directiveRegistry[singlePropStartPosition] >= 0)\n            return false;\n        var singlePropsStartIndex = staticModeOnly ? -1 : context[5 /* SinglePropOffsetPositions */].length;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropsStartIndex, styleSanitizer);\n        return true;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        ngDevMode && ngDevMode.stylingMap++;\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[0 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n        ngDevMode && ngDevMode.stylingMapCacheMiss++;\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, true, directiveIndex, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, false, directiveIndex, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveIndex, forceOverride) {\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        ngDevMode && ngDevMode.stylingProp++;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n            ngDevMode && ngDevMode.stylingPropCacheMiss++;\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var totalPlayersQueued = 0;\n        ngDevMode && ngDevMode.stylingApply++;\n        // this prevents multiple attempts to render style/class values on\n        // the same element...\n        if (allowFlush(context, directiveIndex)) {\n            // all styling instructions present within any hostBindings functions\n            // do not update the context immediately when called. They are instead\n            // queued up and applied to the context right at this point. Why? This\n            // is because Angular evaluates component/directive and directive\n            // sub-class code at different points and it's important that the\n            // styling values are applied to the context in the right order\n            // (see `interfaces/styling.ts` for more information).\n            flushQueue(context);\n            if (isContextDirty(context)) {\n                ngDevMode && ngDevMode.stylingApplyCacheMiss++;\n                // this is here to prevent things like <ng-container [style] [class]>...</ng-container>\n                // or if there are any host style or class bindings present in a directive set on\n                // a container node\n                var native = context[0 /* ElementPosition */];\n                var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n                var multiStartIndex = getMultiStylesStartIndex(context);\n                for (var i = 10 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                    // there is no point in rendering styles that have not changed on screen\n                    if (isDirty(context, i)) {\n                        var flag = getPointers(context, i);\n                        var directiveIndex_1 = getDirectiveIndexFromEntry(context, i);\n                        var prop = getProp(context, i);\n                        var value = getValue(context, i);\n                        var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex_1) : null;\n                        var playerBuilder = getPlayerBuilder(context, i);\n                        var isClassBased = flag & 2 /* Class */ ? true : false;\n                        var isInSingleRegion = i < multiStartIndex;\n                        var valueToApply = value;\n                        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                        // this check implies that a single value was removed and we\n                        // should now defer to a multi value and use that (if set).\n                        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                            // single values ALWAYS have a reference to a multi index\n                            var multiIndex = getMultiOrSingleIndex(flag);\n                            valueToApply = getValue(context, multiIndex);\n                        }\n                        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                        // the initial value will always be a string or null,\n                        // therefore we can safely adopt it in case there's nothing else\n                        // note that this should always be a falsy check since `false` is used\n                        // for both class and style comparisons (styles can't be false and false\n                        // classes are turned off and should therefore defer to their initial values)\n                        // Note that we ignore class-based deferals because otherwise a class can never\n                        // be removed in the case that it exists as true in the initial classes list...\n                        if (!valueExists(valueToApply, isClassBased)) {\n                            valueToApply = getInitialValue(context, flag);\n                        }\n                        // if the first render is true then we do not want to start applying falsy\n                        // values to the DOM element's styling. Otherwise then we know there has\n                        // been a change and even if it's falsy then it's removing something that\n                        // was truthy before.\n                        var doApplyValue = renderer && (isFirstRender ? valueToApply : true);\n                        if (doApplyValue) {\n                            if (isClassBased) {\n                                setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                            }\n                            else {\n                                setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                            }\n                        }\n                        setDirty(context, i, false);\n                    }\n                }\n                if (flushPlayerBuilders) {\n                    var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                    var playerContext = getPlayerContext(context);\n                    var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                    for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                        var builder = playerContext[i];\n                        var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                        var oldPlayer = playerContext[playerInsertionIndex];\n                        if (builder) {\n                            var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                            if (player !== undefined) {\n                                if (player != null) {\n                                    var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                    wasQueued && totalPlayersQueued++;\n                                }\n                                if (oldPlayer) {\n                                    oldPlayer.destroy();\n                                }\n                            }\n                        }\n                        else if (oldPlayer) {\n                            // the player builder has been removed ... therefore we should delete the associated\n                            // player\n                            oldPlayer.destroy();\n                        }\n                    }\n                    setContextPlayersDirty(context, false);\n                }\n                setContextDirty(context, false);\n            }\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 10 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[9 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[9 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[9 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 2 /* Size */) +\n            0 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 2 /* Size */ +\n            1 /* StyleSanitizerOffset */] ||\n            dirs[1 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n    function assertValidDirectiveIndex(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        if (index >= dirs.length ||\n            dirs[index + 0 /* SinglePropValuesIndexOffset */] === -1) {\n            throw new Error('The provided directive is not registered with the styling context');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be\n     * compared to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        setActiveHostElement(currentElementIndex);\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                        instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        // Each directive gets a uniqueId value that is the same for both\n                        // create and update calls when the hostBindings function is called. The\n                        // directive uniqueId is not set anywhere--it is just incremented between\n                        // each hostBindings call and is useful for helping instruction code\n                        // uniquely determine which directive is currently active when executed.\n                        incrementActiveDirectiveId();\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n        setActiveHostElement(null);\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                ΔnamespaceHTML();\n                // Reset the selected index so we can assert that `select` was called later\n                ngDevMode && setSelectedIndex(-1);\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    ΔnamespaceHTML();\n                    // Reset the selected index so we can assert that `select` was called later\n                    ngDevMode && setSelectedIndex(-1);\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        setActiveHostElement(elementIndex);\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                // Each directive gets a uniqueId value that is the same for both\n                // create and update calls when the hostBindings function is called. The\n                // directive uniqueId is not set anywhere--it is just incremented between\n                // each hostBindings call and is useful for helping instruction code\n                // uniquely determine which directive is currently active when executed.\n                incrementActiveDirectiveId();\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n        setActiveHostElement(null);\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            tNode,\n            native,\n            [],\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container = current;\n                for (var i = 0; i < container[VIEWS].length; i++) {\n                    var dynamicViewData = container[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            ΔnamespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            // Reset the selected index so we can assert that `select` was called later\n            ngDevMode && setSelectedIndex(-1);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @publicApi\n     */\n    function ΔallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    if (nodeOrContainer[VIEWS].length) {\n                        currentView = nodeOrContainer[VIEWS][0];\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n            !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @publicApi\n     */\n    function Δcontainer(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @publicApi\n     */\n    function Δtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @publicApi\n     */\n    function ΔcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @publicApi\n     */\n    function ΔcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @publicApi\n     */\n    function Δreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @publicApi\n     */\n    function Δload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ΔdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @publicApi\n     */\n    function ΔinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ΔsanitizeResourceUrl;\n        }\n        return ΔsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ΔdefaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return ΔsanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - elementStyling\n     * - elementStylingMap\n     * - elementStyleProp\n     * - elementClassProp\n     * - elementStylingApply\n     *\n     * Host bindings level styling instructions:\n     * - elementHostStyling\n     * - elementHostStylingMap\n     * - elementHostStyleProp\n     * - elementHostClassProp\n     * - elementHostStylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * @publicApi\n     */\n    function ΔelementStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        // calling the function below ensures that the template's binding values\n        // are applied as the first set of bindings into the context. If any other\n        // styling bindings are set on the same element (by directives and/or\n        // components) then they will be applied at the end of the `elementEnd`\n        // instruction (because directives are created first before styling is\n        // executed for a new element).\n        initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n    }\n    /**\n     * Allocates style and class binding properties on the host element during creation mode\n     * within the host bindings function of a directive or component.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class host bindings on the host element of a directive or\n     * component. Note that this is only used for binding values (see `elementHostAttrs`\n     * to learn how to assign static styling values to the host element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementHostClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementHostStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the provided `directive` and\n     *        will not be used if the same property is assigned in another directive or\n     *        on the element directly.\n     *\n     * @publicApi\n     */\n    function ΔelementHostStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        // despite the binding being applied in a queue (below), the allocation\n        // of the directive into the context happens right away. The reason for\n        // this is to retain the ordering of the directives (which is important\n        // for the prioritization of bindings).\n        allocateOrUpdateDirectiveIntoContext(tNode.stylingTemplate, directiveStylingIndex);\n        var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n        fns.push(function () {\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex);\n            registerHostDirective(tNode.stylingTemplate, directiveStylingIndex);\n        });\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex) {\n        updateContextWithBindings(tNode.stylingTemplate, directiveStylingIndex, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStylingMap` or any static styles that are\n     * present from when the element was created with `elementStyling`).\n     *\n     * Note that the styling element is updated as part of `elementStylingApply`.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStyling`.\n     * @param value New value to write (falsy to remove). Note that if a directive also\n     *        attempts to write to the same binding value (via `elementHostStyleProp`)\n     *        then it will only be able to do so if the binding value assigned via\n     *        `elementStyleProp` is falsy (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @publicApi\n     */\n    function ΔelementStyleProp(index, styleIndex, value, suffix, forceOverride) {\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n    }\n    /**\n     * Update a host style binding value on the host element within a component/directive.\n     *\n     * If the style value is falsy then it will be removed from the host element\n     * (or assigned a different value depending if there are any styles placed\n     * on the same element with `elementHostStylingMap` or any static styles that\n     * are present from when the element was patched with `elementHostStyling`).\n     *\n     * Note that the styling applied to the host element once\n     * `elementHostStylingApply` is called.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementHostStyling`.\n     * @param value New value to write (falsy to remove). The value may or may not\n     *        be applied to the element depending on the template/component/directive\n     *        prioritization (see `interfaces/styling.ts`)\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @publicApi\n     */\n    function ΔelementHostStyleProp(styleIndex, value, suffix, forceOverride) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        var args = [stylingContext, styleIndex, valueToAdd, directiveStylingIndex, forceOverride];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleProp, args);\n    }\n    function resolveStylePropValue(value, suffix) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        return valueToAdd;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementStyling` within the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStyling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * @publicApi\n     */\n    function ΔelementClassProp(index, classIndex, value, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n    }\n    /**\n     * Update a class host binding for a directive's/component's host element within\n     * the host bindings function.\n     *\n     * This instruction is meant to handle the `@HostBinding('class.foo')` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementHostStyling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementHostStlying` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the stylings priority structure.\n     *\n     * @publicApi\n     */\n    function ΔelementHostClassProp(classIndex, value, forceOverride) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        var args = [stylingContext, classIndex, input, directiveStylingIndex, forceOverride];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassProp, args);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literals on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles/classes are applied to the element they will then be updated with\n     * respect to any styles/classes set with `elementStyleProp` or `elementClassProp`. If any\n     * styles or classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `elementStylingApply` is called.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @publicApi\n     */\n    function ΔelementStylingMap(index, classes, styles) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n            classes = NO_CHANGE;\n        }\n        if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            var initialStyles = getInitialClassNameValue(stylingContext);\n            var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n            setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n            styles = NO_CHANGE;\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    /**\n     * Update style and/or class host bindings using object literals on an element within the host\n     * bindings function for a directive/component.\n     *\n     * This instruction is meant to apply styling via the `@HostBinding('style')` and\n     * `@HostBinding('class')` bindings for a component's or directive's host element.\n     * When styles/classes are applied to the host element they will then be updated\n     * with respect to any styles/classes set with `elementHostStyleProp` or\n     * `elementHostClassProp`. If any styles or classes are set to falsy then they\n     * will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until\n     * `elementHostStylingApply` is called.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @publicApi\n     */\n    function ΔelementHostStylingMap(classes, styles) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var args = [stylingContext, classes, styles, directiveStylingIndex];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStylingMap, args);\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `elementStylingMap`, `elementStyleProp`\n     * or `elementClassProp` instructions have been run and will only apply styling to\n     * the element if any styling bindings have been updated.\n     *\n     * @param index Index of the element's with which styling is associated.\n     *\n     * @publicApi\n     */\n    function ΔelementStylingApply(index) {\n        elementStylingApplyInternal(DEFAULT_TEMPLATE_DIRECTIVE_INDEX, index);\n    }\n    /**\n     * Apply all style and class host binding values to the element.\n     *\n     * This instruction is meant to be run after `elementHostStylingMap`,\n     * `elementHostStyleProp` or `elementHostClassProp` instructions have\n     * been run and will only apply styling to the host element if any\n     * styling bindings have been updated.\n     *\n     * @publicApi\n     */\n    function ΔelementHostStylingApply() {\n        elementStylingApplyInternal(getActiveDirectiveStylingIndex(), getSelectedIndex());\n    }\n    function elementStylingApplyInternal(directiveStylingIndex, index) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        // if a non-element value is being processed then we can't render values\n        // on the element at all therefore by setting the renderer to null then\n        // the styling apply code knows not to actually apply the values...\n        var renderer = tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        var totalPlayersQueued = renderStyling(stylingContext, renderer, lView, isFirstRender, null, null, directiveStylingIndex);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @publicApi\n     */\n    function ΔelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @publicApi\n     */\n    function ΔelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @publicApi\n     */\n    function Δelement(index, name, attrs, localRefs) {\n        ΔelementStart(index, name, attrs, localRefs);\n        ΔelementEnd();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @publicApi\n     */\n    function ΔelementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                    element.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element.setAttributeNS(namespace, name, strValue) :\n                        element.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function ΔelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                var directiveStylingIndex = getActiveDirectiveStylingIndex();\n                if (tNode.stylingTemplate) {\n                    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n                else {\n                    tNode.stylingTemplate =\n                        initializeStaticContext(attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @publicApi\n     */\n    function ΔelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @publicApi\n     */\n    function ΔelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @publicApi\n     */\n    function ΔembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @publicApi\n     */\n    function ΔembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @publicApi\n     */\n    function ΔgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @publicApi\n     */\n    function Δlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @publicApi\n    */\n    function ΔcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @publicApi\n     */\n    function ΔnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     *\n     * @publicApi\n     */\n    function ΔprojectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ?\n                    matchingProjectionSelectorIndex(componentChild, selectors, textSelectors) :\n                    0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n      *\n     * @publicApi\n    */\n    function Δprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     *\n     * @publicApi\n     */\n    function Δbind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n    * **TODO: Remove this function after `property` is in use**\n    * Update a property on an element.\n    *\n    * If the property name also exists as an input property on one of the element's directives,\n    * the component property will be set instead of the element property. This check must\n    * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n    *\n    * @param index The index of the element to update in the data array\n    * @param propName Name of property. Because it is going to DOM, this is not subject to\n    *        renaming as part of minification.\n    * @param value New value to write.\n    * @param sanitizer An optional function used to sanitize the value.\n    * @param nativeOnly Whether or not we should only set native properties and skip input check\n    * (this is necessary for host property bindings)\n     *\n     * @publicApi\n    */\n    function ΔelementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     *\n     * @publicApi\n     */\n    function ΔcomponentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    /**\n    * Mapping between attributes names that don't correspond to their element property names.\n    */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Creates an error that should be thrown when encountering an unknown property on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the error.\n     */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     *\n     * @publicApi\n     */\n    function ΔinterpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     *\n     * @publicApi\n     */\n    function Δinterpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an index of an item to act on and flushes lifecycle hooks up to this point\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @publicApi\n     */\n    function Δselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        setSelectedIndex(index);\n        var lView = getLView();\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @publicApi\n     */\n    function Δtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     *\n     * @publicApi\n     */\n    function ΔtextBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element, renderStringify(value)) :\n                element.textContent = renderStringify(value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    function ΔNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @publicApi\n     */\n    function ΔInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        // because inheritance is unknown during compile time, the runtime code\n                        // needs to be informed of the super-class depth so that instruction code\n                        // can distinguish one host bindings function from another. The reason why\n                        // relying on the directive uniqueId exclusively is not enough is because the\n                        // uniqueId value and the directive instance stay the same between hostBindings\n                        // calls throughout the directive inheritance chain. This means that without\n                        // a super-class depth value, there is no way to know whether a parent or\n                        // sub-class host bindings function is currently being executed.\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            // The reason why we increment first and then decrement is so that parent\n                            // hostBindings calls have a higher id value compared to sub-class hostBindings\n                            // calls (this way the leaf directive is always at a super-class depth of 0).\n                            adjustActiveDirectiveSuperClassDepthPosition(1);\n                            try {\n                                superHostBindings_1(rf, ctx, elementIndex);\n                            }\n                            finally {\n                                adjustActiveDirectiveSuperClassDepthPosition(-1);\n                            }\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                var prevViewQuery_1 = definition.viewQuery;\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ΔNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return Δinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ΔdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ΔdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     *\n     * @publicApi\n     */\n    function ΔProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.11+59.sha-39bfd1a.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(Δinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @publicApi\n     */\n    function Δi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicApi\n     */\n    function Δi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @publicApi\n     */\n    function Δi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        ΔelementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    ΔelementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    ΔtextBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = Δload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @publicApi\n     */\n    function Δi18n(index, message, subTemplateIndex) {\n        Δi18nStart(index, message, subTemplateIndex);\n        Δi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @publicApi\n     */\n    function Δi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        ΔelementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     *\n     * @publicApi\n     */\n    function Δi18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @publicApi\n     */\n    function Δi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        // We determine whether a class has its own metadata by taking the metadata from the parent\n        // constructor and checking whether it's the same as the subclass metadata below. We can't use\n        // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n        // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n        var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n        var parentConstructor = parentPrototype && parentPrototype.constructor;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined &&\n                (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined &&\n                (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @publicApi\n     */\n    function Δpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @publicApi\n     */\n    function ΔpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @publicApi\n     */\n    function ΔpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @publicApi\n     */\n    function ΔpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @publicApi\n     */\n    function ΔpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ?\n            ΔpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @publicApi\n     */\n    function ΔpipeBindV(index, slotOffset, values) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @publicApi\n     */\n    function ΔqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @publicApi\n     */\n    function ΔstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = ΔviewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @publicApi\n     */\n    function ΔviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @publicApi\n     */\n    function ΔloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return Δload(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @publicApi\n     */\n    function ΔcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @publicApi\n     */\n    function ΔstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = ΔcontentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    /**\n     *\n     * @publicApi\n     */\n    function ΔloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @publicApi\n     */\n    function ΔtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ΔdefineBase': ΔdefineBase,\n        'ΔdefineComponent': ΔdefineComponent,\n        'ΔdefineDirective': ΔdefineDirective,\n        'ΔdefineInjectable': ΔdefineInjectable,\n        'ΔdefineInjector': ΔdefineInjector,\n        'ΔdefineNgModule': ΔdefineNgModule,\n        'ΔdefinePipe': ΔdefinePipe,\n        'ΔdirectiveInject': ΔdirectiveInject,\n        'ΔgetFactoryOf': ΔgetFactoryOf,\n        'ΔgetInheritedFactory': ΔgetInheritedFactory,\n        'Δinject': Δinject,\n        'ΔinjectAttribute': ΔinjectAttribute,\n        'ΔtemplateRefExtractor': ΔtemplateRefExtractor,\n        'ΔNgOnChangesFeature': ΔNgOnChangesFeature,\n        'ΔProvidersFeature': ΔProvidersFeature,\n        'ΔInheritDefinitionFeature': ΔInheritDefinitionFeature,\n        'ΔelementAttribute': ΔelementAttribute,\n        'Δbind': Δbind,\n        'Δcontainer': Δcontainer,\n        'ΔnextContext': ΔnextContext,\n        'ΔcontainerRefreshStart': ΔcontainerRefreshStart,\n        'ΔcontainerRefreshEnd': ΔcontainerRefreshEnd,\n        'ΔnamespaceHTML': ΔnamespaceHTML,\n        'ΔnamespaceMathML': ΔnamespaceMathML,\n        'ΔnamespaceSVG': ΔnamespaceSVG,\n        'ΔenableBindings': ΔenableBindings,\n        'ΔdisableBindings': ΔdisableBindings,\n        'ΔallocHostVars': ΔallocHostVars,\n        'ΔelementStart': ΔelementStart,\n        'ΔelementEnd': ΔelementEnd,\n        'Δelement': Δelement,\n        'ΔelementContainerStart': ΔelementContainerStart,\n        'ΔelementContainerEnd': ΔelementContainerEnd,\n        'ΔpureFunction0': ΔpureFunction0,\n        'ΔpureFunction1': ΔpureFunction1,\n        'ΔpureFunction2': ΔpureFunction2,\n        'ΔpureFunction3': ΔpureFunction3,\n        'ΔpureFunction4': ΔpureFunction4,\n        'ΔpureFunction5': ΔpureFunction5,\n        'ΔpureFunction6': ΔpureFunction6,\n        'ΔpureFunction7': ΔpureFunction7,\n        'ΔpureFunction8': ΔpureFunction8,\n        'ΔpureFunctionV': ΔpureFunctionV,\n        'ΔgetCurrentView': ΔgetCurrentView,\n        'ΔrestoreView': ΔrestoreView,\n        'Δinterpolation1': Δinterpolation1,\n        'Δinterpolation2': Δinterpolation2,\n        'Δinterpolation3': Δinterpolation3,\n        'Δinterpolation4': Δinterpolation4,\n        'Δinterpolation5': Δinterpolation5,\n        'Δinterpolation6': Δinterpolation6,\n        'Δinterpolation7': Δinterpolation7,\n        'Δinterpolation8': Δinterpolation8,\n        'ΔinterpolationV': ΔinterpolationV,\n        'Δlistener': Δlistener,\n        'Δload': Δload,\n        'Δprojection': Δprojection,\n        'ΔelementProperty': ΔelementProperty,\n        'ΔcomponentHostSyntheticProperty': ΔcomponentHostSyntheticProperty,\n        'ΔcomponentHostSyntheticListener': ΔcomponentHostSyntheticListener,\n        'ΔpipeBind1': ΔpipeBind1,\n        'ΔpipeBind2': ΔpipeBind2,\n        'ΔpipeBind3': ΔpipeBind3,\n        'ΔpipeBind4': ΔpipeBind4,\n        'ΔpipeBindV': ΔpipeBindV,\n        'ΔprojectionDef': ΔprojectionDef,\n        'Δpipe': Δpipe,\n        'ΔqueryRefresh': ΔqueryRefresh,\n        'ΔviewQuery': ΔviewQuery,\n        'ΔstaticViewQuery': ΔstaticViewQuery,\n        'ΔstaticContentQuery': ΔstaticContentQuery,\n        'ΔloadViewQuery': ΔloadViewQuery,\n        'ΔcontentQuery': ΔcontentQuery,\n        'ΔloadContentQuery': ΔloadContentQuery,\n        'Δreference': Δreference,\n        'ΔelementHostAttrs': ΔelementHostAttrs,\n        'ΔelementStyling': ΔelementStyling,\n        'ΔelementStylingMap': ΔelementStylingMap,\n        'ΔelementStyleProp': ΔelementStyleProp,\n        'ΔelementStylingApply': ΔelementStylingApply,\n        'ΔelementClassProp': ΔelementClassProp,\n        'ΔelementHostStyling': ΔelementHostStyling,\n        'ΔelementHostStylingMap': ΔelementHostStylingMap,\n        'ΔelementHostStyleProp': ΔelementHostStyleProp,\n        'ΔelementHostStylingApply': ΔelementHostStylingApply,\n        'ΔelementHostClassProp': ΔelementHostClassProp,\n        'Δselect': Δselect,\n        'Δtemplate': Δtemplate,\n        'Δtext': Δtext,\n        'ΔtextBinding': ΔtextBinding,\n        'ΔembeddedViewStart': ΔembeddedViewStart,\n        'ΔembeddedViewEnd': ΔembeddedViewEnd,\n        'Δi18n': Δi18n,\n        'Δi18nAttributes': Δi18nAttributes,\n        'Δi18nExp': Δi18nExp,\n        'Δi18nStart': Δi18nStart,\n        'Δi18nEnd': Δi18nEnd,\n        'Δi18nApply': Δi18nApply,\n        'Δi18nPostprocess': Δi18nPostprocess,\n        'ΔresolveWindow': ΔresolveWindow,\n        'ΔresolveDocument': ΔresolveDocument,\n        'ΔresolveBody': ΔresolveBody,\n        'ΔsetComponentScope': ΔsetComponentScope,\n        'ΔsetNgModuleScope': ΔsetNgModuleScope,\n        'ΔsanitizeHtml': ΔsanitizeHtml,\n        'ΔsanitizeStyle': ΔsanitizeStyle,\n        'ΔdefaultStyleSanitizer': ΔdefaultStyleSanitizer,\n        'ΔsanitizeResourceUrl': ΔsanitizeResourceUrl,\n        'ΔsanitizeScript': ΔsanitizeScript,\n        'ΔsanitizeUrl': ΔsanitizeUrl,\n        'ΔsanitizeUrlOrResourceUrl': ΔsanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$1(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$3,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten$1(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.template.ngPrivateData = undefined;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        typeArgumentCount: 0,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ΔdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(Δinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ΔdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ΔdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ΔdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(Δinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ΔdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ΔdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(Δinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ΔdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(Δinject(NgZone), Δinject(Console), Δinject(Injector), Δinject(ErrorHandler), Δinject(ComponentFactoryResolver), Δinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ΔdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(Δinject(Compiler), Δinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(getNativeByTNode(tNode, lView), predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild)\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            else {\n                // Otherwise, its children have to be processed.\n                if (tNode.child)\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode = head_1_1.value;\n                        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                if (head) {\n                    var nextLView = componentView[PARENT];\n                    var nextTNode_1 = nextLView[TVIEW].data[head.index];\n                    _queryNodeChildrenR3(nextTNode_1, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n        }\n        else {\n            // Case 4: the TNode is a view.\n            if (tNode.child) {\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        // To determine the next node to be processed, we need to use the next or the projectionNext link,\n        // depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = 0; i < lContainer[VIEWS].length; i++) {\n            var childView = lContainer[VIEWS][i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ΔdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ΔdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(Δinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ΔdefineInjectable = ΔdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ΔdefineInjector = ΔdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.Δinject = Δinject;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ΔdefineBase = ΔdefineBase;\n    exports.ΔdefineComponent = ΔdefineComponent;\n    exports.ΔdefineDirective = ΔdefineDirective;\n    exports.ΔdefinePipe = ΔdefinePipe;\n    exports.ΔdefineNgModule = ΔdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ΔdirectiveInject = ΔdirectiveInject;\n    exports.ΔinjectAttribute = ΔinjectAttribute;\n    exports.ΔgetFactoryOf = ΔgetFactoryOf;\n    exports.ΔgetInheritedFactory = ΔgetInheritedFactory;\n    exports.ΔsetComponentScope = ΔsetComponentScope;\n    exports.ΔsetNgModuleScope = ΔsetNgModuleScope;\n    exports.ΔtemplateRefExtractor = ΔtemplateRefExtractor;\n    exports.ΔProvidersFeature = ΔProvidersFeature;\n    exports.ΔInheritDefinitionFeature = ΔInheritDefinitionFeature;\n    exports.ΔNgOnChangesFeature = ΔNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.Δcontainer = Δcontainer;\n    exports.ΔnextContext = ΔnextContext;\n    exports.ΔelementStart = ΔelementStart;\n    exports.ΔnamespaceHTML = ΔnamespaceHTML;\n    exports.ΔnamespaceMathML = ΔnamespaceMathML;\n    exports.ΔnamespaceSVG = ΔnamespaceSVG;\n    exports.Δelement = Δelement;\n    exports.Δlistener = Δlistener;\n    exports.Δtext = Δtext;\n    exports.ΔembeddedViewStart = ΔembeddedViewStart;\n    exports.Δprojection = Δprojection;\n    exports.Δbind = Δbind;\n    exports.Δinterpolation1 = Δinterpolation1;\n    exports.Δinterpolation2 = Δinterpolation2;\n    exports.Δinterpolation3 = Δinterpolation3;\n    exports.Δinterpolation4 = Δinterpolation4;\n    exports.Δinterpolation5 = Δinterpolation5;\n    exports.Δinterpolation6 = Δinterpolation6;\n    exports.Δinterpolation7 = Δinterpolation7;\n    exports.Δinterpolation8 = Δinterpolation8;\n    exports.ΔinterpolationV = ΔinterpolationV;\n    exports.ΔpipeBind1 = ΔpipeBind1;\n    exports.ΔpipeBind2 = ΔpipeBind2;\n    exports.ΔpipeBind3 = ΔpipeBind3;\n    exports.ΔpipeBind4 = ΔpipeBind4;\n    exports.ΔpipeBindV = ΔpipeBindV;\n    exports.ΔpureFunction0 = ΔpureFunction0;\n    exports.ΔpureFunction1 = ΔpureFunction1;\n    exports.ΔpureFunction2 = ΔpureFunction2;\n    exports.ΔpureFunction3 = ΔpureFunction3;\n    exports.ΔpureFunction4 = ΔpureFunction4;\n    exports.ΔpureFunction5 = ΔpureFunction5;\n    exports.ΔpureFunction6 = ΔpureFunction6;\n    exports.ΔpureFunction7 = ΔpureFunction7;\n    exports.ΔpureFunction8 = ΔpureFunction8;\n    exports.ΔpureFunctionV = ΔpureFunctionV;\n    exports.ΔgetCurrentView = ΔgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ΔrestoreView = ΔrestoreView;\n    exports.ΔcontainerRefreshStart = ΔcontainerRefreshStart;\n    exports.ΔcontainerRefreshEnd = ΔcontainerRefreshEnd;\n    exports.ΔqueryRefresh = ΔqueryRefresh;\n    exports.ΔviewQuery = ΔviewQuery;\n    exports.ΔstaticViewQuery = ΔstaticViewQuery;\n    exports.ΔstaticContentQuery = ΔstaticContentQuery;\n    exports.ΔloadViewQuery = ΔloadViewQuery;\n    exports.ΔcontentQuery = ΔcontentQuery;\n    exports.ΔloadContentQuery = ΔloadContentQuery;\n    exports.ΔelementEnd = ΔelementEnd;\n    exports.ΔelementProperty = ΔelementProperty;\n    exports.ΔcomponentHostSyntheticProperty = ΔcomponentHostSyntheticProperty;\n    exports.ΔcomponentHostSyntheticListener = ΔcomponentHostSyntheticListener;\n    exports.ΔprojectionDef = ΔprojectionDef;\n    exports.Δreference = Δreference;\n    exports.ΔenableBindings = ΔenableBindings;\n    exports.ΔdisableBindings = ΔdisableBindings;\n    exports.ΔallocHostVars = ΔallocHostVars;\n    exports.ΔelementAttribute = ΔelementAttribute;\n    exports.ΔelementContainerStart = ΔelementContainerStart;\n    exports.ΔelementContainerEnd = ΔelementContainerEnd;\n    exports.ΔelementStyling = ΔelementStyling;\n    exports.ΔelementStylingMap = ΔelementStylingMap;\n    exports.ΔelementStyleProp = ΔelementStyleProp;\n    exports.ΔelementStylingApply = ΔelementStylingApply;\n    exports.ΔelementClassProp = ΔelementClassProp;\n    exports.ΔelementHostAttrs = ΔelementHostAttrs;\n    exports.ΔelementHostStyling = ΔelementHostStyling;\n    exports.ΔelementHostStylingMap = ΔelementHostStylingMap;\n    exports.ΔelementHostStyleProp = ΔelementHostStyleProp;\n    exports.ΔelementHostClassProp = ΔelementHostClassProp;\n    exports.ΔelementHostStylingApply = ΔelementHostStylingApply;\n    exports.Δselect = Δselect;\n    exports.ΔtextBinding = ΔtextBinding;\n    exports.Δtemplate = Δtemplate;\n    exports.ΔembeddedViewEnd = ΔembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.Δload = Δload;\n    exports.Δpipe = Δpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.Δi18n = Δi18n;\n    exports.Δi18nAttributes = Δi18nAttributes;\n    exports.Δi18nExp = Δi18nExp;\n    exports.Δi18nStart = Δi18nStart;\n    exports.Δi18nEnd = Δi18nEnd;\n    exports.Δi18nApply = Δi18nApply;\n    exports.Δi18nPostprocess = Δi18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ΔresolveWindow = ΔresolveWindow;\n    exports.ΔresolveDocument = ΔresolveDocument;\n    exports.ΔresolveBody = ΔresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ΔsanitizeHtml = ΔsanitizeHtml;\n    exports.ΔsanitizeStyle = ΔsanitizeStyle;\n    exports.ΔdefaultStyleSanitizer = ΔdefaultStyleSanitizer;\n    exports.ΔsanitizeScript = ΔsanitizeScript;\n    exports.ΔsanitizeUrl = ΔsanitizeUrl;\n    exports.ΔsanitizeResourceUrl = ΔsanitizeResourceUrl;\n    exports.ΔsanitizeUrlOrResourceUrl = ΔsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}