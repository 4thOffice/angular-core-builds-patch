{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","r","e","ar","push","error","__spread","concat","noSideEffects","fn","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","getOwnDefinition","NG_PROV_DEF","NG_INJECTABLE_DEF","def","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","NG_PROV_DEF_FALLBACK","ɵprovFallback","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","newLineIndex","indexOf","substring","concatStringsWithSpace","before","after","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","R3ResolvedDependencyType","R3FactoryTarget","ViewEncapsulation","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NEW_LINE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","ɵɵinvalidFactoryDep","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","assertDefined","actual","msg","throwError","expected","comparison","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","keyValueArraySet","keyValueArray","keyValueArrayIndexOf","arrayInsert2","array","value1","value2","end","keyValueArrayGet","_arrayIndexOfSorted","shift","start","middle","current","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","hostVars","hostAttrs","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","autoRegisterModuleById","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getFactoryDef","throwNotFound","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","RendererStyleFlags3","DOCUMENT","getDocument","document","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","unwrapRNode","getNativeByIndex","lView","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","view","getComponentLViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","viewAttachedToChangeDetector","getConstant","resetPreOrderHookFlags","getLContainerActiveIndex","lContainer","instructionState","lFrame","createLFrame","bindingsEnabled","checkNoChangesMode","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","getTView","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","count","setBindingRootForHostBindings","currentDirectiveIndex","setCurrentDirectiveIndex","getCurrentDirectiveDef","tData","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","enterView","currentLFrame","childLFrame","child","parent","selectedIndex","elementDepthCount","currentNamespace","currentSanitizer","leaveViewLight","oldLFrame","leaveDI","leaveView","getSelectedIndex","setSelectedIndex","getSelectedTNode","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","registerPostOrderHooks","directiveStart","directiveEnd","directiveDef","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","mergeHostAttrs","src","srcMarker","mergeHostAttribute","key1","key2","markerInsertPosition","dstValue","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","includeViewProviders","setIncludeViewProviders","v","oldValue","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","hostTNode","diPublicInInjector","bloomAdd","bloomBit","BLOOM_SIZE","mask","b6","b5","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","registerPreOrderHooks","directiveIndex","preOrderHooks","preOrderCheckHooks","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","inertBody","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","prop","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","stylePropNeedsSanitization","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","classIndexOf","className","classToSearch","startingIndex","foundIndex","length_1","isCssClassMatching","cssClassToMatch","isProjectionMode","isInlineTemplate","hasTagAndTypeMatch","currentSelector","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","bindingsMode","maybeAttrName","matchTemplateAttribute","attr","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","maybeWrapInNotSelector","isNegativeMode","chunk","stringifyCSSSelector","result","currentChunk","valueOrMarker","attrValue","NO_CHANGE","getLViewParent","getRootContext","viewOrComponent","getRootView","componentOrLView","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","toTStylingRange","prev","getTStylingRangePrev","tStylingRange","getTStylingRangePrevDuplicate","setTStylingRangePrevDuplicate","getTStylingRangeNext","setTStylingRangeNext","getTStylingRangeNextDuplicate","setTStylingRangeNextDuplicate","toDebugStyleBinding","isClassBased","tView_","bindings","range","classBindings","styleBindings","isTemplate","cursor","itemRange","prevDuplicate","nextDuplicate","nextIndex","prevIndex","residualClasses","residualStyles","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","HEADER_OFFSET","nodes","TView","queries","expandoStartIndex","expandoInstructions","firstUpdatePass","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","enumerable","configurable","TNode","directiveStylingLast","propertyBindings","mergedAttrs","localNames","initialInputs","tViews","projectionNext","projection","classes","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","elementIndex","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","activeIndexFlag","embeddedLView","embeddedTView","refreshTransplantedViews","setHostBindingsByExecutingExpandoInstructions","instruction","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","isComponent","addComponentLogic","setInputsFromAttrs","invokeDirectivesHostBindings","expando","getCurrentDirectiveIndex","dirIndex","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","viewData","localRefExtractor","localIndex","getOrCreateTComponentView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","selectRootElement","ShadowDom","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","hasDirectives","findDirectiveDefMatches","registry","matches","markAsComponentHost","exportsMap","","totalDirectiveHostVars","initTNodeFlags","generateExpandoInstructionBlock","preOrderHooksFound","preOrderCheckHooksFound","baseResolveDirective","saveNameToExportMap","addHostBindingsToExpandoInstructions","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","growHostVarsSpace","cacheMatchingLocalNames","directiveCount","providerCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","initialInputData","privateName","inputsToStore","createLContainer","hostNative","declaredComponentLView","movedViews","movedLView","insertedComponentLView","movedTView","componentHostIdx","componentTView","syncViewWithBlueprint","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getLCleanup","getTViewCleanup","loadComponentRenderer","currentDef","unwrapLView","errorHandler","textBindingInternal","setValue","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","lQueries","detachMovedView","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","toCall","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","firstTNodeOfView","getFirstNativeNode","tNodeType","elIcuContainerChild","rNodeOrLContainer","componentHost","firstProjectedTNode","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","writeDirectStyle","newValue","style","cssText","writeDirectClass","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","firstProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef","createTemplateRef","TemplateRefToken","TemplateRef","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","clear","remove","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","viewAttachedToContainer","prevIdx","prevLContainer","prevVCRef","adjustedIdx","_adjustIndex","move","newIndex","viewRefsArr","setLContainerActiveIndex","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","Invalid","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ngFactoryDef","metadata","compileFactory","injectFn","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","createInjectorWithoutInjectorInstances","_resolveInjectorDefTypes","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","add","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","isValueProvider","providerToFactory","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","typeName","unwrappedProvider","isFactoryProvider","isExistingProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","resolveProvider","computeDeps","providerDeps","staticError","useNew","multiProviderMixError","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","recursivelyProcessProviders","resolvedProvider","multiProvider","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","computeStaticStyling","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","is","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","comment","ɵɵtemplate","attrsIndex","localRefsIndex","templateFirstCreatePass","tViewConsts","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵinvalidFactory","ɵɵproperty","setDirectiveInputsWhichShadowsStyling","property","ɵɵelementStart","getNamespace","elementStartFirstCreatePass","elementStart","getElementDepthCount","increaseElementDepthCount","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","hasClassInput","hasStyleInput","ɵɵelement","ɵɵelementContainerStart","elementContainerStartFirstCreatePass","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","EMPTY_ARRAY$3","markDuplicates","tStylingKey","isPrevDir","isClassBinding","tStylingAtIndex","isMap","foundDuplicate","tStyleRangeAtCursor","isStylingMatch","tStylingKeyCursor","parserState","textEnd","keyEnd","valueEnd","getLastParsedKey","getLastParsedValue","parseClassNameNext","consumeClassToken","startIndex","consumeWhitespace","parseStyleNext","consumeStyleKey","ch","consumeSeparator","consumeStyleValue","ch1","ch2","ch3","lastChIndex","consumeQuotedText","resetParserState","separator","quoteCharCode","ɵɵstyleSanitizer","setCurrentStyleSanitizer","ɵɵstyleProp","checkStylingProperty","ɵɵclassProp","ɵɵstyleMap","checkStylingMap","styleKeyValueArraySet","styleStringParser","parseStyle","ɵɵclassMap","classStringParser","parseClassName","suffixOrSanitizer","stylingFirstUpdatePass","styleSanitizer","getCurrentStyleSanitizer","updateStyling","normalizeAndApplySuffixOrSanitizer","stringParser","hasStylingInputShadow","isInHostBindings","staticPrefix","updateStylingMap","oldKeyValueArray","newKeyValueArray","oldIndex","oldKey","setKey","toStylingKeyValueArray","styleKeyValueArray","unwrappedValue","isHostBindings","wrapInStaticStylingKey","stylingKey","hostDirectiveDef","residual","collectStylingFromTAttrs","collectStylingFromDirectives","templateStylingKey","getTemplateHeadTStylingKey","setTemplateHeadTStylingKey","collectResidual","insertTStylingBinding","tStylingKeyWithStatic","isHostBinding","tBindings","tmplHead","tmplTail","isKeyDuplicateOfStatic","previousNode","setTStylingRangePrev","markDuplicateOfResidualStyling","currentDirective","desiredMarker","currentMarker","tRange","isStylingValuePresent","findStylingValue","applyStyling","isProcedural","addClass","classList","removeClass","removeStyle","removeProperty","setStyle","isPrevDirection","rawKey","containsStatics","isStylingMap","valueAtLViewIndex","currentValue","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstyleMapInterpolate1","ɵɵstyleMapInterpolate2","ɵɵstyleMapInterpolate3","ɵɵstyleMapInterpolate4","ɵɵstyleMapInterpolate5","ɵɵstyleMapInterpolate6","ɵɵstyleMapInterpolate7","ɵɵstyleMapInterpolate8","ɵɵstyleMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","assertDomElement","loadLContext","getComponentAtNodeIndex","getContext","getOwningComponent","elementOrDir","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","componentOrDirective","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","Element","applyChanges","_published","publishGlobalUtil","COMPILED","createRootComponentView","hostRenderer","viewRenderer","createRootComponent","componentDef","rootLView","hostFeatures","instantiateRootComponent","rootTNode","rootTView","createRootContext","LifecycleHooksFeature","getSuperType","ɵɵInheritDefinitionFeature","definition","superType","shouldInheritFields","inheritanceChain","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","animation","defData","ngInherit","mergeHostAttrsAcrossInheritance","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","previousChange","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","existingFactoryIndex","registerDestroyHooksIfSupported","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","contextIndex","indexInFactory","providerIsTypeProvider","isClassProvider","existingCallbacksIndex","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","TemplateRef_","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","listener","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","stringifyCSSSelectorList","selectorList","isBoundToModule","tElementNode","rootViewInjector","createChainedInjector","elementName","hostRNode","getNamespace$1","rootFlags","isIsolated","extractAttrsAndClassesFromSelector","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","u","localeEn","plural","Math","floor","abs","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","getLocalePluralCase","ɵLocaleDataIndex","PluralCase","common","locales","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","removeInnerTemplateTranslation","tagMatched","inTemplate","MARKER","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","previousTNodeIndex","icuExpressions","isRootTemplateMessage","allocNodeIndex","templateTranslation","getTranslationForTemplate","search","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","phIndex","isElement","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","bindingsStartIndex","readUpdateOpCodes","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","NgModuleRef$1","componentFactoryResolver","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","pureFunction1Internal","ɵɵpureFunction2","pureFunction2Internal","ɵɵpureFunction3","pureFunction3Internal","ɵɵpureFunction4","pureFunction4Internal","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","pureFunctionVInternal","getPureFunctionReturnValue","returnValueIndex","lastReturnValue","bindingRoot","ɵɵpipe","pipeName","getPipeDef$1","pipeFactory","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","declarationNodeIdx","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","i_1","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","jitOptions","EMPTY_ARRAY$5","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","isNgModule","scopes","exported","importedType","importedScope","entry","declared","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","getJitOptions","preserveWhitespaces","defaultEncapsulation","directiveMetadata","typeSourceSpan","createParseSourceSpan","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","isQueryAnn","queriesMeta","annotations_1","ann","isInputAnnotation","convertToR3QueryMetadata","propertyName","static","piece","LIFECYCLE_HOOKS","hookName","metadataName","compilePipe","ngPipeDef","getPipeMetadata","Pipe","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","LOCALE_ID$1","DEFAULT_CURRENCY_CODE","TRANSLATIONS","TRANSLATIONS_FORMAT","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","getNativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","forkInnerZoneWithAngularBehavior","zone","maybeDelayChangeDetection","delayChangeDetectionForEvents","updateMicroTaskStatus","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","compilerOptions","ngJitMode","setJitOptions","_lastDefined","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","part","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneEventCoalescing","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","copyDomProperties","NodePrototype","descriptors","getOwnPropertyDescriptors","startsWith","isPrimitiveValue","collectPropertyBindings","bindingIndexes","metadataParts","lowercaseTNodeAttrs","eAttrs","lowercaseName","baseVal","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","_queryNativeNodeDescendants","rootNativeNode","_addQueryMatchR3","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","debugNode","getDebugNode$1","_nativeNodeToDebugNode","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","ApplicationModule","ApplicationModule_Factory","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","asNativeElements","debugEls","destroyPlatform","enableProdMode","getDebugNode","setTestabilityGetter","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵCodegenComponentFactoryResolver","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵComponentFactory","ɵConsole","ɵDEFAULT_LOCALE_ID","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵINJECTOR_IMPL__POST_R3__","ɵINJECTOR_SCOPE","ɵLifecycleHooksFeature","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_ELEMENT_ID","ɵNG_INJ_DEF","ɵNG_MOD_DEF","ɵNG_PIPE_DEF","ɵNG_PROV_DEF","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵNO_CHANGE","ɵNgModuleFactory","ɵNoopNgZone","ɵReflectionCapabilities","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵallowSanitizationBypassAndThrow","ɵand","templateFactory","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵccf","createComponentFactory","ɵclearOverrides","ɵclearResolutionOfComponentResourcesQueue","ɵcmf","createNgModuleFactory","defFactory","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵcompileNgModuleFactory__POST_R3__","ɵcompilePipe","ɵcreateInjector","ɵcrt","createRendererType2","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdetectChanges","ɵdevModeEqual","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵfindLocaleData","ɵflushModuleScopingQueueAsMuchAsPossible","ɵgetComponentViewDefinitionFactory","ɵgetDebugNodeR2","getDebugNodeR2__POST_R3__","_nativeNode","ɵgetDebugNode__POST_R3__","ɵgetDirectives","ɵgetHostElement","ɵgetInjectableDef","ɵgetLContext","ɵgetLocaleCurrencyCode","getLocaleCurrencyCode","CurrencyCode","ɵgetLocalePluralCase","ɵgetModuleFactory__POST_R3__","ɵgetSanitizationBypassType","ɵglobal","ɵinitServicesIfNeeded","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵisBoundToModule__POST_R3__","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵisListLikeIterable","ɵisObservable","ɵisPromise","ɵivyEnabled","ɵlooseIdentical","ɵmakeDecorator","ɵmarkDirty","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵoverrideComponentView","ɵoverrideProvider","ɵpad","pureArrayDef","argCount","ɵpatchComponentDefWithScope","ɵpid","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵprd","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵpublishGlobalUtil","ɵqud","ɵregisterLocaleData","registerLocaleData","extraData","LocaleId","ExtraData","ɵregisterModuleFactory","registerModuleFactory","ɵregisterNgModuleType","ɵrenderComponent","renderComponent$1","componentTag","ɵresetCompiledComponents","resetCompiledComponents","ɵresetJitOptions","resetJitOptions","ɵresolveComponentResources","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵsetCurrentInjector","ɵsetDocument","setDocument","ɵsetLocaleId","ɵstore","ɵstringify","ɵted","textDef","staticText","ɵtransitiveScopesFor","ɵunregisterLocaleData","unregisterAllLocaleData","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵunwrapSafeValue","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags","ɵwhenRendered","whenRendered"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,QAASA,QAAQ,mBACvF,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,gBAAiB,CAAC,UAAW,OAAQ,kBAAmBJ,GAClFA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,KAAO,IAAKT,EAAOU,KAAMV,EAAOU,KAAKC,WAHnH,CAIEC,MAAM,SAAWV,EAASQ,EAAMC,GAAa;;;;;;;;;;;;;;oFAkB3C,IAAIE,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOX,KAAKY,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAGnF,IAAII,EAAW,WAQX,OAPAA,EAAWX,OAAOY,QAAU,SAASD,EAASE,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIX,KADTU,EAAIG,UAAUF,GACOf,OAAOS,UAAUJ,eAAec,KAAKL,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAE9E,OAAOS,IAEKO,MAAMxB,KAAMqB,YAwEhC,SAASI,EAASC,GACd,IAAIR,EAAsB,mBAAXS,QAAyBA,OAAOC,SAAUC,EAAIX,GAAKQ,EAAER,GAAIC,EAAI,EAC5E,GAAIU,EAAG,OAAOA,EAAEN,KAAKG,GACrB,GAAIA,GAAyB,iBAAbA,EAAEJ,OAAqB,MAAO,CAC1CQ,KAAM,WAEF,OADIJ,GAAKP,GAAKO,EAAEJ,SAAQI,OAAI,GACrB,CAAEK,MAAOL,GAAKA,EAAEP,KAAMa,MAAON,KAG5C,MAAM,IAAIO,UAAUf,EAAI,0BAA4B,mCAGxD,SAASgB,EAAOR,EAAGN,GACf,IAAIS,EAAsB,mBAAXF,QAAyBD,EAAEC,OAAOC,UACjD,IAAKC,EAAG,OAAOH,EACf,IAAmBS,EAAYC,EAA3BjB,EAAIU,EAAEN,KAAKG,GAAOW,EAAK,GAC3B,IACI,WAAc,IAANjB,GAAgBA,KAAM,MAAQe,EAAIhB,EAAEW,QAAQE,MAAMK,EAAGC,KAAKH,EAAEJ,OAExE,MAAOQ,GAASH,EAAI,CAAEG,MAAOA,GAC7B,QACI,IACQJ,IAAMA,EAAEH,OAASH,EAAIV,EAAU,SAAIU,EAAEN,KAAKJ,GAElD,QAAU,GAAIiB,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAASG,IACL,IAAK,IAAIH,EAAK,GAAIlB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkB,EAAKA,EAAGI,OAAOP,EAAOb,UAAUF,KACpC,OAAOkB;;;;;;;;AAyFX,SAASK,EAAcC,GACnB,MAAO,CAAEC,SAAUD,GAAKC;;;;;;;OAU5B,IAAIC,EAAc,kBACdC,EAAa,iBACbC,EAAgB,qBAIpB,SAASC,EAAcC,EAAMC,EAAOC,EAAaC,EAAsBC,GACnE,OAAOX,GAAc,WACjB,IAAIY,EAAWC,EAAiBL,GAChC,SAASM,IAGL,IAFA,IAAIC,EACAC,EAAO,GACFC,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpCD,EAAKC,GAAMtC,UAAUsC,GAEzB,GAAI3D,gBAAgBwD,EAEhB,OADAF,EAAS/B,KAAKC,MAAM8B,EAAUd,EAAS,CAACxC,MAAO0D,IACxC1D,KAEX,IAAI4D,EAAqB,KAAMH,EAAKD,GAAkBK,KAAKrC,MAAMiC,EAAIjB,EAAS,MAAC,GAASkB,KACxF,OAAO,SAASI,EAAcC,GAW1B,OAVIV,GACAA,EAAO7B,WAAM,EAAQgB,EAAS,CAACuB,GAAML,KAGvBK,EAAItD,eAAeoC,GACjCkB,EAAIlB,GACJzC,OAAO4D,eAAeD,EAAKlB,EAAa,CAAEd,MAAO,KAAMc,IAC/CP,KAAKsB,GACbR,GACAA,EAAqBW,GAClBA,GAQf,OALIZ,IACAK,EAAiB3C,UAAYT,OAAOU,OAAOqC,EAAYtC,YAE3D2C,EAAiB3C,UAAUoD,eAAiBhB,EAC5CO,EAAiBU,cAAgBV,EAC1BA,KAGf,SAASD,EAAiBL,GACtB,OAAO,SAASiB,IAEZ,IADA,IAAIT,EAAO,GACFC,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpCD,EAAKC,GAAMtC,UAAUsC,GAEzB,GAAIT,EAAO,CACP,IAAIkB,EAASlB,EAAM1B,WAAM,EAAQgB,EAASkB,IAC1C,IAAK,IAAIW,KAAYD,EACjBpE,KAAKqE,GAAYD,EAAOC,KAKxC,SAASC,EAAmBrB,EAAMC,EAAOC,GACrC,OAAOT,GAAc,WACjB,IAAIY,EAAWC,EAAiBL,GAChC,SAASqB,IAGL,IAFA,IAAId,EACAC,EAAO,GACFC,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpCD,EAAKC,GAAMtC,UAAUsC,GAEzB,GAAI3D,gBAAgBuE,EAEhB,OADAjB,EAAS9B,MAAMxB,KAAM0D,GACd1D,KAEX,IAAI4D,EAAqB,KAAMH,EAAKc,GAAuBV,KAAKrC,MAAMiC,EAAIjB,EAAS,MAAC,GAASkB,KAE7F,OADAc,EAAeC,WAAab,EACrBY,EACP,SAASA,EAAeT,EAAKW,EAAWC,GAQpC,IALA,IAAIC,EAAab,EAAItD,eAAeqC,GAChCiB,EAAIjB,GACJ1C,OAAO4D,eAAeD,EAAKjB,EAAY,CAAEf,MAAO,KAAMe,GAGnD8B,EAAWtD,QAAUqD,GACxBC,EAAWtC,KAAK,MAGpB,OADCsC,EAAWD,GAASC,EAAWD,IAAU,IAAIrC,KAAKsB,GAC5CG,GAQf,OALIZ,IACAoB,EAAsB1D,UAAYT,OAAOU,OAAOqC,EAAYtC,YAEhE0D,EAAsB1D,UAAUoD,eAAiBhB,EACjDsB,EAAsBL,cAAgBK,EAC/BA,KAGf,SAASM,EAAkB5B,EAAMC,EAAOC,EAAaC,GACjD,OAAOV,GAAc,WACjB,IAAIY,EAAWC,EAAiBL,GAChC,SAAS4B,IAGL,IAFA,IAAIrB,EACAC,EAAO,GACFC,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpCD,EAAKC,GAAMtC,UAAUsC,GAEzB,GAAI3D,gBAAgB8E,EAEhB,OADAxB,EAAS9B,MAAMxB,KAAM0D,GACd1D,KAEX,IAAI+E,EAAoB,KAAMtB,EAAKqB,GAAsBjB,KAAKrC,MAAMiC,EAAIjB,EAAS,MAAC,GAASkB,KAC3F,SAASsB,EAAcC,EAAQhC,GAC3B,IAAIrC,EAAcqE,EAAOrE,YAGrBsE,EAAOtE,EAAYH,eAAesC,GAClCnC,EAAYmC,GACZ3C,OAAO4D,eAAepD,EAAamC,EAAe,CAAEhB,MAAO,KAAMgB,GACrEmC,EAAKjC,GAAQiC,EAAKzE,eAAewC,IAASiC,EAAKjC,IAAS,GACxDiC,EAAKjC,GAAMkC,QAAQJ,GACf3B,GACAA,EAAqB5B,WAAM,EAAQgB,EAAS,CAACyC,EAAQhC,GAAOS,IAEpE,OAAOsB,EAOX,OALI7B,IACA2B,EAAqBjE,UAAYT,OAAOU,OAAOqC,EAAYtC,YAE/DiE,EAAqBjE,UAAUoD,eAAiBhB,EAChD6B,EAAqBZ,cAAgBY,EAC9BA;;;;;;;OAiBf,IA4CWM,EA5CPC,EAASf,EAAmB,UAAU,SAAUgB,GAAS,MAAO,CAAGA,MAAOA,MAO1EC,EAAWjB,EAAmB,YAO9BkB,EAAOlB,EAAmB,QAO1BmB,EAAWnB,EAAmB,YAO9BoB,EAAOpB,EAAmB,QAO1BqB,EAAYrB,EAAmB,aAAa,SAAUsB,GAAiB,MAAO,CAAGA,cAAeA;;;;;;;;AAiCpG,SAASC,EAAuBC,GAC5B,IAAK,IAAIC,KAAOD,EACZ,GAAIA,EAAyBC,KAASF,EAClC,OAAOE,EAGf,MAAMC,MAAM,qDAQhB,SAASC,EAAehB,EAAQiB,GAC5B,IAAK,IAAIH,KAAOG,EACRA,EAAOzF,eAAesF,KAASd,EAAOxE,eAAesF,KACrDd,EAAOc,GAAOG,EAAOH;;;;;;;OA4BjC,SAASI,EAAmBC,GACxB,MAAO,CACHd,MAAOc,EAAKd,MACZe,WAAYD,EAAKC,YAAc,KAC/BhH,QAAS+G,EAAK/G,QACd0C,WAAOuE;;;;;;;;AA1EJlB,EAeR9F,EAAQ8F,cAAgB9F,EAAQ8F,YAAc,KAZjCA,EAAqB,QAAI,GAAK,UAK1CA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAsB,SAAI,GAAK,WAE3CA,EAAYA,EAAsB,SAAI,GAAK,WAoE/C,IAAImB,EAAmBJ,EAqBvB,SAASK,EAAiBC,GACtB,MAAO,CACHpH,QAASoH,EAAQpH,QACjBqH,UAAWD,EAAQC,WAAa,GAChCC,QAASF,EAAQE,SAAW,IASpC,SAASC,EAAiBC,GACtB,OAAOC,EAAiBD,EAAMA,EAAKE,KAC/BD,EAAiBD,EAAMA,EAAKG,IAapC,SAASF,EAAiBD,EAAMI,GAC5B,OAAOA,GAAOA,EAAI3B,QAAUuB,EAAOI,EAAM,KA8C7C,SAASC,EAAeL,GACpB,OAAOA,IAASA,EAAKpG,eAAe0G,IAAeN,EAAKpG,eAAe2G,IACnEP,EAAKM,GACL,KAER,IAAIJ,EAAclB,EAAuB,CAAEwB,QAAOxB,IAC9CsB,EAAatB,EAAuB,CAAEyB,OAAMzB,IAO5C0B,EAAuB1B,EAAuB,CAAE2B,gBAAe3B,IAE/DmB,EAAoBnB,EAAuB,CAAE4B,gBAAiB5B,IAC9DuB,EAAkBvB,EAAuB,CAAE6B,cAAe7B;;;;;;;;AAS9D,SAAS8B,EAAUrC,GACf,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAI/E,MAAMqH,QAAQtC,GACd,MAAO,IAAMA,EAAMuC,IAAIF,GAAWG,KAAK,MAAQ,IAEnD,GAAa,MAATxC,EACA,MAAO,GAAKA,EAEhB,GAAIA,EAAMyC,eACN,MAAO,GAAKzC,EAAMyC,eAEtB,GAAIzC,EAAMrC,KACN,MAAO,GAAKqC,EAAMrC,KAEtB,IAAI+E,EAAM1C,EAAM1C,WAChB,GAAW,MAAPoF,EACA,MAAO,GAAKA,EAEhB,IAAIC,EAAeD,EAAIE,QAAQ,MAC/B,OAAyB,IAAlBD,EAAsBD,EAAMA,EAAIG,UAAU,EAAGF,GAUxD,SAASG,EAAuBC,EAAQC,GACpC,OAAkB,MAAVD,GAA6B,KAAXA,EACX,OAAVC,EAAiB,GAAKA,EACZ,MAATA,GAA2B,KAAVA,EAAgBD,EAASA,EAAS,IAAMC;;;;;;;OAUnE,IAAIC,EAAkB1C,EAAuB,CAAE0C,gBAAiB1C,IAahE,SAAS2C,EAAWC,GAKhB,OAJAA,EAAaF,gBAAkBC,EAC/BC,EAAa7F,SAAW,WACpB,OAAO+E,EAAU3H,SAEdyI,EAeX,SAASC,EAAkB7B,GACvB,OAAO8B,EAAa9B,GAAQA,IAASA,EAGzC,SAAS8B,EAAahG,GAClB,MAAqB,mBAAPA,GAAqBA,EAAGlC,eAAe8H,IACjD5F,EAAG4F,kBAAoBC;;;;;;;OAU/B,IAiBII,EAOAC,EAQAC,EAhCAC,EAAqC,oBAAfC,YAA8BA,WACpDC,EAA6B,oBAAXC,QAA0BA,OAC5CC,EAAyB,oBAATxJ,MAAqD,oBAAtByJ,mBAC/CzJ,gBAAgByJ,mBAAqBzJ,KACrC0J,EAA6B,oBAAXjK,QAA0BA,OAI5CkK,EAAUP,GAAgBM,GAAYJ,GAAYE;;;;;;;;AAuCtD,SAASI,IACL,IAAIC,EAAWF,EAAY,GAC3B,IAAKE,IAAaA,EAASC,gBACvB,MAAM,IAAIzD,MAAM,+VAKpB,OAAOwD,EAASC;;;;;;;QArCpB,SAAWb,GACPA,EAAyBA,EAAgC,MAAI,GAAK,QAClEA,EAAyBA,EAAoC,UAAI,GAAK,YACtEA,EAAyBA,EAA4C,kBAAI,GAAK,oBAC9EA,EAAyBA,EAAkC,QAAI,GAAK,UAJxE,CAKGA,IAA6BA,EAA2B,KAE3D,SAAWC,GACPA,EAAgBA,EAA2B,UAAI,GAAK,YACpDA,EAAgBA,EAA2B,UAAI,GAAK,YACpDA,EAAgBA,EAA4B,WAAI,GAAK,aACrDA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAA0B,SAAI,GAAK,WALvD,CAMGA,IAAoBA,EAAkB,KAEzC,SAAWC,GACPA,EAAkBA,EAA4B,SAAI,GAAK,WACvDA,EAAkBA,EAA0B,OAAI,GAAK,SACrDA,EAAkBA,EAAwB,KAAI,GAAK,OACnDA,EAAkBA,EAA6B,UAAI,GAAK,YAJ5D,CAKGA,IAAsBA,EAAoB,KA2B7C,IA+MIY,EA/MAC,EAAc9D,EAAuB,CAAE+D,OAAM/D,IAC7CgE,GAAahE,EAAuB,CAAEiE,OAAMjE,IAC5CkE,GAAclE,EAAuB,CAAEmE,QAAOnE,IAC9CoE,GAAapE,EAAuB,CAAEqE,OAAMrE,IAC5CsE,GAAgBtE,EAAuB,CAAEuE,OAAMvE,IAC/CwE,GAAiBxE,EAAuB,CAAEyE,OAAMzE,IAOhD0E,GAAgB1E,EAAuB,CAAE2E,kBAAmB3E,IA2H5D4E,GAAgC,WAChC,SAASA,EAAeC,EAAOjE,GAC3BzG,KAAK0K,MAAQA,EAEb1K,KAAKiE,eAAiB,iBACtBjE,KAAKqH,WAAQf,EACS,iBAAXG,EAIPzG,KAAKwK,kBAAoB/D,OAERH,IAAZG,IACLzG,KAAKqH,MAAQlB,EAAmB,CAC5Bb,MAAOtF,KACPqG,WAAYI,EAAQJ,YAAc,OAClChH,QAASoH,EAAQpH,WAO7B,OAHAoL,EAAe5J,UAAU+B,SAAW,WAChC,MAAO,kBAAoB5C,KAAK0K,OAE7BD,EAvBwB,GAyC/BE,GAAW,IAAIF,GAAe,YAAa,GAG3CG,GADsB,GAItBC,GAAW,OAGXC,GAAYjF,EAAuB,CAAEkF,QAASC,OAAQC,SAAUpF,IAOhEqF,QAAmB5E,EACvB,SAAS6E,GAAmBC,GACxB,IAAIC,EAASH,GAEb,OADAA,GAAmBE,EACZC,EAeX,SAASC,GAAwBC,GAC7B,IAAIC,EAAW9B,EAEf,OADAA,EAAwB6B,EACjBC,EAEX,SAASC,GAAmBnG,EAAOoG,GAE/B,QADc,IAAVA,IAAoBA,EAAQpM,EAAQ8F,YAAYuG,cAC3BrF,IAArB4E,GACA,MAAM,IAAIlF,MAAM,qDAEf,OAAyB,OAArBkF,GACEU,GAAmBtG,OAAOgB,EAAWoF,GAGrCR,GAAiBW,IAAIvG,EAAOoG,EAAQpM,EAAQ8F,YAAYG,SAAW,UAAOe,EAAWoF,GAGpG,SAASI,GAASxG,EAAOoG,GAErB,YADc,IAAVA,IAAoBA,EAAQpM,EAAQ8F,YAAYuG,UAC5CjC,GAAyB+B,IAAoB/C,EAAkBpD,GAAQoG,GAcnF,SAASK,GAAoBpH,GAIzB,MAAM,IAAIqB,MADN,WA2BR,IAAIgG,GAASF,GAQb,SAASF,GAAmBtG,EAAO2G,EAAeP,GAC9C,IAAIQ,EAAgBtF,EAAiBtB,GACrC,GAAI4G,GAA6C,QAA5BA,EAAc7F,WAC/B,YAA+BC,IAAxB4F,EAAcnK,MAAsBmK,EAAcnK,MAAQmK,EAAc7M,UAC3E6M,EAAcnK,MAEtB,GAAI2J,EAAQpM,EAAQ8F,YAAYG,SAC5B,OAAO,KACX,QAAsBe,IAAlB2F,EACA,OAAOA,EACX,MAAM,IAAIjG,MAAM,wBAA0B2B,EAAUrC,GAAS,KAEjE,SAAS6G,GAAWC,GAEhB,IADA,IAAI1I,EAAO,GACFvC,EAAI,EAAGA,EAAIiL,EAAM9K,OAAQH,IAAK,CACnC,IAAIkL,EAAM3D,EAAkB0D,EAAMjL,IAClC,GAAIZ,MAAMqH,QAAQyE,GAAM,CACpB,GAAmB,IAAfA,EAAI/K,OACJ,MAAM,IAAI0E,MAAM,wCAIpB,IAFA,IAAIa,OAAOP,EACPoF,EAAQpM,EAAQ8F,YAAYuG,QACvBW,EAAI,EAAGA,EAAID,EAAI/K,OAAQgL,IAAK,CACjC,IAAIpH,EAAOmH,EAAIC,GACXpH,aAAgBK,GAAoC,aAAxBL,EAAKjB,gBAAiCiB,IAASK,EAC3EmG,GAASpM,EAAQ8F,YAAYG,SAExBL,aAAgBO,GAAoC,aAAxBP,EAAKjB,gBAAiCiB,IAASO,EAChFiG,GAASpM,EAAQ8F,YAAYK,SAExBP,aAAgBM,GAAgC,SAAxBN,EAAKjB,gBAA6BiB,IAASM,EACxEkG,GAASpM,EAAQ8F,YAAYI,KAG7BqB,EADK3B,aAAgBG,GAAUH,IAASG,EACjCH,EAAKI,MAGLJ,EAGfxB,EAAKpB,KAAKwJ,GAASjF,EAAM6E,SAGzBhI,EAAKpB,KAAKwJ,GAASO,IAG3B,OAAO3I,EAEX,IAAI6I,GAA8B,WAC9B,SAASA,KAeT,OAbAA,EAAa1L,UAAUgL,IAAM,SAAUvG,EAAO2G,GAE1C,QADsB,IAAlBA,IAA4BA,EAAgBrB,IAC5CqB,IAAkBrB,GAAoB,CAKtC,IAAIrI,EAAQ,IAAIyD,MAAM,sCAAwC2B,EAAUrC,GAAS,KAEjF,MADA/C,EAAMU,KAAO,oBACPV,EAEV,OAAO0J,GAEJM,EAhBsB,GAkBjC,SAASC,GAAmBpK,EAAGkD,EAAOmH,EAAmBvG,GACrD,IAAIwG,EAAYtK,EAAoB,gBAOpC,MANIkD,EAAY,UACZoH,EAAUvH,QAAQG,EAAY,UAElClD,EAAEuK,QAAUC,GAAY,KAAOxK,EAAEuK,QAASD,EAAWD,EAAmBvG,GACxE9D,EAAe,YAAIsK,EACnBtK,EAAoB,gBAAI,KAClBA,EAEV,SAASwK,GAAYC,EAAMC,EAAKL,EAAmBvG,QAChC,IAAXA,IAAqBA,EAAS,MAClC2G,EAAOA,GAA2B,OAAnBA,EAAKE,OAAO,IAjLb,KAiL4BF,EAAKE,OAAO,GAAoBF,EAAKG,OAAO,GAAKH,EAC3F,IAAII,EAAUtF,EAAUmF,GACxB,GAAIvM,MAAMqH,QAAQkF,GACdG,EAAUH,EAAIjF,IAAIF,GAAWG,KAAK,aAEjC,GAAmB,iBAARgF,EAAkB,CAC9B,IAAII,EAAQ,GACZ,IAAK,IAAInH,KAAO+G,EACZ,GAAIA,EAAIrM,eAAesF,GAAM,CACzB,IAAIhE,EAAQ+K,EAAI/G,GAChBmH,EAAM5K,KAAKyD,EAAM,KAAwB,iBAAVhE,EAAqBoL,KAAKxF,UAAU5F,GAAS4F,EAAU5F,KAG9FkL,EAAU,IAAMC,EAAMpF,KAAK,MAAQ,IAEvC,OAAY2E,GAAqBvG,EAAS,IAAMA,EAAS,IAAM,IAAM,IAAM+G,EAAU,MAAQJ,EAAKO,QAAQvC,GAAU;;;;;;;OAexH,IAqcWwC,GAcAC,GAndPC,GAAmB,CACnBpH,qBAAsBA,EACtBK,mBAAoBA,EACpBsF,WAAYA,GACZ0B,iBAGJ,SAASC,EAAa5G,GAClB,IAAI6G,EAAU7G,EACd,GAAI8B,EAAa9B,GACb,OAAO,WACH,IAAIxH,EAAUoO,EAAa/E,EAAkBgF,IAC7C,OAAOrO,EAAUA,IAAY,MAGrC,IAAI4H,EAAML,EAAiB8G,IAAYxG,EAAewG,GACtD,OAAKzG,QAAuBX,IAAhBW,EAAI5H,QAGT4H,EAAI5H,QAFA;;;;;;;QAZX0M,sBAAuBA,IAgCvB4B,GACA,SAASA,OAOTC,GACA,SAASA,OAwEb,SAASC,GAAcC,EAAQC,GACb,MAAVD,GAIR,SAASE,EAAWD,EAAKD,EAAQG,EAAUC,GACvC,MAAM,IAAIlI,MAAM,oBAAsB+H,GACnB,MAAdG,EAAqB,GAAK,gBAAkBD,EAAW,IAAMC,EAAa,IAAMJ,EAAS,eAL1FE,CAAWD,EAAKD,EAAQ,KAAM;;;;;;;;AA+BtC,SAASK,GAAcC,EAAOC,GAC1B,IAAK,IAAIlN,EAAI,EAAGA,EAAIiN,EAAM9M,OAAQH,IAC9BkN,EAAI/L,KAAK8L,EAAMjN,IAMvB,SAASmN,GAAQC,EAAMC,QACPlI,IAARkI,IACAA,EAAMD,GACV,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,EAAKjN,OAAQH,IAAK,CAClC,IAAIsN,EAAOF,EAAKpN,GACZZ,MAAMqH,QAAQ6G,IAEVD,IAAQD,IAGRC,EAAMD,EAAKG,MAAM,EAAGvN,IAExBmN,GAAQG,EAAMD,IAETA,IAAQD,GACbC,EAAIlM,KAAKmM,GAGjB,OAAOD,EAEX,SAASG,GAAYC,EAAOjM,GACxBiM,EAAMC,SAAQ,SAAU9M,GAAS,OAAOxB,MAAMqH,QAAQ7F,GAAS4M,GAAY5M,EAAOY,GAAMA,EAAGZ,MAE/F,SAAS+M,GAAWT,EAAK1J,EAAO5C,GAExB4C,GAAS0J,EAAI/M,OACb+M,EAAI/L,KAAKP,GAGTsM,EAAIU,OAAOpK,EAAO,EAAG5C,GAG7B,SAASiN,GAAgBX,EAAK1J,GAE1B,OAAIA,GAAS0J,EAAI/M,OAAS,EACf+M,EAAIY,MAGJZ,EAAIU,OAAOpK,EAAO,GAAG,GAGpC,SAASuK,GAASC,EAAMpN,GAEpB,IADA,IAAIwM,EAAO,GACFpN,EAAI,EAAGA,EAAIgO,EAAMhO,IACtBoN,EAAKjM,KAAKP,GAEd,OAAOwM,EAkJX,SAASa,GAAiBC,EAAetJ,EAAKhE,GAC1C,IAAI4C,EAAQ2K,GAAqBD,EAAetJ,GAShD,OARIpB,GAAS,EAET0K,EAAsB,EAAR1K,GAAa5C,EA5FnC,SAASwN,EAAaC,EAAO7K,EAAO8K,EAAQC,GAExC,IAAIC,EAAMH,EAAMlO,OAChB,GAAIqO,GAAOhL,EAEP6K,EAAMlN,KAAKmN,EAAQC,QAElB,GAAY,IAARC,EAELH,EAAMlN,KAAKoN,EAAQF,EAAM,IACzBA,EAAM,GAAKC,MAEV,CAGD,IAFAE,IACAH,EAAMlN,KAAKkN,EAAMG,EAAM,GAAIH,EAAMG,IAC1BA,EAAMhL,GAET6K,EAAMG,GAAOH,EADKG,EAAM,GAExBA,IAEJH,EAAM7K,GAAS8K,EACfD,EAAM7K,EAAQ,GAAK+K,GA2EnBH,CAAaF,EADb1K,GAASA,EAC0BoB,EAAKhE,GAErC4C,EASX,SAASiL,GAAiBP,EAAetJ,GACrC,IAAIpB,EAAQ2K,GAAqBD,EAAetJ,GAChD,GAAIpB,GAAS,EAET,OAAO0K,EAAsB,EAAR1K,GAc7B,SAAS2K,GAAqBD,EAAetJ,GACzC,OAqCJ,SAAS8J,EAAoBL,EAAOzN,EAAO+N,GAIvC,IAFA,IAAIC,EAAQ,EACRJ,EAAMH,EAAMlO,QAAUwO,EACnBH,IAAQI,GAAO,CAClB,IAAIC,EAASD,GAAUJ,EAAMI,GAAU,GACnCE,EAAUT,EAAMQ,GAAUF,GAC9B,GAAI/N,IAAUkO,EACV,OAAQD,GAAUF,EAEbG,EAAUlO,EACf4N,EAAMK,EAGND,EAAQC,EAAS,EAGzB,QAASL,GAAOG;;;;;;;OAtDTD,CAAoBR,EAAetJ,EAAK,IAgExCsH,GAaR/N,EAAQ+N,0BAA4B/N,EAAQ+N,wBAA0B,KAN7CA,GAAgC,OAAI,GAAK,SAKjEA,GAAwBA,GAAiC,QAAI,GAAK,WAE3DC,GA+BRhO,EAAQ4Q,wBAA0B5Q,EAAQ4Q,sBAAwB,KA1B5C5C,GAAgC,UAAI,GAAK,YAK9DA,GAAqBA,GAA8B,QAAI,GAAK,UAK5DA,GAAqBA,GAAkC,YAAI,GAAK,cAKhEA,GAAqBA,GAA+B,SAAI,GAAK,WAM7DA,GAAqBA,GAA8B,QAAI,GAAK,UAI5DA,GAAqBA,GAAgC,UAAI,GAAK;;;;;;;;AAqBlE,SAAWxE,GASPA,EAAkBA,EAA4B,SAAI,GAAK,WASvDA,EAAkBA,EAA0B,OAAI,GAAK,SAIrDA,EAAkBA,EAAwB,KAAI,GAAK,OAQnDA,EAAkBA,EAA6B,UAAI,GAAK,YA9B5D,CA+BGxJ,EAAQwJ,oBAAsBxJ,EAAQwJ,kBAAoB;;;;;;;;AAe7D,IAAIqH,GAAY,GACZC,GAAc,GAkBdC,GAAmB,EAiBvB,SAASC,GAAkBC,GACvB,OAAO7N,GAAc,WAIjB,IAAImE,EAAO0J,EAAoB1J,KAC3B2J,EAAgB3J,EAAKhG,UACrB4P,EAAiB,GACjBxJ,EAAM,CACNJ,KAAMA,EACN6J,kBAAmB,KACnBC,MAAOJ,EAAoBI,MAC3BC,KAAML,EAAoBK,KAC1BvR,QAAS,KACTwR,SAAUN,EAAoBM,UAAY,KAC1CC,OAAQP,EAAoBO,QAAU,KACtCC,mBAAoBR,EAAoBQ,mBACxCC,aAAcT,EAAoBS,cAAgB,KAClDC,SAAUV,EAAoBU,UAAY,EAC1CC,UAAWX,EAAoBW,WAAa,KAC5CC,eAAgBZ,EAAoBY,gBAAkB,KACtDV,eAAgBA,EAChBW,OAAQ,KACRC,QAAS,KACTC,SAAUf,EAAoBe,UAAY,KAC1CC,UAAW,KACXC,OAAQhB,EAAciB,UAAY,KAClCC,QAASlB,EAAcmB,WAAa,KACpCC,iBAAkBpB,EAAcqB,oBAAsB,KACtDC,oBAAqBtB,EAAcuB,uBAAyB,KAC5DC,cAAexB,EAAcyB,iBAAmB,KAChDC,iBAAkB1B,EAAc2B,oBAAsB,KACtDC,UAAW5B,EAAc6B,aAAe,KACxCC,OAAQ/B,EAAoBgC,kBAAoBjT,EAAQ+N,wBAAwBmF,OAChFC,cAAe,KACfC,SAAU,KACVC,UAAWpC,EAAoBoC,WAAavC,GAC5CwC,UAAWrC,EAAoBqC,WAAa,KAC5CC,SAAUtC,EAAoBsC,UAAY,KAC1CC,KAAMvC,EAAoBuC,MAAQ,GAGlCC,cAAexC,EAAoBwC,eAAiBzT,EAAQwJ,kBAAkBkK,SAC9EC,GAAI,IACJC,OAAQ3C,EAAoB2C,QAAU9C,GACtC+C,EAAG,KACHC,SAAU,KACVC,QAAS9C,EAAoB8C,SAAW,KACxCC,MAAO,MAEPC,EAAiBhD,EAAoBiD,WACrCC,EAAUlD,EAAoBsC,SAC9Ba,EAAYnD,EAAoBoD,MAYpC,OAXA1M,EAAIgM,IAAM5C,KACVpJ,EAAImK,OAASwC,GAAarD,EAAoBa,OAAQX,GAClDxJ,EAAIoK,QAAUuC,GAAarD,EAAoBc,SAC/CoC,GAAWA,EAAQ5E,SAAQ,SAAUlM,GAAM,OAAOA,EAAGsE,MACzDA,EAAIwL,cAAgBc,EAChB,WAAc,OAAkC,mBAAnBA,EAAgCA,IAAmBA,GAC3E1L,IAAIgM,KACT,KACJ5M,EAAIyL,SAAWgB,EACX,WAAc,OAA6B,mBAAdA,EAA2BA,IAAcA,GAAW7L,IAAIiM,KACrF,KACG7M,KAMf,SAAS8M,GAAoBlN,EAAM2M,EAAYG,GAC3C,IAAI1M,EAAMJ,EAAK+C,KACf3C,EAAIwL,cAAgB,WAAc,OAAOe,EAAW3L,IAAIgM,KACxD5M,EAAIyL,SAAW,WAAc,OAAOiB,EAAM9L,IAAIiM,KAElD,SAASD,GAAoBhN,GAKzB,OAJUmN,GAAgBnN,IAASoN,GAAgBpN,GAMvD,SAASiN,GAAejN,GAKpB,OAJUqN,GAAWrN,GAMzB,IAAIsN,GAAyB,GAI7B,SAASC,GAAiBnN,GACtB,IAAIe,EAAM,CACNnB,KAAMI,EAAIJ,KACVwN,UAAWpN,EAAIoN,WAAajE,GAC5BkE,aAAcrN,EAAIqN,cAAgBlE,GAClCzJ,QAASM,EAAIN,SAAWyJ,GACxB9Q,QAAS2H,EAAI3H,SAAW8Q,GACxBmE,wBAAyB,KACzBlB,QAASpM,EAAIoM,SAAW,KACxBJ,GAAIhM,EAAIgM,IAAM,MAOlB,OALc,MAAVhM,EAAIgM,IACJvQ,GAAc,WACVyR,GAAuBlN,EAAIgM,IAAMhM,EAAIJ,QAGtCmB,EAYX,SAASwM,GAAmB3N,EAAM4N,GAC9B,OAAO/R,GAAc,WACjB,IAAIgS,EAAcC,GAAe9N,GAAM,GACvC6N,EAAYJ,aAAeG,EAAMH,cAAgBlE,GACjDsE,EAAY/N,QAAU8N,EAAM9N,SAAWyJ,GACvCsE,EAAYpV,QAAUmV,EAAMnV,SAAW8Q,MA0D/C,SAASwD,GAAa9G,EAAK8H,GACvB,GAAW,MAAP9H,EACA,OAAOqD,GACX,IAAI0E,EAAY,GAChB,IAAK,IAAIC,KAAehI,EACpB,GAAIA,EAAIrM,eAAeqU,GAAc,CACjC,IAAIC,EAAajI,EAAIgI,GACjBE,EAAeD,EACfxU,MAAMqH,QAAQmN,KACdC,EAAeD,EAAW,GAC1BA,EAAaA,EAAW,IAE5BF,EAAUE,GAAcD,EACpBF,IACCA,EAAUG,GAAcC,GAIrC,OAAOH,EAkBX,IAAII,GAAoB3E,GAiBxB,SAAS4E,GAAaC,GAClB,MAAO,CACHtO,KAAMsO,EAAQtO,KACd5D,KAAMkS,EAAQlS,KACd5D,QAAS,KACT+V,MAAuB,IAAjBD,EAAQC,KACdhD,UAAW+C,EAAQtO,KAAKhG,UAAUwR,aAAe,MAQzD,SAAS2B,GAAgBnN,GACrB,OAAOA,EAAK8C,IAAgB,KAEhC,SAASsK,GAAgBpN,GACrB,OAAOA,EAAKgD,KAAe,KAE/B,SAASqK,GAAWrN,GAChB,OAAOA,EAAKkD,KAAgB,KAEhC,SAASsL,GAAcxO,EAAMyO,GAKzB,OAJoBzO,EAAKpG,eAAe4J,IAIjBxD,EAAKwD,IAAkB,KAElD,SAASsK,GAAe9N,EAAMyO,GAC1B,IAAIZ,EAAc7N,EAAKoD,KAAe,KACtC,IAAKyK,IAAiC,IAAlBY,EAChB,MAAM,IAAItP,MAAM,QAAU2B,EAAUd,GAAQ,mCAEhD,OAAO6N;;;;;;;;AAyFX,SAASa,GAAQxT,GACb,OAAOxB,MAAMqH,QAAQ7F,IAAiC,iBAAhBA,EArC/B,GA2CX,SAASyT,GAAazT,GAClB,OAAOxB,MAAMqH,QAAQ7F,KAA0B,IAAhBA,EA5CxB,GA8CX,SAAS0T,GAAmBC,GACxB,OAAmD,IAA7B,EAAdA,EAAMhK,OAElB,SAASiK,GAAgBD,GACrB,OAAmD,IAA7B,EAAdA,EAAMhK,OAElB,SAASkK,GAAgBF,GACrB,OAAmD,IAA7B,EAAdA,EAAMhK,OAElB,SAASmK,GAAe5O,GACpB,OAAwB,OAAjBA,EAAI4J,SAEf,SAASiF,GAAW7Q,GAChB,OAA8C,IAAtB,IAAhBA,EA9FA;;;;;;;;;;;;;;;AA2KZ,IA8EI8Q,GAxCAC,QAAW1P,EAiBf,SAAS2P,KACL,YAAiB3P,IAAb0P,GACOA,GAEkB,oBAAbE,SACLA,cADN;;;;;;;OAyBT,SAASC,GAAqBC,GAC1B,QAAUA,EAAe,QAN7B,SAAWL,GACPA,EAAoBA,EAA+B,UAAI,GAAK,YAC5DA,EAAoBA,EAA8B,SAAI,GAAK,WAF/D,CAGGA,KAAwBA,GAAsB,KAKjD,IAAIM,GAAsB,CACtBC,eAAgB,SAAUC,EAAaC,GACnC,OAAOP;;;;;;;;AAkCf,SAASQ,GAAY1U,GACjB,KAAOxB,MAAMqH,QAAQ7F,IACjBA,EAAQA,EA1SL,GA4SP,OAAOA,EAkCX,SAAS2U,GAAiB/R,EAAOgS,GAC7B,OAAOF,GAAYE,EAAMhS,EA3TT,KAqUpB,SAASiS,GAAiBlB,EAAOiB,GAK7B,OAFWF,GAAYE,EAAMjB,EAAM/Q,QAYvC,SAASkS,GAAuBnB,EAAOiB,GACnC,IAAIhS,EAAQ+Q,EAAM/Q,MAClB,OAAe,IAAXA,EAEW8R,GAAYE,EAAMhS,IAI1B,KAEX,SAASmS,GAASxD,EAAO3O,GAGrB,OAAO2O,EAAMR,KAAKnO,EAjWF,IAoWpB,SAASoS,GAAKC,EAAMrS,GAEhB,OAAOqS,EAAKrS,EAtWI,IAwWpB,SAASsS,GAAyBC,EAAWC,GAGzC,IAAIC,EAAYD,EAASD,GAEzB,OADY3B,GAAQ6B,GAAaA,EAAYA,EAhYtC,GAuYX,SAASC,GAAgBpS,GAErB,OAAOA,EAA4B,eAAK,KAE5C,SAASqS,GAAiBrS,GACtB,IAAIlD,EAAQsV,GAAgBpS,GAC5B,OAAIlD,EACOxB,MAAMqH,QAAQ7F,GAASA,EAAQA,EAAM4U,MAEzC,KAGX,SAASY,GAAeP,GACpB,OAAgD,IAA1B,EAAdA,EAlZA,IA0ZZ,SAASQ,GAA6BR,GAClC,OAA8C,MAAxB,IAAdA,EA3ZA,IAkaZ,SAASS,GAAY3G,EAAQnM,GACzB,OAAkB,OAAXmM,GAA4B,MAATnM,EAAgB,KAAOmM,EAAOnM,GAM5D,SAAS+S,GAAuBf,GAC5BA,EA1ZsB,IA0ZO,EAEjC,SAASgB,GAAyBC,GAC9B,OAAOA,EApYQ,IAoYoB;;;;;;;;AAavC,IAAIC,GAAmB,CACnBC,OAAQC,GAAa,MACrBC,iBAAiB,EACjBC,oBAAoB,GAWxB,SAASC,KACL,OAAOL,GAAiBG,gBAqB5B,SAASG,KACLN,GAAiBG,iBAAkB,EAqBvC,SAASI,KACLP,GAAiBG,iBAAkB,EAKvC,SAASK,KACL,OAAOR,GAAiBC,OAAOnB,MAKnC,SAAS2B,KACL,OAAOT,GAAiBC,OAAOxE,MAanC,SAASiF,GAAcC,GACnBX,GAAiBC,OAAOW,aAAeD,EAE3C,SAASE,KACL,OAAOb,GAAiBC,OAAOa,sBAEnC,SAASC,GAAyBlD,EAAOmD,GACrChB,GAAiBC,OAAOa,sBAAwBjD,EAChDmC,GAAiBC,OAAOe,SAAWA,EAEvC,SAASC,KACL,OAAOjB,GAAiBC,OAAOe,SAEnC,SAASE,KACLlB,GAAiBC,OAAOe,UAAW,EAQvC,SAASG,KAEL,OAAOnB,GAAiBI,mBAE5B,SAASgB,GAAsBC,GAC3BrB,GAAiBI,mBAAqBiB,EAG1C,SAASC,KACL,IAAIrB,EAASD,GAAiBC,OAC1BnT,EAAQmT,EAAOsB,iBAInB,OAHe,IAAXzU,IACAA,EAAQmT,EAAOsB,iBAAmBtB,EAAOxE,MAAM+F,mBAE5C1U,EAEX,SAAS2U,KACL,OAAOzB,GAAiBC,OAAOyB,aAEnC,SAASC,GAAgBzX,GACrB,OAAO8V,GAAiBC,OAAOyB,aAAexX,EAElD,SAAS0X,KACL,OAAO5B,GAAiBC,OAAOyB,eAEnC,SAASG,GAAsBC,GAC3B,IAAI7B,EAASD,GAAiBC,OAC1BnT,EAAQmT,EAAOyB,aAEnB,OADAzB,EAAOyB,aAAezB,EAAOyB,aAAeI,EACrChV,EAaX,SAASiV,GAA8BR,EAAkBS,GACrD,IAAI/B,EAASD,GAAiBC,OAC9BA,EAAOyB,aAAezB,EAAOsB,iBAAmBA,EAChDU,GAAyBD,GAe7B,SAASC,GAAyBD,GAC9BhC,GAAiBC,OAAO+B,sBAAwBA,EAQpD,SAASE,GAAuBC,GAC5B,IAAIH,EAAwBhC,GAAiBC,OAAO+B,sBACpD,OAAkC,IAA3BA,EAA+B,KAAOG,EAAMH,GAEvD,SAASI,KACL,OAAOpC,GAAiBC,OAAOoC,kBAEnC,SAASC,GAAqBpY,GAC1B8V,GAAiBC,OAAOoC,kBAAoBnY,EAOhD,SAASqY,GAAQC,EAAS3E,GAEtB,IAAI4E,EAAYC,KAChB1C,GAAiBC,OAASwC,EAC1BA,EAAU3B,sBAAwBjD,EAClC4E,EAAU3D,MAAQ0D,EActB,SAASG,GAAUH,EAAS3E,GAExB,IAAI4E,EAAYC,KAaZjH,EAAQ+G,EA3pBJ,GA4pBRxC,GAAiBC,OAASwC,EAC1BA,EAAU3B,sBAAwBjD,EAClC4E,EAAU3D,MAAQ0D,EAClBC,EAAUhH,MAAQA,EAClBgH,EAAU7B,aAAe4B,EACzBC,EAAUf,aAAejG,EAAM+F,kBAKnC,SAASkB,KACL,IAAIE,EAAgB5C,GAAiBC,OACjC4C,EAAgC,OAAlBD,EAAyB,KAAOA,EAAcE,MAEhE,OADgC,OAAhBD,EAAuB3C,GAAa0C,GAAiBC,EAGzE,SAAS3C,GAAa6C,GAClB,IAAI9C,EAAS,CACTa,sBAAuB,KACvBE,UAAU,EACVlC,MAAO,KACPrD,MAAO,KACPuH,cAAe,EACfpC,aAAc,KACdqC,kBAAmB,EACnBC,iBAAkB,KAClBC,iBAAkB,KAClBnB,uBAAwB,EACxBT,kBAAmB,EACnBG,cAAe,EACfW,kBAAmB,EACnBU,OAAQA,EACRD,MAAO,MAGX,OADW,OAAXC,IAAoBA,EAAOD,MAAQ7C,GAC5BA,EAWX,SAASmD,KACL,IAAIC,EAAYrD,GAAiBC,OAIjC,OAHAD,GAAiBC,OAASoD,EAAUN,OACpCM,EAAUvC,sBAAwB,KAClCuC,EAAUvE,MAAQ,KACXuE,EAQX,IAAIC,GAAUF,GASd,SAASG,KACL,IAAIF,EAAYD,KAChBC,EAAUrC,UAAW,EACrBqC,EAAU5H,MAAQ,KAClB4H,EAAUL,cAAgB,EAC1BK,EAAUzC,aAAe,KACzByC,EAAUJ,kBAAoB,EAC9BI,EAAUrB,uBAAyB,EACnCqB,EAAUH,iBAAmB,KAC7BG,EAAUF,iBAAmB,KAC7BE,EAAU9B,kBAAoB,EAC9B8B,EAAU3B,cAAgB,EAC1B2B,EAAUhB,kBAAoB,EAsBlC,SAASmB,KACL,OAAOxD,GAAiBC,OAAO+C,cAWnC,SAASS,GAAiB3W,GACtBkT,GAAiBC,OAAO+C,cAAgBlW,EAK5C,SAAS4W,KACL,IAAIzD,EAASD,GAAiBC,OAC9B,OAAOhB,GAASgB,EAAOxE,MAAOwE,EAAO+C,eAOzC,SAASW,KACL3D,GAAiBC,OAAOiD,iBAlnBR,6BAynBpB,SAASU,KACL5D,GAAiBC,OAAOiD,iBAznBJ,iCAioBxB,SAASW,MAOT,SAASC,IACL9D,GAAiBC,OAAOiD,iBAAmB,KAP3CY,GA6EJ,SAASC,GAAuBtI,EAAOoC,GAKnC,IAAK,IAAIvU,EAAIuU,EAAMmG,eAAgBlM,EAAM+F,EAAMoG,aAAc3a,EAAIwO,EAAKxO,IAAK,CACvE,IAAI4a,EAAezI,EAAMR,KAAK3R,GAC1B4a,EAAanK,mBACZ0B,EAAM0I,eAAiB1I,EAAM0I,aAAe,KAAK1Z,MAAMnB,EAAG4a,EAAanK,kBAExEmK,EAAajK,uBACZwB,EAAM0I,eAAiB1I,EAAM0I,aAAe,KAAK1Z,KAAKnB,EAAG4a,EAAajK,sBACtEwB,EAAM2I,oBAAsB3I,EAAM2I,kBAAoB,KAClD3Z,KAAKnB,EAAG4a,EAAajK,sBAE1BiK,EAAa/J,gBACZsB,EAAM4I,YAAc5I,EAAM4I,UAAY,KAAK5Z,MAAMnB,EAAG4a,EAAa/J,eAElE+J,EAAa7J,oBACZoB,EAAM4I,YAAc5I,EAAM4I,UAAY,KAAK5Z,KAAKnB,EAAG4a,EAAa7J,mBAChEoB,EAAM6I,iBAAmB7I,EAAM6I,eAAiB,KAAK7Z,KAAKnB,EAAG4a,EAAa7J,mBAEjD,MAA1B6J,EAAa3J,YACZkB,EAAM8I,eAAiB9I,EAAM8I,aAAe,KAAK9Z,KAAKnB,EAAG4a,EAAa3J,YAoCnF,SAASiK,GAAkB1F,EAAO2F,EAAOpF,GACrCqF,GAAU5F,EAAO2F,EAAO,EAA4BpF,GAexD,SAASsF,GAAyB7F,EAAO2F,EAAOG,EAAWvF,IAGnC,EAAfP,EAz8BG,MAy8B4C8F,GAChDF,GAAU5F,EAAO2F,EAAOG,EAAWvF,GAG3C,SAASwF,GAAwB/F,EAAO8F,GAGpC,IAAI/Q,EAAQiL,EAh9BJ,IAi9BK,EAARjL,KAAwC+Q,IACzC/Q,GAAS,KAETiL,EAp9BI,GAm9BJjL,GAAS,GAkBjB,SAAS6Q,GAAUI,EAAatO,EAAKoO,EAAWG,GAQ5C,IALA,IAGIC,EAAqC,MAApBD,EAA2BA,GAAoB,EAChEE,EAAqB,EAChB3b,OAL6BmF,IAArBsW,EACuB,MAAnCD,EAz9BiB,IA09BlB,EAGqBxb,EAAIkN,EAAI/M,OAAQH,IAErC,GAAoB,iBADTkN,EAAIlN,EAAI,IAGf,GADA2b,EAAqBzO,EAAIlN,GACD,MAApByb,GAA4BE,GAAsBF,EAClD,WAIavO,EAAIlN,GAAK,IAEtBwb,EAx+BU,KAw+B0B,QACpCG,EAAqBD,IAAqC,GAAnBA,KACvCE,GAASJ,EAAaF,EAAWpO,EAAKlN,GACtCwb,EA3+BU,KA4+B8B,WAAnCA,EA5+BK,KA4+B8Exb,EAChF,GAEZA,IAYZ,SAAS4b,GAASJ,EAAaF,EAAWpO,EAAKlN,GAC3C,IAAI6b,EAAa3O,EAAIlN,GAAK,EACtB8b,EAAO5O,EAAIlN,EAAI,GAEf+b,EAAYP,EADKK,GAAc3O,EAAIlN,GAAKkN,EAAIlN,IAE5C6b,EAC4BL,EAjhCxB,IAihC8C,GAI7CA,EArgCa,KAqgCuB,KACf,EAArBA,EAthCD,MAshCsDF,IACtDE,EAvhCA,IAuhCsB,KACtBM,EAAK1b,KAAK2b,IAIdD,EAAK1b,KAAK2b;;;;;;;OAWlB,IAkGIC,GACA,SAASA,GAIT9d,EAIA+d,EAAgBC,GACZrd,KAAKX,QAAUA,EAKfW,KAAKsd,WAAY,EACjBtd,KAAKud,oBAAsBH,EAC3Bpd,KAAKwd,WAAaH,GA0E1B,SAASI,GAAgBrH,EAAUsH,EAAQC,GAGvC,IAFA,IAAIC,EAASzH,GAAqBC,GAC9BjV,EAAI,EACDA,EAAIwc,EAAMrc,QAAQ,CACrB,IAAIS,EAAQ4b,EAAMxc,GAClB,GAAqB,iBAAVY,EAAoB,CAG3B,GAAc,IAAVA,EACA,MAIJZ,IACA,IAAI0c,EAAeF,EAAMxc,KACrB2c,EAAWH,EAAMxc,KACjB4c,EAAUJ,EAAMxc,KAEpByc,EACIxH,EAAS4H,aAAaN,EAAQI,EAAUC,EAASF,GACjDH,EAAOO,eAAeJ,EAAcC,EAAUC,QAK9CA,EAAUJ,IAAQxc,GAGlB+c,GAJAJ,EAAW/b,GAKP6b,GACAxH,EAAS+H,YAAYT,EAAQI,EAAUC,GAI3CH,EACIxH,EAAS4H,aAAaN,EAAQI,EAAUC,GACxCL,EAAOM,aAAaF,EAAUC,GAEtC5c,IAOR,OAAOA,EASX,SAASid,GAA0BC,GAC/B,OAAkB,IAAXA,GAA0C,IAAXA,GACvB,IAAXA,EAER,SAASH,GAAgBjb,GAIrB,OAA8B,KAAvBA,EAAKqb,WAAW,GAU3B,SAASC,GAAe/P,EAAKgQ,GACzB,GAAY,OAARA,GAA+B,IAAfA,EAAIld,aAGnB,GAAY,OAARkN,GAA+B,IAAfA,EAAIlN,OAEzBkN,EAAMgQ,EAAI9P,aAIV,IADA,IAAI+P,GAAa,EACRtd,EAAI,EAAGA,EAAIqd,EAAIld,OAAQH,IAAK,CACjC,IAAIsN,EAAO+P,EAAIrd,GACK,iBAATsN,EACPgQ,EAAYhQ,EAGM,IAAdgQ,GAMAC,GAAmBlQ,EAAKiQ,EAAWhQ,EAAM,MAHrB,IAAfgQ,GACS,IAAdA,EAE+CD,IAAMrd,GAIN,MAK/D,OAAOqN,EAWX,SAASkQ,GAAmBlQ,EAAK6P,EAAQM,EAAMC,EAAM7c,GACjD,IAAIZ,EAAI,EAEJ0d,EAAuBrQ,EAAIlN,OAE/B,IAAgB,IAAZ+c,EACAQ,GAAwB,OAGxB,KAAO1d,EAAIqN,EAAIlN,QAAQ,CACnB,IAAIwd,EAAWtQ,EAAIrN,KACnB,GAAwB,iBAAb2d,EAAuB,CAC9B,GAAIA,IAAaT,EAAQ,CACrBQ,GAAwB,EACxB,MAEC,GAAIC,EAAWT,EAAQ,CAExBQ,EAAuB1d,EAAI,EAC3B,QAMhB,KAAOA,EAAIqN,EAAIlN,QAAQ,CACnB,IAAImN,EAAOD,EAAIrN,GACf,GAAoB,iBAATsN,EAGP,MAEC,GAAIA,IAASkQ,EAAM,CAEpB,GAAa,OAATC,EAIA,YAHc,OAAV7c,IACAyM,EAAIrN,EAAI,GAAKY,IAIhB,GAAI6c,IAASpQ,EAAIrN,EAAI,GAEtB,YADAqN,EAAIrN,EAAI,GAAKY,GAKrBZ,IACa,OAATyd,GACAzd,IACU,OAAVY,GACAZ,KAGsB,IAA1B0d,IACArQ,EAAIO,OAAO8P,EAAsB,EAAGR,GACpCld,EAAI0d,EAAuB,GAE/BrQ,EAAIO,OAAO5N,IAAK,EAAGwd,GACN,OAATC,GACApQ,EAAIO,OAAO5N,IAAK,EAAGyd,GAET,OAAV7c,GACAyM,EAAIO,OAAO5N,IAAK,EAAGY;;;;;;;OAY3B,SAASgd,GAAkBC,GACvB,OAvXqB,IAuXdA,EAEX,SAASC,GAAuBD,GAC5B,OAAwB,MAAjBA,EAEX,SAASE,GAA4BF,GACjC,OAAOA,GAAkB,GAW7B,SAASG,GAAsBC,EAAUC,GAOrC,IANA,IAAIC,EAAaJ,GAA4BE,GACzCG,EAAaF,EAKVC,EAAa,GAChBC,EAAaA,EA76CE,IA86CfD,IAEJ,OAAOC;;;;;;;OAeX,SAASC,GAAgBzd,GACrB,MAAqB,iBAAVA,EACAA,EACE,MAATA,EACO,GACJ,GAAKA,EAOhB,SAAS0d,GAAkB1d,GACvB,MAAqB,mBAAVA,EACAA,EAAMkB,MAAQlB,EAAMa,WACV,iBAAVb,GAA+B,MAATA,GAAuC,mBAAfA,EAAM8E,KACpD9E,EAAM8E,KAAK5D,MAAQlB,EAAM8E,KAAKjE,WAElC4c,GAAgBzd,GAE3B,IAAI2d,IAA2E,oBAA1BC,uBACjDA,uBACAC,YAEC/b,KAAKyF,GAKV,SAASuW,GAAgBC,GACrB,MAAO,CAAE7c,KAAM,SAAUgC,OAAQ6a,EAAQC,cAAcC,aAM3D,SAASC,GAAkBH,GACvB,MAAO,CAAE7c,KAAM,WAAYgC,OAAQ6a,EAAQC,eAM/C,SAASG,GAAcJ,GACnB,MAAO,CAAE7c,KAAM,OAAQgC,OAAQ6a,EAAQC,cAAcI,MAoBzD,SAASC,GAAcre,GACnB,OAAIA,aAAiBse,SACVte,IAGAA;;;;;;;OA+Cf,IAAIue,IAAuB,EAC3B,SAASC,GAAwBC,GAC7B,IAAIC,EAAWH,GAEf,OADAA,GAAuBE,EAChBC,EAOX,IAGIC,GAAkB,EA8CtB,SAASC,GAA+BjL,EAAOyB,GAC3C,IAAIyJ,EAAwBC,GAAiBnL,EAAOyB,GACpD,IAA+B,IAA3ByJ,EACA,OAAOA,EAEX,IAAItN,EAAQ6D,EAloDJ,GAmoDJ7D,EAAMwN,kBACNpL,EAAMqL,cAAgB5J,EAAS7V,OAC/B0f,GAAY1N,EAAMR,KAAM4C,GACxBsL,GAAY7J,EAAU,MACtB6J,GAAY1N,EAAM2N,UAAW,OAEjC,IAAIC,EAAYC,GAA0BzL,EAAOyB,GAC7C4J,EAAgBrL,EAAMqL,cAG1B,GAAIhC,GAAkBmC,GAMlB,IALA,IAAIE,EAAcnC,GAAuBiC,GACrCG,EAAclC,GAAsB+B,EAAW/J,GAC/CmK,EAAaD,EAhpDb,GAgpDgCvO,KAG3B3R,EAAI,EAAGA,EAAI,EAAGA,IACnBgW,EAAS4J,EAAgB5f,GAAKkgB,EAAYD,EAAcjgB,GAAKmgB,EAAWF,EAAcjgB,GAI9F,OADAgW,EAAS4J,EA9mBS,GA8mB0BG,EACrCH,EAEX,SAASC,GAAY3S,EAAKkT,GACtBlT,EAAI/L,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGif,GAErC,SAASV,GAAiBnL,EAAOyB,GAC7B,OAA6B,IAAzBzB,EAAMqL,eAGLrL,EAAMkF,QAAUlF,EAAMkF,OAAOmG,gBAAkBrL,EAAMqL,eAGH,MAAnD5J,EAASzB,EAAMqL,cA3nBD,IA4nBN,EAGDrL,EAAMqL,cASrB,SAASI,GAA0BzL,EAAOsB,GACtC,GAAItB,EAAMkF,SAA0C,IAAhClF,EAAMkF,OAAOmG,cAC7B,OAAOrL,EAAMkF,OAAOmG,cAOxB,IAFA,IAAIS,EAAYxK,EAnrDP,GAorDLsI,EAAa,EACVkC,IAA0C,IAA7BA,EAAUT,eAE1BS,GADAxK,EAAOA,EA7qDQ,KA8qDIA,EAvrDd,GAurD6B,KAClCsI,IAEJ,OAAOkC,EACHA,EAAUT,cAAiBzB,GAAc,IACxC,EAST,SAASmC,GAAmBV,EAAezN,EAAOhO,IAlHlD,SAASoc,EAASX,EAAezN,EAAOzM,GAEpC,IAAIoM,EAAqB,iBAATpM,EAAoBA,EAAK0D,IAAiB1D,EAAKyX,WAAW,IAAM,EAGtE,MAANrL,IACAA,EAAKpM,EAAK0D,IAAiBmW,MAI/B,IAAIiB,EArBSC,IAqBE3O,EAIX4O,EAAO,GAAKF,EAIZG,EAAgB,GAAXH,EACLI,EAAgB,GAAXJ,EACL3H,EAAQ1G,EAAMR,KAHE,IAAX6O,EAKLG,EAAMC,EAAM/H,EAAM+G,EAAgB,IAAMc,EAAS7H,EAAM+G,EAAgB,IAAMc,EACxEE,EAAM/H,EAAM+G,EAAgB,IAAMc,EAAS7H,EAAM+G,EAAgB,IAAMc,EAG5EC,EAAMC,EAAM/H,EAAM+G,EAAgB,IAAMc,EAAS7H,EAAM+G,EAAgB,IAAMc,EACxEE,EAAM/H,EAAM+G,EAAgB,IAAMc,EAAS7H,EAAM+G,IAAkBc,EAwF5EH,CAASX,EAAezN,EAAOhO,GA8FnC,SAAS0c,GAAsBtM,EAAOiB,EAAOrR,EAAOoG,EAAOO,GAEvD,QADc,IAAVP,IAAoBA,EAAQpM,EAAQ8F,YAAYuG,SACtC,OAAV+J,EAAgB,CAChB,IAAIuM,EAwOZ,SAASC,EAAsB5c,GAE3B,GAAqB,iBAAVA,EACP,OAAOA,EAAMgZ,WAAW,IAAM,EAElC,IAAI6D,EAAU7c,EAAMiF,IAEpB,MAA2B,iBAAZ4X,GAAwBA,EAAU,EA9cpCP,IA8cyCO,EAAuBA,EA/OzDD,CAAsB5c,GAGtC,GAAyB,mBAAd2c,EAA0B,CACjC7H,GAAQzD,EAAOjB,GACf,IACI,IAAI3T,EAAQkgB,IACZ,GAAa,MAATlgB,GAAmB2J,EAAQpM,EAAQ8F,YAAYG,SAI/C,OAAOxD,EAHP,MAAM,IAAIiE,MAAM,mBAAqByZ,GAAkBna,GAAS,KAMxE,QACI6V,WAGH,GAAwB,iBAAb8G,EAAuB,CACnC,IAAmB,IAAfA,EAEA,OAAO,IAAIG,GAAa1M,EAAOiB,GAMnC,IAAI0L,EAAgB,KAChBtB,EAAgBF,GAAiBnL,EAAOiB,GACxCqI,GA9xBS,EA+xBTsD,EAAmB5W,EAAQpM,EAAQ8F,YAAYM,KAAOiR,EA3zDrC,IAVpB,GAq0DqG,KAkBtG,MAduB,IAAnBoK,GAAwBrV,EAAQpM,EAAQ8F,YAAYK,YACpDuZ,GAAoC,IAAnB+B,EAAuBI,GAA0BzL,EAAOiB,GACrEA,EAAMoK,EAvyBJ,GAwyBDwB,GAAmB7W,GAAO,IAI3B2W,EAAgB1L,EAr1DxB,GAs1DQoK,EAAgB9B,GAAuBD,GACvCrI,EAAQwI,GAAsBH,EAAgBrI,IAL9CoK,GAAiB,IAUC,IAAnBA,GAAsB,CACzB/B,EAAiBrI,EAAMoK,EApzBjB,GAszBN,IAAIzN,EAAQqD,EA/1DhB,GAg2DI,GAAI6L,GAAcP,EAAWlB,EAAezN,EAAMR,MAAO,CAIrD,IAAI2P,EAAWC,GAAuB3B,EAAepK,EAAOrR,EAAO+c,EAAe3W,EAAO4W,GACzF,GAAIG,IAAaE,GACb,OAAOF,EAGXF,GAAmB7W,EAAOiL,EAz2DlC,GAy2D+C7D,KAAKiO,EAj0BpD,KAi0B+EuB,IACvEE,GAAcP,EAAWlB,EAAepK,IAGxC0L,EAAgB/O,EAChByN,EAAgB9B,GAAuBD,GACvCrI,EAAQwI,GAAsBH,EAAgBrI,IAM9CoK,GAAiB,IASjC,GAJIrV,EAAQpM,EAAQ8F,YAAYG,eAA8Be,IAAlB2F,IAExCA,EAAgB,MAEoD,IAAnEP,GAASpM,EAAQ8F,YAAYI,KAAOlG,EAAQ8F,YAAYM,OAAc,CACvE,IAAIkd,EAAiBjM,EAv3DZ,GA23DLkM,EAA+BvX,QAAwBhF,GAC3D,IACI,OAAIsc,EACOA,EAAe/W,IAAIvG,EAAO2G,EAAeP,EAAQpM,EAAQ8F,YAAYG,UAGrEqG,GAAmBtG,EAAO2G,EAAeP,EAAQpM,EAAQ8F,YAAYG,UAGpF,QACI+F,GAAwBuX,IAGhC,GAAInX,EAAQpM,EAAQ8F,YAAYG,SAC5B,OAAO0G,EAGP,MAAM,IAAIjG,MAAM,4BAA8ByZ,GAAkBna,GAAS,KAGjF,IAAIqd,GAAY,GAChB,SAASD,GAAuB3B,EAAepK,EAAOrR,EAAO+c,EAAe3W,EAAO4W,GAC/E,IAAIQ,EAAenM,EAz5DX,GA05DJjB,EAAQoN,EAAahQ,KAAKiO,EAl3BtB,GAw4BJgC,EAAgBC,GAA0BtN,EAAOoN,EAAcxd,EAnBrB,MAAjB+c,EAQxB1M,GAAgBD,IAAU4K,GAO1B+B,GAAiBS,GAAgC,IAAfpN,EAAM7O,KAGpB6E,EAAQpM,EAAQ8F,YAAYM,MAAS4c,IAAqB5M,GAEnF,OAAsB,OAAlBqN,EACOE,GAAkBtM,EAAOmM,EAAcC,EAAerN,GAGtDiN,GAaf,SAASK,GAA0BtN,EAAOpC,EAAOhO,EAAO4d,EAAwBC,GAU5E,IATA,IAAIC,EAAsB1N,EAAM2N,gBAC5BC,EAAehQ,EAAMR,KACrByQ,EAAyC,MAAtBH,EACnBI,EAAkB9N,EAAMmG,eAExB4H,EAAwBL,GAAuB,GAG/CM,EAAWP,EAAoBI,EAAmBE,EAJnC/N,EAAMoG,aAKhB3a,EAHW+hB,EAAyBK,EAAmBA,EAAmBE,EAGvDtiB,EAAIuiB,EAAUviB,IAAK,CAC3C,IAAIwiB,EAAqBL,EAAaniB,GACtC,GAAIA,EAAIqiB,GAAmBle,IAAUqe,GACjCxiB,GAAKqiB,GAAmBG,EAAmB9c,OAASvB,EACpD,OAAOnE,EAGf,GAAIgiB,EAAmB,CACnB,IAAIS,EAASN,EAAaE,GAC1B,GAAII,GAAU/N,GAAe+N,IAAWA,EAAO/c,OAASvB,EACpD,OAAOke,EAGf,OAAO,KASX,SAASP,GAAkBtM,EAAOrD,EAAO3O,EAAO+Q,GAC5C,IAAI3T,EAAQ4U,EAAMhS,GACdqV,EAAQ1G,EAAMR,KAClB,GAt0BJ,SAAS+Q,EAAU/W,GACf,OAAOA,aAAeqQ,GAq0BlB0G,CAAU9hB,GAAQ,CAClB,IAAI1C,EAAU0C,EACd,GAAI1C,EAAQie,UACR,MAAM,IAAItX,MAAM,oBAAsByZ,GAAkBzF,EAAMrV,KAElE,IAAImf,EAA+BvD,GAAwBlhB,EAAQke,qBACnEle,EAAQie,WAAY,EACpB,IAAIuF,OAA+B,EAC/BxjB,EAAQme,aACRqF,EAA+BvX,GAAwBjM,EAAQme,aAEnEpD,GAAQzD,EAAOjB,GACf,IACI3T,EAAQ4U,EAAMhS,GAAStF,EAAQA,aAAQiH,EAAW0T,EAAOrD,EAAOjB,GAO5DpC,EAAMwN,iBAAmBnc,GAAS+Q,EAAMmG;;;;;;;;AA9pCxD,SAASkI,EAAsBC,EAAgBjI,EAAczI,GAEzD,IAAI/B,EAAYwK,EAAaxK,UAAWC,EAASuK,EAAavK,OAAQE,EAAUqK,EAAarK,QACzFH,KACC+B,EAAM2Q,gBAAkB3Q,EAAM2Q,cAAgB,KAAK3hB,KAAK0hB,EAAgBzS,IACxE+B,EAAM4Q,qBAAuB5Q,EAAM4Q,mBAAqB,KAAK5hB,KAAK0hB,EAAgBzS,IAEnFC,IACC8B,EAAM2Q,gBAAkB3Q,EAAM2Q,cAAgB,KAAK3hB,MAAM0hB,EAAgBxS,GAE1EE,KACC4B,EAAM2Q,gBAAkB3Q,EAAM2Q,cAAgB,KAAK3hB,KAAK0hB,EAAgBtS,IACxE4B,EAAM4Q,qBAAuB5Q,EAAM4Q,mBAAqB,KAAK5hB,KAAK0hB,EAAgBtS,IAopC3EqS,CAAsBpf,EAAOqV,EAAMrV,GAAQ2O,GAGnD,QACQjU,EAAQme,YACRlS,GAAwBuX,GAC5BtC,GAAwBuD,GACxBzkB,EAAQie,WAAY,EACpBnC,MAGR,OAAOpZ,EAuBX,SAASygB,GAAcP,EAAWlB,EAAeoD,GAI7C,IAEIrC,EAAiB,GAAZG,EACLF,EAAiB,GAAZE,EAeT,UAjBqB,IAAZA,EAQGH,EAAMC,EAAKoC,EAAapD,EAAgB,GAAKoD,EAAapD,EAAgB,GAC7EgB,EAAKoC,EAAapD,EAAgB,GAAKoD,EAAapD,EAAgB,GAGjEe,EAAMC,EAAKoC,EAAapD,EAAgB,GAAKoD,EAAapD,EAAgB,GAC7EgB,EAAKoC,EAAapD,EAAgB,GAAKoD,EAAapD,IAdlD,GAAKkB,GAqBpB,SAASM,GAAmB7W,EAAO0Y,GAC/B,QAAS1Y,EAAQpM,EAAQ8F,YAAYI,MAAWkG,EAAQpM,EAAQ8F,YAAYM,MAAQ0e,GAExF,IAAIhC,GAA8B,WAC9B,SAASA,EAAaiC,EAAQC,GAC1BtkB,KAAKqkB,OAASA,EACdrkB,KAAKskB,OAASA,EAKlB,OAHAlC,EAAavhB,UAAUgL,IAAM,SAAUvG,EAAO2G,GAC1C,OAAO+V,GAAsBhiB,KAAKqkB,OAAQrkB,KAAKskB,OAAQhf,OAAOgB,EAAW2F,IAEtEmW,EARsB,GAajC,SAAS5U,GAAe3G,GACpB,IAAI6G,EAAU7G,EACd,GAAI8B,EAAa9B,GACb,OAAO,WACH,IAAIxH,EAAUmO,GAAe9E,EAAkBgF,IAC/C,OAAOrO,EAAUA,IAAY,MAGrC,IAAIA,EAAUgW,GAAc3H,GAC5B,GAAgB,OAAZrO,EAAkB,CAClB,IAAIklB,EAAcrd,EAAewG,GACjCrO,EAAUklB,GAAeA,EAAYllB,QAEzC,OAAOA,GAAW,KAKtB,SAASmlB,GAAsB3d,GAC3B,OAAOnE,GAAc,WACjB,IAAI+hB,EAAQrkB,OAAOskB,eAAe7d,EAAKhG,WAAWD,YAC9CvB,EAAUolB,EAAMpa,KAAmBmD,GAAeiX,GACtD,OAAgB,OAAZplB,EACOA,EAOA,SAAU4B,GAAK,OAAO,IAAIA;;;;;;;OAiC7C,SAAS0jB,GAAgBpiB,GACrB,OAAOA,EAAyB,eAEpC,SAASqiB,GAAiBriB,GACtB,OAAOA,EAA0B,gBAKrC,SAASsiB,GAAmBC,GAExB,IADA,IAAI1gB,EAAS,GACJT,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpCS,EAAOT,EAAK,GAAKtC,UAAUsC,GAE/BmhB,EAAQviB,MAAMf,MAAMsjB,EAAStiB,EAAS4B;;;;;;;OAmC1C,IAAI2gB,GAA8B,WAC9B,SAASA,IAIL/kB,KAAKglB,SAAWF,QAgCpB,OA9BAC,EAAalkB,UAAUokB,YAAc,SAAU1iB,GAC3C,IAAI2iB,EAAgBllB,KAAKmlB,mBAAmB5iB,GACxC0K,EAAUjN,KAAKolB,aAAa7iB,GAG5B8iB,EAvDZ,SAASC,EAAe/iB,GACpB,OAAOA,EAAkB,eAAKsiB,GAsDRS,CAAe/iB,GACjC8iB,EAAYrlB,KAAKglB,SAAU,QAASziB,GAChC2iB,GACAG,EAAYrlB,KAAKglB,SAAU,iBAAkBE,GAE7CjY,GACAoY,EAAYrlB,KAAKglB,SAAU,gBAAiB/X,IAIpD8X,EAAalkB,UAAUukB,aAAe,SAAU7iB,GAC5C,OAAIA,EACOoiB,GAAgBpiB,GAASoiB,GAAgBpiB,GAC5CvC,KAAKolB,aAAaR,GAAiBriB,IAEpC,MAGXwiB,EAAalkB,UAAUskB,mBAAqB,SAAU5iB,GAElD,IADA,IAAIH,EAAIwiB,GAAiBriB,GAClBH,GAAKwiB,GAAiBxiB,IACzBA,EAAIwiB,GAAiBxiB,GAEzB,OAAOA,GAEJ2iB,EArCsB,GA0E7BQ,GAA+B,WAC/B,SAASA,EAAcC,GACnBxlB,KAAKwlB,sCAAwCA,EAMjD,OAJAD,EAAc1kB,UAAU+B,SAAW,WAC/B,MAAO,0CAA4C5C,KAAKwlB,sCACpD,sCAEDD,EARuB,GAU9BE,GAA8B,SAAUC,GAExC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOlkB,MAAMxB,KAAMqB,YAAcrB,KAK/D,OAPAU,EAAU+kB,EAAcC,GAIxBD,EAAa5kB,UAAU8kB,YAAc,WACjC,MAAO,QAEJF,EARsB,CAS/BF,IACEK,GAA+B,SAAUF,GAEzC,SAASE,IACL,OAAkB,OAAXF,GAAmBA,EAAOlkB,MAAMxB,KAAMqB,YAAcrB,KAK/D,OAPAU,EAAUklB,EAAeF,GAIzBE,EAAc/kB,UAAU8kB,YAAc,WAClC,MAAO,SAEJC,EARuB,CAShCL,IACEM,GAAgC,SAAUH,GAE1C,SAASG,IACL,OAAkB,OAAXH,GAAmBA,EAAOlkB,MAAMxB,KAAMqB,YAAcrB,KAK/D,OAPAU,EAAUmlB,EAAgBH,GAI1BG,EAAehlB,UAAU8kB,YAAc,WACnC,MAAO,UAEJE,EARwB,CASjCN,IACEO,GAA6B,SAAUJ,GAEvC,SAASI,IACL,OAAkB,OAAXJ,GAAmBA,EAAOlkB,MAAMxB,KAAMqB,YAAcrB,KAK/D,OAPAU,EAAUolB,EAAaJ,GAIvBI,EAAYjlB,UAAU8kB,YAAc,WAChC,MAAO,OAEJG,EARqB,CAS9BP,IACEQ,GAAqC,SAAUL,GAE/C,SAASK,IACL,OAAkB,OAAXL,GAAmBA,EAAOlkB,MAAMxB,KAAMqB,YAAcrB,KAK/D,OAPAU,EAAUqlB,EAAqBL,GAI/BK,EAAoBllB,UAAU8kB,YAAc,WACxC,MAAO,eAEJI,EAR6B,CAStCR;;;;;;;OACF,SAASS,GAAgBjkB,GACrB,OAAOA,aAAiBwjB,GAAgBxjB,EAAMyjB,sCAC1CzjB,EAER,SAASkkB,GAAgClkB,EAAO8E,GAC5C,IAAIqf,EAAaC,GAA0BpkB,GAC3C,GAAkB,MAAdmkB,GAAsBA,IAAerf,EAAM,CAE3C,GAAmB,gBAAfqf,GAA2D,QAATrf,EAClD,OAAO,EACX,MAAM,IAAIb,MAAM,mBAAqBa,EAAO,WAAaqf,EAAa,sCAE1E,OAAOA,IAAerf,EAE1B,SAASsf,GAA0BpkB,GAC/B,OAAOA,aAAiBwjB,IAAiBxjB,EAAM4jB,eAAiB;;;;;;;;AA4EpE,IAAIS,IAAW,EACXC,IAAiB,EASrB,SAASC,KAEL,OADAD,IAAiB,EACVD;;;;;;;;AAkCX,IAAIG,GAAiC,WACjC,SAASA,EAAgBC,GACrBxmB,KAAKwmB,WAAaA,EAClBxmB,KAAKymB,cAAgBzmB,KAAKwmB,WAAWE,eAAeC,mBAAmB,sBACvE,IAAIC,EAAmB5mB,KAAKymB,cAActG,KAC1C,GAAwB,MAApByG,EAA0B,CAG1B,IAAIC,EAAY7mB,KAAKymB,cAAcK,cAAc,QACjD9mB,KAAKymB,cAAcM,YAAYF,GAC/BD,EAAmB5mB,KAAKymB,cAAcK,cAAc,QACpDD,EAAUE,YAAYH,GAE1BA,EAAiBI,UAAY,wDACzBJ,EAAiBK,eAAkBL,EAAiBK,cAAc,QAMtEL,EAAiBI,UAAY,mEAOrBhnB,KAAKknB,oBANTN,EAAiBK,eAAiBL,EAAiBK,cAAc,YAuH7E,SAASE,IACL,IACI,QAASje,OAAOke,UAEpB,MAAO3jB,GACH,OAAO;;;;;;;OAvHC0jB,GAC2BnnB,KAAKqnB,8BAKbrnB,KAAKsnB,mCAf5BtnB,KAAKknB,oBAAsBlnB,KAAKunB,wBAkHxC,OA5FAhB,EAAgB1lB,UAAU0mB,wBAA0B,SAAUC,GAI1DA,EAAO,0BAA4BA,EAAO,UAC1C,IACIA,EAAOC,UAAUD,GAErB,MAAO/jB,GACH,OAAO,KAEX,IAAIikB,EAAM,IAAIC,eACdD,EAAIE,aAAe,WACnBF,EAAIG,KAAK,MAAO,gCAAkCL,GAAM,GACxDE,EAAII,UAAKxhB,GACT,IAAI6Z,EAAOuH,EAAIK,SAAS5H,KAExB,OADAA,EAAK6H,YAAY7H,EAAK8H,YACf9H,GAOXoG,EAAgB1lB,UAAUwmB,8BAAgC,SAAUG,GAIhEA,EAAO,0BAA4BA,EAAO,UAC1C,IACI,IAAIrH,GAAO,IAAIjX,OAAOke,WAAYc,gBAAgBV,EAAM,aAAarH,KAErE,OADAA,EAAK6H,YAAY7H,EAAK8H,YACf9H,EAEX,MAAO1c,GACH,OAAO,OASf8iB,EAAgB1lB,UAAUymB,kCAAoC,SAAUE,GAEpE,IAAIW,EAAanoB,KAAKymB,cAAcK,cAAc,YAClD,GAAI,YAAaqB,EAEb,OADAA,EAAWnB,UAAYQ,EAChBW,EASX,IAAIC,EAAYpoB,KAAKymB,cAAcK,cAAc,QAOjD,OANAsB,EAAUpB,UAAYQ,EAGlBxnB,KAAKwmB,WAAW6B,cAChBroB,KAAKsoB,mBAAmBF,GAErBA,GAUX7B,EAAgB1lB,UAAUynB,mBAAqB,SAAUC,GAGrD,IAFA,IAAIC,EAAUD,EAAGE,WAERtnB,EAAIqnB,EAAQlnB,OAAS,EAAG,EAAIH,EAAGA,IAAK,CACzC,IACI2c,EADS0K,EAAQ/Z,KAAKtN,GACJ8B,KACL,cAAb6a,GAAyD,IAA7BA,EAAS5V,QAAQ,SAC7CqgB,EAAGG,gBAAgB5K,GAI3B,IADA,IAAI6K,EAAYJ,EAAGN,WACZU,GACCA,EAAUC,WAAaC,KAAKC,cAC5B9oB,KAAKsoB,mBAAmBK,GAC5BA,EAAYA,EAAUI,aAGvBxC,EAnIyB,GAsLhCyC,GAAmB,8DAInBC,GAAmB,uIACvB,SAASC,GAAaC,GAElB,OADAA,EAAMne,OAAOme,IACLC,MAAMJ,KAAqBG,EAAIC,MAAMH,IAClCE,GACP7C,MACAxB,QAAQuE,KAAK,wCAA0CF,EAAM,sCAE1D,UAAYA,GAEvB,SAASG,GAAeC,GAEpB,OADAA,EAASve,OAAOue,IACFC,MAAM,KAAK3hB,KAAI,SAAU0hB,GAAU,OAAOL,GAAaK,EAAOE,WAAY3hB,KAAK;;;;;;;OAUjG,SAAS4hB,GAAOC,GACZ,IAAIC,EAAKnmB,EACLuE,EAAM,GACV,IACI,IAAK,IAAI6hB,EAAKpoB,EAASkoB,EAAKH,MAAM,MAAOM,EAAKD,EAAG/nB,QAASgoB,EAAG9nB,KAAM8nB,EAAKD,EAAG/nB,OAEvEkG,EADQ8hB,EAAG/nB,QACF,EAGjB,MAAOgoB,GAASH,EAAM,CAAErnB,MAAOwnB,GAC/B,QACI,IACQD,IAAOA,EAAG9nB,OAASyB,EAAKomB,EAAGG,SAASvmB,EAAGlC,KAAKsoB,GAEpD,QAAU,GAAID,EAAK,MAAMA,EAAIrnB,OAEjC,OAAOyF,EAEX,SAASiiB,KAGL,IAFA,IAAIC,EAAKzmB,EACL0mB,EAAO,GACFxmB,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpCwmB,EAAKxmB,GAAMtC,UAAUsC,GAEzB,IAAIqE,EAAM,GACV,IACI,IAAK,IAAIoiB,EAAS3oB,EAAS0oB,GAAOE,EAAWD,EAAOtoB,QAASuoB,EAASroB,KAAMqoB,EAAWD,EAAOtoB,OAAQ,CAClG,IAAIZ,EAAImpB,EAAStoB,MACjB,IAAK,IAAIye,KAAKtf,EACNA,EAAET,eAAe+f,KACjBxY,EAAIwY,IAAK,IAIzB,MAAO8J,GAASJ,EAAM,CAAE3nB,MAAO+nB,GAC/B,QACI,IACQD,IAAaA,EAASroB,OAASyB,EAAK2mB,EAAOJ,SAASvmB,EAAGlC,KAAK6oB,GAEpE,QAAU,GAAIF,EAAK,MAAMA,EAAI3nB,OAEjC,OAAOyF,EAOX,IA4KIuiB,GA0DOC,GAtOPC,GAAgBf,GAAO,0BAGvBgB,GAAkChB,GAAO,kDACzCiB,GAAmCjB,GAAO,SAC1CkB,GAA4BX,GAAMU,GAAkCD,IAEpEG,GAAiBZ,GAAMS,GAAiChB,GAAO,oMAI/DoB,GAAkBb,GAAMU,GAAkCjB,GAAO,+LAGjEqB,GAAiBd,GAAMQ,GAAeI,GAAgBC,GAAiBF,IAEvEI,GAAYtB,GAAO,gEAEnBuB,GAAevB,GAAO,UACtBwB,GAAaxB,GAAO,idAMpByB,GAAazB,GAAO,4qBAapB0B,GAAcnB,GAAMe,GAAWC,GAAcC,GAAYC,IAMzDE,GAA8C3B,GAAO,yBAKrD4B,GAA0C,WAC1C,SAASA,IAGLtrB,KAAKurB,oBAAqB,EAC1BvrB,KAAKwrB,IAAM,GA6Ff,OA3FAF,EAAyBzqB,UAAU4qB,iBAAmB,SAAUlD,GAM5D,IAFA,IAAItY,EAAUsY,EAAGN,WACbyD,GAAkB,EACfzb,GAWH,GAVIA,EAAQ2Y,WAAaC,KAAKC,aAC1B4C,EAAkB1rB,KAAK2rB,aAAa1b,GAE/BA,EAAQ2Y,WAAaC,KAAK+C,UAC/B5rB,KAAK6rB,MAAM5b,EAAQ6b,WAInB9rB,KAAKurB,oBAAqB,EAE1BG,GAAmBzb,EAAQgY,WAC3BhY,EAAUA,EAAQgY,gBAGtB,KAAOhY,GAAS,CAERA,EAAQ2Y,WAAaC,KAAKC,cAC1B9oB,KAAK+rB,WAAW9b,GAEpB,IAAInO,EAAO9B,KAAKgsB,sBAAsB/b,EAASA,EAAQ8Y,aACvD,GAAIjnB,EAAM,CACNmO,EAAUnO,EACV,MAEJmO,EAAUjQ,KAAKgsB,sBAAsB/b,EAASA,EAAQgc,YAG9D,OAAOjsB,KAAKwrB,IAAI1jB,KAAK,KAUzBwjB,EAAyBzqB,UAAU8qB,aAAe,SAAU7L,GACxD,IAAIoM,EAAUpM,EAAQqM,SAASC,cAC/B,IAAKrB,GAAetqB,eAAeyrB,GAE/B,OADAlsB,KAAKurB,oBAAqB,GAClBF,GAA4C5qB,eAAeyrB,GAEvElsB,KAAKwrB,IAAIlpB,KAAK,KACdtC,KAAKwrB,IAAIlpB,KAAK4pB,GAEd,IADA,IAAI1D,EAAU1I,EAAQ2I,WACbtnB,EAAI,EAAGA,EAAIqnB,EAAQlnB,OAAQH,IAAK,CACrC,IAAIkrB,EAAS7D,EAAQ/Z,KAAKtN,GACtB2c,EAAWuO,EAAOppB,KAClBqpB,EAAQxO,EAASsO,cACrB,GAAKhB,GAAY3qB,eAAe6rB,GAAhC,CAIA,IAAIvqB,EAAQsqB,EAAOtqB,MAEfipB,GAAUsB,KACVvqB,EAAQmnB,GAAannB,IACrBkpB,GAAaqB,KACbvqB,EAAQunB,GAAevnB,IAC3B/B,KAAKwrB,IAAIlpB,KAAK,IAAKwb,EAAU,KAAMyO,GAAexqB,GAAQ,UATtD/B,KAAKurB,oBAAqB,EAYlC,OADAvrB,KAAKwrB,IAAIlpB,KAAK,MACP,GAEXgpB,EAAyBzqB,UAAUkrB,WAAa,SAAU9b,GACtD,IAAIic,EAAUjc,EAAQkc,SAASC,cAC3BrB,GAAetqB,eAAeyrB,KAAazB,GAAchqB,eAAeyrB,KACxElsB,KAAKwrB,IAAIlpB,KAAK,MACdtC,KAAKwrB,IAAIlpB,KAAK4pB,GACdlsB,KAAKwrB,IAAIlpB,KAAK,OAGtBgpB,EAAyBzqB,UAAUgrB,MAAQ,SAAUA,GACjD7rB,KAAKwrB,IAAIlpB,KAAKiqB,GAAeV,KAEjCP,EAAyBzqB,UAAUmrB,sBAAwB,SAAUQ,EAAMC,GACvE,GAAIA,IACCD,EAAKE,wBAAwBD,GAC1B5D,KAAK8D,kCAAoC9D,KAAK8D,+BAClD,MAAM,IAAI3mB,MAAM,6DAA+DwmB,EAAKI,WAExF,OAAOH,GAEJnB,EAlGkC,GAqGzCuB,GAAwB,kCAExBC,GAA0B,gBAO9B,SAASP,GAAexqB,GACpB,OAAOA,EAAMqL,QAAQ,KAAM,SACtBA,QAAQyf,IAAuB,SAAUzD,GAG1C,MAAO,MAAyB,MAFvBA,EAAM9K,WAAW,GAEJ,QADZ8K,EAAM9K,WAAW,GACqB,OAAU,OAAW,OAEpElR,QAAQ0f,IAAyB,SAAU1D,GAC5C,MAAO,KAAOA,EAAM9K,WAAW,GAAK,OAEnClR,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAOvB,SAAS2f,GAAcvG,EAAYwG,GAC/B,IAAIpG,EAAmB,KACvB,IACI2D,GAAkBA,IAAmB,IAAIhE,GAAgBC,GAEzD,IAAIyG,EAAaD,EAAkBhiB,OAAOgiB,GAAmB,GAC7DpG,EAAmB2D,GAAgBrD,oBAAoB+F,GAGvD,IAAIC,EAAe,EACfC,EAAaF,EACjB,EAAG,CACC,GAAqB,IAAjBC,EACA,MAAM,IAAIlnB,MAAM,yDAEpBknB,IACAD,EAAaE,EACbA,EAAavG,EAAiBI,UAC9BJ,EAAmB2D,GAAgBrD,oBAAoB+F,SAClDA,IAAeE,GACxB,IAAIC,EAAY,IAAI9B,GAChB+B,EAAWD,EAAU3B,iBAAiB6B,GAAmB1G,IAAqBA,GAIlF,OAHIN,MAAe8G,EAAU7B,oBACzBzG,QAAQuE,KAAK,mFAEVgE,EAEX,QAEI,GAAIzG,EAEA,IADA,IAAI2G,EAAWD,GAAmB1G,IAAqBA,EAChD2G,EAAStF,YACZsF,EAASvF,YAAYuF,EAAStF,aAK9C,SAASqF,GAAmB/E,GACxB,MAAO,YAAaA,GAIxB,SAASiF,EAAkBjF,GACvB,OAAOA,EAAGK,WAAaC,KAAKC,cAAgC,aAAhBP,EAAG4D;;;;;;;OALaqB,CAAkBjF,GAC1EA,EAAGkF,QACH,MAaGjD,GAORlrB,EAAQkrB,kBAAoBlrB,EAAQkrB,gBAAkB,KANrCA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAuB,MAAI,GAAK,QAChDA,GAAgBA,GAAwB,OAAI,GAAK,SACjDA,GAAgBA,GAAqB,IAAI,GAAK,MAC9CA,GAAgBA,GAA8B,aAAI,GAAK;;;;;;;;AAwB3D,IAMIkD,GAAmB,IAAIC,OAAO,oMAEZ,KAmBlBC,GAAS,mBA2Bb,SAASC,GAAe9rB,GAEpB,KADAA,EAAQiJ,OAAOjJ,GAAO0nB,QAElB,MAAO,GAGX,IAAIqE,EAAW/rB,EAAMqnB,MAAMwE,IAC3B,OAAKE,GAAY5E,GAAa4E,EAAS,MAAQA,EAAS,IACpD/rB,EAAMqnB,MAAMsE,KA1BpB,SAASK,EAAkBhsB,GAGvB,IAFA,IAAIisB,GAAgB,EAChBC,GAAgB,EACX9sB,EAAI,EAAGA,EAAIY,EAAMT,OAAQH,IAAK,CACnC,IAAI+sB,EAAInsB,EAAMgL,OAAO5L,GACX,MAAN+sB,GAAcD,EACdD,GAAiBA,EAEN,MAANE,GAAaF,IAClBC,GAAiBA,GAGzB,OAAOD,GAAiBC,EAcaF,CAAkBhsB,GAC5CA,GAEPukB,MACAxB,QAAQuE,KAAK,0CAA4CtnB,EAAQ,uCAE9D;;;;;;;OAyBX,SAASosB,GAAelB,GACpB,IAAIG,EAAYgB,KAChB,OAAIhB,EACOA,EAAUiB,SAAS/uB,EAAQkrB,gBAAgB8D,KAAMrB,IAAe,GAEvEhH,GAAgCgH,EAAY,QACrCjH,GAAgBiH,GAEpBF,GAAc9W,KAAeuJ,GAAgByN,IAiBxD,SAASsB,GAAgBC,GACrB,IAAIpB,EAAYgB,KAChB,OAAIhB,EACOA,EAAUiB,SAAS/uB,EAAQkrB,gBAAgBiE,MAAOD,IAAgB,GAEzEvI,GAAgCuI,EAAa,SACtCxI,GAAgBwI,GAEpBX,GAAerO,GAAgBgP,IAkB1C,SAASE,GAAcC,GACnB,IAAIvB,EAAYgB,KAChB,OAAIhB,EACOA,EAAUiB,SAAS/uB,EAAQkrB,gBAAgBoE,IAAKD,IAAc,GAErE1I,GAAgC0I,EAAW,OACpC3I,GAAgB2I,GAEpBzF,GAAa1J,GAAgBmP,IAaxC,SAASE,GAAsBC,GAC3B,IAAI1B,EAAYgB,KAChB,GAAIhB,EACA,OAAOA,EAAUiB,SAAS/uB,EAAQkrB,gBAAgBuE,aAAcD,IAAsB,GAE1F,GAAI7I,GAAgC6I,EAAmB,eACnD,OAAO9I,GAAgB8I,GAE3B,MAAM,IAAI9oB,MAAM,iFAcpB,SAASgpB,GAAiBC,GACtB,IAAI7B,EAAYgB,KAChB,GAAIhB,EACA,OAAOA,EAAUiB,SAAS/uB,EAAQkrB,gBAAgB0E,OAAQD,IAAiB,GAE/E,GAAIhJ,GAAgCgJ,EAAc,UAC9C,OAAOjJ,GAAgBiJ,GAE3B,MAAM,IAAIjpB,MAAM,yCAiCpB,SAASmpB,GAA2BR,EAAWS,EAAKC,GAChD,OAzBJ,SAASC,EAAgBF,EAAKC,GAC1B,MAAc,QAATA,IACQ,UAARD,GAA2B,UAARA,GAA2B,WAARA,GAA4B,UAARA,GAC/C,WAARA,IACM,SAATC,IAA4B,SAARD,GAA0B,SAARA,GAChCP,GAEJH,GAkBAY,CAAgBF,EAAKC,EAArBC,CAA2BX,GAQtC,IAAIY,GAA0B,SAAUF,EAAMttB,EAAOmX,GACjD,QAAc5S,IAAVvE,QAAgCuE,IAAT4S,EAIvB,OAAOqV,GAAgBc,GAG3B,IAAIG,GAAkB,EAItB,OAHW,GAFXtW,EAAOA,GAAQ,KAGXsW,EAAkBC,GAA2BJ,IAEtC,EAAPnW,EACOsW,EAAkBjB,GAAgBxsB,GAASikB,GAAgBjkB,GAG3DytB,GAGf,SAASC,GAA2BJ,GAChC,MAAgB,qBAATA,GAAwC,oBAATA,GAAuC,eAATA,GACvD,iBAATA,GAAoC,gBAATA,GAAmC,wBAATA,GAC5C,sBAATA,GAAyC,WAATA,GAA8B,eAATA,GAC5C,cAATA,GAAiC,qBAATA,GAAwC,mBAATA,GAC9C,cAATA,GAAiC,aAATA,EAkBhC,SAASjB,KACL,IAAIzX,EAAQ0B,KACZ,OAAO1B,GAASA,EAvtGJ;;;;;;;OA2wGhB,IAAI+Y,GAAoB,WAUxB,SAASC,GAA2B5tB,GAChC,IAEI,OAAgB,MAATA,EAAgBA,EAAMa,WAAW8L,MAAM,EAAG,IAAM3M,EAE3D,MAAOK,GACH,MAAO;;;;;;;OA+Bf,SAASwtB,GAAY3qB,GACjB,IAAI4qB,EAAUxY,GAAgBpS,GAC9B,GAAI4qB,GAGA,GAAItvB,MAAMqH,QAAQioB,GAAU,CACxB,IAAIlZ,EAAQkZ,EACR3Y,OAAY,EACZ4Y,OAAYxpB,EACZkN,OAAalN,EACjB,GA0HZ,SAASypB,EAAoBtN,GACzB,OAAOA,GAAYA,EAAS7hB,aAAe6hB,EAAS7hB,YAAYgJ,KA3HpDmmB,CAAoB9qB,GAAS,CAE7B,IAAkB,IADlBiS,EAAY8Y,GAAiBrZ,EAAO1R,IAEhC,MAAM,IAAIe,MAAM,2DAEpB8pB,EAAY7qB,OAEX,GAsHjB,SAASgrB,EAAoBxN,GACzB,OAAOA,GAAYA,EAAS7hB,aAAe6hB,EAAS7hB,YAAYkJ,KAvH/CmmB,CAAoBhrB,GAAS,CAElC,IAAkB,IADlBiS,EAsLhB,SAASgZ,EAAiBvZ,EAAOwZ,GAO7B,IADA,IAAIza,EAAQiB,EAnhHJ,GAmhHiBsR,WAClBvS,GAAO,CAGV,IAFA,IACI0a,EAAoB1a,EAAMoG,aACrB3a,EAFiBuU,EAAMmG,eAEE1a,EAAIivB,EAAmBjvB,IACrD,GAAIwV,EAAMxV,KAAOgvB,EACb,OAAOza,EAAM/Q,MAGrB+Q,EAAQ2a,GAAoB3a,GAEhC,OAAQ,EAvMgBwa,CAAiBvZ,EAAO1R,IAEhC,MAAM,IAAIe,MAAM,2DAEpBwN,EAAa8c,GAAyBpZ,EAAWP,GAAO,QAIxD,IAAkB,IADlBO,EAAYqZ,GAAqB5Z,EAAO1R,IAEpC,OAAO,KAOf,IACIurB,EAAcnZ,GADdqG,EAASjH,GAAYE,EAAMO,KAE3BjK,EAAWujB,IAAgBjwB,MAAMqH,QAAQ4oB,GACzCA,EACAC,GAAe9Z,EAAOO,EAAWwG,GAOrC,GALIoS,QAAmCxpB,IAAtB2G,EAAQ6iB,YACrB7iB,EAAQ6iB,UAAYA,EACpBY,GAAgBzjB,EAAQ6iB,UAAW7iB,IAGnCuG,QAAqClN,IAAvB2G,EAAQuG,WAA0B,CAChDvG,EAAQuG,WAAaA,EACrB,IAAK,IAAIrS,EAAI,EAAGA,EAAIqS,EAAWlS,OAAQH,IACnCuvB,GAAgBld,EAAWrS,GAAI8L,GAGvCyjB,GAAgBzjB,EAAQyQ,OAAQzQ,GAChC4iB,EAAU5iB,QASd,IALA,IAAI0jB,EAAW1rB,EAIXsoB,EAAWoD,EACRpD,EAAWA,EAAStB,YAAY,CACnC,IAAI2E,EAAgBvZ,GAAgBkW,GACpC,GAAIqD,EAAe,CAUf,GATIja,OAAQ,IAERA,EADApW,MAAMqH,QAAQgpB,GACNA,EAGAA,EAAcja,OAKtB,OAAO,KAEX,IAAIhS,EAAQ4rB,GAAqB5Z,EAAOga,GACxC,GAAIhsB,GAAS,EAAG,CACZ,IAAI+Y,EAEJgT,GAFIhT,EAASjH,GAAYE,EAAMhS,IAC3BsI,EAAUwjB,GAAe9Z,EAAOhS,EAAO+Y,IAE3CmS,EAAU5iB,EACV,QAKhB,OAAO4iB,GAAW,KAKtB,SAASY,GAAe9Z,EAAOO,EAAWwG,GACtC,MAAO,CACH/G,MAAOA,EACPO,UAAWA,EACXwG,OAAQA,EACRoS,eAAWxpB,EACXkN,gBAAYlN,EACZuqB,eAAWvqB,GASnB,SAASwqB,GAA2BC,GAChC,IACI/Z,EADAL,EAAQU,GAAgB0Z,GAE5B,GAAIxwB,MAAMqH,QAAQ+O,GAAQ,CACtB,IAAIO,EAAY8Y,GAAiBrZ,EAAOoa,IAEpC9jB,EAAUwjB,GAAe9Z,EAAOO,GADpCF,EAAOC,GAAyBC,EAAWP,IAv7GxC,KAy7GKmZ,UAAYiB,EACpBL,GAAgBK,EAAmB9jB,GACnCyjB,GAAgBzjB,EAAQyQ,OAAQzQ,OAE/B,CACD,IAAIA,EACJ+J,EAAOC,IADHhK,EAAU0J,GAC0BO,UAAWjK,EAAQ0J,OAE/D,OAAOK,EAMX,SAAS0Z,GAAgBzrB,EAAQ6N,GAC7B7N,EAA4B,cAAI6N,EAWpC,SAASyd,GAAqB5Z,EAAO1R,GAEjC,IADA,IAAIyQ,EAAQiB,EAn9GJ,GAm9GiBsR,WAClBvS,GAAO,CAEV,GADamB,GAAuBnB,EAAOiB,KAC5B1R,EACX,OAAOyQ,EAAM/Q,MAEjB+Q,EAAQ2a,GAAoB3a,GAEhC,OAAQ,EAKZ,SAAS2a,GAAoB3a,GACzB,GAAIA,EAAMiF,MACN,OAAOjF,EAAMiF,MAEZ,GAAIjF,EAAM5T,KACX,OAAO4T,EAAM5T,KAMb,KAAO4T,EAAMkF,SAAWlF,EAAMkF,OAAO9Y,MACjC4T,EAAQA,EAAMkF,OAElB,OAAOlF,EAAMkF,QAAUlF,EAAMkF,OAAO9Y,KAM5C,SAASkuB,GAAiBrZ,EAAOoa,GAC7B,IAAIC,EAAmBra,EAr/Gf,GAq/G4Bsa,WACpC,GAAID,EACA,IAAK,IAAI7vB,EAAI,EAAGA,EAAI6vB,EAAiB1vB,OAAQH,IAAK,CAC9C,IAAI+vB,EAAwBF,EAAiB7vB,GAE7C,GADoB8V,GAAyBia,EAAuBva,GAl/GlE,KAm/G6Boa,EAC3B,OAAOG,OAOf,GAFwBja,GA7+GZ,GA6+GoDN,GAz/G1D,KA2/GgBoa,EAGlB,OAl/GQ,GAq/GhB,OAAQ,EAgCZ,SAAST,GAAyBpZ,EAAWP,EAAOwa,GAChD,IAAIzb,EAAQiB,EAziHJ,GAyiHiB7D,KAAKoE,GAC1Bka,EAAsB1b,EAAMmG,eAChC,OAA2B,GAAvBuV,EACOhhB,KAEN+gB,GAAmC,EAAdzb,EAAMhK,OAC5B0lB,IACGza,EAAMjI,MAAM0iB,EAHK1b,EAAMoG,eAiClC,SAASuV,GAA4B3b,GACjC,MAAM,IAAI1P,MAAM,+CAAiD0P,EAAMwW,SAE3E,SAASoF,KACL,MAAM,IAAItrB,MAAM;;;;;;;;AA2JpB,SAASurB,GAAaC,EAAWC,EAAeC,GAG5C,IADA,IAAI/hB,EAAM6hB,EAAUlwB,SACP,CACT,IAAIqwB,EAAaH,EAAUtpB,QAAQupB,EAAeC,GAClD,IAAoB,IAAhBC,EACA,OAAOA,EACX,GAAmB,IAAfA,GAAoBH,EAAUlT,WAAWqT,EAAa,IAAM,GAAgB,CAE5E,IAAIC,EAAWH,EAAcnwB,OAC7B,GAAIqwB,EAAaC,IAAajiB,GAC1B6hB,EAAUlT,WAAWqT,EAAaC,IAAa,GAE/C,OAAOD,EAIfD,EAAgBC,EAAa;;;;;;;OAqBrC,SAASE,GAAmBlU,EAAOmU,EAAiBC,GAQhD,IADA,IAAI5wB,EAAI,EACDA,EAAIwc,EAAMrc,QAAQ,CACrB,IAAImN,EAAOkP,EAAMxc,KACjB,GAAI4wB,GAA6B,UAATtjB,GAEpB,IAA8D,IAA1D8iB,IADJ9iB,EAAOkP,EAAMxc,IACSirB,cAAe0F,EAAiB,GAClD,OAAO,OAGV,GAAa,IAATrjB,EAA0B,CAE/B,KAAOtN,EAAIwc,EAAMrc,QAAwC,iBAAtBmN,EAAOkP,EAAMxc,OAE5C,GAAIsN,EAAK2d,gBAAkB0F,EACvB,OAAO,EAEf,OAAO,GAGf,OAAO,EAOX,SAASE,GAAiBtc,GACtB,OAAsB,IAAfA,EAAM7O,MA3CU,gBA2CoB6O,EAAMwW,QAarD,SAAS+F,GAAmBvc,EAAOwc,EAAiBH,GAIhD,OAAOG,KAH+B,IAAfxc,EAAM7O,MAA+BkrB,EAExDrc,EAAMwW,QA3Da,eAuE3B,SAASiG,GAAuBzc,EAAO0c,EAAUL,GAS7C,IAPA,IAAI7Y,EAAO,EACPmZ,EAAY3c,EAAMiI,OAAS,GAE3B2U,EA2KR,SAASC,EAAuBF,GAC5B,IAAK,IAAIlxB,EAAI,EAAGA,EAAIkxB,EAAU/wB,OAAQH,IAElC,GAAIid,GADWiU,EAAUlxB,IAErB,OAAOA,EAGf,OAAOkxB,EAAU/wB,OAlLOixB,CAAuBF,GAG3CG,GAAqB,EAChBrxB,EAAI,EAAGA,EAAIixB,EAAS9wB,OAAQH,IAAK,CACtC,IAAI8O,EAAUmiB,EAASjxB,GACvB,GAAuB,iBAAZ8O,GAaX,IAAIuiB,EAEJ,GAAW,EAAPtZ,GAEA,GADAA,EAAO,EAA2B,EAAPA,EACX,KAAZjJ,IAAmBgiB,GAAmBvc,EAAOzF,EAAS8hB,IAC1C,KAAZ9hB,GAAsC,IAApBmiB,EAAS9wB,OAAc,CACzC,GAAImxB,GAAWvZ,GACX,OAAO,EACXsZ,GAAqB,OAGxB,CACD,IAAIE,EAA2B,EAAPxZ,EAAuBjJ,EAAUmiB,IAAWjxB,GAGpE,GAAY,EAAP+X,GAAyC,OAAhBxD,EAAMiI,MAAgB,CAChD,IAAKkU,GAAmBnc,EAAMiI,MAAO+U,EAAmBX,GAAmB,CACvE,GAAIU,GAAWvZ,GACX,OAAO,EACXsZ,GAAqB,EAEzB,SAEJ,IACIG,EAAkBC,GADC,EAAP1Z,EAAwB,QAAUjJ,EACEoiB,EAAWL,GAAiBtc,GAAQqc,GACxF,IAAyB,IAArBY,EAAwB,CACxB,GAAIF,GAAWvZ,GACX,OAAO,EACXsZ,GAAqB,EACrB,SAEJ,GAA0B,KAAtBE,EAA0B,CAC1B,IAAIG,EAEAA,EADAF,EAAkBL,EACF,GAQAD,EAAUM,EAAkB,GAAGvG,cAEnD,IAAI0G,EAAiC,EAAP5Z,EAAuB2Z,EAAgB,KACrE,GAAIC,IACiE,IAAjEvB,GAAauB,EAAyBJ,EAAmB,IAClD,EAAPxZ,GAA4BwZ,IAAsBG,EAAe,CACjE,GAAIJ,GAAWvZ,GACX,OAAO,EACXsZ,GAAqB,SA/DjC,CAEI,IAAKA,IAAuBC,GAAWvZ,KAAUuZ,GAAWxiB,GACxD,OAAO,EAIX,GAAIuiB,GAAsBC,GAAWxiB,GACjC,SACJuiB,GAAqB,EACrBtZ,EAAOjJ,EAAkB,EAAPiJ,GA0D1B,OAAOuZ,GAAWvZ,IAASsZ,EAE/B,SAASC,GAAWvZ,GAChB,OAAgC,IAAjB,EAAPA,GA+BZ,SAAS0Z,GAAoB3vB,EAAM0a,EAAOqU,EAAkBD,GACxD,GAAc,OAAVpU,EACA,OAAQ,EACZ,IAAIxc,EAAI,EACR,GAAI4wB,IAAqBC,EAAkB,CAEvC,IADA,IAAIe,GAAe,EACZ5xB,EAAIwc,EAAMrc,QAAQ,CACrB,IAAI0xB,EAAgBrV,EAAMxc,GAC1B,GAAI6xB,IAAkB/vB,EAClB,OAAO9B,EAEN,GAAsB,IAAlB6xB,GAAwD,IAAlBA,EAC3CD,GAAe,MAEd,CAAA,GAAsB,IAAlBC,GAAuD,IAAlBA,EAAkC,CAI5E,IAHA,IAAIjxB,EAAQ4b,IAAQxc,GAGI,iBAAVY,GACVA,EAAQ4b,IAAQxc,GAEpB,SAEC,GAAsB,IAAlB6xB,EAEL,MAEC,GAAsB,IAAlBA,EAAwC,CAE7C7xB,GAAK,EACL,UAGJA,GAAK4xB,EAAe,EAAI,EAG5B,OAAQ,EAGR,OAiCR,SAASE,EAAuBtV,EAAO1a,GACnC,IAAI9B,EAAIwc,EAAMzV,QAAQ,GACtB,GAAI/G,GAAK,EAEL,IADAA,IACOA,EAAIwc,EAAMrc,QAAQ,CACrB,IAAI4xB,EAAOvV,EAAMxc,GAGjB,GAAoB,iBAAT+xB,EACP,OAAQ,EACZ,GAAIA,IAASjwB,EACT,OAAO9B,EACXA,IAGR,OAAQ,EAhDG8xB,CAAuBtV,EAAO1a,GAG7C,SAASkwB,GAA2Bzd,EAAO0c,EAAUL,QACxB,IAArBA,IAA+BA,GAAmB,GACtD,IAAK,IAAI5wB,EAAI,EAAGA,EAAIixB,EAAS9wB,OAAQH,IACjC,GAAIgxB,GAAuBzc,EAAO0c,EAASjxB,GAAI4wB,GAC3C,OAAO,EAGf,OAAO,EA6CX,SAASqB,GAAyBhB,EAAU7jB,GACxC8kB,EAAkB,IAAK,IAAIlyB,EAAI,EAAGA,EAAIoN,EAAKjN,OAAQH,IAAK,CACpD,IAAImyB,EAAwB/kB,EAAKpN,GACjC,GAAIixB,EAAS9wB,SAAWgyB,EAAsBhyB,OAA9C,CAGA,IAAK,IAAIgL,EAAI,EAAGA,EAAI8lB,EAAS9wB,OAAQgL,IACjC,GAAI8lB,EAAS9lB,KAAOgnB,EAAsBhnB,GACtC,SAAS+mB,EAGjB,OAAO,GAEX,OAAO,EAEX,SAASE,GAAuBC,EAAgBC,GAC5C,OAAOD,EAAiB,QAAUC,EAAMhK,OAAS,IAAMgK,EAE3D,SAASC,GAAqBtB,GAM1B,IALA,IAAIuB,EAASvB,EAAS,GAClBjxB,EAAI,EACJ+X,EAAO,EACP0a,EAAe,GACfJ,GAAiB,EACdryB,EAAIixB,EAAS9wB,QAAQ,CACxB,IAAIuyB,EAAgBzB,EAASjxB,GAC7B,GAA6B,iBAAlB0yB,EACP,GAAW,EAAP3a,EAA0B,CAC1B,IAAI4a,EAAY1B,IAAWjxB,GAC3ByyB,GACI,IAAMC,GAAiBC,EAAUxyB,OAAS,EAAI,KAAOwyB,EAAY,IAAM,IAAM,SAErE,EAAP5a,EACL0a,GAAgB,IAAMC,EAEV,EAAP3a,IACL0a,GAAgB,IAAMC,OAqBL,KAAjBD,GAAwBnB,GAAWoB,KACnCF,GAAUJ,GAAuBC,EAAgBI,GACjDA,EAAe,IAEnB1a,EAAO2a,EAGPL,EAAiBA,IAAmBf,GAAWvZ,GAEnD/X,IAKJ,MAHqB,KAAjByyB,IACAD,GAAUJ,GAAuBC,EAAgBI,IAE9CD;;;;;;;;AAiEX,IAAII,GAA2F;;;;;;;OAc/F,SAASC,GAAerd,GAEpB,IAAIiE,EAASjE,EAtrIJ,GAurIT,OAAOnB,GAAaoF,GAAUA,EAvrIrB,GAurIsCA,EAwBnD,SAASqZ,GAAeC,GAIpB,OApBJ,SAASC,EAAYC,GAGjB,IADA,IAAIzd,EAAQpB,GAAQ6e,GAAoBA,EAAmB9c,GAAiB8c,GACrEzd,KAA0B,IAAfA,EAnsIV,KAosIJA,EAAQqd,GAAerd,GAG3B,OAAOA,EAUQwd,CAAYD,GA3sIjB;;;;;;;OA+uId,SAASG,GAAUC,GAEfC,GAAoBjc,KAAYD,KAAYgD,KAAqBiZ,EAAOtb,MAO5E,SAASwb,GAAS7vB,GAEd4vB,GAAoBjc,KAAYD,KAAY1T,EAAOqU,MAEvD,SAASub,GAAoBjhB,EAAOqD,EAAOhS,EAAOsT,GAK9C,IAAKA,EAED,GAD8E,IAAhC,EAAftB,EAxwI3B,IAywIyB,CACzB,IAAIuN,EAAqB5Q,EAAM4Q,mBACJ,OAAvBA,GACA7H,GAAkB1F,EAAOuN,EAAoBvf,OAGhD,CACD,IAAIsf,EAAgB3Q,EAAM2Q,cACJ,OAAlBA,GACAzH,GAAyB7F,EAAOsN,EAAe,EAA4Btf,GAQvF2W,GAAiB3W;;;;;;;OAerB,IAAI8vB,GAAiB,CACjBpW,OAAQ,WAORqW,GAAiB,CACjBrW,OAAQ;;;;;;;;AAaZ,SAASsW,GAAgBC,EAAM9yB,GAG3B,OAAQ8yB,GAAQ,GAAsB9yB,GAAQ,EAElD,SAAS+yB,GAAqBC,GAE1B,OAAQA,GAAiB,GAAuB,MAEpD,SAASC,GAA8BD,GAEnC,OACI,IADoB,EAAhBA,GASZ,SAASE,GAA8BF,GAEnC,OAAwB,EAAhBA,EAEZ,SAASG,GAAqBH,GAE1B,OAAwB,OAAhBA,IAA2C,EAEvD,SAASI,GAAqBJ,EAAehzB,GAGzC,OAAyB,OAAhBgzB,EACLhzB,GAAQ,EAEhB,SAASqzB,GAA8BL,GAEnC,OACI,IADoB,EAAhBA,GAGZ,SAASM,GAA8BN,GAEnC,OAAwB,EAAhBA,EAoUZ,SAASO,GAAoB3f,EAAO4f,GAQhC,IAPA,IAAItb,EAAQtE,EAAM6f,OAAOziB,KACrB0iB,EAAW,GACXC,EAAQH,EAAe5f,EAAMggB,cAAgBhgB,EAAMigB,cACnDf,EAAOC,GAAqBY,GAC5B3zB,EAAOmzB,GAAqBQ,GAC5BG,EAAsB,IAAT9zB,EACb+zB,EAASD,EAAa9zB,EAAO8yB,EACf,IAAXiB,GAAc,CACjB,IACIC,EAAY9b,EAAM6b,EAAS,GAC/BL,EAASrwB,QAAQ,CACbY,IAHUiU,EAAM6b,GAIhBlxB,MAAOkxB,EACPD,WAAYA,EACZG,cAAehB,GAA8Be,GAC7CE,cAAeb,GAA8BW,GAC7CG,UAAWhB,GAAqBa,GAChCI,UAAWrB,GAAqBiB,KAEhCD,IAAWjB,IACXgB,GAAa,GACjBC,EAAShB,GAAqBiB,GAGlC,OADAN,EAASlzB,MAAMgzB,EAAe5f,EAAMygB,gBAAkBzgB,EAAM0gB,iBAAmB,MACxEZ,EAEX,SAASa,GAAqB3gB,EAAO8V,GACjC,KAAO9V,GACH8V,EAAIlpB,KAAKoT,EAAM4gB,WACf5gB,EAAQA,EAAM5T,KA8BtB,SAASy0B,GAAQzpB,GACb,GAAIA,EAAK,CACL,IAAI0pB,EAAQ1pB,EAAI0pB,MAEhB,OADA3oB,GAAc2oB,EAAO,gDACdA,EAGP,OAAO1pB,EAcf,SAAS2pB,GAAO10B,EAAO20B,QACK,IAApBA,IAA8BA,GAAkB,GACpD,IAAIlK,EAAO/V,GAAY1U,GACvB,GAAIyqB,EAAM,CACN,IAAImK,EAAanK,EAAK5D,WAAaC,KAAK+C,UACpCgB,GAAa+J,EAAanK,EAAKoK,YAAcpK,EAAKI,YAAc,GACpE,OAAI8J,GAAmBC,EACZ/J,EAICA,EAAUpD,MADF,IAAMgD,EAAKxF,UAAY,KACJ,GAAM,IAI7C,OAAO,KAmLf,SAAS6P,GAAanhB,EAAOiB,GACzB,GAAIjB,EAAO,CAGP,IAFA,IAAIohB,EAAa,GACbC,EAAcrhB,EACXqhB,GACHD,EAAWx0B,KAAK00B,GAAeD,EAAapgB,EAAOogB,EAAYpyB,QAC/DoyB,EAAcA,EAAYj1B,KAE9B,OAAOg1B,EAGP,OAAO,KAGf,SAASE,GAAethB,EAAOiB,EAAOO,GAClC,IAAI+f,EAAWtgB,EAAMO,GACjBwG,EAASjH,GAAYwgB,GACrBC,EAAsBX,GA6E9B,SAASY,EAAep1B,GACpB,KAAOxB,MAAMqH,QAAQ7F,IAAQ,CAGzB,GAAIA,EAAMT,QAAU81B,GAChB,OAAOr1B,EACXA,EAAQA,EAriKL,GAuiKP,OAAO,KArF2Bo1B,CAAeF,IACjD,MAAO,CACHzP,KAAMiP,GAAO/Y,GACbA,OAAQA,EACR2Z,MAAOR,GAAanhB,EAAMiF,MAAOhE,GACjCmZ,UAAWoH,GArcf92B,OAAO4D,eA7DP,SAASszB,GAAMzwB,EACfoM,EACAgO,EACApQ,EACA0mB,EACA3kB,EACA4Z,EACA1Z,EACAuG,EACAme,EACAC,EACA3W,EACA4W,EACAC,EACAC,EACA3T,EACAC,EACAlI,EACAC,EACAC,EACAC,EACAC,EACAyb,EACA1mB,EACA8f,EACA6G,EACAC,EACA9P,EACA5U,EACAvC,GACI9Q,KAAK6G,KAAOA,EACZ7G,KAAKiT,GAAKA,EACVjT,KAAKihB,UAAYA,EACjBjhB,KAAK6Q,SAAWA,EAChB7Q,KAAKu3B,QAAUA,EACfv3B,KAAK4S,UAAYA,EACjB5S,KAAKwsB,KAAOA,EACZxsB,KAAK8S,KAAOA,EACZ9S,KAAKqZ,kBAAoBA,EACzBrZ,KAAKw3B,kBAAoBA,EACzBx3B,KAAKy3B,oBAAsBA,EAC3Bz3B,KAAK8gB,gBAAkBA,EACvB9gB,KAAK03B,gBAAkBA,EACvB13B,KAAK23B,kBAAoBA,EACzB33B,KAAK43B,qBAAuBA,EAC5B53B,KAAKikB,cAAgBA,EACrBjkB,KAAKkkB,mBAAqBA,EAC1BlkB,KAAKgc,aAAeA,EACpBhc,KAAKic,kBAAoBA,EACzBjc,KAAKkc,UAAYA,EACjBlc,KAAKmc,eAAiBA,EACtBnc,KAAKoc,aAAeA,EACpBpc,KAAK63B,QAAUA,EACf73B,KAAKmR,eAAiBA,EACtBnR,KAAKixB,WAAaA,EAClBjxB,KAAK83B,kBAAoBA,EACzB93B,KAAK+3B,aAAeA,EACpB/3B,KAAKioB,WAAaA,EAClBjoB,KAAKqT,QAAUA,EACfrT,KAAK8Q,OAASA,GAEUjQ,UAAW,YAAa,CAChDgL,IAAK,WACD,IAAI2f,EAAM,GAEV,OADA6K,GAAqBr2B,KAAKioB,WAAYuD,GAC/BA,EAAI1jB,KAAK,KAEpBkwB,YAAY,EACZC,cAAc,IAIK,WACvB,SAASC,EAAM3C,EACf1uB,EACAlC,EACAoc,EACAlF,EACAC,EACAqc,EACAC,EACA1sB,EACA2X,EACA6I,EACAvO,EACA0a,EACAC,EACAC,EACAnnB,EACAC,EACAmnB,EACA12B,EACA22B,EACA9d,EACAC,EACA8d,EACAxlB,EACAkjB,EACAuC,EACAxC,EACAT,EACAC,GACI31B,KAAKu1B,OAASA,EACdv1B,KAAK6G,KAAOA,EACZ7G,KAAK2E,MAAQA,EACb3E,KAAK+gB,cAAgBA,EACrB/gB,KAAK6b,eAAiBA,EACtB7b,KAAK8b,aAAeA,EACpB9b,KAAKm4B,qBAAuBA,EAC5Bn4B,KAAKo4B,iBAAmBA,EACxBp4B,KAAK0L,MAAQA,EACb1L,KAAKqjB,gBAAkBA,EACvBrjB,KAAKksB,QAAUA,EACflsB,KAAK2d,MAAQA,EACb3d,KAAKq4B,YAAcA,EACnBr4B,KAAKs4B,WAAaA,EAClBt4B,KAAKu4B,cAAgBA,EACrBv4B,KAAKoR,OAASA,EACdpR,KAAKqR,QAAUA,EACfrR,KAAKw4B,OAASA,EACdx4B,KAAK8B,KAAOA,EACZ9B,KAAKy4B,eAAiBA,EACtBz4B,KAAK2a,MAAQA,EACb3a,KAAK4a,OAASA,EACd5a,KAAK04B,WAAaA,EAClB14B,KAAKkT,OAASA,EACdlT,KAAKo2B,eAAiBA,EACtBp2B,KAAK24B,QAAUA,EACf34B,KAAKm2B,gBAAkBA,EACvBn2B,KAAK01B,cAAgBA,EACrB11B,KAAK21B,cAAgBA,EAEzBv1B,OAAO4D,eAAek0B,EAAMr3B,UAAW,QAAS,CAC5CgL,IAAK,WACD,OAAQ7L,KAAK6G,MACT,KAAK,EACD,MAAO,sBACX,KAAK,EACD,MAAO,oBACX,KAAK,EACD,MAAO,6BACX,KAAK,EACD,MAAO,yBACX,KAAK,EACD,MAAO,uBACX,KAAK,EACD,MAAO,iBACX,QACI,MAAO,kBAGnBmxB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAek0B,EAAMr3B,UAAW,SAAU,CAC7CgL,IAAK,WACD,IAAIH,EAAQ,GAiBZ,OAhBiB,GAAb1L,KAAK0L,OACLA,EAAMpJ,KAAK,4BACE,EAAbtC,KAAK0L,OACLA,EAAMpJ,KAAK,8BACE,GAAbtC,KAAK0L,OACLA,EAAMpJ,KAAK,4BACE,IAAbtC,KAAK0L,OACLA,EAAMpJ,KAAK,8BACE,EAAbtC,KAAK0L,OACLA,EAAMpJ,KAAK,8BACE,EAAbtC,KAAK0L,OACLA,EAAMpJ,KAAK,8BACE,GAAbtC,KAAK0L,OACLA,EAAMpJ,KAAK,yBACE,EAAbtC,KAAK0L,OACLA,EAAMpJ,KAAK,0BACRoJ,EAAM5D,KAAK,MAEtBkwB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAek0B,EAAMr3B,UAAW,YAAa,CAChDgL,IAAK,WACD,IAAI2f,EAAM,GAEV,GADAA,EAAIlpB,KAAK,IAAKtC,KAAKksB,SAAWlsB,KAAK44B,OAC/B54B,KAAK2d,MACL,IAAK,IAAIxc,EAAI,EAAGA,EAAInB,KAAK2d,MAAMrc,QAAS,CACpC,IAAIwc,EAAW9d,KAAK2d,MAAMxc,KAC1B,GAAuB,iBAAZ2c,EACP,MAEJ,IAAIgW,EAAY9zB,KAAK2d,MAAMxc,KAC3BqqB,EAAIlpB,KAAK,IAAKwb,EAAU,KAAMgW,EAAW,KAMjD,OAHAtI,EAAIlpB,KAAK,KACT+zB,GAAqBr2B,KAAK2a,MAAO6Q,GACjCA,EAAIlpB,KAAK,KAAMtC,KAAKksB,SAAWlsB,KAAK44B,MAAO,KACpCpN,EAAI1jB,KAAK,KAEpBkwB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAek0B,EAAMr3B,UAAW,iBAAkB,CACrDgL,IAAK,WACD,OAAOwpB,GAAoBr1B,MAAM,IAErCg4B,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAek0B,EAAMr3B,UAAW,iBAAkB,CACrDgL,IAAK,WACD,OAAOwpB,GAAoBr1B,MAAM,IAErCg4B,YAAY,EACZC,cAAc,IA5II,GAoPM,WAC5B,SAASY,EAAWC,GAChB94B,KAAK84B,WAAaA,EAEtB14B,OAAO4D,eAAe60B,EAAWh4B,UAAW,QAAS,CAIjDgL,IAAK,WACD,IAAIH,EAAQ1L,KAAK84B,WAxxJjB,GAyxJA,MAAO,CACHC,eAAgBrtB,EAChBstB,eAAwB,EAARttB,EAChButB,gBAAyB,EAARvtB,GACjBwtB,iBAA0B,EAARxtB,GAClBytB,eAAwB,GAARztB,GAChB0tB,SAAkB,GAAR1tB,GACV2tB,YAAqB,IAAR3tB,GACb4tB,aAAsB,IAAR5tB,GACd6tB,UAAmB,IAAR7tB,GACX8tB,qBAAsB9tB,GAAS,KAGvCssB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,SAAU,CAClDgL,IAAK,WACD,OAAO0qB,GAAQv2B,KAAK84B,WA1yJnB,KA4yJLd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,OAAQ,CAChDgL,IAAK,WACD,OAAO4qB,GAAOz2B,KAAK84B,WApzJpB,IAozJsC,IAEzCd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,OAAQ,CAChDgL,IAAK,WACD,OAAQ7L,KAAKq3B,OAAS,IAAIxvB,KAAI,SAAU2kB,GAAQ,OAAOiK,GAAOjK,EAAK9O,QAAQ,MAAU5V,KAAK,KAE9FkwB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,UAAW,CACnDgL,IAAK,WACD,OAAO7L,KAAK84B,WA1zJV,IA4zJNd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,QAAS,CAMjDgL,IAAK,WACD,IAAI8K,EAAQ3W,KAAK84B,WAEjB,OAAOjC,GADKlgB,EA90JZ,GA80JyBsR,WACEtR,IAE/BqhB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,QAAS,CACjDgL,IAAK,WACD,OAAO7L,KAAK84B,WAt1JZ,IAw1JJd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,UAAW,CACnDgL,IAAK,WACD,OAAO7L,KAAK84B,WAv1JV,IAy1JNd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,WAAY,CACpDgL,IAAK,WACD,OAAO7L,KAAK84B,WA51JP,IA81JTd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,kBAAmB,CAC3DgL,IAAK,WACD,OAAO7L,KAAK84B,WAl2JD,KAo2Jfd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,WAAY,CACpDgL,IAAK,WACD,OAAO7L,KAAK84B,WAx2JT,KA02JPd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,YAAa,CACrDgL,IAAK,WACD,OAAO7L,KAAK84B,WA92JR,KAg3JRd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,YAAa,CACrDgL,IAAK,WACD,OAAO0qB,GAAQv2B,KAAK84B,WAp3Jf,MAs3JTd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,OAAQ,CAChDgL,IAAK,WACD,OAAO0qB,GAAQv2B,KAAK84B,WAp4JrB,KAs4JHd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,YAAa,CACrDgL,IAAK,WACD,OAAO0qB,GAAQv2B,KAAK84B,WAj4Jf,MAm4JTd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,kBAAmB,CAC3DgL,IAAK,WACD,OAAO0qB,GAAQv2B,KAAK84B,WAv4JT,MAy4Jfd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,UAAW,CACnDgL,IAAK,WACD,OAAO7L,KAAK84B,WAx5JV,IA05JNd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,QAAS,CACjDgL,IAAK,WACD,OAAO7L,KAAK84B,WA95JX,IAg6JLd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe60B,EAAWh4B,UAAW,aAAc,CAItDgL,IAAK,WAGD,IAFA,IAAI4tB,EAAa,GACb9e,EAAQ3a,KAAK05B,UACV/e,GACH8e,EAAWn3B,KAAKqY,GAChBA,EAAQA,EAAM7Y,KAElB,OAAO23B,GAEXzB,YAAY,EACZC,cAAc,IAtKS,GAyMM,WACjC,SAAS0B,EAAgBC,GACrB55B,KAAK45B,gBAAkBA,EAE3Bx5B,OAAO4D,eAAe21B,EAAgB94B,UAAW,cAAe,CAC5DgL,IAAK,WACD,OAAO8L,GAAyB3X,KAAK45B,kBAEzC5B,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe21B,EAAgB94B,UAAW,uBAAwB,CACrEgL,IAAK,WACD,OACI,IADyC,EAArC7L,KAAK45B,gBA57JN,KA+7JX5B,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe21B,EAAgB94B,UAAW,QAAS,CACtDgL,IAAK,WACD,OAAO7L,KAAK45B,gBAAgBlrB,MAt7JV,GAu7Jb7G,IAAI0uB,KAEbyB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe21B,EAAgB94B,UAAW,SAAU,CACvDgL,IAAK,WACD,OAAO0qB,GAAQv2B,KAAK45B,gBAp/JnB,KAs/JL5B,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe21B,EAAgB94B,UAAW,aAAc,CAC3DgL,IAAK,WACD,OAAO7L,KAAK45B,gBAh9JN,IAk9JV5B,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe21B,EAAgB94B,UAAW,OAAQ,CACrDgL,IAAK,WACD,OAAO7L,KAAK45B,gBArgKb,IAugKH5B,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe21B,EAAgB94B,UAAW,SAAU,CACvDgL,IAAK,WACD,OAAO7L,KAAK45B,gBA39JX,IA69JL5B,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe21B,EAAgB94B,UAAW,OAAQ,CACrDgL,IAAK,WACD,OAAO0qB,GAAQv2B,KAAK45B,gBA/gKrB,KAihKH5B,YAAY,EACZC,cAAc,IA5Dc,GA+EpC,IAAI4B,GAA+B,WAC/B,SAASA,EAAcC,EAAcxV,EAAQpN,EAAWrQ,GACpD7G,KAAK85B,aAAeA,EACpB95B,KAAKskB,OAASA,EACdtkB,KAAKkX,UAAYA,EACjBlX,KAAK6G,KAAOA,EAShB,OAPAzG,OAAO4D,eAAe61B,EAAch5B,UAAW,QAAS,CACpDgL,IAAK,WACD,OAAOiL,GAAS9W,KAAKskB,OAjjKrB,GAijKoCtkB,KAAKkX,YAE7C8gB,YAAY,EACZC,cAAc,IAEX4B,EAduB,GA2C9Bz5B,OAAO4D,eAJP,SAAS+1B,GAAuBC,EAAeC,GAC3Cj6B,KAAKg6B,cAAgBA,EACrBh6B,KAAKi6B,QAAUA,GAE0Bp5B,UAAW,aAAc,CAIlEgL,IAAK,WAGD,IAFA,IAAeouB,EAANj6B,KAAmBi6B,QAASD,EAA5Bh6B,KAA+Cg6B,cACpDE,EAAU,GACL/4B,EAAI,EAAGA,EAAI64B,EAAc14B,OAAQH,IAAK,CAC3C,IAAIg5B,EAASH,EAAc74B,GACvBwyB,OAAS,EASb,GARsB,iBAAXwG,IACPxG,EAAS,CACLmG,aAAcK,EACdtzB,KAAM,mBACNqQ,UAAW8iB,IAAgB74B,GAC3B0L,KAAMstB,IAGQ,iBAAXA,EACP,OAAiB,EAATA,GACJ,KAAK,EAEDxG,EAAS,IAAIkG,GAAcM,EAAQF,EADRE,IAAW,GAC4B,eAClE,MACJ,KAAK,EAEDxG,EAAS,IAAIkG,GAAcM,EAAQF,EADnBE,IAAW,EAC4B,UACvD,MACJ,KAAK,EACD,IAAIC,EAAeD,IAAW,EAC9BxG,EAAS,IAAIkG,GAAcM,EAAQF,EAASG,EAAc,cAC1D,MACJ,KAAK,GAEDzG,EAAS,IAAIkG,GAAcM,EAAQF,EADnCG,EAAeD,IAAW,EACgC,SACzC,SAAIH,IAAgB74B,GACrCwyB,EAAkB,UAAIqG,IAAgB74B,GAIlD,IAAKwyB,EACD,OAAQwG,GACJ,KAAKzF,GACDf,EAAS,CACLmG,aAAcK,EACdtzB,KAAM,iBACNwzB,aAAcL,IAAgB74B,GAC9B+V,UAAW8iB,IAAgB74B,IAE/B,MACJ,KAAKszB,GACDd,EAAS,CACLmG,aAAcK,EACdtzB,KAAM,kBAKjB8sB,IACDA,EAAS,CACLmG,aAAcK,EACdtzB,KAAM,kBACNyzB,KAAMH,IAGdD,EAAQ53B,KAAKqxB,GAEjB,OAAOuG,GAEXlC,YAAY,EACZC,cAAc,IAUlB73B,OAAO4D,eALP,SAASu2B,GAAuBP,EAAeQ,EAAMP,GACjDj6B,KAAKg6B,cAAgBA,EACrBh6B,KAAKw6B,KAAOA,EACZx6B,KAAKi6B,QAAUA,GAE0Bp5B,UAAW,aAAc,CAIlEgL,IAAK,WAGD,IAFA,IAAeouB,EAANj6B,KAAmBi6B,QAASD,EAA5Bh6B,KAA+Cg6B,cAAeQ,EAA9Dx6B,KAAwEw6B,KAC7EN,EAAU,GACL/4B,EAAI,EAAGA,EAAI64B,EAAc14B,OAAQH,IAAK,CAM3C,IAJA,IAAIs5B,EAAWT,EAAc74B,GAEzBu5B,EAAYV,IAAgB74B,GAC5BY,EAAQ,GACHuK,EAAInL,EAAI,EAAGmL,GAAMnL,EAAIu5B,EAAYpuB,IAAK,CAC3C,IAAI6tB,EAASH,EAAc1tB,GAC3B,GAAsB,iBAAX6tB,EACPp4B,GAASo4B,OAER,GAAqB,iBAAVA,EACZ,GAAIA,EAAS,EAGTp4B,GAAS,MAAao4B,EAAS,GAAK,QAEnC,CACD,IAAIjjB,EAAYijB,IAAW,EACvBQ,OAAY,EACZC,OAAO,EACX,OAAiB,EAATT,GACJ,KAAK,EACD,IAAIrc,EAAWkc,IAAgB1tB,GAC3BuuB,EAAab,IAAgB1tB,GACjC4tB,EAAQ53B,KAAK,CACTw3B,aAAcK,EACdM,SAAUA,EACV5zB,KAAM,OACNitB,UAAW/xB,EACX+b,SAAUA,EACV+c,WAAYA,IAEhB,MACJ,KAAK,EACDX,EAAQ53B,KAAK,CACTw3B,aAAcK,EACdM,SAAUA,EACV5zB,KAAM,OACNqQ,UAAWA,EACXrK,KAAM9K,IAEV,MACJ,KAAK,EAED64B,EAAOJ,EADPG,EAAYX,IAAgB1tB,IAE5B,IAAIqnB,EAAS,IAAIkG,GAAcM,EAAQF,EAAS/iB,EAAW,aAC3Dyc,EAAkB,UAAIgH,EACtBhH,EAAiB,SAAI8G,EACrB9G,EAAoB,YAAI5xB,EACxB4xB,EAAa,KAAIiH,EACjBV,EAAQ53B,KAAKqxB,GACb,MACJ,KAAK,EAEDiH,EAAOJ,EADPG,EAAYX,IAAgB1tB,KAE5BqnB,EAAS,IAAIkG,GAAcM,EAAQF,EAAS/iB,EAAW,cACrC,UAAIyjB,EACtBhH,EAAiB,SAAI8G,EACrB9G,EAAa,KAAIiH,EACjBV,EAAQ53B,KAAKqxB,KAMjCxyB,GAAKu5B,EAET,OAAOR,GAEXlC,YAAY,EACZC,cAAc,IAnKtB,IA4KI6C,GAAuCC,QAAQC,QAAQ,MAsE3D,SAASC,GAAsB3nB,EAAOqD,GAClC,IAAIxF,EAAiBmC,EAAMnC,eAC3B,GAAuB,OAAnBA,EACA,IAAK,IAAIhQ,EAAI,EAAGA,EAAIgQ,EAAe7P,OAAQH,GAAK,EAAG,CAC/C,IACI+5B,EAAkB/pB,EAAehQ,EAAI,GACzC,IAAyB,IAArB+5B,EAAwB,CACxB,IAAInf,EAAezI,EAAMR,KAAKooB,GAG9B/gB,GANgBhJ,EAAehQ,IAO/B4a,EAAa5K,eAAe,EAAgBwF,EAAMukB,GAAkBA,KAuBpF,SAASC,GAAcl4B,EAAMmT,EAAUglB,GACnC,OAAIjlB,GAAqBC,GACdA,EAAS0Q,cAAc7jB,EAAMm4B,GAGf,OAAdA,EAAqBhlB,EAAS0Q,cAAc7jB,GAC/CmT,EAASilB,gBAAgBD,EAAWn4B,GAGhD,SAASq4B,GAAYja,EAAa/N,EAAOrG,EAASvB,EAAO6vB,EAAMC,EAAWC,EAAiBrlB,EAAUgX,EAAWhiB,GAC5G,IAAIuL,EAA4DrD,EAAM2N,UAAUvS,QAkBhF,OAjBAiI,EA92KO,GA82KO4kB,EACd5kB,EA72KQ,GA62Ke,IAARjL,EACfgM,GAAuBf,GACvBA,EA92KS,GA82KOA,EAl2KG,IAk2KuB0K,EAC1C1K,EA12KU,GA02KO1J,EACjB0J,EAz2KmB,IAy2KQ8kB,GAAmBpa,GAAeA,EAz2K1C,IA22KnB1K,EA12KW,IA02KQP,GAAYiL,GAAeA,EA12KnC,IA42KX1K,EA32KY,IA22KOyW,GAAa/L,GAAeA,EA32KnC,KA22K6D,KACzE1K,EA/2Ka,GA+2KOvL,GAAYiW,GAAeA,EA/2KlC,IA+2K6D,KAC1E1K,EAn3KS,GAm3KO6kB,EAGhB7kB,EA52K6B,IA62KX,GAAdrD,EAAMzM,KAA2Bwa,EA72KR,IA62KkD1K,EAExEA,EAEX,SAAS+kB,GAAiBpoB,EAAOkoB,EAAW72B,EAAOkC,EAAM5D,EAAM0a,GAE3D,IAAIge,EAAgBh3B,EA/2KJ,GAg3KZ+Q,EAAQpC,EAAMR,KAAK6oB,IAK3B,SAASC,EAAmBtoB,EAAOkoB,EAAWG,EAAe90B,EAAM5D,EAAM0a,GACrE,IAAIhF,EAAwBD,KACxBG,EAAWC,KACX8B,EAAS/B,EAAWF,EAAwBA,GAAyBA,EAAsBiC,OAK3FlF,EAAQpC,EAAMR,KAAK6oB,GACnBE,GAAYvoB,EAHOsH,GAAUA,IAAW4gB,EACP5gB,EAAS,KAEV/T,EAAM80B,EAAe14B,EAAM0a,GAiB/D,OAbyB,OAArBrK,EAAM2U,aACN3U,EAAM2U,WAAavS,GAEnBiD,KACIE,GAA2C,MAA/BF,EAAsBgC,OAChB,OAAjBjF,EAAMkF,QAAkD,IAA/BjC,EAAsB9R,KAI1CgS,IACNF,EAAsB7W,KAAO4T,GAH7BiD,EAAsBgC,MAAQjF,GAM/BA,EA9BHkmB,CAAmBtoB,EAAOkoB,EAAWG,EAAe90B,EAAM5D,EAAM0a,GAEpE,OADA/E,GAAyBlD,GAAO,GACzBA,EA8BX,SAASomB,GAAuBxoB,EAAOyoB,EAAap3B,EAAOgS,GAGvD,IAAIjB,EAAQpC,EAAMkZ,KAOlB,OANa,MAAT9W,IAGApC,EAAMkZ,KAAO9W,EAAQmmB,GAAYvoB,EAAOyoB,EACxC,EAAcp3B,EAAO,KAAM,OAExBgS,EAz6KE,GAy6KcjB,EA4C3B,SAASsmB,GAAW1oB,EAAOqD,EAAO1J,GAE9BuN,GAAU7D,EAAOA,EAv9KR,IAw9KT,IACI,IAAI/D,EAAYU,EAAMV,UACJ,OAAdA,GACAqpB,GAAmB,EAAgBrpB,EAAW3F,GAIlD,IAAIivB,EAAa5oB,EAAMzC,SACJ,OAAfqrB,GACAC,GAAgB7oB,EAAOqD,EAAOulB,EAAY,EAAgBjvB,GAO1DqG,EAAMwN,kBACNxN,EAAMwN,iBAAkB,GAKxBxN,EAAMskB,sBACNqD,GAAsB3nB,EAAOqD,GAK7BrD,EAAMqkB,mBACNsE,GAAmB,EAAgB3oB,EAAMV,UAAW3F,GAGxD,IAAIgkB,EAAa3d,EAAM2d,WACJ,OAAfA,GAvKZ,SAASmL,EAAsBC,EAAWpL,GACtC,IAAK,IAAI9vB,EAAI,EAAGA,EAAI8vB,EAAW3vB,OAAQH,IACnCm7B,GAAgBD,EAAWpL,EAAW9vB,IAsKlCi7B,CAAsBzlB,EAAOsa,GAGrC,QACIta,EAlgLI,KAkgLY,EAChByE,MAWR,SAASmhB,GAAYjpB,EAAOqD,EAAOulB,EAAYjvB,GAE3C,IAAIvB,EAAQiL,EAhhLJ,GAihLR,GAAsC,MAAzB,IAARjL,GAAL,CAEA8O,GAAU7D,EAAOA,EA/gLR,IAghLT,IAAIsB,EAAqBe,KACzB,IACItB,GAAuBf,GACvB6C,GAAgBlG,EAAM+F,mBACH,OAAf6iB,GACAC,GAAgB7oB,EAAOqD,EAAOulB,EAAY,EAAgBjvB,GAE9D,IAAIuvB,EAAmE,IAAhC,EAAR9wB,GAG/B,IAAKuM,EACD,GAAIukB,EAAyB,CACzB,IAAItY,EAAqB5Q,EAAM4Q,mBACJ,OAAvBA,GACA7H,GAAkB1F,EAAOuN,EAAoB,UAGhD,CACD,IAAID,EAAgB3Q,EAAM2Q,cACJ,OAAlBA,GACAzH,GAAyB7F,EAAOsN,EAAe,EAA4B,MAE/EvH,GAAwB/F,EAAO,GAUvC,GAmhCR,SAAS8lB,EAA4B9lB,GAEjC,IADA,IAAI+lB,EAAkB/lB,EA7jNT,IA8jNc,OAApB+lB,GAA0B,CAG7B,IAAIC,OAAkB,EACtB,GAAInnB,GAAaknB,KACZC,EAAkBD,EAriNZ,KAqiN8C,IAChD,EAAqC,CAC1C,IAAK,IAAIv7B,EAzhNS,EAyhNoBA,EAAIu7B,EAAgBp7B,OAAQH,IAAK,CACnE,IAAIy7B,EAAgBF,EAAgBv7B,GAChC07B,EAAgBD,EAnlNxB,GAqlNQplB,GAA6BolB,IAC7BL,GAAYM,EAAeD,EAAeC,EAAchsB,SAAU+rB,EA/kNxE,IAklNyD,IAApC,EAAlBD,IAIDG,GAAyBJ,EAAiB/lB,EA9kNzB,KAilNzB+lB,EAAkBA,EA7lNf,IA2iLHD,CAA4B9lB,GAEC,OAAzBrD,EAAMnC,gBACN8pB,GAAsB3nB,EAAOqD,IAI5BsB,EACD,GAAIukB,EAAyB,CACzB,IAAIvgB,EAAoB3I,EAAM2I,kBACJ,OAAtBA,GACAI,GAAkB1F,EAAOsF,OAG5B,CACD,IAAID,EAAe1I,EAAM0I,aACJ,OAAjBA,GACAQ,GAAyB7F,EAAOqF,EAAc,GAElDU,GAAwB/F,EAAO,IAhU/C,SAASomB,EAA8CzpB,EAAOqD,GAE1D,IACI,IAAI8gB,EAAsBnkB,EAAMmkB,oBAChC,GAA4B,OAAxBA,EAWA,IAVA,IAAIre,EAAmB9F,EAAMkkB,kBACzB3d,GAAyB,EASpB1Y,EAAI,EAAGA,EAAIs2B,EAAoBn2B,OAAQH,IAAK,CACjD,IAAI67B,EAAcvF,EAAoBt2B,GACX,iBAAhB67B,EACHA,GAAe,GASf1hB,GADsB,EAAI0hB,GAK1BnjB,EADAT,GArvIS,EAovIWqe,IAAsBt2B,IAQ1CiY,GAAoB4jB,GAKJ,OAAhBA,IACApjB,GAA8BR,EAAkBS,GAEhDmjB,EAAY,EADErmB,EAAMkD,KASxBA,MAKhB,QACIyB,IAAkB,IAwQlByhB,CAA8CzpB,EAAOqD,GAErD,IAAIsa,EAAa3d,EAAM2d,WACJ,OAAfA,GAtPZ,SAASgM,EAAuBZ,EAAWpL,GACvC,IAAK,IAAI9vB,EAAI,EAAGA,EAAI8vB,EAAW3vB,OAAQH,IACnC+7B,GAAiBb,EAAWpL,EAAW9vB,IAqPnC87B,CAAuBtmB,EAAOsa,GAKlC,IAAIre,EAAYU,EAAMV,UAMtB,GALkB,OAAdA,GACAqpB,GAAmB,EAAgBrpB,EAAW3F,IAI7CgL,EACD,GAAIukB,EAAyB,CACzB,IAAIrgB,EAAiB7I,EAAM6I,eACJ,OAAnBA,GACAE,GAAkB1F,EAAOwF,OAG5B,CACD,IAAID,EAAY5I,EAAM4I,UACJ,OAAdA,GACAM,GAAyB7F,EAAOuF,EAAW,GAE/CQ,GAAwB/F,EAAO,IAGT,IAA1BrD,EAAMokB,kBAONpkB,EAAMokB,iBAAkB,GAQvBzf,IACDtB,EAjnLA,KAinLgB,IAGxB,QACIyE,OAGR,SAAS+hB,GAA0B7pB,EAAOqD,EAAOulB,EAAYjvB,GACzD,IAAIwuB,EAAkB9kB,EAjnLH,IAknLfymB,GAAuBpkB,KACvBqkB,EAAuB9lB,GAAeZ,GAC1C,IACQymB,IAAwBC,GAAwB5B,EAAgB6B,OAChE7B,EAAgB6B,QAEhBD,GACArB,GAAW1oB,EAAOqD,EAAO1J,GAE7BsvB,GAAYjpB,EAAOqD,EAAOulB,EAAYjvB,GAE1C,QACQmwB,IAAwBC,GAAwB5B,EAAgB9rB,KAChE8rB,EAAgB9rB,OAI5B,SAASwsB,GAAgB7oB,EAAOqD,EAAOulB,EAAYqB,EAAItwB,GACnD,IAAIuwB,EAAoBniB,KACxB,IACIC,IAAkB,GACT,EAALiiB,GAAuB5mB,EAAMrV,OA7nLrB,IAgoLRizB,GAAoBjhB,EAAOqD,EAAO,EAAGqC,MAEzCkjB,EAAWqB,EAAItwB,GAEnB,QACIqO,GAAiBkiB,IAMzB,SAASC,GAAsBnqB,EAAOoC,EAAOiB,GACzC,GAAIlB,GAAmBC,GAGnB,IAFA,IACI/F,EAAM+F,EAAMoG,aACPkI,EAFGtO,EAAMmG,eAEemI,EAAiBrU,EAAKqU,IAAkB,CACrE,IAAI/c,EAAMqM,EAAMR,KAAKkR,GACjB/c,EAAIkK,gBACJlK,EAAIkK,eAAe,EAAgBwF,EAAMqN,GAAiBA,IAQ1E,SAAS0Z,GAA0BpqB,EAAOqD,EAAOjB,GACxCwC,OAgmBT,SAASylB,EAAyBrqB,EAAOqD,EAAOjB,EAAOgI,GACnD,IAAI3N,EAAQ2F,EAAMmG,eACdlM,EAAM+F,EAAMoG,aACXxI,EAAMwN,iBACPH,GAA+BjL,EAAOiB,GAE1C+Z,GAAgBhT,EAAQ/G,GAExB,IADA,IAAI4hB,EAAgB7iB,EAAM6iB,cACjBp3B,EAAI4O,EAAO5O,EAAIwO,EAAKxO,IAAK,CAC9B,IAAI8F,EAAMqM,EAAMR,KAAK3R,GACjBy8B,EAAc/nB,GAAe5O,GAC7B22B,GAEAC,GAAkBlnB,EAAOjB,EAAOzO,GAEpC,IAAIiW,EAAY+F,GAAkBtM,EAAOrD,EAAOnS,EAAGuU,GACnDgb,GAAgBxT,EAAWvG,GACL,OAAlB4hB,GACAuF,GAAmBnnB,EAAOxV,EAAI4O,EAAOmN,EAAWjW,EAAKyO,EAAO6iB,GAE5DqF,IACoB3mB,GAAyBvB,EAAM/Q,MAAOgS,GA5xMxD,GA6xMuBuG,IApnBjCygB,CAAyBrqB,EAAOqD,EAAOjB,EAAOkB,GAAiBlB,EAAOiB,IACpB,MAA/B,IAAdjB,EAAMhK,QAunBf,SAASqyB,EAA6BzqB,EAAOqD,EAAOjB,GAChD,IAAI3F,EAAQ2F,EAAMmG,eACdlM,EAAM+F,EAAMoG,aACZkiB,EAAU1qB,EAAMmkB,oBAChB3W,EAAkBxN,EAAMwN,gBACxBsZ,EAAe1kB,EAAM/Q,MA1xMT,GA2xMZkV,EArtLR,SAASokB,IACL,OAAOpmB,GAAiBC,OAAO+B,sBAotLHokB,GAC5B,IACI3iB,GAAiB8e,GACjB,IAAK,IAAI8D,EAAWnuB,EAAOmuB,EAAWvuB,EAAKuuB,IAAY,CACnD,IAAIj3B,EAAMqM,EAAMR,KAAKorB,GACjBhhB,EAAYvG,EAAMunB,GACtBpkB,GAAyBokB,GACA,OAArBj3B,EAAI+J,cAA0C,IAAjB/J,EAAIgK,UAAoC,OAAlBhK,EAAIiK,UACvDitB,GAAiCl3B,EAAKiW,GAEjC4D,GACLkd,EAAQ17B,KAAK,OAIzB,QACIgZ,IAAkB,GAClBxB,GAAyBD,IA7oBzBkkB,CAA6BzqB,EAAOqD,EAAOjB,IAOnD,SAAS0oB,GAAyBC,EAAU3oB,EAAO4oB,QACrB,IAAtBA,IAAgCA,EAAoB1nB,IACxD,IAAI0hB,EAAa5iB,EAAM4iB,WACvB,GAAmB,OAAfA,EAEA,IADA,IAAIiG,EAAa7oB,EAAM/Q,MAAQ,EACtBxD,EAAI,EAAGA,EAAIm3B,EAAWh3B,OAAQH,GAAK,EAAG,CAC3C,IAAIwD,EAAQ2zB,EAAWn3B,EAAI,GACvBY,GAAmB,IAAX4C,EACR25B,EAAkB5oB,EAAO2oB,GACzBA,EAAS15B,GACb05B,EAASE,KAAgBx8B,GAWrC,SAASy8B,GAA0Bv3B,GAC/B,OAAOA,EAAIqM,QACNrM,EAAIqM,MAAQmrB,GAAY,GAAoB,EAAGx3B,EAAI4J,SAAU5J,EAAI0J,MAAO1J,EAAI2J,KAAM3J,EAAIwL,cAAexL,EAAIyL,SAAUzL,EAAI2L,UAAW3L,EAAIoM,QAASpM,EAAI6J,SAc5J,SAAS2tB,GAAY53B,EAAM63B,EAAWxC,EAAYvrB,EAAOC,EAAM4C,EAAYG,EAAOf,EAAWS,EAASvC,GAElG,IAAIuI,EA7sLY,GA6sLwB1I,EAIpCguB,EAAoBtlB,EAAoBzI,EACxCqQ,EAkER,SAAS2d,EAAoBvlB,EAAmBslB,GAE5C,IADA,IAAI1d,EAA+C,GAC1C9f,EAAI,EAAGA,EAAIw9B,EAAmBx9B,IACnC8f,EAAU3e,KAAKnB,EAAIkY,EAAoB,KAAO0a,IAElD,OAAO9S,EAvES2d,CAAoBvlB,EAAmBslB,GACvD,OAAO1d,EAtuLC,GAswLJ,CACIpa,KAAMA,EACNoM,GAAIyrB,EACJzd,UAAWA,EACXpQ,SAAUqrB,EACV3E,QAAS,KACT3kB,UAAWA,EACX4Z,KAAM,KACN1Z,KAAMmO,EAAUvS,QAAQmwB,KAAK,KAAMxlB,GACnCA,kBAAmBA,EACnBme,kBAAmBmH,EACnBlH,oBAAqB,KACrB3W,iBAAiB,EACjB4W,iBAAiB,EACjBC,mBAAmB,EACnBC,sBAAsB,EACtB3T,cAAe,KACfC,mBAAoB,KACpBlI,aAAc,KACdC,kBAAmB,KACnBC,UAAW,KACXC,eAAgB,KAChBC,aAAc,KACdyb,QAAS,KACT1mB,eAAgB,KAChB8f,WAAY,KACZ6G,kBAAyC,mBAAftkB,EAA4BA,IAAeA,EACrEukB,aAA+B,mBAAVpkB,EAAuBA,IAAUA,EACtDsU,WAAY,KACZ5U,QAASA,EACTvC,OAAQA,GA8BpB,SAASguB,GAAkB1oB,EAAU2oB,EAAmBhsB,GACpD,GAAIoD,GAAqBC,GAGrB,OAAOA,EAAS4oB,kBAAkBD,EADZhsB,IAAkBzT,EAAQwJ,kBAAkBm2B,WAGtE,IAAItO,EAAwC,iBAAtBoO,EAClB3oB,EAAS6Q,cAAc8X,GACvBA,EAOJ,OADApO,EAASiG,YAAc,GAChBjG,EAyCX,SAASkL,GAAYvoB,EAAO4rB,EAASr4B,EAAM80B,EAAezP,EAASvO,GAG/D,MA6BI,CACI9W,KAAMA,EACNlC,MAAOg3B,EACP5a,cAjCYme,EAAUA,EAAQne,eAAiB,EAkC/ClF,gBAAiB,EACjBC,cAAe,EACfqc,sBAAuB,EACvBC,iBAAkB,KAClB1sB,MAAO,EACP2X,gBAAiB,EACjB6I,QAASA,EACTvO,MAAOA,EACP0a,YAAa,KACbC,WAAY,KACZC,mBAAejyB,EACf8K,OAAQ,KACRC,QAAS,KACTmnB,OAAQ,KACR12B,KAAM,KACN22B,eAAgB,KAChB9d,MAAO,KACPC,OAAQskB,EACRxG,WAAY,KACZxlB,OAAQ,KACRkjB,oBAAgB9vB,EAChBqyB,QAAS,KACTxC,qBAAiB7vB,EACjBovB,cAAe,EACfC,cAAe,GAG3B,SAASwJ,GAAwBC,EAAelE,EAAiBmE,GAC7D,IAAK,IAAItqB,KAAcqqB,EACnB,GAAIA,EAAc3+B,eAAesU,GAAa,CAE1C,IAAIuqB,EAAeF,EAAcrqB,IADjCsqB,EAA0B,OAAdA,EAAqB,GAAKA,GAExB5+B,eAAesU,GACzBsqB,EAAUtqB,GAAYzS,KAAK44B,EAAiBoE,GAG3CD,EAAUtqB,GAAc,CAACmmB,EAAiBoE,GAIvD,OAAOD,EAkEX,SAASE,GAAwBjsB,EAAOoC,EAAOiB,EAAOtS,EAAUtC,EAAOqU,EAAUgX,EAAWoS,GAExF,IAEIC,EAFA3f,EAAUlJ,GAAiBlB,EAAOiB,GAClC+oB,EAAYhqB,EAAMtE,QAEjBouB,GAA2B,MAAbE,IAAsBD,EAAYC,EAAUr7B,KAC3Ds7B,GAAqBrsB,EAAOqD,EAAO8oB,EAAWp7B,EAAUtC,GACpD4T,GAAgBD,IAqC5B,SAASkqB,EAAkBjpB,EAAO+nB,GAE9B,IAAImB,EAAsB5oB,GAAyBynB,EAAW/nB,GAC3B,GAA7BkpB,EAtjME,KAujMJA,EAvjMI,IAujM0B,IAxC1BD,CAAkBjpB,EAAOjB,EAAM/Q,QAKf,IAAf+Q,EAAM7O,OACXxC,EA7BR,SAASy7B,EAAY78B,GACjB,MAAa,UAATA,EACO,YACE,QAATA,EACO,UACE,eAATA,EACO,aACE,cAATA,EACO,YACE,aAATA,EACO,WACE,aAATA,EACO,WACJA,EAgBQ68B,CAAYz7B,GAYvBtC,EAAqB,MAAbqrB,EAAoBA,EAAUrrB,EAAO2T,EAAMwW,SAAW,GAAI7nB,GAAYtC,EAC1EoU,GAAqBC,GACrBA,EAAS+H,YAAY2B,EAASzb,EAAUtC,GAElCmc,GAAgB7Z,KACtByb,EAAQ3B,YAAc2B,EAAQ3B,YAAY9Z,EAAUtC,GAChD+d,EAAQzb,GAAYtC,IAwHpC,SAASg+B,GAAkBzsB,EAAOqD,EAAOjB,EAAOmb,GAI5C,IAAImP,GAAgB,EACpB,GAAI9nB,KAAsB,CACtB,IAAIzF,EA6LZ,SAASwtB,EAAwB3sB,EAAO+qB,EAAU3oB,GAI9C,IAAIwqB,EAAW5sB,EAAMwkB,kBACjBqI,EAAU,KACd,GAAID,EACA,IAAK,IAAI/+B,EAAI,EAAGA,EAAI++B,EAAS5+B,OAAQH,IAAK,CACtC,IAAI8F,EAAMi5B,EAAS/+B,GACfgyB,GAA2Bzd,EAAOzO,EAAI0L,WAAkC,KACxEwtB,IAAYA,EAA2C,IACvD1e,GAAmBd,GAA+BjL,EAAO2oB,GAAW/qB,EAAOrM,EAAIJ,MAC3EgP,GAAe5O,IACG,EAAdyO,EAAMhK,OACN2lB,GAA4B3b,GAChC0qB,GAAoB9sB,EAAOoC,GAE3ByqB,EAAQh7B,QAAQ8B,IAGhBk5B,EAAQ79B,KAAK2E,IAK7B,OAAOk5B,EAtNiBF,CAAwB3sB,EAAOqD,EAAOjB,GACtD2qB,EAA2B,OAAdxP,EAAqB,KAAO,CAAEyP,IAAK,GACpD,GAAsB,OAAlB7tB,EAAwB,CACxB,IAAI8tB,EAAyB,EAC7BP,GAAgB,EAChBQ,GAAe9qB,EAAOpC,EAAMR,KAAKxR,OAAQmR,EAAcnR,QAOvD,IAAK,IAAIH,EAAI,EAAGA,EAAIsR,EAAcnR,OAAQH,KAClC8F,EAAMwL,EAActR,IAChBuP,mBACJzJ,EAAIyJ,kBAAkBzJ,GAE9Bw5B,GAAgCntB,EAAOoC,EAAOjD,EAAcnR,QAC5D,IAAIo/B,GAAqB,EACrBC,GAA0B,EAC9B,IAASx/B,EAAI,EAAGA,EAAIsR,EAAcnR,OAAQH,IAAK,CAC3C,IAAI8F,EAGJyO,EAAM2iB,YAAc9Z,GAAe7I,EAAM2iB,aAHrCpxB,EAAMwL,EAActR,IAGkC+P,WAC1D0vB,GAAqBttB,EAAOqD,EAAO1P,GACnC45B,GAAoBvtB,EAAMR,KAAKxR,OAAS,EAAG2F,EAAKo5B,GACrB,OAAvBp5B,EAAIkK,iBACJuE,EAAMhK,OAAS,GACM,OAArBzE,EAAI+J,cAA2C,OAAlB/J,EAAIiK,WAAuC,IAAjBjK,EAAIgK,WAC3DyE,EAAMhK,OAAS,MAGdg1B,IAAuBz5B,EAAIsK,WAAatK,EAAIuK,QAAUvK,EAAIyK,YAI1D4B,EAAM2Q,gBAAkB3Q,EAAM2Q,cAAgB,KAAK3hB,KAAKoT,EAAM/Q,MAxrM/D,IAyrMA+7B,GAAqB,GAEpBC,IAA4B15B,EAAIsK,YAAatK,EAAIyK,WACjD4B,EAAM4Q,qBAAuB5Q,EAAM4Q,mBAAqB,KACpD5hB,KAAKoT,EAAM/Q,MA7rMhB,IA8rMAg8B,GAA0B,GAE9BG,GAAqCxtB,EAAOrM,GAC5Cs5B,GAA0Bt5B,EAAIgK,UAxQ9C,SAAS8vB,EAAgCztB,EAAOoC,GAS5C,IAPA,IACI/F,EAAM+F,EAAMoG,aACZklB,EAAO1tB,EAAMR,KACbmuB,EAAavrB,EAAMiI,MACnBujB,EAAyD,GACzDC,EAAc,KACdC,EAAe,KACVjgC,EAPGuU,EAAMmG,eAOE1a,EAAIwO,EAAKxO,IAAK,CAC9B,IAAI4a,EAAeilB,EAAK7/B,GACpBkgC,EAAkBtlB,EAAa3K,OAK/BmnB,EAAgC,OAAf0I,GAAwBjP,GAAiBtc,GAE1D,KADA4rB,GAAsBD,EAAiBJ,GAE3CC,EAAgB5+B,KAAKi2B,GACrB4I,EAAchC,GAAwBkC,EAAiBlgC,EAAGggC,GAC1DC,EAAejC,GAAwBpjB,EAAa1K,QAASlQ,EAAGigC,GAEhD,OAAhBD,IACIA,EAAY1gC,eAAe,WAC3BiV,EAAMhK,OAAS,IAEfy1B,EAAY1gC,eAAe,WAC3BiV,EAAMhK,OAAS,KAGvBgK,EAAM6iB,cAAgB2I,EACtBxrB,EAAMtE,OAAS+vB,EACfzrB,EAAMrE,QAAU+vB,EAyORL,CAAgCztB,EAAOoC,GACvC6rB,GAAkBjuB,EAAOqD,EAAO4pB,GAEhCF,GAiLZ,SAASmB,EAAwB9rB,EAAOmb,EAAWwP,GAC/C,GAAIxP,EAKA,IAJA,IAAIyH,EAAa5iB,EAAM4iB,WAAiD,GAI/Dn3B,EAAI,EAAGA,EAAI0vB,EAAUvvB,OAAQH,GAAK,EAAG,CAC1C,IAAIwD,EAAQ07B,EAAWxP,EAAU1vB,EAAI,IACrC,GAAa,MAATwD,EACA,MAAM,IAAIqB,MAAM,mBAAqB6qB,EAAU1vB,EAAI,GAAK,gBAC5Dm3B,EAAWh2B,KAAKuuB,EAAU1vB,GAAIwD,IA1L9B68B,CAAwB9rB,EAAOmb,EAAWwP,GAIlD,OADA3qB,EAAM2iB,YAAc9Z,GAAe7I,EAAM2iB,YAAa3iB,EAAMiI,OACrDqiB,EAQX,SAASc,GAAqCxtB,EAAOrM,GAEjD,IAAI+2B,EAAU1qB,EAAMmkB,oBASpBuG,EAAQ17B,KAAK2E,EAAI+J,cAEA,IADF/J,EAAIgK,UAEf+sB,EAAQ17B,KAAK2E,EAAIgK,UAczB,SAASswB,GAAkBjuB,EAAOqD,EAAOgD,GAGrC,IAAK,IAAIxY,EAAI,EAAGA,EAAIwY,EAAOxY,IACvBwV,EAAMrU,KAAKyxB,IACXzgB,EAAM2N,UAAU3e,KAAKyxB,IACrBzgB,EAAMR,KAAKxQ,KAAK,MAgExB,SAAS67B,GAAiCl3B,EAAKiW,GAClB,OAArBjW,EAAI+J,cACJ/J,EAAI+J,aAAa,EAAgBkM,GASzC,SAASujB,GAAgCntB,EAAOoC,EAAO+rB,GAMnD,IAAIrH,EAt0MY,GAs0MmB1kB,EAAM/Q,MAErC+8B,EAAgBpuB,EAAMR,KAAKxR,QADkB,MAAxBoU,EAAM2N,kBAE9B/P,EAAMmkB,sBAAwBnkB,EAAMmkB,oBAAsB,KACtDn1B,KAAK83B,EAAcsH,EAAeD,GAsC3C,SAASrB,GAAoB9sB,EAAOkO,GAEhCA,EAAU9V,OAAS,GAClB4H,EAAM2d,aAAe3d,EAAM2d,WAAiD,KACxE3uB,KAAKkf,EAAU7c,OAqBxB,SAASk8B,GAAoBl8B,EAAOsC,EAAKo5B,GACrC,GAAIA,EAAY,CACZ,GAAIp5B,EAAIqK,SACJ,IAAK,IAAInQ,EAAI,EAAGA,EAAI8F,EAAIqK,SAAShQ,OAAQH,IACrCk/B,EAAWp5B,EAAIqK,SAASnQ,IAAMwD,EAGlCkR,GAAe5O,KACfo5B,EAAW,IAAM17B,IAQ7B,SAAS67B,GAAe9qB,EAAO/Q,EAAOg9B,GAGlCjsB,EAAMhK,OAAS,EAEfgK,EAAMmG,eAAiBlX,EACvB+Q,EAAMoG,aAAenX,EAAQg9B,EAC7BjsB,EAAM2N,gBAAkB1e,EAE5B,SAASi8B,GAAqBttB,EAAO+qB,EAAUp3B,GAC3CqM,EAAMR,KAAKxQ,KAAK2E,GAChB,IAAI26B,EAAmB36B,EAAI5H,UAAY4H,EAAI5H,QAAUgW,GAAcpO,EAAIJ,OACnEg7B,EAAsB,IAAI1kB,GAAoBykB,EAAkB/rB,GAAe5O,GAAM,MACzFqM,EAAM2N,UAAU3e,KAAKu/B,GACrBxD,EAAS/7B,KAAKu/B,GAElB,SAAShE,GAAkBlnB,EAAO6K,EAAWva,GACzC,IAAIyW,EAAS9G,GAAiB4K,EAAW7K,GACrCrD,EAAQkrB,GAA0Bv3B,GAGlCw0B,EAAkB9kB,EAx7MH,IAy7MfmrB,EAAgBC,GAAcprB,EAAO2kB,GAAY3kB,EAAOrD,EAAO,KAAMrM,EAAIqL,OAAS,GAAiB,GAAsBoL,EAAQ8D,EAAWia,EAAiBA,EAAgBnlB,eAAeoH,EAAQzW,KAGxM0P,EAAM6K,EAAU7c,OAASm9B,EAE7B,SAASE,GAAyBtsB,EAAOiB,EAAO1T,EAAMlB,EAAOqrB,EAAWgO,GAGpE,IAAItb,EAAUlJ,GAAiBlB,EAAOiB,GAClCP,EAAWO,EAj8MJ,IAk8MX,GAAa,MAAT5U,EAEAoU,GAAqBC,GAAYA,EAASsS,gBAAgB5I,EAAS7c,EAAMm4B,GACrEtb,EAAQ4I,gBAAgBzlB,OAE3B,CAED,IAAIg/B,EAAwB,MAAb7U,EAAoB5N,GAAgBzd,GAASqrB,EAAUrrB,EAAO2T,EAAMwW,SAAW,GAAIjpB,GAC9FkT,GAAqBC,GACrBA,EAAS4H,aAAa8B,EAAS7c,EAAMg/B,EAAU7G,GAG/CA,EAAYtb,EAAQ7B,eAAemd,EAAWn4B,EAAMg/B,GAChDniB,EAAQ9B,aAAa/a,EAAMg/B,IAa3C,SAASnE,GAAmBnnB,EAAOqN,EAAgBvB,EAAUxb,EAAKyO,EAAOwsB,GACrE,IAAI3J,EAAgB2J,EAAiBle,GACrC,GAAsB,OAAlBuU,EAEA,IADA,IAAInlB,EAAWnM,EAAImM,SACVjS,EAAI,EAAGA,EAAIo3B,EAAcj3B,QAAS,CACvC,IAAIyT,EAAawjB,EAAcp3B,KAC3BghC,EAAc5J,EAAcp3B,KAC5BY,EAAQw2B,EAAcp3B,KACT,OAAbiS,EACAnM,EAAImM,SAASqP,EAAU1gB,EAAOgT,EAAYotB,GAG1C1f,EAAS0f,GAAepgC,GAuBxC,SAASu/B,GAAsBlwB,EAAQuM,GAGnC,IAFA,IAAIykB,EAAgB,KAChBjhC,EAAI,EACDA,EAAIwc,EAAMrc,QAAQ,CACrB,IAAIwc,EAAWH,EAAMxc,GACrB,GAAiB,IAAb2c,EAKC,GAAiB,IAAbA,EAAJ,CAML,GAAwB,iBAAbA,EACP,MACA1M,EAAO3Q,eAAeqd,KACA,OAAlBskB,IACAA,EAAgB,IACpBA,EAAc9/B,KAAKwb,EAAU1M,EAAO0M,GAAWH,EAAMxc,EAAI,KAE7DA,GAAK,OAXDA,GAAK,OALLA,GAAK,EAkBb,OAAOihC,EAkBX,SAASC,GAAiBC,EAAY3lB,EAAae,EAAQhI,GAcvD,OAViB,IAAmCnV,MAAO+hC,GAC3D,GACA,EACA3lB,EACA,KACA,KACAjH,EACAgI,EACA,MA4CJ,SAASof,GAAyBllB,EAAY2qB,GAG1C,IAFA,IAAIC,EAAa5qB,EAhkNH,GAkkNLzW,EAAI,EAAGA,EAAIqhC,EAAWlhC,OAAQH,IAAK,CACxC,IAAIshC,EAAaD,EAAWrhC,GAGxBuhC,EAFsBD,EA/mNrB,GAAA,GAaoB,IAumNzB,GAAIC,IAA2BH,GAMiE,IAA1B,GAAhCG,EA3nNlC,IA4nNgC,CAK5B,IAAIC,EAAaF,EAloNrB,GAooNIlG,GAAYoG,EAAYF,EAAYE,EAAW9xB,SAAU4xB,EA7nN3D,MAwoNd,SAASvF,GAAiBb,EAAWuG,GAEjC,IAAId,EAAgB7qB,GAAyB2rB,EAAkBvG,GAE/D,GAAI7kB,GAA6BsqB,IACN,GAAvBA,EAnpNI,GAmpN4D,CAChE,IAAIe,EAAiBf,EArpNjB,GAspNJvF,GAAYsG,EAAgBf,EAAee,EAAehyB,SAAUixB,EA/oN9D,KAkpNd,SAASxF,GAAgBD,EAAWuG,GAEhC,IAAId,EAAgB7qB,GAAyB2rB,EAAkBvG,GAC3DwG,EAAiBf,EA5pNb,IA2rNZ,SAASgB,EAAsBxvB,EAAOqD,GAClC,IAAK,IAAIxV,EAAIwV,EAAMrV,OAAQH,EAAImS,EAAM2N,UAAU3f,OAAQH,IACnDwV,EAAMrU,KAAKgR,EAAM2N,UAAU9f,IAhC/B2hC,CAAsBD,EAAgBf,GACtC9F,GAAW6G,EAAgBf,EAAeA,EAvpNhC,IAosNd,SAASC,GAAcprB,EAAOosB,GAY1B,OAPIpsB,EApsNS,IAqsNTA,EApsNS,IAVN,GA8sNuBosB,EAG1BpsB,EAxsNS,IAwsNWosB,EAExBpsB,EAzsNa,IAysNOosB,EACbA,EAgBX,SAASC,GAAcrsB,GACnB,KAAOA,GAAO,CACVA,EAxuNI,IAwuNY,GAChB,IAAI4W,EAAWyG,GAAerd,GAE9B,GAAIb,GAAWa,KAAW4W,EACtB,OAAO5W,EAGXA,EAAQ4W,EAEZ,OAAO,KAoCX,SAAS0V,GAAgBC,GACrB,IAAK,IAAI/hC,EAAI,EAAGA,EAAI+hC,EAAYjS,WAAW3vB,OAAQH,IAAK,CACpD,IAAIgiC,EAAgBD,EAAYjS,WAAW9vB,GACvCwV,EAAQW,GAAiB6rB,GACzB7vB,EAAQqD,EA1xNR,GA2xNJwmB,GAA0B7pB,EAAOqD,EAAOrD,EAAMzC,SAAUsyB,IAGhE,SAASC,GAAsB9vB,EAAOqD,EAAO1J,GACzC,IAAIwuB,EAAkB9kB,EAtxNH,IAuxNf8kB,EAAgB6B,OAChB7B,EAAgB6B,QACpB,IACIf,GAAYjpB,EAAOqD,EAAOrD,EAAMzC,SAAU5D,GAE9C,MAAO1K,GAEH,MADA0iB,GAAYtO,EAAOpU,GACbA,EAEV,QACQk5B,EAAgB9rB,KAChB8rB,EAAgB9rB,OAQ5B,SAAS0zB,GAAwB1sB,GAC7BssB,GAAgBtsB,EA7yNN,IA00Nd,SAASslB,GAAmBvwB,EAAO43B,EAAaxT,GAE5C3V,GAAqB,GACrBmpB,EAAY53B,EAAOokB,GA+CvB,IAAIyT,GAAgBzI,GACpB,SAAS0I,GAAYxsB,GAEjB,OAAOA,EAh4NG,KAg4NeA,EAh4Nf,GAg4N4D,IAE1E,SAASysB,GAAgBnwB,GACrB,OAAOA,EAAMukB,UAAYvkB,EAAMukB,QAAuC,IAM1E,SAAS6L,GAAsBC,EAAYjuB,EAAOiB,GAU9C,OAHmB,OAAfgtB,GAAuB9tB,GAAe8tB,MACtChtB,EAtmNR,SAASitB,EAAY7hC,GACjB,KAAOxB,MAAMqH,QAAQ7F,IAAQ,CAGzB,GAA2B,iBAAhBA,EAjRR,GAkRC,OAAOA,EACXA,EAAQA,EAxTL,GA0TP,OAAO,KA8lNK6hC,CAAYjtB,EAAMjB,EAAM/Q,SAE7BgS,EA/4NI,IAk5Nf,SAASsO,GAAYtO,EAAOpU,GACxB,IAAI6I,EAAWuL,EAr5NF,GAs5NTktB,EAAez4B,EAAWA,EAASS,IAAIkZ,GAAc,MAAQ,KACjE8e,GAAgBA,EAAa5e,YAAY1iB,GAW7C,SAASo9B,GAAqBrsB,EAAOqD,EAAOvF,EAAQ2D,EAAYhT,GAC5D,IAAK,IAAIZ,EAAI,EAAGA,EAAIiQ,EAAO9P,QAAS,CAChC,IAAIqD,EAAQyM,EAAOjQ,KACfghC,EAAc/wB,EAAOjQ,KACrBshB,EAAW9L,EAAMhS,GAEjBsC,EAAMqM,EAAMR,KAAKnO,GACA,OAAjBsC,EAAImM,SACJnM,EAAImM,SAASqP,EAAU1gB,EAAOgT,EAAYotB,GAG1C1f,EAAS0f,GAAepgC,GAOpC,SAAS+hC,GAAoBntB,EAAOhS,EAAO5C,GAGvC,IAAI+d,EAAUpJ,GAAiB/R,EAAOgS,GAGlCP,EAAWO,EAx7NJ,IAy7NXR,GAAqBC,GAAYA,EAAS2tB,SAASjkB,EAAS/d,GAAS+d,EAAQ8W,YAAc70B;;;;;;;OAW/F,SAASiiC,GAActuB,EAAOuuB,GAE1B,IAAIC,EAAYD,EA98NP,GA+8NT,OAAqB,IAAjBvuB,EAAM/Q,MAGC6Q,GAAa0uB,GAAaA,EAAY,KAKtCA,EAOf,SAASC,GAAyBC,EAAWptB,GACzC,IAAIktB,EAAYF,GAAcI,EAAWptB,GACzC,OAAOktB,EAAYG,GAAiBrtB,EAx9NzB,IAw9NyCktB,EAl7N3C,IAk7NgE,KAM7E,SAASI,GAA0BC,EAAQnuB,EAAUwE,EAAQ4pB,EAAeC,GAKxE,GAAqB,MAAjBD,EAAuB,CACvB,IAAI5sB,OAAa,EACbgmB,GAAc,EAIdpoB,GAAagvB,GACb5sB,EAAa4sB,EAERjvB,GAAQivB,KACb5G,GAAc,EAEd4G,EAAgBA,EA1/NjB,IA4/NH,IAAIE,EAAQjuB,GAAY+tB,GAET,IAAXD,GAAwC,OAAX3pB,EACX,MAAd6pB,EACAE,GAAkBvuB,EAAUwE,EAAQ8pB,GAGpCE,GAAmBxuB,EAAUwE,EAAQ8pB,EAAOD,GAAc,MAG9C,IAAXF,GAAwC,OAAX3pB,EAClCgqB,GAAmBxuB,EAAUwE,EAAQ8pB,EAAOD,GAAc,MAE1C,IAAXF,EACLM,GAAiBzuB,EAAUsuB,EAAO9G,GAElB,IAAX2G,GAELnuB,EAAS0uB,YAAYJ,GAEP,MAAd9sB,GA+sBZ,SAASmtB,EAAe3uB,EAAUmuB,EAAQ3sB,EAAYotB,EAAcP,GAEhE,IAAIQ,EAASrtB,EAhrPJ,GAwrPLqtB,IAPSxuB,GAAYmB,IAYrB0sB,GAA0BC,EAAQnuB,EAAU4uB,EAAcC,EAAQR,GAEtE,IAAK,IAAItjC,EAvrPiB,EAurPYA,EAAIyW,EAAWtW,OAAQH,IAAK,CAC9D,IAAIwV,EAAQiB,EAAWzW,GACvB+jC,GAAUvuB,EAjvPN,GAivPoBA,EAAOP,EAAUmuB,EAAQS,EAAcC,IAjuB3DF,CAAe3uB,EAAUmuB,EAAQ3sB,EAAYgD,EAAQ6pB,IAIjE,SAASU,GAAepjC,EAAOqU,GAG3B,OAAOD,GAAqBC,GAAYA,EAASgvB,WAAWrjC,GACxDqU,EAAS+uB,eAAepjC,GAEhC,SAASsjC,GAA2B/xB,EAAOqD,EAAO2uB,EAAYb,GAC1D,IAAIO,EAAeb,GAAyB7wB,EAAMkZ,KAAM7V,GAEpDquB,GAGAE,GAAU5xB,EAAOqD,EAFFA,EAphOR,IAqhOM2uB,EAAa,EAAiB,EACDN,EAAcP,GAwEhE,SAASc,GAAWjyB,EAAOqD,EAAOiB,EAAYjT,GAG1C,IAAI6gC,EAnjOsB,EAmjOuB7gC,EAC7C8gC,EAAkB7tB,EAAWtW,OAC7BqD,EAAQ,IAERiT,EAAW4tB,EAAmB,GA5mO3B,GA4mOsC7uB,GAEzChS,EAAQ8gC,EAzjOc,GA0jOtB9uB,EA/mOG,GA+mOWiB,EAAW4tB,GACzB12B,GAAW8I,EA3jOW,EA2jO2BjT,EAAOgS,KAGxDiB,EAAWtV,KAAKqU,GAChBA,EApnOG,GAonOW,MAElBA,EAvnOS,GAunOOiB,EAEhB,IAAI8tB,EAAwB/uB,EA3mOH,IA4mOK,OAA1B+uB,GAAkC9tB,IAAe8tB,GAezD,SAASC,EAAeC,EAAsBjvB,GAG1C,IAAI6rB,EAAaoD,EAjmOH,GAomOVlD,EAFqB/rB,EA7oOhB,GAAA,GAaoB,IAooO8D,KAA1B,GAAhC+rB,EAlpOzB,KAopOyB/rB,EAtoOJ,MAwoOM+rB,IAK3BkD,EAlnOO,IAknO+B,GAG3B,OAAfpD,EACAoD,EAnnOU,GAmnO0B,CAACjvB,GAGrC6rB,EAAWlgC,KAAKqU,GAtChBgvB,CAAeD,EAAuB/uB,GAG1C,IAAIkvB,EAAWlvB,EA5nOL,GA6nOO,OAAbkvB,GACAA,EAASN,WAAWjyB,GAGxBqD,EApoOQ,IAooOQ,IAiCpB,SAASmvB,GAAgBF,EAAsBjvB,GAI3C,IAAI6rB,EAAaoD,EA7nOH,GA8nOVG,EAAoBvD,EAAWt6B,QAAQyO,GAC3C6rB,EAAWzzB,OAAOg3B,EAAmB,GAYzC,SAASC,GAAWpuB,EAAYquB,GAC5B,KAAIruB,EAAWtW,QAjoOW,GAioO1B,CAEA,IAAIkkC,EAnoOsB,EAmoOuBS,EAC7CC,EAAetuB,EAAW4tB,GAC9B,GAAIU,EAAc,CACd,IAAIR,EAAwBQ,EA9qOP,IA+qOS,OAA1BR,GAAkCA,IAA0B9tB,GAC5DkuB,GAAgBJ,EAAuBQ,GAEvCD,EAAc,IACdruB,EAAW4tB,EAAmB,GAhsO/B,GAgsO0CU,EAhsO1C,IAksOH,IAAIC,EAAen3B,GAAgB4I,EA7oOb,EA6oOmDquB,GACzEZ,GAA2Ba,EAtsOvB,GAssO4CA,GAAc,EAAO,MAErE,IAAIL,EAAWM,EApsOT,GAqsOW,OAAbN,GACAA,EAASG,WAAWG,EA1sOpB,IA4sOJD,EA1sOK,GA0sOkB,KACvBA,EA1sOG,GA0sOkB,KAErBA,EA9sOI,KA8sOmB,IAE3B,OAAOA,GAQX,SAASE,GAAWxuB,EAAYquB,GAC5B,IAAII,EAAeL,GAAWpuB,EAAYquB,GAC1CI,GAAgBC,GAAaD,EA3tOrB,GA2tO0CA,GAStD,SAASC,GAAahzB,EAAOqD,GACzB,KAAqB,IAAfA,EApuOE,IAouOmC,CACvC,IAAIP,EAAWO,EA5tOR,IA6tOHR,GAAqBC,IAAaA,EAAS0uB,aAC3CI,GAAU5xB,EAAOqD,EAAOP,EAAU,EAAiB,KAAM,MA/KrE,SAASmwB,EAAgBC,GAErB,IAAIzD,EAAoByD,EA/iOX,IAgjOb,IAAKzD,EACD,OAAO0D,GAAYD,EA7jOf,GA6jOgCA,GAExC,KAAOzD,GAAmB,CACtB,IAAIjhC,EAAO,KACX,GAAIyT,GAAQwtB,GAERjhC,EAAOihC,EAvjOF,QAyjOJ,CAGD,IAAI2D,EAAY3D,EAhhOE,GAihOd2D,IACA5kC,EAAO4kC,GAEf,IAAK5kC,EAAM,CAGP,KAAOihC,IAAsBA,EA5kO9B,IA4kOyDA,IAAsByD,GAC1EjxB,GAAQwtB,IAAsB0D,GAAY1D,EAhlO9C,GAglOwEA,GACpEA,EAAoB4D,GAAe5D,EAAmByD,GAEhC,OAAtBzD,IACAA,EAAoByD,GACxBjxB,GAAQwtB,IAAsB0D,GAAY1D,EArlO1C,GAqlOoEA,GACpEjhC,EAAOihC,GAAqBA,EAnlO7B,GAqlOHA,EAAoBjhC,GAkJpBykC,CAAgB5vB,IAexB,SAASgwB,GAAe5D,EAAmByD,GACvC,IAAI9wB,EACJ,OAAIH,GAAQwtB,KAAuBrtB,EAAQqtB,EAtvOlC,KAuvOU,IAAfrtB,EAAM7O,KAGCm9B,GAActuB,EAAOqtB,GAIrBA,EAjwOF,KAiwOgCyD,EAAW,KAAOzD,EAjwOlD,GA4wOb,SAAS0D,GAAYnzB,EAAOqD,GACxB,KAAqB,IAAfA,EA9wOE,IA8wOmC,CAGvCA,EAjxOI,KAixOY,IAMhBA,EAvxOI,IAuxOY,IAiExB,SAASiwB,EAAkBtzB,EAAOqD,GAC9B,IAAIyF,EACJ,GAAa,MAAT9I,GAAwD,OAAtC8I,EAAe9I,EAAM8I,cACvC,IAAK,IAAIjb,EAAI,EAAGA,EAAIib,EAAa9a,OAAQH,GAAK,EAAG,CAC7C,IAAI8L,EAAU0J,EAAMyF,EAAajb,IAEjC,KAAM8L,aAAmBkQ,IAAsB,CAC3C,IAAI0pB,EAASzqB,EAAajb,EAAI,GAC9B,GAAIZ,MAAMqH,QAAQi/B,GACd,IAAK,IAAIv6B,EAAI,EAAGA,EAAIu6B,EAAOvlC,OAAQgL,GAAK,EACpCu6B,EAAOv6B,EAAI,GAAG/K,KAAK0L,EAAQ45B,EAAOv6B,UAItCu6B,EAAOtlC,KAAK0L,KA9ExB25B,CAAkBtzB,EAAOqD,GAyBjC,SAASmwB,EAAgBxzB,EAAOqD,GAC5B,IAAIowB,EAAWzzB,EAAMukB,QACrB,GAAiB,OAAbkP,EAAmB,CAEnB,IADA,IAAIC,EAAWrwB,EA/yOT,GAgzOGxV,EAAI,EAAGA,EAAI4lC,EAASzlC,OAAS,EAAGH,GAAK,EAC1C,GAA2B,iBAAhB4lC,EAAS5lC,GAAiB,CAEjC,IAAI8lC,EAAoBF,EAAS5lC,EAAI,GACjC8D,EAAsC,mBAAtBgiC,EAChBA,EAAkBtwB,GAClBF,GAAYE,EAAMswB,IAElBC,EAAqBH,EAAS5lC,EAAI,GACJ,kBAAvB+lC,EAEPjiC,EAAOkiC,oBAAoBJ,EAAS5lC,GAJzB6lC,EAASD,EAAS5lC,EAAI,IAIiB+lC,GAG9CA,GAAsB,EAEtBF,EAASE,KAITF,GAAUE,GAAoBE,cAGtCjmC,GAAK,OAKL4lC,EAAS5lC,GAAGI,KADEylC,EAASD,EAAS5lC,EAAI,KAI5CwV,EA/0OM,GA+0OW,MA3DjBmwB,CAAgBxzB,EAAOqD,GACvB,IAAI6K,EAAY7K,EAtxOX,GAwxOD6K,GAAgC,IAAnBA,EAAU3a,MACvBsP,GAAqBQ,EApxOlB,MAsxOHA,EAtxOG,IAsxOa0wB,UAEpB,IAAIzB,EAAuBjvB,EAlxON,IAoxOrB,GAA6B,OAAzBivB,GAAiCpwB,GAAamB,EAlyO7C,IAkyO6D,CAE1DivB,IAAyBjvB,EApyO5B,IAqyOGmvB,GAAgBF,EAAsBjvB,GAG1C,IAAIkvB,EAAWlvB,EAtyOb,GAuyOe,OAAbkvB,GACAA,EAASG,WAAW1yB,KA6EpC,SAASg0B,GAAgBh0B,EAAOoC,EAAOiH,GAInC,IADA,IAAI4qB,EAAc7xB,EAAMkF,OACF,MAAf2sB,IACmB,IAArBA,EAAY1gC,MACY,IAArB0gC,EAAY1gC,OAEhB0gC,GADA7xB,EAAQ6xB,GACY3sB,OAIxB,GAAmB,MAAf2sB,EAAqB,CACrB,IAAI/lB,EAAY7E,EAj4OX,GAk4OL,OAAuB,IAAnB6E,EAAU3a,KAQHs9B,GAAyB3iB,EAAW7E,GAMpCA,EAt5OR,GA65OH,GAHgBjH,GAAwB,IAAfA,EAAM7O,MAGA,EAAd6O,EAAMhK,MACnB,OAAOkL,GAAiBlB,EAAOiH,GAAasP,WAGhD,GAAwB,EAApBsb,EAAY77B,MAAiC,CAC7C,IAAIsO,EAAQ1G,EAAMR,KAEdC,EAAgBiH,EADNA,EAAMutB,EAAY5iC,OACEkX,gBAAgB9I,cAOlD,GAAIA,IAAkBzT,EAAQwJ,kBAAkBm2B,WAC5ClsB,IAAkBzT,EAAQwJ,kBAAkB0+B,OAC5C,OAAO,KAGf,OAAO5wB,GAAiB2wB,EAAa5qB,GAQ7C,SAASioB,GAAmBxuB,EAAUwE,EAAQD,EAAO8pB,GAE7CtuB,GAAqBC,GACrBA,EAASqxB,aAAa7sB,EAAQD,EAAO8pB,GAGrC7pB,EAAO6sB,aAAa9sB,EAAO8pB,GAAY,GAG/C,SAASE,GAAkBvuB,EAAUwE,EAAQD,GAGrCxE,GAAqBC,GACrBA,EAAS2Q,YAAYnM,EAAQD,GAG7BC,EAAOmM,YAAYpM,GAG3B,SAAS+sB,GAA2BtxB,EAAUwE,EAAQD,EAAO8pB,GACtC,OAAfA,EACAG,GAAmBxuB,EAAUwE,EAAQD,EAAO8pB,GAG5CE,GAAkBvuB,EAAUwE,EAAQD,GAe5C,SAAS0pB,GAAiBjuB,EAAUoW,GAChC,OAAQrW,GAAqBC,GAAYA,EAAS6V,WAAWO,GAAQA,EAAKP,WAc9E,SAAS0b,GAAoBJ,EAAa5wB,GACtC,GAAyB,IAArB4wB,EAAY1gC,KAAuB,CACnC,IAAI+Q,EAAaosB,GAAcuD,EAAa5wB,GAC5C,OAAmB,OAAfiB,EACO,KAEJgwB,GADKhwB,EAAW1P,QAAQyO,EA17OT,GAAA,EA27OaiB,GAElC,OAAyB,IAArB2vB,EAAY1gC,MACI,IAArB0gC,EAAY1gC,KACL+P,GAAiB2wB,EAAa5wB,GAElC,KAaX,SAASoQ,GAAYzT,EAAOqD,EAAOkxB,EAASC,GACxC,IAAI9C,EAAesC,GAAgBh0B,EAAOw0B,EAAYnxB,GACtD,GAAoB,MAAhBquB,EAAsB,CACtB,IAAI5uB,EAAWO,EA//OR,IAigPHoxB,EAAaJ,GADCG,EAAWltB,QAAUjE,EArgPlC,GAsgP6CA,GAClD,GAAIpW,MAAMqH,QAAQigC,GACd,IAAK,IAAI1mC,EAAI,EAAGA,EAAI0mC,EAAQvmC,OAAQH,IAChCumC,GAA2BtxB,EAAU4uB,EAAc6C,EAAQ1mC,GAAI4mC,QAInEL,GAA2BtxB,EAAU4uB,EAAc6C,EAASE,IAkDxE,SAASH,GAAqBI,EAAsBpwB,GAChD,IAAIqwB,EA7gPsB,EA6gPoBD,EAAuB,EACrE,GAAIC,EAAgBrwB,EAAWtW,OAAQ,CACnC,IAAIqV,EAAQiB,EAAWqwB,GACnBC,EAAmBvxB,EAxkPnB,GAwkPgCsR,WACpC,GAAyB,OAArBigB,EACA,OA/CZ,SAASC,EAAmBxxB,EAAOjB,GAC/B,GAAc,OAAVA,EAAgB,CAGhB,IAAI0yB,EAAY1yB,EAAM7O,KACtB,GAAkB,IAAduhC,EACA,OAAOxxB,GAAiBlB,EAAOiB,GAE9B,GAAkB,IAAdyxB,EACL,OAAOR,IAAsB,EAAGjxB,EAAMjB,EAAM/Q,QAE3C,GAAkB,IAAdyjC,GAAwD,IAAdA,EAAoC,CACnF,IAAIC,EAAsB3yB,EAAMiF,MAChC,GAA4B,OAAxB0tB,EACA,OAAOF,EAAmBxxB,EAAO0xB,GAGjC,IAAIC,EAAoB3xB,EAAMjB,EAAM/Q,OACpC,OAAI6Q,GAAa8yB,GACNV,IAAsB,EAAGU,GAGzB7xB,GAAY6xB,GAK3B,IAAIxG,EAAgBnrB,EAviPC,IAwiPjB4xB,EAAgBzG,EAljPnB,GAmjPGviB,EAAayU,GAAe8N,GAC5B0G,EAAsBD,EAAc7P,WAAWhjB,EAAMgjB,YACzD,OAA2B,MAAvB8P,EACOL,EAAmB5oB,EAAYipB,GAG/BL,EAAmBxxB,EAAOjB,EAAM5T,MAInD,OAAO,KAQQqmC,CAAmBxxB,EAAOuxB,GAGzC,OAAOtwB,EA7hPE,GAwiPb,SAASitB,GAAiBzuB,EAAUsuB,EAAO+D,GACvC,IAAIC,EAAerE,GAAiBjuB,EAAUsuB,GAC1CgE,GAvIR,SAASC,EAAkBvyB,EAAUwE,EAAQD,EAAO8tB,GAC5CtyB,GAAqBC,GACrBA,EAAS4R,YAAYpN,EAAQD,EAAO8tB,GAGpC7tB,EAAOoN,YAAYrN,GAmInBguB,CAAkBvyB,EAAUsyB,EAAchE,EAAO+D,GAOzD,SAASG,GAAWxyB,EAAUmuB,EAAQ7uB,EAAOiB,EAAOquB,EAAcP,EAAYoE,GAC1E,KAAgB,MAATnzB,GAAe,CAIlB,IAAIozB,EAAenyB,EAAMjB,EAAM/Q,OAC3ByjC,EAAY1yB,EAAM7O,KAClBgiC,GACe,IAAXtE,IACAuE,GAAgBpY,GAAgBja,GAAYqyB,GAAenyB,GAC3DjB,EAAMhK,OAAS,GAGqB,KAAzB,GAAdgK,EAAMhK,SACW,IAAd08B,GAAwD,IAAdA,GAC1CQ,GAAWxyB,EAAUmuB,EAAQ7uB,EAAMiF,MAAOhE,EAAOquB,EAAcP,GAAY,GAC3EH,GAA0BC,EAAQnuB,EAAU4uB,EAAc8D,EAAcrE,IAErD,IAAd2D,EACLW,GAAyB3yB,EAAUmuB,EAAQ5tB,EAAOjB,EAAOsvB,EAAcP,GAIvEH,GAA0BC,EAAQnuB,EAAU4uB,EAAc8D,EAAcrE,IAGhF/uB,EAAQmzB,EAAenzB,EAAM+iB,eAAiB/iB,EAAM5T,MA0B5D,SAASojC,GAAU5xB,EAAOqD,EAAOP,EAAUmuB,EAAQS,EAAcP,GAG7DmE,GAAWxyB,EAAUmuB,EADDjxB,EAAMkZ,KAAK7R,MACahE,EAAOquB,EAAcP,GAAY,GAYjF,SAASuE,GAAgB11B,EAAOqD,EAAOsyB,GAKnCF,GAJepyB,EA5pPJ,IAgqPwB,EAAgBA,EAAOsyB,EAHvC3B,GAAgBh0B,EAAO21B,EAAiBtyB,GAE1CgxB,GADCsB,EAAgBruB,QAAUjE,EAnqPnC,GAoqPyCA,IAiBtD,SAASoyB,GAAyB3yB,EAAUmuB,EAAQ5tB,EAAOsyB,EAAiBjE,EAAcP,GACtF,IAAIyE,EAAiBvyB,EA5qPQ,IAgrPzBwyB,EAHgBD,EAvrPX,GA0rPiCxQ,WAAWuQ,EAAgBvQ,YACrE,GAAIn4B,MAAMqH,QAAQuhC,GAMd,IAAK,IAAIhoC,EAAI,EAAGA,EAAIgoC,EAAsB7nC,OAAQH,IAE9CmjC,GAA0BC,EAAQnuB,EAAU4uB,EADhCmE,EAAsBhoC,GAC+BsjC,QAMrEmE,GAAWxyB,EAAUmuB,EAFD4E,EACUD,EA3sPzB,GA4sPgElE,EAAcP,GAAY,GA2GvG,SAAS2E,GAAiBhzB,EAAU0J,EAASupB,GAErClzB,GAAqBC,GACrBA,EAAS4H,aAAa8B,EAAS,QAASupB,GAGxCvpB,EAAQwpB,MAAMC,QAAUF,EAchC,SAASG,GAAiBpzB,EAAU0J,EAASupB,GAErClzB,GAAqBC,GACJ,KAAbizB,EAEAjzB,EAASsS,gBAAgB5I,EAAS,SAGlC1J,EAAS4H,aAAa8B,EAAS,QAASupB,GAI5CvpB,EAAQ0R,UAAY6X;;;;;;;;;;;;;;;AAwD5B,IAgWII,GAqBAC,GAuDAC,GA5aAC,GAAyB,WACzB,SAASA,EAYTtlB,EAOAulB,GACI7pC,KAAKskB,OAASA,EACdtkB,KAAK6pC,oBAAsBA,EAC3B7pC,KAAK8pC,QAAU,KACf9pC,KAAK+pC,kBAAoB,KAIzB/pC,KAAKgqC,WAAa,KAqPtB,OAnPA5pC,OAAO4D,eAAe4lC,EAAQ/oC,UAAW,YAAa,CAClDgL,IAAK,WACD,IAAI8K,EAAQ3W,KAAKskB,OACjB,OAAmB,MAAf3N,EAn7PL,GA4rQX,SAASszB,EAAmB32B,EAAOqD,EAAOjB,EAAOie,EAAQkV,GAErD,SADqB,IAAjBA,IAA2BA,GAAe,GAC7B,OAAVnzB,GAAgB,CAGnB,IAAIw0B,EAAQvzB,EAAMjB,EAAM/Q,OAOxB,GANc,OAAVulC,GACAvW,EAAOrxB,KAAKmU,GAAYyzB,IAKxB10B,GAAa00B,GACb,IAAK,IAAI/oC,EAhpQS,EAgpQoBA,EAAI+oC,EAAM5oC,OAAQH,IAAK,CACzD,IAAIgpC,EAAoBD,EAAM/oC,GAC1BipC,EAAuBD,EA1sQ/B,GA0sQwDliB,WACvB,OAAzBmiB,GACAH,EAAmBE,EA5sQ3B,GA4sQqDA,EAAmBC,EAAsBzW,GAIlG,IAAIyU,EAAY1yB,EAAM7O,KACtB,GAAkB,IAAduhC,GAAwD,IAAdA,EAC1C6B,EAAmB32B,EAAOqD,EAAOjB,EAAMiF,MAAOgZ,QAE7C,GAAkB,IAAdyU,EAAkC,CACvC,IAAItG,EAAgBnrB,EAtsQC,IAusQjB4xB,EAAgBzG,EAjtQnB,GAktQGviB,EAAayU,GAAe8N,GAC5BuI,EAAqB9B,EAAc7P,WAAWhjB,EAAMgjB,YAC7B,OAAvB2R,GAA8C,OAAf9qB,GAC/B0qB,EAAmB1qB,EA1tQvB,GA0tQ0CA,EAAY8qB,EAAoB1W,GAAQ,GAGtFje,EAAQmzB,EAAenzB,EAAM+iB,eAAiB/iB,EAAM5T,KAExD,OAAO6xB;;;;;;;OA3SYsW,CAAmBtzB,EAp7P9B,GAo7P4CA,EADxBA,EA96PnB,GA+6P4DgE,MAAO,IAE7D,IAEXqd,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe4lC,EAAQ/oC,UAAW,UAAW,CAChDgL,IAAK,WACD,OAAO7L,KAAKskB,OAt7PV,IAw7PN0T,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe4lC,EAAQ/oC,UAAW,YAAa,CAClDgL,IAAK,WACD,OAAsD,MAAzB,IAArB7L,KAAKskB,OAn8Pb,KAq8PJ0T,YAAY,EACZC,cAAc,IAElB2R,EAAQ/oC,UAAUwmC,QAAU,WACxB,GAAIrnC,KAAK8pC,QACL9pC,KAAK8pC,QAAQ9D,WAAWhmC,WAEvB,GAAIA,KAAK+pC,kBAAmB,CAC7B,IAAIplC,EAAQ3E,KAAK+pC,kBAAkB7hC,QAAQlI,MACvC2E,GAAS,GACT3E,KAAK+pC,kBAAkBO,OAAO3lC,GAElC3E,KAAK+pC,kBAAoB,KAE7BzD,GAAatmC,KAAKskB,OAp9Pd,GAo9P6BtkB,KAAKskB,SAE1CslB,EAAQ/oC,UAAUuR,UAAY,SAAUm4B,IA7mE5C,SAASC,EAAel3B,EAAOqD,EAAO8zB,GAClCjH,GAAY7sB,GAAOrU,KAAKmoC,GACpBn3B,EAAMwN,iBACN2iB,GAAgBnwB,GAAOhR,KAAKqU,EAt2LtB,GAs2LqCrV,OAAS,EAAG,MA2mEvDkpC,CAAexqC,KAAKskB,OAv9PhB,GAu9P+BtkB,KAAKskB,OAAQimB,IAoCpDX,EAAQ/oC,UAAU6pC,aAAe,WAC7B1H,GAAchjC,KAAK6pC,qBAAuB7pC,KAAKskB,SAuDnDslB,EAAQ/oC,UAAUypC,OAAS,WACvBtqC,KAAKskB,OAnjQD,KAmjQkB,KA0D1BslB,EAAQ/oC,UAAU8pC,SAAW,WACzB3qC,KAAKskB,OA9mQD,IA8mQkB,KAuB1BslB,EAAQ/oC,UAAU+pC,cAAgB,WAC9BxH,GAAsBpjC,KAAKskB,OAvoQvB,GAuoQsCtkB,KAAKskB,OAAQtkB,KAAKiN,UAQhE28B,EAAQ/oC,UAAUgqC,eAAiB,YAz1CvC,SAASC,EAAuBx3B,EAAO0D,EAAM/J,GACzCgM,IAAsB,GACtB,IACImqB,GAAsB9vB,EAAO0D,EAAM/J,GAEvC,QACIgM,IAAsB,IAo1CtB6xB,CAAuB9qC,KAAKskB,OAhpQxB,GAgpQuCtkB,KAAKskB,OAAQtkB,KAAKiN,UAEjE28B,EAAQ/oC,UAAUkqC,yBAA2B,SAAUC,GACnD,GAAIhrC,KAAK8pC,QACL,MAAM,IAAI9jC,MAAM,iEAEpBhG,KAAK+pC,kBAAoBiB,GAE7BpB,EAAQ/oC,UAAUoqC,iBAAmB,WACjCjrC,KAAK8pC,QAAU,KAhnCvB,SAASoB,EAAiB53B,EAAOqD,GAC7BuuB,GAAU5xB,EAAOqD,EAAOA,EAhiOb,IAgiO8B,EAAgB,KAAM,MAgnC3Du0B,CAAiBlrC,KAAKskB,OA1pQlB,GA0pQiCtkB,KAAKskB,SAE9CslB,EAAQ/oC,UAAUsqC,eAAiB,SAAUC,GACzC,GAAIprC,KAAK+pC,kBACL,MAAM,IAAI/jC,MAAM,qDAEpBhG,KAAK8pC,QAAUsB,GAEZxB,EAjRiB,GAoRxByB,GAA6B,SAAU3lB,GAEvC,SAAS2lB,EAAYC,GACjB,IAAIC,EAAQ7lB,EAAOnkB,KAAKvB,KAAMsrC,IAAUtrC,KAExC,OADAurC,EAAMD,MAAQA,EACPC,EAeX,OAnBA7qC,EAAU2qC,EAAa3lB,GAMvB2lB,EAAYxqC,UAAU+pC,cAAgB,WAClCvH,GAAwBrjC,KAAKsrC,QAEjCD,EAAYxqC,UAAUgqC,eAAiB,YAv2C3C,SAASW,EAAyB70B,GAC9BsC,IAAsB,GACtB,IACIoqB,GAAwB1sB,GAE5B,QACIsC,IAAsB,IAk2CtBuyB,CAAyBxrC,KAAKsrC,QAElClrC,OAAO4D,eAAeqnC,EAAYxqC,UAAW,UAAW,CACpDgL,IAAK,WACD,OAAO,MAEXmsB,YAAY,EACZC,cAAc,IAEXoT,EApBqB,CAqB9BzB,IAgEF,SAAS6B,GAAiBC,EAAiBh2B,EAAOsB,GAU9C,OATKyyB,KACDA,GAA8B,SAAU/jB,GAEpC,SAASimB,IACL,OAAkB,OAAXjmB,GAAmBA,EAAOlkB,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUirC,EAAYjmB,GAIfimB,EALkB,CAM3BD,IAEC,IAAIjC,GAAa7yB,GAAiBlB,EAAOsB,IAoBpD,SAAS40B,GAAkBC,EAAkBH,EAAiBlqB,EAAWrK,GA6BrE,OA5BKuyB,KACDA,GAA+B,SAAUhkB,GAErC,SAASomB,EAAYC,EAAkBC,EAAwBC,GAC3D,IAAIV,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KAIjC,OAHAurC,EAAMQ,iBAAmBA,EACzBR,EAAMS,uBAAyBA,EAC/BT,EAAMU,WAAaA,EACZV,EAiBX,OAvBA7qC,EAAUorC,EAAapmB,GAQvBomB,EAAYjrC,UAAUqrC,mBAAqB,SAAUj/B,GACjD,IAAI4vB,EAAgB78B,KAAKgsC,uBAAuBxT,OAC5CoE,EAAgBtB,GAAYt7B,KAAK+rC,iBAAkBlP,EAAe5vB,EAAS,GAAsB,KAAM4vB,EAAcrQ,MAGzHoQ,EAxxQa,IAsxQe58B,KAAK+rC,iBAAiB/rC,KAAKgsC,uBAAuBrnC,OAG9E,IAAIwnC,EAA0BnsC,KAAK+rC,iBAryQrC,GAsyQkC,OAA5BI,IACAvP,EAvyQN,GAuyQ+BuP,EAAwBD,mBAAmBrP,IAExEb,GAAWa,EAAeD,EAAe3vB,GACzC,IAAIm/B,EAAU,IAAIxC,GAAQhN,GAE1B,OADAwP,EAAQpC,WAAapN,EA1yQxB,GA2yQUwP,GAEJN,EAxBmB,CAyB5BD,IAEiB,IAAnBrqB,EAAU3a,KAEH,IAAI6iC,GAAcvyB,EAAUqK,EAAWiqB,GAAiBC,EAAiBlqB,EAAWrK,IAGpF,KAuBf,SAASk1B,GAAmBC,EAAuBZ,EAAiBlqB,EAAWrK,GAyJ3E,IAAIS,EAxJC+xB,KACDA,GAAoC,SAAUjkB,GAE1C,SAAS6mB,EAAiBC,EAAaC,EAAYC,GAC/C,IAAInB,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KAIjC,OAHAurC,EAAMiB,YAAcA,EACpBjB,EAAMkB,WAAaA,EACnBlB,EAAMmB,UAAYA,EACXnB,EA2IX,OAjJA7qC,EAAU6rC,EAAkB7mB,GAQ5BtlB,OAAO4D,eAAeuoC,EAAiB1rC,UAAW,UAAW,CACzDgL,IAAK,WACD,OAAO4/B,GAAiBC,EAAiB1rC,KAAKysC,WAAYzsC,KAAK0sC,YAEnE1U,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeuoC,EAAiB1rC,UAAW,WAAY,CAC1DgL,IAAK,WACD,OAAO,IAAIuW,GAAapiB,KAAKysC,WAAYzsC,KAAK0sC,YAElD1U,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeuoC,EAAiB1rC,UAAW,iBAAkB,CAEhEgL,IAAK,WACD,IAAImT,EAAiBmC,GAA0BnhB,KAAKysC,WAAYzsC,KAAK0sC,WACjEntB,EAAaJ,GAAsBH,EAAgBhf,KAAK0sC,WACxDnF,EA/fxB,SAASoF,EAAuBvtB,EAAUC,EAAWutB,GAEjD,GAAIA,EAAWhyB,SAA+C,IAArCgyB,EAAWhyB,OAAOmG,cAAsB,CAM7D,IAJA,IAAIA,EAAgB6rB,EAAWhyB,OAAOmG,cAClCrL,EAAQk3B,EAAWhyB,OAGA,MAAhBlF,EAAMkF,QAAkBmG,GAAiBrL,EAAMkF,OAAOmG,eACzDrL,EAAQA,EAAMkF,OAElB,OAAOlF,EAOX,IALA,IAAI4J,EAAaJ,GAA4BE,GAEzCG,EAAaF,EACbkoB,EAAcloB,EA33PT,GA63PFC,EAAa,GAEhBioB,GADAhoB,EAAaA,EAr3PE,KATV,GAg4PLD,IAEJ,OAAOioB,EAwe2BoF,CAAuB3tB,EAAgBhf,KAAK0sC,UAAW1sC,KAAKysC,YAC9E,OAAQ1tB,GAAkBC,IAAkC,MAAfuoB,EAEzC,IAAInlB,GAAamlB,EAAahoB,GAD9B,IAAI6C,GAAa,KAAMpiB,KAAK0sC,YAGpC1U,YAAY,EACZC,cAAc,IAElBsU,EAAiB1rC,UAAUgsC,MAAQ,WAC/B,KAAO7sC,KAAKsB,OAAS,GACjBtB,KAAK8sC,OAAO9sC,KAAKsB,OAAS,IAGlCirC,EAAiB1rC,UAAUgL,IAAM,SAAUlH,GACvC,OAAuC,OAAhC3E,KAAKwsC,YA50QZ,IA40Q+CxsC,KAAKwsC,YA50QpD,GA40Q2E7nC,IAAU,MAEzFvE,OAAO4D,eAAeuoC,EAAiB1rC,UAAW,SAAU,CACxDgL,IAAK,WACD,OAAO7L,KAAKwsC,YAAYlrC,OAz0Qd,GA20Qd02B,YAAY,EACZC,cAAc,IAElBsU,EAAiB1rC,UAAUqrC,mBAAqB,SAAUa,EAAa9/B,EAAStI,GAC5E,IAAIynC,EAAUW,EAAYb,mBAAmBj/B,GAAW,IAExD,OADAjN,KAAKgtC,OAAOZ,EAASznC,GACdynC,GAEXG,EAAiB1rC,UAAUosC,gBAAkB,SAAUC,EAAkBvoC,EAAOyG,EAAU+hC,EAAkBC,GACxG,IAAIC,EAAkBjiC,GAAYpL,KAAKstC,eACvC,IAAKF,GAA4C,MAA7BF,EAAiBK,UAAoBF,EAAiB,CAItE,IAAI1Z,EAAS0Z,EAAgBxhC,IAAI8B,GAAa,MAC1CgmB,IACAyZ,EAAczZ,GAGtB,IAAI6Z,EAAeN,EAAiBpsC,OAAOusC,EAAiBF,OAAkB7mC,EAAW8mC,GAEzF,OADAptC,KAAKgtC,OAAOQ,EAAar2B,SAAUxS,GAC5B6oC,GAEXjB,EAAiB1rC,UAAUmsC,OAAS,SAAUZ,EAASznC,GACnD,IAAIgS,EAAQy1B,EAAQ9nB,OAChBhR,EAAQqD,EA55QhB,GA65QI,GAAIy1B,EAAQ9S,UACR,MAAM,IAAItzB,MAAM,sDAGpB,GADAhG,KAAKytC,4BAjgQrB,SAASC,EAAwB12B,GAC7B,OAAOxB,GAAawB,EA9ZX,IA+5QO02B,CAAwB/2B,GAAQ,CAEhC,IAAIg3B,EAAU3tC,KAAKkI,QAAQkkC,GAK3B,IAAiB,IAAbuB,EACA3tC,KAAKsqC,OAAOqD,OAEX,CACD,IAAIC,EAAiBj3B,EA16QhC,GA+6Qek3B,EAAY,IAAIlE,GAAmBiE,EAAgBA,EA56QlE,GA46Q0FA,EA/6Q1F,IAg7QWC,EAAUvD,OAAOuD,EAAU3lC,QAAQkkC,KAG3C,IAAI0B,EAAc9tC,KAAK+tC,aAAappC,GAMpC,OALA4gC,GAAWjyB,EAAOqD,EAAO3W,KAAKwsC,YAAasB,GAE3CzI,GAA2B/xB,EAAOqD,GAAO,EADxBixB,GAAqBkG,EAAa9tC,KAAKwsC,cAExDJ,EAAQrB,yBAAyB/qC,MACjC8O,GAAW9O,KAAKwsC,YAz4QhB,GAy4QwCsB,EAAa1B,GAC9CA,GAEXG,EAAiB1rC,UAAUmtC,KAAO,SAAU5B,EAAS6B,GACjD,GAAI7B,EAAQ9S,UACR,MAAM,IAAItzB,MAAM,oDAEpB,OAAOhG,KAAKgtC,OAAOZ,EAAS6B,IAEhC1B,EAAiB1rC,UAAUqH,QAAU,SAAUkkC,GAC3C,IAAI8B,EAAcluC,KAAKwsC,YAn5QvB,GAo5QA,OAAuB,OAAhB0B,EAAuBA,EAAYhmC,QAAQkkC,IAAY,GAElEG,EAAiB1rC,UAAUisC,OAAS,SAAUnoC,GAC1C3E,KAAKytC,4BACL,IAAIK,EAAc9tC,KAAK+tC,aAAappC,GAAQ,GAC5CyhC,GAAWpmC,KAAKwsC,YAAasB,GAC7B9+B,GAAgBhP,KAAKwsC,YA15QrB,GA05Q6CsB,IAEjDvB,EAAiB1rC,UAAUypC,OAAS,SAAU3lC,GAC1C3E,KAAKytC,4BACL,IAAIK,EAAc9tC,KAAK+tC,aAAappC,GAAQ,GACxCqS,EAAOgvB,GAAWhmC,KAAKwsC,YAAasB,GAExC,OADkB92B,GAAqE,MAA7DhI,GAAgBhP,KAAKwsC,YAh6Q/C,GAg6QuEsB,GAClD,IAAIlE,GAAQ5yB,GAAQ,MAE7Cu1B,EAAiB1rC,UAAUktC,aAAe,SAAUppC,EAAOmL,GAEvD,YADc,IAAVA,IAAoBA,EAAQ,GACnB,MAATnL,EACO3E,KAAKsB,OAASwO,EAOlBnL,GAEX4nC,EAAiB1rC,UAAU4sC,0BAA4B,WACf,OAAhCztC,KAAKwsC,YAh7QT,KAi7QIxsC,KAAKwsC,YAj7QT,GAi7QkC,KAG/BD,EAlJwB,CAmJjCD,IAKN,IAAIl1B,EAAYD,EAASqK,EAAU7c,OACnC,GAAI6Q,GAAa4B,IA5jQrB,SAAS+2B,EAAyBv2B,EAAYjT,GAC1CiT,EAvYe,GAuYYjT,GAAS,EA8jQhCwpC,CADAv2B,EAAaR,GACyB,OAErC,CACD,IAAIg3B,OAAc,EAKlB,GAAuB,IAAnB5sB,EAAU3a,KACVunC,EAAc33B,GAAYW,QAU1B,GANAg3B,EAAcj3B,EAl/QX,IAk/Q8Bk3B,cAAwC,IAMrEv4B,GAAWqB,GAAW,CACtB,IAAIf,EAAWe,EAz/QhB,IA0/QKmrB,EAAa1rB,GAAiB4K,EAAWrK,GAE7CytB,GAAmBxuB,EADMiuB,GAAiBjuB,EAAUksB,GACH8L,EAliCjE,SAASE,EAAkBl4B,EAAUoW,GACjC,OAAOrW,GAAqBC,GAAYA,EAAS2S,YAAYyD,GAAQA,EAAKzD,YAiiCAulB,CAAkBl4B,EAAUksB,SAG1Fvb,GAAY5P,EAzgRhB,GAygRiCA,EAAUi3B,EAAa5sB,GAG5DrK,EAASqK,EAAU7c,OAASiT,EACxByqB,GAAiBjrB,EAAWD,EAAUi3B,EAAa5sB,GACvDugB,GAAc5qB,EAAUS,GAE5B,OAAO,IAAI+xB,GAAmB/xB,EAAY4J,EAAWrK,GAGzD,SAASo3B,GAAwBC,GAE7B,YADe,IAAXA,IAAqBA,GAAS,GAWtC,SAASC,EAAc/4B,EAAOiB,EAAO63B,GAIjC,IADuBA,GAAU74B,GAAgBD,GAC5B,CAGjB,IAAIosB,EAAgB7qB,GAAyBvB,EAAM/Q,MAAOgS,GAC1D,OAAO,IAAIizB,GAAQ9H,EAAeA,GAEjC,OAAmB,IAAfpsB,EAAM7O,MAA2C,IAAf6O,EAAM7O,MAC9B,IAAf6O,EAAM7O,MAAoD,IAAf6O,EAAM7O,KAI1C,IAAI+iC,GADajzB,EA9hRC,IA+hRaA,GAEnC,KA3BA83B,CAAc/1B,KAA4BL,KAAYm2B;;;;;;;;AAkGjE,IAAIE,GAAmC,WACnC,SAASA,KAOT,OADAA,EAAkBlkC,kBAAoB,WAAc,OAAOmkC,MACpDD,EAR2B,GAUlCE,GAAgDL,GAOhDI,GAAqCC,GAmBrCC,GAAOxuB,SACX,SAASyuB,GAAOtuB,GACZ,MAAoB,mBAANA;;;;;;;OAalB,IAAIuuB,GAAgB,6DAChBC,GAAkB,4CAClBC,GAA4B,mEAC5BC,GAAqC,oGAarCC,GAAwC,WACxC,SAASA,EAAuBC,GAC5BpvC,KAAKqvC,SAAWD,GAAW9lC,EAAiB,QAuNhD,OArNA6lC,EAAuBtuC,UAAUyuC,oBAAsB,WACnD,OAAO,GAEXH,EAAuBtuC,UAAUxB,QAAU,SAAU4B,GACjD,OAAO,WAEH,IADA,IAAIyC,EAAO,GACFC,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpCD,EAAKC,GAAMtC,UAAUsC,GAEzB,OAAO,IAAK1C,EAAE4C,KAAKrC,MAAMP,EAAGuB,EAAS,MAAC,GAASkB,OAIvDyrC,EAAuBtuC,UAAU0uC,wBAA0B,SAAUC,EAAYC,GAC7E,IAAI9b,EAEAA,EAASzkB,QADa,IAAfsgC,EACWC,EAAiBnuC,OAGjBkuC,EAAWluC,QAEjC,IAAK,IAAIH,EAAI,EAAGA,EAAIwyB,EAAOryB,OAAQH,IAK3BwyB,EAAOxyB,QADe,IAAfquC,EACK,GAEPA,EAAWruC,IAAMquC,EAAWruC,IAAMf,OAC3B,CAACovC,EAAWruC,IAGZ,GAEZsuC,GAA2C,MAAvBA,EAAiBtuC,KACrCwyB,EAAOxyB,GAAKwyB,EAAOxyB,GAAGsB,OAAOgtC,EAAiBtuC,KAGtD,OAAOwyB,GAEXwb,EAAuBtuC,UAAU6uC,eAAiB,SAAU7oC,EAAM8oC,GAS9D,GAzDR,SAASC,EAAeC,GACpB,OAAOd,GAAce,KAAKD,IAAYX,GAAmCY,KAAKD,IACzEb,GAAgBc,KAAKD,KAAaZ,GAA0Ba,KAAKD,GAuD9DD,CARU/oC,EAAKjE,YASf,OAAO,KAGX,GAAIiE,EAAKjC,YAAciC,EAAKjC,aAAe+qC,EAAW/qC,WAClD,OAAOiC,EAAKjC,WAGhB,IAAImrC,EAAoBlpC,EAAKmpC,eAC7B,GAAID,GAAqBA,IAAsBJ,EAAWK,eAAgB,CAGtE,IAAIA,EAA8C,mBAAtBD,EAAmCA,IAAsBA,EACjFE,EAAeD,EAAenoC,KAAI,SAAUqoC,GAAa,OAAOA,GAAaA,EAAUrpC,QACvFspC,EAAqBH,EAAenoC,KAAI,SAAUqoC,GAClD,OAAOA,GAAaE,GAAoCF,EAAUG,eAEtE,OAAOrwC,KAAKuvC,wBAAwBU,EAAcE,GAGtD,IAAIV,EAAmB5oC,EAAKpG,eAAeqC,IAAe+D,EAAK/D,GAC3D0sC,EAAaxvC,KAAKqvC,UAAYrvC,KAAKqvC,SAASiB,gBAC5CtwC,KAAKqvC,SAASiB,eAAe,oBAAqBzpC,GACtD,OAAI2oC,GAAcC,EACPzvC,KAAKuvC,wBAAwBC,EAAYC,GAM7CvgC,GAASrI,EAAKvF,SAEzB6tC,EAAuBtuC,UAAU+D,WAAa,SAAUiC,GAGpD,IAAKioC,GAAOjoC,GACR,MAAO,GAEX,IAAI8oC,EAAaY,GAAc1pC,GAC3BjC,EAAa5E,KAAK0vC,eAAe7oC,EAAM8oC,GAI3C,OAHK/qC,GAAc+qC,IAAevvC,SAC9BwE,EAAa5E,KAAK4E,WAAW+qC,IAE1B/qC,GAAc,IAEzBuqC,EAAuBtuC,UAAU2vC,gBAAkB,SAAUC,EAAYd,GAErE,GAAIc,EAAWC,aAAeD,EAAWC,cAAgBf,EAAWe,YAAa,CAC7E,IAAIA,EAAcD,EAAWC,YAI7B,MAH2B,mBAAhBA,GAA8BA,EAAYA,cACjDA,EAAcA,EAAYA,aAEvBA,EAGX,OAAID,EAAWJ,YAAcI,EAAWJ,aAAeV,EAAWU,WACvDD,GAAoCK,EAAWJ,YAGtDI,EAAWhwC,eAAeoC,GACnB4tC,EAAW5tC,GAEf,MAEXssC,EAAuBtuC,UAAU6vC,YAAc,SAAUD,GACrD,IAAK3B,GAAO2B,GACR,MAAO,GAEX,IAAId,EAAaY,GAAcE,GAC3BE,EAAiB3wC,KAAKwwC,gBAAgBC,EAAYd,IAAe,GAErE,OADwBA,IAAevvC,OAASJ,KAAK0wC,YAAYf,GAAc,IACtDltC,OAAOkuC,IAEpCxB,EAAuBtuC,UAAU+vC,iBAAmB,SAAUH,EAAYd,GAEtE,GAAIc,EAAWI,cACXJ,EAAWI,eAAiBlB,EAAWkB,aAAc,CACrD,IAAIA,EAAeJ,EAAWI,aAI9B,MAH4B,mBAAjBA,GAA+BA,EAAaA,eACnDA,EAAeA,EAAaA,cAEzBA,EAGX,GAAIJ,EAAWK,gBACXL,EAAWK,iBAAmBnB,EAAWmB,eAAgB,CACzD,IAAIC,EAAmBN,EAAWK,eAC9BE,EAAiB,GAIrB,OAHA5wC,OAAO6wC,KAAKF,GAAkBliC,SAAQ,SAAUwgB,GAC5C2hB,EAAe3hB,GAAQ+gB,GAAoCW,EAAiB1hB,OAEzE2hB,EAGX,OAAIP,EAAWhwC,eAAesC,GACnB0tC,EAAW1tC,GAEf,MAEXosC,EAAuBtuC,UAAUgwC,aAAe,SAAUJ,GACtD,IAAK3B,GAAO2B,GACR,MAAO,GAEX,IAAId,EAAaY,GAAcE,GAC3BI,EAAe,GACnB,GAAIlB,IAAevvC,OAAQ,CACvB,IAAI8wC,EAAuBlxC,KAAK6wC,aAAalB,GAC7CvvC,OAAO6wC,KAAKC,GAAsBriC,SAAQ,SAAUxK,GAChDwsC,EAAaxsC,GAAY6sC,EAAqB7sC,MAGtD,IAAI8sC,EAAkBnxC,KAAK4wC,iBAAiBH,EAAYd,GAWxD,OAVIwB,GACA/wC,OAAO6wC,KAAKE,GAAiBtiC,SAAQ,SAAUxK,GAC3C,IAAIgsC,EAAa,GACbQ,EAAapwC,eAAe4D,IAC5BgsC,EAAW/tC,KAAKd,MAAM6uC,EAAY7tC,EAASquC,EAAaxsC,KAE5DgsC,EAAW/tC,KAAKd,MAAM6uC,EAAY7tC,EAAS2uC,EAAgB9sC,KAC3DwsC,EAAaxsC,GAAYgsC,KAG1BQ,GAEX1B,EAAuBtuC,UAAUswC,gBAAkB,SAAUV,GACzD,OAAK3B,GAAO2B,IAGLzwC,KAAK4wC,iBAAiBH,EAAYF,GAAcE,KAF5C,IAIftB,EAAuBtuC,UAAUuwC,iBAAmB,SAAUvqC,EAAMwqC,GAChE,OAAOxqC,aAAgBgoC,IAAQwC,KAAcxqC,EAAKhG,WAEtDsuC,EAAuBtuC,UAAUywC,OAAS,SAAUzqC,GAChD,MAAO,IAEXsoC,EAAuBtuC,UAAU0wC,OAAS,SAAUtuC,GAChD,OAAO,IAAIod,SAAS,IAAK,YAAcpd,EAAO,MAElDksC,EAAuBtuC,UAAU2wC,OAAS,SAAUvuC,GAChD,OAAO,IAAIod,SAAS,IAAK,IAAK,YAAcpd,EAAO,UAEvDksC,EAAuBtuC,UAAU4wC,OAAS,SAAUxuC,GAEhD,OAAO,IAAIod,SAAS,IAAK,OADN,UAAYpd,EAAO,wBAA0BA,EAAO,wCAA0CA,EAAO,qBAI5HksC,EAAuBtuC,UAAU6wC,UAAY,SAAU7qC,GAEnD,MAAoB,iBAATA,GAAqBA,EAAe,SACpCA,EAAe,SAGnB,KAAOc,EAAUd,IAE5BsoC,EAAuBtuC,UAAU8wC,YAAc,SAAU9qC,GACrD,MAAO,KAAOc,EAAUd,IAE5BsoC,EAAuBtuC,UAAU+wC,kBAAoB,SAAU3uC,EAAM4uC,EAAWC,EAASC,GACrF,OAAOA,GAEX5C,EAAuBtuC,UAAUmxC,YAAc,SAAUC,EAAgBhvC,GACrE,OAAOgvC,EAAehvC,IAEnBksC,EAzNgC,GA2N3C,SAASiB,GAAoC8B,GACzC,OAAKA,EAGEA,EAAqBrqC,KAAI,SAAUsqC,GACtC,IACIjuC,EADgBiuC,EAAoBtrC,KACN3C,cAElC,OAAO,IAAKA,EAAcL,KAAKrC,MAAM0C,EAAe1B,EAAS,MAAC,GADzC2vC,EAAoBzuC,KAAOyuC,EAAoBzuC,KAAO,SALpE,GASf,SAAS6sC,GAAcpsC,GACnB,IAAIiuC,EAAcjuC,EAAKtD,UAAYT,OAAOskB,eAAevgB,EAAKtD,WAAa,KAI3E,OAHiBuxC,EAAcA,EAAYxxC,YAAc,OAGpCR;;;;;;;OAUzB,IAAIivC,GAAW,KACf,SAASgD,KACL,OAAQhD,GAAWA,IAAY,IAAIF,GAEvC,SAASmD,GAAoBzrC,GACzB,OAAO0rC,GAAoBF,KAAaztC,WAAWiC,IAEvD,SAAS0rC,GAAoBC,GACzB,IAAIC,EAAWlpC,IACf,OAAOipC,EAAK3qC,KAAI,SAAU6qC,GAAO,OAErC,SAASC,EAAkBF,EAAUC,GACjC,IAAIxtC,EAAO,CACPI,MAAO,KACPi2B,MAAM,EACNqX,UAAU,EACVC,SAAUJ,EAAS7pC,yBAAyBkqC,MAC5CnzC,MAAM,EACNozC,UAAU,GAEd,SAASC,EAAwB1tC,GAC7BJ,EAAK2tC,SAAWJ,EAAS7pC,yBAAyBkqC,MAClD5tC,EAAKI,MAAQA,EAEjB,GAAI/E,MAAMqH,QAAQ8qC,IAAQA,EAAIpxC,OAAS,EACnC,IAAK,IAAIgL,EAAI,EAAGA,EAAIomC,EAAIpxC,OAAQgL,IAAK,CACjC,IAAI2mC,EAAQP,EAAIpmC,GAChB,QAAchG,IAAV2sC,EAAJ,CAIA,IAAIxuB,EAAQrkB,OAAOskB,eAAeuuB,GAClC,GAAIA,aAAiB1tC,GAAqC,aAAzBkf,EAAMxgB,eACnCiB,EAAK0tC,UAAW,OAEf,GAAIK,aAAiBxtC,GAAqC,aAAzBgf,EAAMxgB,eACxCiB,EAAK6tC,UAAW,OAEf,GAAIE,aAAiBztC,GAAiC,SAAzBif,EAAMxgB,eACpCiB,EAAKvF,MAAO,OAEX,GAAIszC,aAAiBvtC,GAAiC,SAAzB+e,EAAMxgB,eACpCiB,EAAKq2B,MAAO,OAEX,GAAI0X,aAAiB5tC,EACtBH,EAAKI,MAAQ2tC,EAAM3tC,WAElB,GAAI2tC,aAAiBttC,EAAW,CACjC,QAA4BW,IAAxB2sC,EAAMrtC,cACN,MAAM,IAAII,MAAM,mCAEpBd,EAAKI,MAAQ2tC,EAAMrtC,cACnBV,EAAK2tC,SAAWJ,EAAS7pC,yBAAyBjD,eAE7CstC,IAAUvE,IACfxpC,EAAKI,MAAQ2tC,EACb/tC,EAAK2tC,SAAWJ,EAAS7pC,yBAAyB8lC,mBAGlDsE,EAAwBC,cAInB3sC,IAARosC,GAAsBnyC,MAAMqH,QAAQ8qC,IAAuB,IAAfA,EAAIpxC,QACrD4D,EAAKI,WAAQgB,EACbpB,EAAK2tC,SAAWjqC,EAAyBsqC,SAGzCF,EAAwBN,GAE5B,OAAOxtC;;;;;;;OA7DiCytC,CAAkBF,EAAUC,MAyHxE,IAAIS,GAActtC,EAAuB,CAAEkF,QAASC,OAAQC,SAAUpF,IACtE,SAASutC,GAAmBluC,GACxB,YAAyBoB,IAAlBpB,EAAKmuC,SAKhB,SAASC,GAAqBpuC,GAC1B,YAA2BoB,IAApBpB,EAAKquC,WAKhB,SAASC,GAAsB3sC,EAAM4sC,GAEjC,IAAIvuC,EAAOuuC,GAAW,CAAEptC,WAAY,MAChCqtC,EAAe,CACfzwC,KAAM4D,EAAK5D,KACX4D,KAAMA,EACN8sC,kBAAmB,EACnBttC,WAAYnB,EAAKmB,WACjButC,cAAUttC,GAqBd,OAnBK8sC,GAAmBluC,IAASouC,GAAqBpuC,UAAwBoB,IAAdpB,EAAKstC,OACjEkB,EAAaE,SAAWrB,GAAoBrtC,EAAKstC,OAEjDY,GAAmBluC,GAEnBwuC,EAAaL,SAAW3qC,EAAkBxD,EAAKmuC,UAxBvD,SAASQ,EAAmB3uC,GACxB,OAAOiuC,MAAejuC,EAyBb2uC,CAAmB3uC,GAExBwuC,EAAazoC,SAAWvC,EAAkBxD,EAAK+F,UAE1CqoC,GAAqBpuC,GAE1BwuC,EAAaH,WAAaruC,EAAKquC,WA1BvC,SAASO,EAAsB5uC,GAC3B,YAA4BoB,IAArBpB,EAAK6uC,YA2BHD,CAAsB5uC,KAE3BwuC,EAAaK,YAAcrrC,EAAkBxD,EAAK6uC,cAE/CL;;;;;;;OAUO7tC,EAAuB,CAAEkF,QAASC,OAAQC,SAAUpF,IAiDtE,IAAImuC,GAAahxC,EAAc,kBAAcsD,OAAWA,OAAWA,GAAW,SAAUO,EAAM3B,GAAQ,OAAO+uC,GAA0BptC,EAAM3B,MAazIgvC,GAhKJ,SAASC,GAAkBttC,EAAM4sC,GAC7B,IAAIhsC,EAAkB,KAClB2sC,EAAe,KAEdvtC,EAAKpG,eAAesG,KACrB3G,OAAO4D,eAAe6C,EAAME,EAAa,CACrC8E,IAAK,WAID,OAHwB,OAApBpE,IACAA,EAAkB8B,IAAoB4qC,kBAAkB5mC,GAAkB,SAAW1G,EAAK5D,KAAO,YAAkBuwC,GAAsB3sC,EAAM4sC,KAE5IhsC,KASVZ,EAAKpG,eAAe8G,KACrBV,EAAKU,GAAwB,WAAc,OAAOV,EAAKE,MAI1DF,EAAKpG,eAAe4J,KACrBjK,OAAO4D,eAAe6C,EAAMwD,GAAgB,CACxCwB,IAAK,WACD,GAAqB,OAAjBuoC,EAAuB,CACvB,IAAIC,EAAWb,GAAsB3sC,EAAM4sC,GACvChB,EAAWlpC,IACf6qC,EAAe3B,EAAS6B,eAAe/mC,GAAkB,SAAW1G,EAAK5D,KAAO,WAAiB,CAC7FA,KAAMoxC,EAASpxC,KACf4D,KAAMwtC,EAASxtC,KACf8sC,kBAAmBU,EAASV,kBAC5BnB,KAAMF,GAAoBzrC,GAC1B0tC,SAAU,SACVtvC,OAAQwtC,EAAS5pC,gBAAgBmrC,aAGzC,OAAOI,GAGXnc,cAAc,KAwHtBgc,GAA4BC,GAc5BM,GAAiB,IAAI/pC,GAAe,uBAYpCgqC,GAAU,GAQVC,GAAW,GACXC,GAAgB,GAIhBC,QAAgBtuC,EACpB,SAASuuC,KAIL,YAHsBvuC,IAAlBsuC,KACAA,GAAgB,IAAIroC,IAEjBqoC,GAOX,SAASE,GAAeC,EAASn6B,EAAQo6B,EAAqB/xC,QAC3C,IAAX2X,IAAqBA,EAAS,WACN,IAAxBo6B,IAAkCA,EAAsB,MAC5D,IAAI5pC,EAAW6pC,GAAuCF,EAASn6B,EAAQo6B,EAAqB/xC,GAE5F,OADAmI,EAAS8pC,2BACF9pC,EAOX,SAAS6pC,GAAuCF,EAASn6B,EAAQo6B,EAAqB/xC,GAGlF,YAFe,IAAX2X,IAAqBA,EAAS,WACN,IAAxBo6B,IAAkCA,EAAsB,MACrD,IAAIG,GAAWJ,EAASC,EAAqBp6B,GAAUi6B,KAAmB5xC,GAErF,IAAIkyC,GAA4B,WAC5B,SAASA,EAAWluC,EAAK+tC,EAAqBp6B,EAAQ1U,GAClD,IAAIqlC,EAAQvrC,UACG,IAAXkG,IAAqBA,EAAS,MAClClG,KAAK4a,OAASA,EAMd5a,KAAKo1C,QAAU,IAAIC,IAInBr1C,KAAKs1C,iBAAmB,IAAIC,IAI5Bv1C,KAAKoS,UAAY,IAAImjC,IACrBv1C,KAAKw1C,YAAa,EAClB,IAAIC,EAAa,GAIjBT,GACIrmC,GAAYqmC,GAAqB,SAAUU,GAAY,OAAOnK,EAAMoK,gBAAgBD,EAAUzuC,EAAK+tC,MACvGrmC,GAAY,CAAC1H,IAAM,SAAUsd,GAAe,OAAOgnB,EAAMqK,oBAAoBrxB,EAAa,GAAIkxB,MAE9Fz1C,KAAKo1C,QAAQS,IAAIlrC,GAAUmrC,QAAWxvC,EAAWtG,OAGjD,IAAI+1C,EAAS/1C,KAAKo1C,QAAQvpC,IAAI2oC,IAC9Bx0C,KAAKyU,MAAkB,MAAVshC,EAAiBA,EAAOh0C,MAAQ,KAE7C/B,KAAKkG,OAASA,IAA0B,iBAARe,EAAmB,KAAOU,EAAUV,IAqQxE,OAnQA7G,OAAO4D,eAAemxC,EAAWt0C,UAAW,YAAa,CAIrDgL,IAAK,WACD,OAAO7L,KAAKw1C,YAEhBxd,YAAY,EACZC,cAAc,IAQlBkd,EAAWt0C,UAAUwmC,QAAU,WAC3BrnC,KAAKg2C,qBAELh2C,KAAKw1C,YAAa,EAClB,IAEIx1C,KAAKoS,UAAUvD,SAAQ,SAAUonC,GAAW,OAAOA,EAAQ5jC,iBAE/D,QAEIrS,KAAKo1C,QAAQvI,QACb7sC,KAAKoS,UAAUy6B,QACf7sC,KAAKs1C,iBAAiBzI,UAG9BsI,EAAWt0C,UAAUgL,IAAM,SAAUvG,EAAO2G,EAAeP,QACjC,IAAlBO,IAA4BA,EAAgBrB,SAClC,IAAVc,IAAoBA,EAAQpM,EAAQ8F,YAAYuG,SACpD3L,KAAKg2C,qBAEL,IAAIE,EAAmB/qC,GAAmBnL,MAC1C,IAEI,KAAM0L,EAAQpM,EAAQ8F,YAAYK,UAAW,CAEzC,IAAIswC,EAAS/1C,KAAKo1C,QAAQvpC,IAAIvG,GAC9B,QAAegB,IAAXyvC,EAAsB,CAGtB,IAAI9uC,EAiVxB,SAASkvC,EAAsBp0C,GAC3B,MAAyB,mBAAVA,GACO,iBAAVA,GAAsBA,aAAiB0I,GAnVzB0rC,CAAsB7wC,IAAUsB,EAAiBtB,GAIvDywC,EAHA9uC,GAAOjH,KAAKo2C,qBAAqBnvC,GAGxB6uC,GAAWO,GAAkC/wC,GAAQmvC,IAGrD,KAEbz0C,KAAKo1C,QAAQS,IAAIvwC,EAAOywC,GAG5B,GAAc,MAAVA,EACA,OAAO/1C,KAAKs2C,QAAQhxC,EAAOywC,GAWnC,OANqBrqC,EAAQpM,EAAQ8F,YAAYI,KAAsBqvC,KAAd70C,KAAK4a,QAM1C/O,IAAIvG,EAHxB2G,EAAiBP,EAAQpM,EAAQ8F,YAAYG,UAAa0G,IAAkBrB,GACxE,KACAqB,GAGR,MAAO7J,GACH,GAAe,sBAAXA,EAAEa,KAA8B,CAGhC,IAFWb,EAAoB,gBAAIA,EAAoB,iBAAK,IACvD+C,QAAQwC,EAAUrC,IACnB4wC,EAEA,MAAM9zC,EAIN,OAAOoK,GAAmBpK,EAAGkD,EAAO,kBAAmBtF,KAAKkG,QAIhE,MAAM9D,EAGd,QAEI+I,GAAmB+qC,KAI3Bf,EAAWt0C,UAAUq0C,yBAA2B,WAC5C,IAAI3J,EAAQvrC,KACZA,KAAKs1C,iBAAiBzmC,SAAQ,SAAUkmC,GAAW,OAAOxJ,EAAM1/B,IAAIkpC,OAExEI,EAAWt0C,UAAU+B,SAAW,WAC5B,IAAI2zC,EAAS,GAEb,OAF2Bv2C,KAAKo1C,QACxBvmC,SAAQ,SAAU2R,EAAGlb,GAAS,OAAOixC,EAAOj0C,KAAKqF,EAAUrC,OAC5D,cAAgBixC,EAAOzuC,KAAK,MAAQ,KAE/CqtC,EAAWt0C,UAAUm1C,mBAAqB,WACtC,GAAIh2C,KAAKw1C,WACL,MAAM,IAAIxvC,MAAM,yCAYxBmvC,EAAWt0C,UAAU+0C,oBAAsB,SAAUY,EAAiBC,EAAShB,GAC3E,IAAIlK,EAAQvrC,KAEZ,KADAw2C,EAAkB9tC,EAAkB8tC,IAEhC,OAAO,EAKX,IAAIvvC,EAAMC,EAAesvC,GAErBjJ,EAAmB,MAAPtmC,GAAgBuvC,EAAgBjJ,eAAYjnC,EAIxDyuC,OAAwBzuC,IAAbinC,EAA0BiJ,EAAkBjJ,EAOvDmJ,GAA+C,IAAjCjB,EAAWvtC,QAAQ6sC,GAOrC,QAJiBzuC,IAAbinC,IACAtmC,EAAMC,EAAeqmC,IAGd,MAAPtmC,EACA,OAAO,EAIX,GAAmB,MAAfA,EAAIN,UAAoB+vC,EAAa,CAMrC,IAAIC,EADJlB,EAAWnzC,KAAKyyC,GAEhB,IACIpmC,GAAY1H,EAAIN,SAAS,SAAUiwC,GAC3BrL,EAAMqK,oBAAoBgB,EAAUH,EAAShB,UACVnvC,IAA/BqwC,IACAA,EAA6B,IAGjCA,EAA2Br0C,KAAKs0C,OAI5C,SAOA,QAAmCtwC,IAA/BqwC,EAKA,IAJA,IAAIE,EAAU,SAAU11C,GACpB,IAAIsC,EAAKkzC,EAA2Bx1C,GAAI21C,EAAarzC,EAAG8pC,SAAU7mC,EAAYjD,EAAGiD,UACjFiI,GAAYjI,GAAW,SAAUgvC,GAAY,OAAOnK,EAAMoK,gBAAgBD,EAAUoB,EAAYpwC,GAAaiuC,QAExGxzC,EAAI,EAAGA,EAAIw1C,EAA2Br1C,OAAQH,IACnD01C,EAAQ11C,GAMpBnB,KAAKs1C,iBAAiByB,IAAIhC,GAC1B/0C,KAAKo1C,QAAQS,IAAId,EAASe,GAAW7uC,EAAI5H,QAASo1C,KAElD,IAAIuC,EAAe/vC,EAAIP,UACvB,GAAoB,MAAhBswC,IAAyBN,EAAa,CACtC,IAAIO,EAAiBT,EACrB7nC,GAAYqoC,GAAc,SAAUtB,GAAY,OAAOnK,EAAMoK,gBAAgBD,EAAUuB,EAAgBD,MAE3G,YAAqB1wC,IAAbinC,QAC0BjnC,IAA9BkwC,EAAgB9vC,WAKxByuC,EAAWt0C,UAAU80C,gBAAkB,SAAUD,EAAUwB,EAAcxwC,GAIrE,IAAIpB,EAAQ6xC,GADZzB,EAAWhtC,EAAkBgtC,IACUA,EAAWhtC,EAAkBgtC,GAAYA,EAAS3qC,SAErFgrC,EAkGZ,SAASqB,EAAiB1B,EAAUwB,EAAcxwC,GAC9C,OAAI2wC,GAAgB3B,GACTI,QAAWxvC,EAAWovC,EAASzqC,UAI/B6qC,GADOwB,GAAkB5B,EAAUwB,EAAcxwC,GAC7B+tC,IAxGd2C,CAAiB1B,EAAUwB,EAAcxwC,GACtD,GAAKywC,GAAezB,KAAgC,IAAnBA,EAAS6B,MAkBrC,CACD,IAAIC,EAAWx3C,KAAKo1C,QAAQvpC,IAAIvG,GAC5BkyC,QAA+BlxC,IAAnBkxC,EAASD,OACrBjmB,SArBkD,CAGtD,IAAImmB,EAAgBz3C,KAAKo1C,QAAQvpC,IAAIvG,GACjCmyC,OAE4BnxC,IAAxBmxC,EAAcF,OACdjmB,OAIJmmB,EAAgB3B,QAAWxvC,EAAWmuC,IAAS,IACjCp1C,QAAU,WAAc,OAAO8M,GAAWsrC,EAAcF,QACtEv3C,KAAKo1C,QAAQS,IAAIvwC,EAAOmyC,IAE5BnyC,EAAQowC,EACR+B,EAAcF,MAAMj1C,KAAKozC,GAQ7B11C,KAAKo1C,QAAQS,IAAIvwC,EAAOywC,IAE5BZ,EAAWt0C,UAAUy1C,QAAU,SAAUhxC,EAAOywC,GAW5C,OAVIA,EAAOh0C,QAAU2yC,GA/6L7B,SAASgD,EAA2BpyC,GAChC,MAAM,IAAIU,MAAM,yCAA2CV,GA+6LnDoyC,CAA2B/vC,EAAUrC,IAEhCywC,EAAOh0C,QAAU0yC,KACtBsB,EAAOh0C,MAAQ2yC,GACfqB,EAAOh0C,MAAQg0C,EAAO12C,WAEE,iBAAjB02C,EAAOh0C,OAAsBg0C,EAAOh0C,OAuIvD,SAAS41C,EAAa51C,GAClB,OAAiB,OAAVA,GAAmC,iBAAVA,GACC,mBAAtBA,EAAMsQ,YAzI2CslC,CAAa5B,EAAOh0C,QACxE/B,KAAKoS,UAAU2kC,IAAIhB,EAAOh0C,OAEvBg0C,EAAOh0C,OAElBozC,EAAWt0C,UAAUu1C,qBAAuB,SAAUnvC,GAClD,QAAKA,EAAIZ,aAG0B,iBAAnBY,EAAIZ,WACU,QAAnBY,EAAIZ,YAAyBY,EAAIZ,aAAerG,KAAKyU,MAGrDzU,KAAKs1C,iBAAiBsC,IAAI3wC,EAAIZ,cAGtC8uC,EAvSoB,GAyS/B,SAASkB,GAAkC/wC,GAEvC,IAAI4G,EAAgBtF,EAAiBtB,GACjCjG,EAA4B,OAAlB6M,EAAyBA,EAAc7M,QAAUgW,GAAc/P,GAC7E,GAAgB,OAAZjG,EACA,OAAOA,EAIX,IAAIklB,EAAcrd,EAAe5B,GACjC,GAAoB,OAAhBif,EACA,OAAOA,EAAYllB,QAIvB,GAAIiG,aAAiBmF,GACjB,MAAM,IAAIzE,MAAM,SAAW2B,EAAUrC,GAAS,mCAGlD,GAAIA,aAAiB+a,SACjB,OAKR,SAASw3B,EAAgCvyC,GAErC,IAAIwyC,EAAcxyC,EAAMhE,OACxB,GAAIw2C,EAAc,EAAG,CACjB,IAAIp0C,EAAOwL,GAAS4oC,EAAa,KACjC,MAAM,IAAI9xC,MAAM,oCAAsC2B,EAAUrC,GAAS,MAAQ5B,EAAKoE,KAAK,MAAQ,MAOvG,IAAIiwC,EAjhWR,SAASC,EAA0BnxC,GAE/B,IAAII,EAAMJ,IACLA,EAAKE,IAAgBF,EAAKG,IACtBH,EAAKU,IAAyBV,EAAKU,MAC5C,GAAIN,EAAK,CACL,IAAIgxC,EAYZ,SAAStyB,EAAY9e,GAOjB,GAAIA,EAAKpG,eAAe,QACpB,OAAOoG,EAAK5D,KAEhB,IAAImmB,GAAS,GAAKviB,GAAMuiB,MAAM,yBAC9B,OAAiB,OAAVA,EAAiB,GAAKA,EAAM,GAvBhBzD,CAAY9e,GAK3B,OAFAie,QAAQuE,KAAK,4CAA+C4uB,EAAW,kJACOA,EAAW,YAClFhxC,EAGP,OAAO,KAmgWkB+wC,CAA0B1yC,GACvD,OAA+B,OAA3ByyC,EACO,WAAc,OAAOA,EAAuB14C,QAAQiG,IAGpD,WAAc,OAAO,IAAIA,GAtBzBuyC,CAAgCvyC,GAG3C,MAAM,IAAIU,MAAM,eAoCpB,SAASsxC,GAAkB5B,EAAUwB,EAAcxwC,GAC/C,IAAIrH,OAAUiH,EACd,GAAI6wC,GAAezB,GAAW,CAC1B,IAAIwC,EAAoBxvC,EAAkBgtC,GAC1C,OAAOrgC,GAAc6iC,IAAsB7B,GAAkC6B,GAG7E,GAAIb,GAAgB3B,GAChBr2C,EAAU,WAAc,OAAOqJ,EAAkBgtC,EAASzqC,gBAEzD,GAoCb,SAASktC,EAAkBp2C,GACvB,SAAUA,IAASA,EAAMwxC,YArCZ4E,CAAkBzC,GACvBr2C,EAAU,WAAc,OAAOq2C,EAASnC,WAAW/xC,MAAMk0C,EAAUlzC,EAAS2J,GAAWupC,EAASlD,MAAQ,YAEvG,GA8Bb,SAAS4F,EAAmBr2C,GACxB,SAAUA,IAASA,EAAMgyC,aA/BZqE,CAAmB1C,GACxBr2C,EAAU,WAAc,OAAOyM,GAASpD,EAAkBgtC,EAAS3B,mBAElE,CACD,IAAIsE,EAAa3vC,EAAkBgtC,IAC9BA,EAASrC,UAAYqC,EAAS3qC,UAInC,GAHKstC,GA5gMjB,SAASC,EAA0BpB,EAAcxwC,EAAWgvC,GACxD,IAAI6C,EAAiB,GAMrB,MALIrB,GAAgBxwC,IAEhB6xC,EACI,6DAFiB7xC,EAAUmB,KAAI,SAAU2Y,GAAK,OAAOA,GAAKk1B,EAAW,IAAMA,EAAW,IAAM,SAEd5tC,KAAK,MAAQ,KAE7F,IAAI9B,MAAM,sCAAwC2B,EAAUuvC,GAAgB,IAAMqB,GAsgM5ED,CAA0BpB,EAAcxwC,EAAWgvC,IAmCnE,SAAS8C,EAAQz2C,GACb,QAASA,EAAMywC,KAlCHgG,CAAQ9C,GAIR,OAAOrgC,GAAcgjC,IAAehC,GAAkCgC,GAHtEh5C,EAAU,WAAc,OAAO,IAAK,EAAawE,KAAKrC,MAAM,EAAcgB,EAAS,MAAC,GAAS2J,GAAWupC,EAASlD,UAO7H,OAAOnzC,EAEX,SAASy2C,GAAWz2C,EAAS0C,EAAOw1C,GAEhC,YADc,IAAVA,IAAoBA,GAAQ,GACzB,CACHl4C,QAASA,EACT0C,MAAOA,EACPw1C,MAAOA,EAAQ,QAAKjxC,GAG5B,SAAS+wC,GAAgBt1C,GACrB,OAAiB,OAAVA,GAAkC,iBAATA,GAAqB+I,MAAa/I,EAQtE,SAASo1C,GAAep1C,GACpB,MAAwB,mBAAVA,EAoBlB,SAAS02C,GAAyB/xC,EAAWkU,EAAQ3X,GACjD,OAAO6xC,GAAe,CAAE7xC,KAAMA,GAAQ2X,EAAQlU,EAAWzD,GAE7D,IAAIy1C,GAAgBD,GAyBhBE,GAA0B,WAC1B,SAASA,KAuBT,OArBAA,EAAS73C,OAAS,SAAU2F,EAASmU,GACjC,OAAIra,MAAMqH,QAAQnB,GACPiyC,GAAcjyC,EAASmU,EAAQ,IAG/B89B,GAAcjyC,EAAQC,UAAWD,EAAQmU,OAAQnU,EAAQxD,MAAQ,KAGhF01C,EAAS/tC,mBAAqBA,GAC9B+tC,EAASC,KAAO,IAAIrsC,GAEpBosC,EAAStxC,MAAQlB,EAAmB,CAChCb,MAAOqzC,EACPtyC,WAAY,MACZhH,QAAS,WAAc,OAAOyM,GAASnB,OAM3CguC,EAASnuC,mBAAqB,EACvBmuC,EAxBkB,GA0BzBE,GAAQ,SAAU92C,GAClB,OAAOA,GAEP+2C,GAAQ,GACRC,GAAaF,GACbG,GAAoB,WACpB,OAAOz4C,MAAMM,UAAU6N,MAAMnN,KAAKF,YAkDtC,SAAS43C,GAAgBvD,GACrB,IAAIlD,EA2JR,SAAS0G,EAAYxD,GACjB,IAAIlD,EAAOsG,GACPK,EAAezD,EAASlD,KAC5B,GAAI2G,GAAgBA,EAAa73C,OAAQ,CACrCkxC,EAAO,GACP,IAAK,IAAIrxC,EAAI,EAAGA,EAAIg4C,EAAa73C,OAAQH,IAAK,CAC1C,IAAIsF,EAAU,EACVnB,EAAQoD,EAAkBywC,EAAah4C,IAC3C,GAAIZ,MAAMqH,QAAQtC,GACd,IAAK,IAAIgH,EAAI,EAAGokC,EAAcprC,EAAOgH,EAAIokC,EAAYpvC,OAAQgL,IAAK,CAC9D,IAAI7H,EAAaisC,EAAYpkC,GACzB7H,aAAsBc,GAAYd,GAAcc,EAChDkB,GAAoB,EAEfhC,aAAsBgB,GAAYhB,GAAcgB,EACrDgB,IAAoB,EAEfhC,aAAsBe,GAAQf,GAAce,EACjDiB,IAAoB,EAGpBnB,EADKb,aAAsBY,EACnBZ,EAAWa,MAGXoD,EAAkBjE,GAItC+tC,EAAKlwC,KAAK,CAAEgD,MAAOA,EAAOmB,QAASA,UAGtC,GAAIivC,EAAS3B,YAEdvB,EAAO,CAAC,CAAEltC,MADNA,EAAQoD,EAAkBgtC,EAAS3B,aACfttC,QAAS,SAEhC,IAAK0yC,KAAkBruC,MAAa4qC,GAErC,MAAM0D,GAAY,kBAAqB1D,GAE3C,OAAOlD,EAlMI0G,CAAYxD,GACnB/yC,EAAKk2C,GACL92C,EAAQ+2C,GACRO,GAAS,EACTtuC,EAAUrC,EAAkBgtC,EAAS3qC,SACzC,GAAID,MAAa4qC,EAEb3zC,EAAQ2zC,EAASzqC,cAEhB,GAAIyqC,EAASnC,WACd5wC,EAAK+yC,EAASnC,gBAEb,GAAImC,EAAS3B,kBAGb,GAAI2B,EAASrC,SACdgG,GAAS,EACT12C,EAAK+F,EAAkBgtC,EAASrC,cAE/B,CAAA,GAAsB,mBAAXtoC,EAKZ,MAAMquC,GAAY,sGAAuG1D,GAJzH2D,GAAS,EACT12C,EAAKoI,EAKT,MAAO,CAAEynC,KAAMA,EAAM7vC,GAAIA,EAAI02C,OAAQA,EAAQt3C,MAAOA,GAExD,SAASu3C,GAAsBh0C,GAC3B,OAAO8zC,GAAY,mDAAoD9zC,GAuK3E,SAAS8zC,GAAYvsC,EAAMC,GACvB,OAAO,IAAI9G,MAAM4G,GAAYC,EAAMC,EAAK;;;;;;;OAqB5C,SAASysC,GAAuBtI,GAC5B,OAAIA,EAAK3vC,OAAS,EAGP,KAff,SAASk4C,EAAqBvI,GAE1B,IADA,IAAIjpC,EAAM,GACD7G,EAAI,EAAGA,EAAI8vC,EAAK3vC,SAAUH,EAAG,CAClC,GAAI6G,EAAIE,QAAQ+oC,EAAK9vC,KAAO,EAExB,OADA6G,EAAI1F,KAAK2uC,EAAK9vC,IACP6G,EAEXA,EAAI1F,KAAK2uC,EAAK9vC,IAElB,OAAO6G,EAIYwxC,CAAqBvI,EAAKviC,QAAQ+qC,WACxB5xC,KAAI,SAAU6xC,GAAK,OAAO/xC,EAAU+xC,EAAEp0C,UACvCwC,KAAK,QAAU,IAEpC,GAEX,SAAS6xC,GAAevuC,EAAUrF,EAAK6zC,EAA2B10B,GAC9D,IAAI+rB,EAAO,CAAClrC,GACR8zC,EAASD,EAA0B3I,GACnC1uC,EAAS2iB,EAn3PjB,SAAS40B,EAAantC,EAASuY,GAC3B,IAAInX,EAAMpB,EAAU,gBAAkBuY,aAAyBlf,MAAQkf,EAAcvY,QAAUuY,GAC3F3iB,EAAQyD,MAAM+H,GAElB,OADAxL,EAA0B,gBAAI2iB,EACvB3iB;;;;;;;OA+2PsBu3C,CAAaD,EAAQ30B,GAAiBlf,MAAM6zC,GAMzE,OALAt3C,EAAMw3C,OAASA,GACfx3C,EAAM0uC,KAAOA,EACb1uC,EAAMy3C,UAAY,CAAC5uC,GACnB7I,EAAMq3C,0BAA4BA,EAClCr3C,EAA0B,gBAAI2iB,EACvB3iB,EAEX,SAASw3C,GAAO3uC,EAAUrF,GACtB/F,KAAKg6C,UAAU13C,KAAK8I,GACpBpL,KAAKixC,KAAK3uC,KAAKyD,GAEf/F,KAAK2M,QAAU3M,KAAK45C,0BAA0B55C,KAAKixC,MA0HvD,SAASgJ,GAAkBxJ,EAAYyJ,GAEnC,IADA,IAAIC,EAAY,GACPh5C,EAAI,EAAGi5C,EAAKF,EAAO54C,OAAQH,EAAIi5C,EAAIj5C,IAAK,CAC7C,IAAIk5C,EAAYH,EAAO/4C,GAKnBg5C,EAAU73C,KAJT+3C,GAAiC,GAApBA,EAAU/4C,OAIT+4C,EAAUxyC,IAAIF,GAAWG,KAAK,KAH9B,KAMvB,OAAO9B,MAAM,sCAAyC2B,EAAU8oC,GAAc,KAC1E0J,EAAUryC,KAAK,MAAQ,2GAEvBH,EAAU8oC,GAAc,oCAzaI,WAChC,SAAS6J,EAAe5zC,EAAWkU,EAAQ1U,QACxB,IAAX0U,IAAqBA,EAAS+9B,GAASC,WAC5B,IAAX1yC,IAAqBA,EAAS,MAClClG,KAAK4a,OAASA,EACd5a,KAAKkG,OAASA,EACd,IAAIkvC,EAAUp1C,KAAKu6C,SAAW,IAAIlF,IAClCD,EAAQS,IAAI8C,GAAU,CAAErzC,MAAOqzC,GAAUh2C,GAAIk2C,GAAOrG,KAAMsG,GAAO/2C,MAAO/B,KAAMq5C,QAAQ,IACtFjE,EAAQS,IAAIlrC,GAAU,CAAErF,MAAOqF,GAAUhI,GAAIk2C,GAAOrG,KAAMsG,GAAO/2C,MAAO/B,KAAMq5C,QAAQ,IACtFr5C,KAAKyU,MAsEb,SAAS+lC,EAA4BpF,EAASM,GAC1C,IAAIjhC,EAAQ,KACZ,GAAIihC,EAEA,GADAA,EAAWhtC,EAAkBgtC,GACzBn1C,MAAMqH,QAAQ8tC,GAEd,IAAK,IAAIv0C,EAAI,EAAGA,EAAIu0C,EAASp0C,OAAQH,IACjCsT,EAAQ+lC,EAA4BpF,EAASM,EAASv0C,KAAOsT,MAGhE,CAAA,GAAwB,mBAAbihC,EAGZ,MAAM0D,GAAY,+BAAgC1D,GAEjD,IAAIA,GAAgC,iBAAbA,IAAyBA,EAAS3qC,QAoC1D,MAAMquC,GAAY,sBAAuB1D,GAlCzC,IAAIpwC,EAAQoD,EAAkBgtC,EAAS3qC,SACnC0vC,EAAmBxB,GAAgBvD,GACvC,IAAuB,IAAnBA,EAAS6B,MAAgB,CAEzB,IAAImD,EAAgBtF,EAAQvpC,IAAIvG,GAChC,GAAIo1C,GACA,GAAIA,EAAc/3C,KAAOq2C,GACrB,MAAMM,GAAsBh0C,QAKhC8vC,EAAQS,IAAIvwC,EAAOo1C,EAAgB,CAC/Bp1C,MAAOowC,EAAS3qC,QAChBynC,KAAM,GACN6G,QAAQ,EACR12C,GAAIq2C,GACJj3C,MAAO+2C,KAKf4B,EAAclI,KAAKlwC,KAAK,CAAEgD,MAD1BA,EAAQowC,EACgCjvC,QAAS,IAErD,IAAIsvC,EAASX,EAAQvpC,IAAIvG,GACzB,GAAIywC,GAAUA,EAAOpzC,IAAMq2C,GACvB,MAAMM,GAAsBh0C,GAE5BA,IAAUkvC,KACV//B,EAAQgmC,EAAiB14C,OAE7BqzC,EAAQS,IAAIvwC,EAAOm1C,GAM3B,OAAOhmC,EA5HU+lC,CAA4BpF,EAAS1uC,GAEtD4zC,EAAez5C,UAAUgL,IAAM,SAAUvG,EAAO2G,EAAeP,QAC7C,IAAVA,IAAoBA,EAAQpM,EAAQ8F,YAAYuG,SACpD,IAAIypC,EAAUp1C,KAAKu6C,SACfxE,EAASX,EAAQvpC,IAAIvG,GACzB,QAAegB,IAAXyvC,EAAsB,CAEtB,IAAI7pC,EAAgBtF,EAAiBtB,GACrC,GAAI4G,EAAe,CACf,IAAI7F,EAAa6F,GAAiBA,EAAc7F,YAC7B,QAAfA,GAAsC,MAAdA,GAAsBA,IAAerG,KAAKyU,QAClE2gC,EAAQS,IAAIvwC,EAAOywC,EAASkD,GAAgB,CAAEluC,QAASzF,EAAOiuC,WAAYrnC,EAAc7M,QAASmzC,KAAMsG,WAGhGxyC,IAAXyvC,GAEAX,EAAQS,IAAIvwC,EAAO,MAG3B,IAAIq1C,EAAexvC,GAAmBnL,MACtC,IACI,OAwGZ,SAAS46C,EAAgBt1C,EAAOywC,EAAQX,EAASx6B,EAAQ3O,EAAeP,GACpE,IACI,OAgBR,SAASmvC,EAAav1C,EAAOywC,EAAQX,EAASx6B,EAAQ3O,EAAeP,GACjE,IAAIjI,EACA1B,EACJ,IAAIg0C,GAAYrqC,EAAQpM,EAAQ8F,YAAYK,SA2CxC1D,EAPO2J,EAAQpM,EAAQ8F,YAAYI,KAO3BmzC,GAASC,KAAK/sC,IAAIvG,EAJnBoG,EAAQpM,EAAQ8F,YAAYG,cAIuB,IAAlB0G,EAAgCA,EAAgB,KAHvDA,GAHzB2O,EAAO/O,IAAIvG,EAAO2G,EAAe3M,EAAQ8F,YAAYuG,aArCV,CAInD,IADA5J,EAAQg0C,EAAOh0C,QACFg3C,GACT,MAAM/yC,MAAM80C,wBAEX,GAAI/4C,IAAU+2C,GAAO,CACtB/C,EAAOh0C,MAAQg3C,GACf,IACIM,EAAStD,EAAOsD,OAChB12C,EAAKozC,EAAOpzC,GACZo4C,EAAahF,EAAOvD,KACpBA,EAAOsG,GACX,GAAIiC,EAAWz5C,OAAQ,CACnBkxC,EAAO,GACP,IAAK,IAAIrxC,EAAI,EAAGA,EAAI45C,EAAWz5C,OAAQH,IAAK,CACxC,IAAI65C,EAAYD,EAAW55C,GACvBsF,EAAUu0C,EAAUv0C,QACpBw0C,EAAwB,EAAVx0C,EAA8B2uC,EAAQvpC,IAAImvC,EAAU11C,YAASgB,EAC/EksC,EAAKlwC,KAAKs4C,EAEVI,EAAU11C,MAGV21C,EAEA7F,EAGC6F,GAA2B,EAAVx0C,EAAiDmU,EAAhB+9B,GAASC,KAAyB,EAAVnyC,EAA6B,KAAOkyC,GAAS/tC,mBAAoBtL,EAAQ8F,YAAYuG,WAGxKoqC,EAAOh0C,MAAQA,EAAQs3C,EAAS,KAAM51C,EAAKd,GAAIkB,KAAKrC,MAAMiC,EAAIjB,EAAS,MAAC,GAASgwC,KAAY7vC,EAAGnB,WAxBtF8E,EAwBiGksC,IAYnH,OAAOzwC,EAhEI84C,CAAav1C,EAAOywC,EAAQX,EAASx6B,EAAQ3O,EAAeP,GAEvE,MAAOtJ,GAWH,MATMA,aAAa4D,QACf5D,EAAI,IAAI4D,MAAM5D,KAEPA,EAAoB,gBAAIA,EAAoB,iBAAK,IACvD+C,QAAQG,GACTywC,GAAUA,EAAOh0C,OAASg3C,KAE1BhD,EAAOh0C,MAAQ+2C,IAEb12C,GAvHKw4C,CAAgBt1C,EAAOywC,EAAQX,EAASp1C,KAAK4a,OAAQ3O,EAAeP,GAE/E,MAAOtJ,GACH,OAAOoK,GAAmBpK,EAAGkD,EAAO,sBAAuBtF,KAAKkG,QAEpE,QACIiF,GAAmBwvC,KAG3BL,EAAez5C,UAAU+B,SAAW,WAChC,IAAI2zC,EAAS,GAEb,OAF2Bv2C,KAAKu6C,SACxB1rC,SAAQ,SAAU2R,EAAGlb,GAAS,OAAOixC,EAAOj0C,KAAKqF,EAAUrC,OAC5D,kBAAoBixC,EAAOzuC,KAAK,MAAQ,KA3CpB;;;;;;;;AAwenC,IAAIozC,GAA+B,WAI/B,SAASA,EAAc51C,EAAO2N,GAG1B,GAFAjT,KAAKsF,MAAQA,EACbtF,KAAKiT,GAAKA,GACL3N,EACD,MAAM,IAAIU,MAAM,0BAEpBhG,KAAKm7C,YAAcxzC,EAAU3H,KAAKsF,OAkBtC,OAbA41C,EAAcrvC,IAAM,SAAUvG,GAC1B,OAAO81C,GAAmBvvC,IAAInD,EAAkBpD,KAEpDlF,OAAO4D,eAAek3C,EAAe,eAAgB,CAIjDrvC,IAAK,WACD,OAAOuvC,GAAmBC,cAE9BrjB,YAAY,EACZC,cAAc,IAEXijB,EA5BuB,GAqD9BE,GAAqB,IAvBQ,WAC7B,SAASE,IACLt7C,KAAKu7C,SAAW,IAAIlG,IAmBxB,OAjBAiG,EAAYz6C,UAAUgL,IAAM,SAAUvG,GAClC,GAAIA,aAAiB41C,GACjB,OAAO51C,EACX,GAAItF,KAAKu7C,SAAS3D,IAAItyC,GAClB,OAAOtF,KAAKu7C,SAAS1vC,IAAIvG,GAE7B,IAAIk2C,EAAS,IAAIN,GAAc51C,EAAO41C,GAAcG,cAEpD,OADAr7C,KAAKu7C,SAAS1F,IAAIvwC,EAAOk2C,GAClBA,GAEXp7C,OAAO4D,eAAes3C,EAAYz6C,UAAW,eAAgB,CACzDgL,IAAK,WACD,OAAO7L,KAAKu7C,SAASpsC,MAEzB6oB,YAAY,EACZC,cAAc,IAEXqjB,EArBqB,IA6F5BG,GAAY,IAzDe,WAC3B,SAASC,EAAUC,GACf37C,KAAK27C,uBAAyBA,EAyClC,OAvCAD,EAAU76C,UAAU+6C,mBAAqB,SAAUC,GAC/C77C,KAAK27C,uBAAyBE,GAElCH,EAAU76C,UAAUxB,QAAU,SAAUwH,GACpC,OAAO7G,KAAK27C,uBAAuBt8C,QAAQwH,IAE/C60C,EAAU76C,UAAU+D,WAAa,SAAU6rC,GACvC,OAAOzwC,KAAK27C,uBAAuB/2C,WAAW6rC,IAElDiL,EAAU76C,UAAU6vC,YAAc,SAAUD,GACxC,OAAOzwC,KAAK27C,uBAAuBjL,YAAYD,IAEnDiL,EAAU76C,UAAUgwC,aAAe,SAAUJ,GACzC,OAAOzwC,KAAK27C,uBAAuB9K,aAAaJ,IAEpDiL,EAAU76C,UAAUuwC,iBAAmB,SAAUvqC,EAAMwqC,GACnD,OAAOrxC,KAAK27C,uBAAuBvK,iBAAiBvqC,EAAMwqC,IAE9DqK,EAAU76C,UAAU0wC,OAAS,SAAUtuC,GACnC,OAAOjD,KAAK27C,uBAAuBpK,OAAOtuC,IAE9Cy4C,EAAU76C,UAAU2wC,OAAS,SAAUvuC,GACnC,OAAOjD,KAAK27C,uBAAuBnK,OAAOvuC,IAE9Cy4C,EAAU76C,UAAU4wC,OAAS,SAAUxuC,GACnC,OAAOjD,KAAK27C,uBAAuBlK,OAAOxuC,IAE9Cy4C,EAAU76C,UAAU6wC,UAAY,SAAU7qC,GACtC,OAAO7G,KAAK27C,uBAAuBjK,UAAU7qC,IAEjD60C,EAAU76C,UAAU8wC,YAAc,SAAU9qC,GACxC,OAAO7G,KAAK27C,uBAAuBhK,YAAY9qC,IAEnD60C,EAAU76C,UAAU+wC,kBAAoB,SAAU3uC,EAAM4uC,EAAWC,EAASC,GACxE,OAAO/xC,KAAK27C,uBAAuB/J,kBAAkB3uC,EAAM4uC,EAAWC,EAASC,IAEnF2J,EAAU76C,UAAUmxC,YAAc,SAAU8J,EAAY74C,GACpD,OAAOjD,KAAK27C,uBAAuB3J,YAAY8J,EAAY74C,IAExDy4C,EA3CmB,GAyDd,CAAc,IAAIvM,IAa9B4M,GAAsC,WACtC,SAASA,EAAqBh2C,EAAK6sC,EAAUoJ,GACzCh8C,KAAK+F,IAAMA,EACX/F,KAAK4yC,SAAWA,EAChB5yC,KAAKg8C,WAAaA,EAKtB,OAHAD,EAAqBE,QAAU,SAAUl2C,GACrC,OAAO,IAAIg2C,EAAqBh2C,GAAK,EAAO,OAEzCg2C,EAT8B,GAWrCG,GAAc,GACdC,GACA,SAASA,GAA4Bp2C,EAAKq2C,EAAmB1B,GACzD16C,KAAK+F,IAAMA,EACX/F,KAAKo8C,kBAAoBA,EACzBp8C,KAAK06C,cAAgBA,EACrB16C,KAAKq8C,gBAAkBr8C,KAAKo8C,kBAAkB,IAQlDE,GACA,SAASA,GAITj9C,EAIAk9C,GACIv8C,KAAKX,QAAUA,EACfW,KAAKu8C,aAAeA,GAO5B,SAASC,GAAyB9G,GAC9B,IAAI+G,EACAC,EACJ,GAAIhH,EAASrC,SAAU,CACnB,IAAIA,EAAW3qC,EAAkBgtC,EAASrC,UAC1CoJ,EAAYhB,GAAUp8C,QAAQg0C,GAC9BqJ,EAAeC,GAAiBtJ,QAE3BqC,EAAS3B,aACd0I,EAAY,SAAUG,GAAiB,OAAOA,GAC9CF,EAAe,CAACX,GAAqBE,QAAQf,GAAcrvC,IAAI6pC,EAAS3B,gBAEnE2B,EAASnC,YACdkJ,EAAY/G,EAASnC,WACrBmJ,EA6ER,SAASG,EAAsBpM,EAAY8L,GACvC,GAAKA,EAGA,CACD,IAAIO,EAAWP,EAAa10C,KAAI,SAAU5G,GAAK,MAAO,CAACA,MACvD,OAAOs7C,EAAa10C,KAAI,SAAU5G,GAAK,OAAO87C,GAActM,EAAYxvC,EAAG67C,MAJ3E,OAAOH,GAAiBlM,GA/EToM,CAAsBnH,EAASnC,WAAYmC,EAASlD,QAGnEiK,EAAY,WAAc,OAAO/G,EAASzqC,UAC1CyxC,EAAeR,IAEnB,OAAO,IAAII,GAA0BG,EAAWC,GAQpD,SAASM,GAA0BtH,GAC/B,OAAO,IAAIyG,GAA4BjB,GAAcrvC,IAAI6pC,EAAS3qC,SAAU,CAACyxC,GAAyB9G,IAAYA,EAAS6B,QAAS,GAuExI,SAASoF,GAAiBlM,GACtB,IAAIyJ,EAASuB,GAAU72C,WAAW6rC,GAClC,IAAKyJ,EACD,MAAO,GACX,GAAIA,EAAO+C,MAAK,SAAUz8C,GAAK,OAAY,MAALA,KAClC,MAAMy5C,GAAkBxJ,EAAYyJ,GAExC,OAAOA,EAAOryC,KAAI,SAAUrH,GAAK,OAAOu8C,GAActM,EAAYjwC,EAAG05C,MAEzE,SAAS6C,GAActM,EAAY4D,EAAU6F,GACzC,IAAI50C,EAAQ,KACRstC,GAAW,EACf,IAAKryC,MAAMqH,QAAQysC,GACf,OACW6I,GADP7I,aAAoBhvC,EACKgvC,EAAS/uC,MAGT+uC,EAHgBzB,EAAU,MAO3D,IADA,IAAIoJ,EAAa,KACR76C,EAAI,EAAGA,EAAIkzC,EAAS/yC,SAAUH,EAAG,CACtC,IAAIg8C,EAAgB9I,EAASlzC,GACzBg8C,aAAyBtO,GACzBvpC,EAAQ63C,EAEHA,aAAyB93C,EAC9BC,EAAQ63C,EAAc73C,MAEjB63C,aAAyB53C,EAC9BqtC,GAAW,EAENuK,aAAyB33C,GAAQ23C,aAAyB13C,EAC/Du2C,EAAamB,EAERA,aAAyB1yC,KAC9BnF,EAAQ63C,GAIhB,GAAa,OADb73C,EAAQoD,EAAkBpD,IAEtB,OAAO43C,GAAkB53C,EAAOstC,EAAUoJ,GAG1C,MAAM/B,GAAkBxJ,EAAYyJ,GAG5C,SAASgD,GAAkB53C,EAAOstC,EAAUoJ,GACxC,OAAO,IAAID,GAAqBb,GAAcrvC,IAAIvG,GAAQstC,EAAUoJ;;;;;;;OAWxE,IAuXIoB,GAvXAC,GAAY,GAsCZC,GAAoC,WACpC,SAASA,KA2FT,OAxDAA,EAAmBtiB,QAAU,SAAUt0B,GACnC,OAxMR,SAAS62C,EAA2B72C,GAChC,IAEI82C,EAOR,SAASC,EAAiC/2C,EAAWg3C,GACjD,IAAK,IAAIv8C,EAAI,EAAGA,EAAIuF,EAAUpF,OAAQH,IAAK,CACvC,IAAIu0C,EAAWhvC,EAAUvF,GACrBq2C,EAAWkG,EAAuB7xC,IAAI6pC,EAAS3vC,IAAIkN,IACvD,GAAIukC,EAAU,CACV,GAAI9B,EAASgF,gBAAkBlD,EAASkD,cACpC,MAjQL10C,MAAM,0DAiQmDwxC,EAjQqB,IAiQX9B,GAElE,GAAIA,EAASgF,cACT,IAAK,IAAIpuC,EAAI,EAAGA,EAAIopC,EAAS0G,kBAAkB96C,OAAQgL,IACnDkrC,EAAS4E,kBAAkB95C,KAAKozC,EAAS0G,kBAAkB9vC,SAI/DoxC,EAAuB7H,IAAIH,EAAS3vC,IAAIkN,GAAIyiC,OAG/C,CACD,IAAI+E,EAEAA,EADA/E,EAASgF,cACU,IAAIyB,GAA4BzG,EAAS3vC,IAAK2vC,EAAS0G,kBAAkB1tC,QAASgnC,EAASgF,eAG3FhF,EAEvBgI,EAAuB7H,IAAIH,EAAS3vC,IAAIkN,GAAIwnC,IAGpD,OAAOiD,EAnCmBD,CAqC9B,SAASE,EAAoBj3C,EAAWsB,GAepC,OAdAtB,EAAUmI,SAAQ,SAAU1O,GACxB,GAAIA,aAAa0uC,GACb7mC,EAAI1F,KAAK,CAAEyI,QAAS5K,EAAGkzC,SAAUlzC,SAEhC,GAAIA,GAAiB,iBAALA,QAA+BmG,IAAdnG,EAAE4K,QACpC/C,EAAI1F,KAAKnC,OAER,CAAA,IAAII,MAAMqH,QAAQzH,GAInB,MAvXZ,SAASy9C,EAAqBlI,GAC1B,OAAO1vC,MAAM,4EAA8E0vC,GAsX7EkI,CAAqBz9C,GAH3Bw9C,EAAoBx9C,EAAG6H,OAMxBA,EAtDU21C,CAAoBj3C,EAAW,IACtBmB,IAAIm1C,IACuC,IAAI3H,KACzE,OAAO90C,MAAMs9C,KAAKL,EAAoBp5C,UAoM3Bm5C,CAA2B72C,IAyBtC42C,EAAmBQ,iBAAmB,SAAUp3C,EAAWkU,GACvD,IAAImjC,EAA8BT,EAAmBtiB,QAAQt0B,GAC7D,OAAO42C,EAAmBU,sBAAsBD,EAA6BnjC,IAyBjF0iC,EAAmBU,sBAAwB,SAAUt3C,EAAWkU,GAC5D,OAAO,IAAIqjC,GAAoBv3C,EAAWkU,IAEvC0iC,EA5F4B,GA8FnCW,GAAqC,WAIrC,SAASA,EAAoBC,EAAYC,GAErCn+C,KAAKo+C,qBAAuB,EAC5Bp+C,KAAKk+C,WAAaA,EAClBl+C,KAAK4a,OAASujC,GAAW,KACzB,IAAIE,EAAMH,EAAW58C,OACrBtB,KAAKs+C,OAAS,GACdt+C,KAAKu+C,KAAO,GACZ,IAAK,IAAIp9C,EAAI,EAAGA,EAAIk9C,EAAKl9C,IACrBnB,KAAKs+C,OAAOn9C,GAAK+8C,EAAW/8C,GAAG4E,IAAIkN,GACnCjT,KAAKu+C,KAAKp9C,GAAKk8C,GAoJvB,OAjJAY,EAAoBp9C,UAAUgL,IAAM,SAAUvG,EAAO2G,GAEjD,YADsB,IAAlBA,IAA4BA,EAAgBrB,IACzC5K,KAAKw+C,UAAUtD,GAAcrvC,IAAIvG,GAAQ,KAAM2G,IAE1DgyC,EAAoBp9C,UAAU49C,sBAAwB,SAAU/3C,GAC5D,IAAIq3C,EAA8BT,GAAmBtiB,QAAQt0B,GAC7D,OAAO1G,KAAK0+C,wBAAwBX,IAExCE,EAAoBp9C,UAAU69C,wBAA0B,SAAUh4C,GAC9D,IAAIi4C,EAAM,IAAIV,EAAoBv3C,GAElC,OADAi4C,EAAI/jC,OAAS5a,KACN2+C,GAEXV,EAAoBp9C,UAAU+9C,sBAAwB,SAAUlJ,GAC5D,OAAO11C,KAAK6+C,oBAAoBvB,GAAmBtiB,QAAQ,CAAC0a,IAAW,KAE3EuI,EAAoBp9C,UAAUg+C,oBAAsB,SAAUnJ,GAC1D,OAAO11C,KAAK8+C,qBAAqBpJ,IAErCuI,EAAoBp9C,UAAUk+C,mBAAqB,SAAUp6C,GACzD,GAAIA,EAAQ,GAAKA,GAAS3E,KAAKk+C,WAAW58C,OACtC,MA1iBZ,SAAS09C,EAAiBr6C,GACtB,OAAOqB,MAAM,SAAWrB,EAAQ,sBAyiBlBq6C,CAAiBr6C,GAE3B,OAAO3E,KAAKk+C,WAAWv5C,IAG3Bs5C,EAAoBp9C,UAAUo+C,KAAO,SAAUvJ,GAC3C,GAAI11C,KAAKo+C,uBAAyBp+C,KAAKk/C,yBACnC,MAlqBZ,SAASC,EAAsB/zC,EAAUrF,GACrC,OAAO4zC,GAAevuC,EAAUrF,GAAK,SAAUkrC,GAC3C,MAAO,wCAA0CsI,GAAuBtI,MAgqB9DkO,CAAsBn/C,KAAM01C,EAAS3vC,KAE/C,OAAO/F,KAAK8+C,qBAAqBpJ,IAErCuI,EAAoBp9C,UAAUq+C,uBAAyB,WACnD,OAAOl/C,KAAKu+C,KAAKj9C,QAErB28C,EAAoBp9C,UAAUi+C,qBAAuB,SAAUpJ,GAC3D,GAAIA,EAASgF,cAAe,CAExB,IADA,IAAI1yC,EAAM,GACD7G,EAAI,EAAGA,EAAIu0C,EAAS0G,kBAAkB96C,SAAUH,EACrD6G,EAAI7G,GAAKnB,KAAKo/C,aAAa1J,EAAUA,EAAS0G,kBAAkBj7C,IAEpE,OAAO6G,EAGP,OAAOhI,KAAKo/C,aAAa1J,EAAUA,EAAS0G,kBAAkB,KAGtE6B,EAAoBp9C,UAAUu+C,aAAe,SAAU1J,EAAU4G,GAC7D,IAEI9J,EAWA1lC,EAbAy+B,EAAQvrC,KACRX,EAAUi9C,EAA0Bj9C,QAExC,IACImzC,EACI8J,EAA0BC,aAAa10C,KAAI,SAAU6qC,GAAO,OAAOnH,EAAM8T,2BAA2B3M,MAE5G,MAAOtwC,GAIH,MAHIA,EAAE23C,QACF33C,EAAE23C,OAAO/5C,KAAM01C,EAAS3vC,KAEtB3D,EAGV,IACI0K,EAAMzN,EAAQmC,WAAM,EAAQgB,EAASgwC,IAEzC,MAAOpwC,GACH,MAxqBZ,SAASk9C,EAAmBl0C,EAAUm0C,EAAmBC,EAAez5C,GACpE,OAAO4zC,GAAevuC,EAAUrF,GAAK,SAAUkrC,GAC3C,IAAIwO,EAAQ93C,EAAUspC,EAAK,GAAG3rC,OAC9B,OAAOi6C,EAAkB5yC,QAAU,mCAAqC8yC,EAAQ,IAAMlG,GAAuBtI,GAAQ,MACtHsO,GAoqBWD,CAAmBt/C,KAAMoC,EAAGA,EAASszC,EAAS3vC,KAExD,OAAO+G,GAEXmxC,EAAoBp9C,UAAUw+C,2BAA6B,SAAU3M,GACjE,OAAO1yC,KAAKw+C,UAAU9L,EAAI3sC,IAAK2sC,EAAIsJ,WAAYtJ,EAAIE,SAAW,KAAOhoC,KAEzEqzC,EAAoBp9C,UAAU29C,UAAY,SAAUz4C,EAAKi2C,EAAY/vC,GACjE,OAAIlG,IAAQk4C,EAAoByB,aACrB1/C,KAEPg8C,aAAsBx2C,EACfxF,KAAK2/C,cAAc55C,EAAKkG,GAGxBjM,KAAK4/C,iBAAiB75C,EAAKkG,EAAe+vC,IAGzDiC,EAAoBp9C,UAAUg/C,eAAiB,SAAUC,GACrD,IAAK,IAAI3+C,EAAI,EAAGA,EAAInB,KAAKs+C,OAAOh9C,OAAQH,IACpC,GAAInB,KAAKs+C,OAAOn9C,KAAO2+C,EAInB,OAHI9/C,KAAKu+C,KAAKp9C,KAAOk8C,KACjBr9C,KAAKu+C,KAAKp9C,GAAKnB,KAAKi/C,KAAKj/C,KAAKk+C,WAAW/8C,KAEtCnB,KAAKu+C,KAAKp9C,GAGzB,OAAOk8C,IAGXY,EAAoBp9C,UAAUk/C,aAAe,SAAUh6C,EAAKkG,GACxD,GAAIA,IAAkBrB,GAClB,OAAOqB,EAGP,MAlwBZ,SAAS+zC,EAAgB50C,EAAUrF,GAC/B,OAAO4zC,GAAevuC,EAAUrF,GAAK,SAAUkrC,GAE3C,MAAO,mBADKtpC,EAAUspC,EAAK,GAAG3rC,OACM,IAAMi0C,GAAuBtI,MA+vBvD+O,CAAgBhgD,KAAM+F,IAIpCk4C,EAAoBp9C,UAAU8+C,cAAgB,SAAU55C,EAAKkG,GACzD,IAAIa,EAAM9M,KAAK6/C,eAAe95C,EAAIkN,IAClC,OAAQnG,IAAQuwC,GAAavwC,EAAM9M,KAAK+/C,aAAah6C,EAAKkG,IAG9DgyC,EAAoBp9C,UAAU++C,iBAAmB,SAAU75C,EAAKkG,EAAe+vC,GAC3E,IAAI2C,EAOJ,IALIA,EADA3C,aAAsBv2C,EAChBzF,KAAK4a,OAGL5a,KAEH2+C,aAAeV,GAAqB,CACvC,IAAIgC,EAAOtB,EACP7xC,EAAMmzC,EAAKJ,eAAe95C,EAAIkN,IAClC,GAAInG,IAAQuwC,GACR,OAAOvwC,EACX6xC,EAAMsB,EAAKrlC,OAEf,OAAY,OAAR+jC,EACOA,EAAI9yC,IAAI9F,EAAIT,MAAO2G,GAGnBjM,KAAK+/C,aAAah6C,EAAKkG,IAGtC7L,OAAO4D,eAAei6C,EAAoBp9C,UAAW,cAAe,CAChEgL,IAAK,WAGD,MAAO,kCAWnB,SAASq0C,EAAc90C,EAAUzI,GAE7B,IADA,IAAIqF,EAAM,GACD7G,EAAI,EAAGA,EAAIiK,EAAS8yC,WAAW58C,SAAUH,EAC9C6G,EAAI7G,GAAKwB,EAAGyI,EAAS2zC,mBAAmB59C,IAE5C,OAAO6G;;;;;;;;;;;;;;;;;;;;;OAlBiBk4C,CAAclgD,MAAM,SAAUG,GAAK,MAAO,KAAOA,EAAE4F,IAAIo1C,YAAc,QAChFrzC,KAAK,MAC6C,MAE3DkwB,YAAY,EACZC,cAAc,IAElBgmB,EAAoBp9C,UAAU+B,SAAW,WACrC,OAAO5C,KAAKm7C,aAEhB8C,EAAoByB,aAAexE,GAAcrvC,IAAI8sC,IAC9CsF,EAlK6B,GAwOpCkC,GAA+B,IAAI11C,GAAe,6BAuBlD21C,GAAkBv7C,EAAkB,mBAAmB,SAAUutB,EAAUtf,GAE3E,YADa,IAATA,IAAmBA,EAAO,IACtB/R,EAAS,CAAEqxB,SAAUA,EAAUqtB,OAAO,EAAOY,aAAa,EAAOC,aAAa,GAASxtC,KAd/FsqC,GACA,SAASA,QAuBTmD,GAAe17C,EAAkB,gBAAgB,SAAUutB,EAAUtf,GAErE,YADa,IAATA,IAAmBA,EAAO,IACtB/R,EAAS,CAAEqxB,SAAUA,EAAUqtB,OAAO,EAAMY,aAAa,EAAOC,aAAa,GAAQxtC,KAC9FsqC,IAOCoD,GAAe37C,EAAkB,gBAAgB,SAAUutB,EAAUtf,GAErE,YADa,IAATA,IAAmBA,EAAO,IACtB/R,EAAS,CAAEqxB,SAAUA,EAAUqtB,OAAO,EAAOY,aAAa,EAAMC,aAAa,GAAQxtC,KAC9FsqC,IAOCqD,GAAY57C,EAAkB,aAAa,SAAUutB,EAAUtf,GAC/D,OAAQ/R,EAAS,CAAEqxB,SAAUA,EAAUqtB,OAAO,EAAMY,aAAa,EAAMC,aAAa,GAAQxtC,KAC7FsqC;;;;;;;;AAyCH,SAASsD,GAA0BC,GAE/B,IAAIC,EAAoB,GAEpBC,EAAS,IAAIxL,IACjB,SAASyL,EAAsB33B,GAC3B,IAAI43B,EAAUF,EAAOh1C,IAAIsd,GACzB,IAAK43B,EAAS,CACV,IAAIC,EAAOL,EAAiBx3B,GAC5B03B,EAAOhL,IAAI1sB,EAAK43B,EAAUC,EAAKC,KAAKC,KAExC,OAAOH,EA0BX,OAxBAI,GAAiCtyC,SAAQ,SAAUihB,EAAWjpB,GAC1D,IAAIu6C,EAAW,GACXtxB,EAAUuxB,aACVD,EAAS9+C,KAAKw+C,EAAsBhxB,EAAUuxB,aAAaJ,MAAK,SAAUpwC,GACtEif,EAAUjf,SAAWA,MAG7B,IAAIywC,EAAYxxB,EAAUwxB,UACtBpuC,EAAS4c,EAAU5c,SAAW4c,EAAU5c,OAAS,IACjDquC,EAAczxB,EAAU5c,OAAO5R,OACnCggD,GAAaA,EAAUzyC,SAAQ,SAAU2yC,EAAU78C,GAC/CuO,EAAO5Q,KAAK,IACZ8+C,EAAS9+C,KAAKw+C,EAAsBU,GAAUP,MAAK,SAAU3X,GACzDp2B,EAAOquC,EAAc58C,GAAS2kC,EAC9BgY,EAAUvyC,OAAOuyC,EAAUp5C,QAAQs5C,GAAW,GACtB,GAApBF,EAAUhgD,SACVwuB,EAAUwxB,eAAYh7C,UAIlC,IAAIm7C,EAAgB1mB,QAAQ2mB,IAAIN,GAAUH,MAAK,WAAc,OAsCrE,SAASU,EAAqB96C,GAC1B+6C,GAA8BC,OAAOh7C;;;;;;;OAvCmC86C,CAAqB96C,MACzF+5C,EAAkBt+C,KAAKm/C,MAE3BK,KACO/mB,QAAQ2mB,IAAId,GAAmBK,MAAK,eAE/C,IAAIE,GAAmC,IAAI9L,IAEvCuM,GAAgC,IAAIrM,IAUxC,SAASwM,GAAyBjyB,GAC9B,SAAWA,EAAUuxB,cAAgBvxB,EAAUrvB,eAAe,aAC1DqvB,EAAUwxB,WAAaxxB,EAAUwxB,UAAUhgD,QAEnD,SAASwgD,KACL,IAAIE,EAAMb,GAEV,OADAA,GAAmC,IAAI9L,IAChC2M,EAUX,SAASd,GAAen5B,GACpB,MAA0B,iBAAZA,EAAuBA,EAAWA,EAASlb,OAqB7D,SAASo1C,GAAqBvsC,EAAOiI,GAMjC,IAHA,IAAIzK,EAASwC,EAAMxC,OACfylB,EAAUjjB,EAAMijB,QAChBzf,EAAO,EACF/X,EAAI,EAAGA,EAAIwc,EAAMrc,OAAQH,IAAK,CACnC,IAAIY,EAAQ4b,EAAMxc,GACG,iBAAVY,EACPmX,EAAOnX,EAEM,GAARmX,EACLyf,EAAUvwB,EAAuBuwB,EAAS52B,GAE7B,GAARmX,IAGLhG,EAAS9K,EAAuB8K,EAFpBnR,EAEoC,KAD/B4b,IAAQxc,GAC2C,MAGjE,OAAX+R,IAAoBwC,EAAMxC,OAASA,GACvB,OAAZylB,IAAqBjjB,EAAMijB,QAAUA;;;;;;;OAUzC,IAAIupB,GAAkB,KACtB,SAASC,KACL,IAAKD,GAAiB,CAClB,IAAIE,EAAW94C,EAAgB,OAC/B,GAAI84C,GAAYA,EAASxgD,SACrBsgD,GAAkBE,EAASxgD,cAK3B,IADA,IAAIqvC,EAAO7wC,OAAOiiD,oBAAoBhN,IAAIx0C,WACjCM,EAAI,EAAGA,EAAI8vC,EAAK3vC,SAAUH,EAAG,CAClC,IAAI4E,EAAMkrC,EAAK9vC,GACH,YAAR4E,GAA6B,SAARA,GACrBsvC,IAAIx0C,UAAUkF,KAASsvC,IAAIx0C,UAAmB,UAC9CqhD,GAAkBn8C,IAKlC,OAAOm8C;;;;;;;;;;;;;;;AA4DX,SAASI,GAAeC,EAAGpiD,GACvB,OAAOoiD,IAAMpiD,GAAkB,iBAANoiD,GAA+B,iBAANpiD,GAAkBqiD,MAAMD,IAAMC,MAAMriD;;;;;;;;AA2B1F,SAASsiD,GAAeF,EAAGpiD,GACvB,IAAIuiD,EAAsBC,GAAqBJ,GAC3CK,EAAsBD,GAAqBxiD,GAC/C,OAAIuiD,GAAuBE,EA8D/B,SAASC,EAAoBN,EAAGpiD,EAAG2iD,GAG/B,IAFA,IAAIC,EAAYR,EAAEJ,QACda,EAAY7iD,EAAEgiD,UACL,CACT,IAAIc,EAAQF,EAAUjhD,OAClBohD,EAAQF,EAAUlhD,OACtB,GAAImhD,EAAMjhD,MAAQkhD,EAAMlhD,KACpB,OAAO,EACX,GAAIihD,EAAMjhD,MAAQkhD,EAAMlhD,KACpB,OAAO,EACX,IAAK8gD,EAAWG,EAAMlhD,MAAOmhD,EAAMnhD,OAC/B,OAAO,GAxEJ8gD,CAAoBN,EAAGpiD,EAAGsiD,MAK5BC,IAFWH,GAAmB,iBAANA,GAA+B,mBAANA,GAEZK,IAD1BziD,GAAmB,iBAANA,GAA+B,mBAANA,IAK3CmiD,GAAeC,EAAGpiD,GAwBrC,IAAIgjD,GAA8B,WAC9B,SAASA,EAAaphD,GAClB/B,KAAKojD,QAAUrhD,EAiBnB,OAdAohD,EAAaE,KAAO,SAAUthD,GAC1B,OAAO,IAAIohD,EAAaphD,IAM5BohD,EAAaG,OAAS,SAAUvhD,GAC5B,OAAOohD,EAAaI,UAAUxhD,GAASA,EAAMqhD,QAAUrhD,GAG3DohD,EAAaI,UAAY,SAAUxhD,GAC/B,OAAOA,aAAiBohD,GAErBA,EAnBsB,GAqBjC,SAASR,GAAqB71C,GAC1B,QAAK02C,GAAa12C,KAEXvM,MAAMqH,QAAQkF,MACdA,aAAeuoC,MACd8M,OAAuBr1C,GA8BnC,SAAS02C,GAAa9hD,GAClB,OAAa,OAANA,IAA4B,mBAANA,GAAiC,iBAANA;;;;;;;OAY5D,SAAS+hD,GAAc9sC,EAAO4C,EAAcxX,GACxC,OAAO4U,EAAM4C,GAAgBxX,EAGjC,SAAS2hD,GAAW/sC,EAAO4C,GAIvB,OAAO5C,EAAM4C,GAejB,SAASoqC,GAAehtC,EAAO4C,EAAcxX,GAKzC,OAAI3B,OAAOwjD,GADIjtC,EAAM4C,GACGxX,KAkBpB4U,EAAM4C,GAAgBxX,GACf,GAIf,SAAS8hD,GAAgBltC,EAAO4C,EAAcuqC,EAAMC,GAChD,IAAIC,EAAYL,GAAehtC,EAAO4C,EAAcuqC,GACpD,OAAOH,GAAehtC,EAAO4C,EAAe,EAAGwqC,IAASC,EAG5D,SAASC,GAAgBttC,EAAO4C,EAAcuqC,EAAMC,EAAMG,GACtD,IAAIF,EAAYH,GAAgBltC,EAAO4C,EAAcuqC,EAAMC,GAC3D,OAAOJ,GAAehtC,EAAO4C,EAAe,EAAG2qC,IAASF,EAG5D,SAASG,GAAgBxtC,EAAO4C,EAAcuqC,EAAMC,EAAMG,EAAME,GAC5D,IAAIJ,EAAYH,GAAgBltC,EAAO4C,EAAcuqC,EAAMC,GAC3D,OAAOF,GAAgBltC,EAAO4C,EAAe,EAAG2qC,EAAME,IAASJ;;;;;;;OAuBnE,SAASK,GAAYphD,EAAMlB,EAAOqrB,EAAWgO,GACzC,IAAIzkB,EAAQ0B,KAQZ,OANIsrC,GAAehtC,EADA8C,KACqB1X,KACxBuW,KAEZ0pB,GADYzmB,KACoB5E,EAAO1T,EAAMlB,EAAOqrB,EAAWgO,IAG5DipB;;;;;;;OAsBX,SAASC,GAAe3tC,EAAOvS,GAK3B,IAFA,IAAImgD,GAAmB,EACnBhrC,EAAeD,KACVnY,EAAI,EAAGA,EAAIiD,EAAO9C,OAAQH,GAAK,EAEpCojD,EAAmBZ,GAAehtC,EAAO4C,IAAgBnV,EAAOjD,KAAOojD,EAG3E,GADA/qC,GAAgBD,IACXgrC,EACD,OAAOxwB,GAGX,IAAItG,EAAUrpB,EAAO,GACrB,IAASjD,EAAI,EAAGA,EAAIiD,EAAO9C,OAAQH,GAAK,EACpCssB,GAAWjO,GAAgBpb,EAAOjD,IAAMiD,EAAOjD,EAAI,GAEvD,OAAOssB,EASX,SAAS+2B,GAAe7tC,EAAO8tC,EAAQC,EAAIC,GAEvC,OADgBhB,GAAehtC,EAAO8C,KAAoBirC,GACvCD,EAASjlC,GAAgBklC,GAAMC,EAAS5wB,GAK/D,SAAS6wB,GAAejuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIH,GAC/C,IACIX,EAAYH,GAAgBltC,EADb2C,KACkCorC,EAAII,GAEzD,OADAprC,GAAsB,GACfsqC,EAAYS,EAASjlC,GAAgBklC,GAAMG,EAAKrlC,GAAgBslC,GAAMH,EAAS5wB,GAK1F,SAASgxB,GAAepuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GACvD,IACIX,EAAYC,GAAgBttC,EADb2C,KACkCorC,EAAII,EAAIG,GAE7D,OADAvrC,GAAsB,GACfsqC,EACHS,EAASjlC,GAAgBklC,GAAMG,EAAKrlC,GAAgBslC,GAAME,EAAKxlC,GAAgBylC,GAAMN,EACrF5wB,GAKR,SAASmxB,GAAevuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAC/D,IACIX,EAAYG,GAAgBxtC,EADb2C,KACkCorC,EAAII,EAAIG,EAAIG,GAEjE,OADA1rC,GAAsB,GACfsqC,EAAYS,EAASjlC,GAAgBklC,GAAMG,EAAKrlC,GAAgBslC,GAAME,EACzExlC,GAAgBylC,GAAME,EAAK3lC,GAAgB4lC,GAAMT,EACjD5wB,GAKR,SAASsxB,GAAe1uC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GACvE,IAAIprC,EAAeD,KACf0qC,EAAYG,GAAgBxtC,EAAO4C,EAAcmrC,EAAII,EAAIG,EAAIG,GAGjE,OAFApB,EAAYL,GAAehtC,EAAO4C,EAAe,EAAGgsC,IAAOvB,EAC3DtqC,GAAsB,GACfsqC,EAAYS,EAASjlC,GAAgBklC,GAAMG,EAAKrlC,GAAgBslC,GAAME,EACzExlC,GAAgBylC,GAAME,EAAK3lC,GAAgB4lC,GAAME,EAAK9lC,GAAgB+lC,GAAMZ,EAC5E5wB,GAKR,SAASyxB,GAAe7uC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAC/E,IAAIprC,EAAeD,KACf0qC,EAAYG,GAAgBxtC,EAAO4C,EAAcmrC,EAAII,EAAIG,EAAIG,GAGjE,OAFApB,EAAYH,GAAgBltC,EAAO4C,EAAe,EAAGgsC,EAAIG,IAAO1B,EAChEtqC,GAAsB,GACfsqC,EACHS,EAASjlC,GAAgBklC,GAAMG,EAAKrlC,GAAgBslC,GAAME,EAAKxlC,GAAgBylC,GAAME,EACjF3lC,GAAgB4lC,GAAME,EAAK9lC,GAAgB+lC,GAAME,EAAKjmC,GAAgBkmC,GAAMf,EAChF5wB,GAKR,SAAS4xB,GAAehvC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GACvF,IAAIprC,EAAeD,KACf0qC,EAAYG,GAAgBxtC,EAAO4C,EAAcmrC,EAAII,EAAIG,EAAIG,GAGjE,OAFApB,EAAYC,GAAgBttC,EAAO4C,EAAe,EAAGgsC,EAAIG,EAAIG,IAAO7B,EACpEtqC,GAAsB,GACfsqC,EAAYS,EAASjlC,GAAgBklC,GAAMG,EAAKrlC,GAAgBslC,GAAME,EACzExlC,GAAgBylC,GAAME,EAAK3lC,GAAgB4lC,GAAME,EAAK9lC,GAAgB+lC,GAAME,EAC5EjmC,GAAgBkmC,GAAME,EAAKpmC,GAAgBqmC,GAAMlB,EACjD5wB,GAKR,SAAS+xB,GAAenvC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAC/F,IAAIprC,EAAeD,KACf0qC,EAAYG,GAAgBxtC,EAAO4C,EAAcmrC,EAAII,EAAIG,EAAIG,GAGjE,OAFApB,EAAYG,GAAgBxtC,EAAO4C,EAAe,EAAGgsC,EAAIG,EAAIG,EAAIG,IAAOhC,EACxEtqC,GAAsB,GACfsqC,EAAYS,EAASjlC,GAAgBklC,GAAMG,EAAKrlC,GAAgBslC,GAAME,EACzExlC,GAAgBylC,GAAME,EAAK3lC,GAAgB4lC,GAAME,EAAK9lC,GAAgB+lC,GAAME,EAC5EjmC,GAAgBkmC,GAAME,EAAKpmC,GAAgBqmC,GAAME,EAAKvmC,GAAgBwmC,GAAMrB,EAC5E5wB,GA2BR,SAASkyB,GAAwBnoC,EAAU2mC,EAAQC,EAAIC,EAAQv3B,EAAWgO,GACtE,IAAIzkB,EAAQ0B,KACR6tC,EAAoB1B,GAAe7tC,EAAO8tC,EAAQC,EAAIC,GAO1D,OANIuB,IAAsBnyB,IAEtBiO,GADYzmB,KACoB5E,EAAOmH,EAAUooC,EAAmB94B,EAAWgO,GAI5E6qB,GA4BX,SAASE,GAAwBroC,EAAU2mC,EAAQC,EAAIG,EAAIC,EAAIH,EAAQv3B,EAAWgO,GAC9E,IAAIzkB,EAAQ0B,KACR6tC,EAAoBtB,GAAejuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIH,GAOlE,OANIuB,IAAsBnyB,IAEtBiO,GADYzmB,KACoB5E,EAAOmH,EAAUooC,EAAmB94B,EAAWgO,GAI5E+qB,GA+BX,SAASC,GAAwBtoC,EAAU2mC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,EAAQv3B,EAAWgO,GACtF,IAAIzkB,EAAQ0B,KACR6tC,EAAoBnB,GAAepuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAO1E,OANIuB,IAAsBnyB,IAEtBiO,GADYzmB,KACoB5E,EAAOmH,EAAUooC,EAAmB94B,EAAWgO,GAI5EgrB,GAiCX,SAASC,GAAwBvoC,EAAU2mC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,EAAQv3B,EAAWgO,GAC9F,IAAIzkB,EAAQ0B,KACR6tC,EAAoBhB,GAAevuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAOlF,OANIuB,IAAsBnyB,IAEtBiO,GADYzmB,KACoB5E,EAAOmH,EAAUooC,EAAmB94B,EAAWgO,GAI5EirB,GAmCX,SAASC,GAAwBxoC,EAAU2mC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,EAAQv3B,EAAWgO,GACtG,IAAIzkB,EAAQ0B,KACR6tC,EAAoBb,GAAe1uC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAO1F,OANIuB,IAAsBnyB,IAEtBiO,GADYzmB,KACoB5E,EAAOmH,EAAUooC,EAAmB94B,EAAWgO,GAI5EkrB,GAqCX,SAASC,GAAwBzoC,EAAU2mC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,EAAQv3B,EAAWgO,GAC9G,IAAIzkB,EAAQ0B,KACR6tC,EAAoBV,GAAe7uC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAOlG,OANIuB,IAAsBnyB,IAEtBiO,GADYzmB,KACoB5E,EAAOmH,EAAUooC,EAAmB94B,EAAWgO,GAI5EmrB,GAuCX,SAASC,GAAwB1oC,EAAU2mC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,EAAQv3B,EAAWgO,GACtH,IAAIzkB,EAAQ0B,KACR6tC,EAAoBP,GAAehvC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAO1G,OANIuB,IAAsBnyB,IAEtBiO,GADYzmB,KACoB5E,EAAOmH,EAAUooC,EAAmB94B,EAAWgO,GAI5EorB,GAyCX,SAASC,GAAwB3oC,EAAU2mC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,EAAQv3B,EAAWgO,GAC9H,IAAIzkB,EAAQ0B,KACR6tC,EAAoBJ,GAAenvC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAOlH,OANIuB,IAAsBnyB,IAEtBiO,GADYzmB,KACoB5E,EAAOmH,EAAUooC,EAAmB94B,EAAWgO,GAI5EqrB,GA4BX,SAASC,GAAwB5oC,EAAU1Z,EAAQgpB,EAAWgO,GAC1D,IAAIzkB,EAAQ0B,KACRsuC,EAAerC,GAAe3tC,EAAOvS,GAazC,OAZIuiD,IAAiB5yB,IAEjBiO,GADYzmB,KACoB5E,EAAOmH,EAAU6oC,EAAcv5B,EAAWgO,GAUvEsrB;;;;;;;OAiBX,SAAS9b,GAAc9a,GACnB,IAAI9Y,EAAO8Z,GAA2BhB,GACtCsT,GAAsBpsB,EAj6Xd,GAi6X2BA,EAAM8Y,GAW7C,SAAS82B,GAAU92B,IA7qKnB,SAAS+2B,EAAa3jB,EAAax3B,GAC/B,IAGQo7C,EAHJC,EAAyC,IAAtB7jB,EAAYx3B,MACnCw3B,EAAYx3B,OAASA,EACjBq7C,GAAoB7jB,EAAY8jB,OAASlsB,KAEzCoI,EAAY8jB,MAAQ,IAAIjsB,SAAQ,SAAU54B,GAAK,OAAO2kD,EAAQ3kD,KAC9D+gC,EAAY+jB,WAAU,WAKlB,GAJwB,EAApB/jB,EAAYx3B,QACZw3B,EAAYx3B,QAAS,EACrBu3B,GAAgBC,IAEI,EAApBA,EAAYx3B,MAA8B,CAC1Cw3B,EAAYx3B,QAAS,EACrB,IAAIw7C,EAAgBhkB,EAAYgkB,cAC5BA,GACAA,EAAcC,eAGtBjkB,EAAY8jB,MAAQlsB,GACpBgsB,EAAM,UA8pKdD,CAFe7jB,GAAclS,GAA2BhB,IAv6X9C,GAy6XsB;;;;;;;;AAsCpC,SAASs3B,GAAYziD,GACjB,IAAIgS,EAAQ0B,KACR/E,EAAQgF,KACR5C,EAyHR,SAAS2xC,EAAkB/zC,EAAOqD,EAAOO,EAAWgV,EAASvO,GAGzD,IAAIge,EAAgBzkB,EAlkYJ,GAqkYZowC,EAAU3wC,EAAMglB,GAChBhlB,EA/kYO,IA+kYS03B,cAAwC,IACxD34B,EAAQgmB,GAAiBpoB,EAAOqD,EArlY3B,GAqlY0CO,EAAW,EAAmBgV,EAASvO,GACtF/F,EAAajB,EAAMglB,GAAiB0G,GAAiBilB,EAAS3wC,EAAO2wC,EAAS5xC,GAOlF,OANAqR,GAAYzT,EAAOqD,EAAO2wC,EAAS5xC,GACnCgb,GAAgB42B,EAAS3wC,GAGzBorB,GAAcprB,EAAOiB,GAEdlC;;;;;;;OAzIK2xC,CAAkB/zC,EAAOqD,EAAOhS,EAAO,KAAM,MACrD2O,EAAMwN,kBACNpL,EAAM8iB,OAAS,IAEnBzf,KAuCJ,SAASwuC,GAAW5iD,EAAOu3B,EAAYvrB,EAAOC,EAAMsb,EAASs7B,EAAYC,EAAgBnpB,GACrF,IAAI3nB,EAAQ0B,KACR/E,EAAQgF,KACRqjB,EAAgBh3B,EAp/XJ,GAq/XZ+Q,EAAQpC,EAAMwN,gBAzCtB,SAAS4mC,EAAwB/iD,EAAO2O,EAAOqD,EAAOulB,EAAYvrB,EAAOC,EAAMsb,EAASs7B,EAAYC,GAGhG,IAAIE,EAAcr0C,EAAMxC,OAEpB4E,EAAQgmB,GAAiBpoB,EAAOqD,EA/9X3B,GA+9X0ChS,EAAO,EAAmBunB,GAAW,KAAMzU,GAAYkwC,EAAaH,IACvHznB,GAAkBzsB,EAAOqD,EAAOjB,EAAO+B,GAAYkwC,EAAaF,IAChE7rC,GAAuBtI,EAAOoC,GAC9B,IAAImnB,EAAgBnnB,EAAM8iB,OAASiG,GAAY,GAAmB,EAAGvC,EAAYvrB,EAAOC,EAAM0C,EAAMwkB,kBAAmBxkB,EAAMykB,aAAc,KAAMzkB,EAAMD,QAASs0C,GAC5JC,EAAoB/rB,GAAYvoB,EAAO,KAAM,GAAe,EAAG,KAAM,MAOzE,OANAs0C,EAAkB7mC,cAAgBrL,EAAMqL,cACxC8b,EAAcrQ,KAAOo7B,EACC,OAAlBt0C,EAAMikB,UACNjkB,EAAMikB,QAAQ1mB,SAASyC,EAAOoC,GAC9BmnB,EAActF,QAAUjkB,EAAMikB,QAAQsF,cAAcnnB,IAEjDA,EA0BHgyC,CAAwB/iD,EAAO2O,EAAOqD,EAAOulB,EAAYvrB,EAAOC,EAAMsb,EAASs7B,EAAYC,GAC3Fn0C,EAAMR,KAAK6oB,GACf/iB,GAAyBlD,GAAO,GAChC,IAAI4xC,EAAU3wC,EAlgYH,IAkgYmB03B,cAAwC,IACtEtnB,GAAYzT,EAAOqD,EAAO2wC,EAAS5xC,GACnCgb,GAAgB42B,EAAS3wC,GACzBorB,GAAcprB,EAAOA,EAAMglB,GAAiB0G,GAAiBilB,EAAS3wC,EAAO2wC,EAAS5xC,IAClFE,GAAgBF,IAChBgoB,GAA0BpqB,EAAOqD,EAAOjB,GAEtB,MAAlB+xC,GACArpB,GAAyBznB,EAAOjB,EAAO4oB,GAU/C,SAASupB,GAAwBljD,GAC7B,IAAIgS,EAAQ0B,KACR/E,EAAQgF,KAOZ,GAJAM,GAF4B7B,GAAKzD,EAAMR,KAAMnO,IAEG,GAChDgS,EAAMhS,EAjhYU,IAuBD,GA0/X8B,GAGxCqU,KAED,GAD8E,IAAhC,EAAfrC,EAviY3B,IAwiYyB,CACzB,IAAIuN,EAAqB5Q,EAAM4Q,mBACJ,OAAvBA,GACA7H,GAAkB1F,EAAOuN,EAAoB,UAGhD,CACD,IAAID,EAAgB3Q,EAAM2Q,cACJ,OAAlBA,GACAzH,GAAyB7F,EAAOsN,EAAe,EAA4B,MAE/EvH,GAAwB/F,EAAO,IAW3C,SAASmxC,KACL,IAAInvC,EAAwBD,KACxBI,KACAC,KAMAH,GADAD,EAAwBA,EAAsBiC,QACE,GAMpD,IAHA,IAAIhD,EAAaS,KAAWM,EAAsBhU,OAC9CsxB,EAAYte,GAAyBC,GAElCqe,EAAYre,EAAWtW,OAthYJ,GAuhYtB8kC,GAAWxuB,EAAYqe,GA8B/B,SAAS8xB,GAAMz0C,EAAOqD,EAAOhS,EAAO5C,GAGhC,IAAI45B,EAAgBh3B,EA7lYJ,GA8lYZg3B,GAAiBroB,EAAMR,KAAKxR,SAC5BgS,EAAMR,KAAK6oB,GAAiB,KAC5BroB,EAAM2N,UAAU0a,GAAiB,MAErChlB,EAAMglB,GAAiB55B,EAY3B,SAASimD,GAAYrjD,GAEjB,OAAOoS,GAjmXX,SAASkxC,IACL,OAAOpwC,GAAiBC,OAAOW,aA+lXZwvC,GACOtjD;;;;;;;OAU9B,SAASujD,GAAkB5iD,EAAOoG,QAChB,IAAVA,IAAoBA,EAAQpM,EAAQ8F,YAAYuG,SACpD,IAAIgL,EAAQ0B,KAGZ,OAAa,MAAT1B,EACO7K,GAASxG,EAAOoG,GAEpBsW,GADKtJ,KACwB/B,EAAOjO,EAAkBpD,GAAQoG,GAOzE,SAASy8C,GAAkBC,GACvB,OAj7UJ,SAASC,EAAoB3yC,EAAO0yC,GAIhC,GAAyB,UAArBA,EACA,OAAO1yC,EAAMijB,QAEjB,GAAyB,UAArByvB,EACA,OAAO1yC,EAAMxC,OAEjB,IAAIyK,EAAQjI,EAAMiI,MAClB,GAAIA,EAGA,IAFA,IAAI2qC,EAAc3qC,EAAMrc,OACpBH,EAAI,EACDA,EAAImnD,GAAa,CACpB,IAAIvmD,EAAQ4b,EAAMxc,GAElB,GAAIid,GAA0Brc,GAC1B,MAEJ,GAAc,IAAVA,EAKAZ,GAAQ,OAEP,GAAqB,iBAAVY,EAGZ,IADAZ,IACOA,EAAImnD,GAAmC,iBAAb3qC,EAAMxc,IACnCA,QAGH,CAAA,GAAIY,IAAUqmD,EACf,OAAOzqC,EAAMxc,EAAI,GAGjBA,GAAQ,GAIpB,OAAO,KAu4UAknD,CAAoB3vC,KAA4B0vC,GAc3D,SAASG,KAEL,MAAM,IAAIviD,MAD+E;;;;;;;OA6B7F,SAASwiD,GAAWnkD,EAAUtC,EAAOqrB,GACjC,IAAIzW,EAAQ0B,KAQZ,OANIsrC,GAAehtC,EADA8C,KACqB1X,IAGpCw9B,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAUtC,EAAO4U,EArsYvD,IAqsYwEyW,GAAW,GAGvFo7B,GAMX,SAASC,GAAsCn1C,EAAOoC,EAAOiB,EAAO5U,EAAOuzB,GACvE,IACIozB,EAAWpzB,EAAe,QAAU,QAExCqK,GAAqBrsB,EAAOqD,EAHfjB,EAAMtE,OAGuBs3C,GAAWA,EAAU3mD;;;;;;;OAwCnE,SAAS4mD,GAAehkD,EAAO1B,EAAMukD,EAAYC,GAC7C,IAAI9wC,EAAQ0B,KACR/E,EAAQgF,KACRqjB,EApvYY,GAovYoBh3B,EAKhCyR,EAAWO,EAlwYJ,IAmwYP+G,EAAS/G,EAAMglB,GAAiBR,GAAcl4B,EAAMmT,EAr9W5D,SAASwyC,IACL,OAAO/wC,GAAiBC,OAAOiD,iBAo9WmC6tC,IAC9DlzC,EAAQpC,EAAMwN,gBAxCtB,SAAS+nC,EAA4BlkD,EAAO2O,EAAOqD,EAAO+G,EAAQza,EAAMukD,EAAYC,GAGhF,IAAIE,EAAcr0C,EAAMxC,OACpB6M,EAAQlG,GAAYkwC,EAAaH,GACjC9xC,EAAQgmB,GAAiBpoB,EAAOqD,EAtuY3B,GAsuY0ChS,EAAO,EAAiB1B,EAAM0a,GASjF,OARoBoiB,GAAkBzsB,EAAOqD,EAAOjB,EAAO+B,GAAYkwC,EAAaF,IAE1D,OAAtB/xC,EAAM2iB,aACN4pB,GAAqBvsC,EAAOA,EAAM2iB,aAEhB,OAAlB/kB,EAAMikB,SACNjkB,EAAMikB,QAAQuxB,aAAax1C,EAAOoC,GAE/BA,EA2BHmzC,CAA4BlkD,EAAO2O,EAAOqD,EAAO+G,EAAQza,EAAMukD,EAAYC,GAC3En0C,EAAMR,KAAK6oB,GACf/iB,GAAyBlD,GAAO,GAChC,IAAI2iB,EAAc3iB,EAAM2iB,YACJ,OAAhBA,GACA5a,GAAgBrH,EAAUsH,EAAQ2a,GAEtC,IAAIM,EAAUjjB,EAAMijB,QACJ,OAAZA,GACA6Q,GAAiBpzB,EAAUsH,EAAQib,GAEvC,IAAIzlB,EAASwC,EAAMxC,OACJ,OAAXA,GACAk2B,GAAiBhzB,EAAUsH,EAAQxK,GAEvC6T,GAAYzT,EAAOqD,EAAO+G,EAAQhI,GAIH,IAl2XnC,SAASqzC,IACL,OAAOlxC,GAAiBC,OAAOgD,kBAi2X3BiuC,IACAr4B,GAAgBhT,EAAQ/G,GAh2XhC,SAASqyC,IACLnxC,GAAiBC,OAAOgD,oBAi2XxBkuC,GACIpzC,GAAgBF,KAChBgoB,GAA0BpqB,EAAOqD,EAAOjB,GACxC+nB,GAAsBnqB,EAAOoC,EAAOiB,IAEjB,OAAnB8wC,GACArpB,GAAyBznB,EAAOjB,GAQxC,SAASuzC,KACL,IAAItwC,EAAwBD,KAExBI,KACAC,KAKAH,GADAD,EAAwBA,EAAsBiC,QACE,GAEpD,IAAIlF,EAAQiD,GAx3XhB,SAASuwC,IACLrxC,GAAiBC,OAAOgD,oBAy3XxBouC,GACA,IAAI51C,EAAQgF,KACRhF,EAAMwN,kBACNlF,GAAuBtI,EAAOqF,GAC1BlD,GAAmBkD,IACnBrF,EAAMikB,QAAQ4xB,WAAWxwC,IAGX,OAAlBjD,EAAMijB,SAnpRd,SAASywB,EAAc1zC,GACnB,OAAkD,IAA5B,GAAdA,EAAMhK,OAkpRgB09C,CAAc1zC,IACxC+yC,GAAsCn1C,EAAOoC,EAAO2C,KAAY3C,EAAMijB,SAAS,GAE9D,OAAjBjjB,EAAMxC,QA9nRd,SAASm2C,EAAc3zC,GACnB,OAAkD,IAA5B,GAAdA,EAAMhK;;;;;;;OA6nRe29C,CAAc3zC,IACvC+yC,GAAsCn1C,EAAOoC,EAAO2C,KAAY3C,EAAMxC,QAAQ,GAatF,SAASo2C,GAAU3kD,EAAO1B,EAAMukD,EAAYC,GACxCkB,GAAehkD,EAAO1B,EAAMukD,EAAYC,GACxCwB,KA4EJ,SAASM,GAAwB5kD,EAAO6iD,EAAYC,GAChD,IAAI9wC,EAAQ0B,KACR/E,EAAQgF,KACRqjB,EAAgBh3B,EAv5YJ,GA25YZ+Q,EAAQpC,EAAMwN;;;;;;;;AAtCtB,SAAS0oC,EAAqC7kD,EAAO2O,EAAOqD,EAAO6wC,EAAYC,GAE3E,IAAIE,EAAcr0C,EAAMxC,OACpB6M,EAAQlG,GAAYkwC,EAAaH,GACjC9xC,EAAQgmB,GAAiBpoB,EAAOqD,EAv4Y3B,GAu4Y0ChS,EAAO,EAA0B,eAAgBgZ,GAWpG,OARc,OAAVA,GACAskC,GAAqBvsC,EAAOiI,GAGhCoiB,GAAkBzsB,EAAOqD,EAAOjB,EADhB+B,GAAYkwC,EAAaF,IAEnB,OAAlBn0C,EAAMikB,SACNjkB,EAAMikB,QAAQuxB,aAAax1C,EAAOoC,GAE/BA,EAwBH8zC,CAAqC7kD,EAAO2O,EAAOqD,EAAO6wC,EAAYC,GACtEn0C,EAAMR,KAAK6oB,GACf/iB,GAAyBlD,GAAO,GAEhC,IAAIgI,EAAS/G,EAAMglB,GACfhlB,EA16YO,IA06YS03B,cAA2C,IAC/DtnB,GAAYzT,EAAOqD,EAAO+G,EAAQhI,GAClCgb,GAAgBhT,EAAQ/G,GACpBf,GAAgBF,KAChBgoB,GAA0BpqB,EAAOqD,EAAOjB,GACxC+nB,GAAsBnqB,EAAOoC,EAAOiB,IAElB,MAAlB8wC,GACArpB,GAAyBznB,EAAOjB,GAQxC,SAAS+zC,KACL,IAAI9wC,EAAwBD,KACxBpF,EAAQgF,KACRQ,KACAC,KAKAH,GADAD,EAAwBA,EAAsBiC,QACE,GAGhDtH,EAAMwN,kBACNlF,GAAuBtI,EAAOqF,GAC1BlD,GAAmBkD,IACnBrF,EAAMikB,QAAQ4xB,WAAWxwC,IAcrC,SAAS+wC,GAAmB/kD,EAAO6iD,EAAYC,GAC3C8B,GAAwB5kD,EAAO6iD,EAAYC,GAC3CgC;;;;;;;OAkBJ,SAASE,GAAoBC,EAAaj5C,EAAOC,GAC7C,IAAI+F,EAAQ0B,KACRM,EAAwBD,KAExBmxC,EAAgD,IAA/BlxC,EAAsB9R,KACvC8R,EAAsBiC,OACtBjC,EACAf,EAAajB,EAAMkzC,EAAellD,OAElCmlD,EAuDR,SAASC,EAAYnyC,EAAYoyC,EAAUJ,GACvC,IAAK,IAAIzoD,EAAI6oD,EA9/Ya,EA8/YuB7oD,EAAIyW,EAAWtW,OAAQH,IAAK,CACzE,IAAI8oD,EAAmBryC,EAAWzW,GAvjZ9B,GAujZwC8R,GAC5C,GAAIg3C,IAAqBL,EACrB,OAAOhyC,EAAWzW,GAEjB,KAAI8oD,EAAmBL,GAQxB,MANAxjB,GAAWxuB,EAAYzW,EArgZL,GA8gZ1B,OAAO,KAxEY4oD,CAAYnyC,EAAYD,GAAyBC,GAAagyC,GACjF,GAAIE,GAh+XR,SAASI,IACLryC,GAAiBC,OAAOe,UAAW,EAg+X/BqxC,GACA1vC,GAAUsvC,EAAcA,EAjgZpB,GAigZwCt9B,UAE3C,CAEDs9B,EAAexuB,GAAY3kB,EA6BnC,SAASwzC,EAAyBzrB,EAAW/tB,EAAOC,EAAMgK,GACtD,IAAItH,EAAQ+E,KAniZJ,GAqiZJ+xC,EAAkBxvC,EAAO4d,OAM7B,OAHIkG,GAAa0rB,EAAgB9oD,QAAwC,MAA9B8oD,EAAgB1rB,MACvD0rB,EAAgB1rB,GAAaD,GAAY,EAAkBC,EAAW,KAAM/tB,EAAOC,EAAM0C,EAAMwkB,kBAAmBxkB,EAAMykB,aAAc,KAAM,KAAMzkB,EAAMxC,SAErJs5C,EAAgB1rB,GAtCeyrB,CAAyBP,EAAaj5C,EAAOC,EAAMi5C,GAAiB,KAAM,GAAsB,KAAM,MACxI,IAAI9tB,EAAcjjB,KAAgBH,EAC9BA,GAAyBA,EAAsBiC,OACnDkhB,GAAuBguB,EAxgZnB,GAwgZwC/tB,EAAa6tB,EAAaE,GACtEtvC,GAAUsvC,EAAcA,EAzgZpB,GAygZwCt9B,MAShD,OAPI5U,IACIL,GAAeuyC,IAEfvkB,GAAWukB,EA9gZX,GA8gZgCA,EAAclyC,EAAYD,GAAyBC,IAEvFA,EAt+YW,IAs+YiB,GAEzBL,GAAeuyC,GAAgB,EAClC,EA0DR,SAASO,KACL,IAAI1zC,EAAQ0B,KACR/E,EAAQgF,KACRgyC,EAAW3zC,EA3kZN,GA4kZL1J,EAAU0J,EA1kZJ,GA2kZNY,GAAeZ,IACfqlB,GAAW1oB,EAAOqD,EAAO1J,GAE7BsvB,GAAYjpB,EAAOqD,EAAOrD,EAAMzC,SAAU5D,GAG1CmO,KACAxC,GAAyB0xC,GAAU,GAYvC,SAASC,KACL,OAAOlyC;;;;;;;OAaX,SAASmyC,GAAU19C,GAGf,QAASA,GAA2B,mBAAbA,EAAIm0C,KAK/B,SAASwJ,GAAa39C,GAGlB,QAASA,GAAgC,mBAAlBA,EAAI49C;;;;;;;OAwB/B,SAASC,GAAWC,EAAWC,EAAYC,EAAYC,QAChC,IAAfD,IAAyBA,GAAa,GAC1C,IAAIn0C,EAAQ0B,KACR/E,EAAQgF,KACR5C,EAAQgD,KAEZ,OADAsyC,GAAiB13C,EAAOqD,EAAOA,EAjpZpB,IAipZqCjB,EAAOk1C,EAAWC,EAAYC,EAAYC,GACnFJ,GAuBX,SAASM,GAAiCL,EAAWC,EAAYC,EAAYC,QACtD,IAAfD,IAAyBA,GAAa,GAC1C,IAAIp1C,EAAQgD,KACR/B,EAAQ0B,KACR/E,EAAQgF,KAIZ,OADA0yC,GAAiB13C,EAAOqD,EADT+sB,GADE3pB,GAAuBzG,EAAMR,MACG4C,EAAOiB,GACfjB,EAAOk1C,EAAWC,EAAYC,EAAYC,GAC5EE,GAgCX,SAASD,GAAiB13C,EAAOqD,EAAOP,EAAUV,EAAOk1C,EAAWC,EAAYC,EAAYC,QACrE,IAAfD,IAAyBA,GAAa,GAC1C,IAAII,EAAuBt1C,GAAgBF,GAEvCqxB,EADkBzzB,EAAMwN,kBACOxN,EAAMukB,UAAYvkB,EAAMukB,QAAU,KAIjEmP,EAAWxD,GAAY7sB,GAGvBw0C,GAAiB,EAErB,GAAmB,IAAfz1C,EAAM7O,KAA0B,CAChC,IAAI6W,EAAS9G,GAAiBlB,EAAOiB,GACjCk8B,EAAWkY,EAAsBA,EAAoBrtC,GAAUvN,GAC/DlL,EAAS4tC,EAAS5tC,QAAUyY,EAC5B0tC,EAAgBpkB,EAAS1lC,OACzB2lC,EAAoB8jB,EACpB,SAAUzmC,GAAU,OAAOymC,EAAoBt0C,GAAY6N,EAAO5O,EAAM/Q,SAASM,QACjFyQ,EAAM/Q,MAGV,GAAIwR,GAAqBC,GAAW,CAWhC,IAAIi1C,EAAmB,KAUvB,IAHKN,GAAuBG,IACxBG,EAnEhB,SAASC,EAAqBh4C,EAAOqD,EAAOi0C,EAAWW,GACnD,IAAIxkB,EAAWzzB,EAAMukB,QACrB,GAAgB,MAAZkP,EACA,IAAK,IAAI5lC,EAAI,EAAGA,EAAI4lC,EAASzlC,OAAS,EAAGH,GAAK,EAAG,CAC7C,IAAIqqD,EAAmBzkB,EAAS5lC,GAChC,GAAIqqD,IAAqBZ,GAAa7jB,EAAS5lC,EAAI,KAAOoqD,EAAU,CAIhE,IAAIvkB,EAAWrwB,EArsZjB,GAssZM80C,EAAwB1kB,EAAS5lC,EAAI,GACzC,OAAO6lC,EAAS1lC,OAASmqD,EAAwBzkB,EAASykB,GAAyB,KAOvD,iBAArBD,IACPrqD,GAAK,GAIjB,OAAO,KA4CwBmqD,CAAqBh4C,EAAOqD,EAAOi0C,EAAWl1C,EAAM/Q,QAElD,OAArB0mD,GAKqBA,EAAiBK,sBAAwBL,GAC/CM,qBAAuBd,EACtCQ,EAAiBK,qBAAuBb,EACxCM,GAAiB,MAEhB,CAIDN,EAAae,GAAal2C,EAAOiB,EAAOk0C,GAAY,GACpD,IAAIpgB,EAAYr0B,EAASy1C,OAAOhZ,EAAS5vC,MAAQgC,EAAQ2lD,EAAWC,GAEpE7jB,EAAS1kC,KAAKuoD,EAAYpgB,GAC1B1D,GAAYA,EAASzkC,KAAKsoD,EAAW3jB,EAAmBmkB,EAAeA,EAAgB,SAI3FP,EAAae,GAAal2C,EAAOiB,EAAOk0C,GAAY,GACpD5lD,EAAO6mD,iBAAiBlB,EAAWC,EAAYC,GAE/C9jB,EAAS1kC,KAAKuoD,GACd9jB,GAAYA,EAASzkC,KAAKsoD,EAAW3jB,EAAmBmkB,EAAeN,GAI/E,IACI5nD,EADAmO,EAAUqE,EAAMrE,QAEpB,GAAI85C,GAA8B,OAAZ95C,IAAqBnO,EAAQmO,EAAQu5C,IAAa,CACpE,IAAImB,EAAc7oD,EAAM5B,OACxB,GAAIyqD,EACA,IAAK,IAAI5qD,EAAI,EAAGA,EAAI4qD,EAAa5qD,GAAK,EAAG,CACrC,IAQI6qD,EALoBr1C,EAHZzT,EAAM/B,IAEC+B,EAAM/B,EAAI,IAMHupD,UAAUG,GAChCoB,EAAMjlB,EAAS1lC,OACnB0lC,EAAS1kC,KAAKuoD,EAAYmB,GAC1BjlB,GAAYA,EAASzkC,KAAKsoD,EAAWl1C,EAAM/Q,MAAOsnD,IAAOA,EAAM,MAK/E,SAASC,GAAiCv1C,EAAOk0C,EAAYzoD,GACzD,IAEI,OAAyB,IAAlByoD,EAAWzoD,GAEtB,MAAOG,GAEH,OADA0iB,GAAYtO,EAAOpU,IACZ,GAaf,SAASqpD,GAAal2C,EAAOiB,EAAOk0C,EAAYsB,GAG5C,OAAO,SAASC,EAA0ChqD,GAGtD,GAAIA,IAAMie,SACN,OAAOwqC,EAIX,IAAIxrC,EAA0B,EAAd3J,EAAMhK,MAClBuL,GAAyBvB,EAAM/Q,MAAOgS,GACtCA,EAE2C,IAA3B,GAAfA,EA71ZD,KA81ZAqsB,GAAc3jB,GAMlB,IAJA,IAAIsU,EAASu4B,GAAiCv1C,EAAOk0C,EAAYzoD,GAG7DiqD,EAAiBD,EAA0CT,qBACxDU,GAEH14B,EAASu4B,GAAiCv1C,EAAO01C,EAAgBjqD,IAAMuxB,EACvE04B,EAAiBA,EAAeV,qBAOpC,OALIQ,IAAqC,IAAXx4B,IAC1BvxB,EAAEkqD,iBAEFlqD,EAAEmqD,aAAc,GAEb54B;;;;;;;;;;;;;;OA+Bf,SAAS64B,GAAcC,GAEnB,YADc,IAAVA,IAAoBA,EAAQ,GAjqYpC,SAASC,EAAgBD,GAGrB,OAFmB50C,GAAiBC,OAAOW,aAI/C,SAASk0C,EAAYC,EAAcjwC,GAC/B,KAAOiwC,EAAe,GAGlBjwC,EAAcA,EAzuBC,IA0uBfiwC,IAEJ,OAAOjwC,EAVHgwC,CAAYF,EAAO50C,GAAiBC,OAAOW,eAzuBrC,GAy4ZHi0C,CAAgBD;;;;;;;OAkB3B,SAASI,GAA4Bn3C,EAAOo3C,GAGxC,IAFA,IAAIC,EAAyB,KACzBC,EA/6RR,SAASC,EAAsBv3C,GAC3B,IAAI2c,EAAY3c,EAAMiI,MACtB,GAAiB,MAAb0U,EAAmB,CACnB,IAAI66B,EAAqB76B,EAAUnqB,QAAQ,GAG3C,GAAiC,IAAP,EAArBglD,GACD,OAAO76B,EAAU66B,EAAqB,GAG9C,OAAO,KAq6RkBD,CAAsBv3C,GACtCvU,EAAI,EAAGA,EAAI2rD,EAAgBxrD,OAAQH,IAAK,CAC7C,IAAIiW,EAAY01C,EAAgB3rD,GAGhC,GAAkB,MAAdiW,GAMJ,GAA2B,OAAvB41C,EACA75B,GAA2Bzd,EAAO0B,GAAkC,GACpEgc,GAAyB45B,EAAoB51C,GAC7C,OAAOjW,OARP4rD,EAAyB5rD,EAWjC,OAAO4rD,EA2BX,SAASI,GAAgBL,GACrB,IAAIM,EAAgB/0C,KAl8ZS,IAVpB,GA68ZT,IAAK+0C,EAAc10B,WAQf,IALA,IACI20B,EAAkBD,EAAc10B,WAChCxpB,GAFqB49C,EAAkBA,EAAgBxrD,OAAS,EAEnC,MAC7BgsD,EAAQD,EAAgB3+C,QACxB6+C,EAAiBH,EAAczyC,MACT,OAAnB4yC,GAAyB,CAC5B,IAAIC,EAAYV,EAAkBD,GAA4BU,EAAgBT,GAAmB,EAC/E,OAAdU,IACIF,EAAME,GACNF,EAAME,GAAW/0B,eAAiB80B,EAGlCF,EAAgBG,GAAaD,EAEjCD,EAAME,GAAaD,GAEvBA,EAAiBA,EAAezrD,MAI5C,IAAI2rD,IAAkB,EACtB,SAASC,GAAmB3rD,GACxB0rD,GAAkB1rD,EAatB,SAAS4rD,GAAaz2C,EAAW02C,EAAejwC,QACtB,IAAlBiwC,IAA4BA,EAAgB,GAChD,IAAIj3C,EAAQ0B,KACR/E,EAAQgF,KACR2wB,EAAkBvN,GAAiBpoB,EAAOqD,EAv/ZrC,GAu/ZoDO,EAAW,EAAoB,KAAMyG,GAAS,MAExE,OAA/BsrB,EAAgBvQ,aAChBuQ,EAAgBvQ,WAAak1B,GAEjC70C,KAEK00C,IAEDzkB,GAAgB11B,EAAOqD,EAAOsyB,GAiCtC,SAAS4kB,GAAsBxpD,EAAUqgD,EAAIt3B,GAEzC,OADA0gC,GAAuBzpD,EAAU,GAAIqgD,EAAI,GAAIt3B,GACtCygC,GA8BX,SAASC,GAAuBzpD,EAAUogD,EAAQC,EAAIC,EAAQv3B,GAC1D,IAAIzW,EAAQ0B,KACR6tC,EAAoB1B,GAAe7tC,EAAO8tC,EAAQC,EAAIC,GAQ1D,OAPIuB,IAAsBnyB,IAGtBwL,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAU6hD,EAAmBvvC,EAlkanE,IAkkaoFyW,GAAW,GAInG0gC,GAgCX,SAASC,GAAuB1pD,EAAUogD,EAAQC,EAAIG,EAAIC,EAAIH,EAAQv3B,GAClE,IAAIzW,EAAQ0B,KACR6tC,EAAoBtB,GAAejuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIH,GAQlE,OAPIuB,IAAsBnyB,IAGtBwL,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAU6hD,EAAmBvvC,EA5manE,IA4maoFyW,GAAW,GAInG2gC,GAmCX,SAASC,GAAuB3pD,EAAUogD,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,EAAQv3B,GAC1E,IAAIzW,EAAQ0B,KACR6tC,EAAoBnB,GAAepuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAQ1E,OAPIuB,IAAsBnyB,IAGtBwL,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAU6hD,EAAmBvvC,EAzpanE,IAypaoFyW,GAAW,GAInG4gC,GAqCX,SAASC,GAAuB5pD,EAAUogD,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,EAAQv3B,GAClF,IAAIzW,EAAQ0B,KACR6tC,EAAoBhB,GAAevuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAQlF,OAPIuB,IAAsBnyB,IAGtBwL,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAU6hD,EAAmBvvC,EAxsanE,IAwsaoFyW,GAAW,GAInG6gC,GAuCX,SAASC,GAAuB7pD,EAAUogD,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,EAAQv3B,GAC1F,IAAIzW,EAAQ0B,KACR6tC,EAAoBb,GAAe1uC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAQ1F,OAPIuB,IAAsBnyB,IAGtBwL,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAU6hD,EAAmBvvC,EAzvanE,IAyvaoFyW,GAAW,GAInG8gC,GAyCX,SAASC,GAAuB9pD,EAAUogD,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,EAAQv3B,GAClG,IAAIzW,EAAQ0B,KACR6tC,EAAoBV,GAAe7uC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAQlG,OAPIuB,IAAsBnyB,IAGtBwL,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAU6hD,EAAmBvvC,EA5yanE,IA4yaoFyW,GAAW,GAInG+gC,GA2CX,SAASC,GAAuB/pD,EAAUogD,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,EAAQv3B,GAC1G,IAAIzW,EAAQ0B,KACR6tC,EAAoBP,GAAehvC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAQ1G,OAPIuB,IAAsBnyB,IAGtBwL,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAU6hD,EAAmBvvC,EAj2anE,IAi2aoFyW,GAAW,GAInGghC,GA6CX,SAASC,GAAuBhqD,EAAUogD,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,EAAQv3B,GAClH,IAAIzW,EAAQ0B,KACR6tC,EAAoBJ,GAAenvC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAQlH,OAPIuB,IAAsBnyB,IAGtBwL,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAU6hD,EAAmBvvC,EAx5anE,IAw5aoFyW,GAAW,GAInGihC,GAgCX,SAASC,GAAuBjqD,EAAUD,EAAQgpB,GAC9C,IAAIzW,EAAQ0B,KACR6tC,EAAoB5B,GAAe3tC,EAAOvS,GAa9C,OAZI8hD,IAAsBnyB,IAGtBwL,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAU6hD,EAAmBvvC,EAl8anE,IAk8aoFyW,GAAW,GASnGkhC;;;;;;;OAgBX,IACIC,GAAgB,GA+VpB,SAASC,GAAex0C,EAAOy0C,EAAa9pD,EAAO+pD,EAAWC,GAU1D,IATA,IAAIC,EAAkB50C,EAAMrV,EAAQ,GAChCkqD,EAAwB,OAAhBJ,EACR54B,EAAS64B,EAAY75B,GAAqB+5B,GAAmB35B,GAAqB25B,GAClFE,GAAiB,EAMH,IAAXj5B,KAAoC,IAAnBi5B,GAA4BD,IAAQ,CAExD,IACIE,EAAsB/0C,EAAM6b,EAAS,GACrCm5B,GAFwBh1C,EAAM6b,GAEQ44B,KACtCK,GAAiB,EACjB90C,EAAM6b,EAAS,GAAK64B,EAAYt5B,GAA8B25B,GAC1D/5B,GAA8B+5B,IAEtCl5B,EAAS64B,EAAY75B,GAAqBk6B,GACtC95B,GAAqB85B,GAEzBD,IAEA90C,EAAMrV,EAAQ,GAAK+pD,EAAY15B,GAA8B45B,GACzDx5B,GAA8Bw5B,IAqB1C,SAASI,GAAeC,EAAmBR,GAGvC,OAA0B,OAAtBQ,GAEe,MAAfR,IAECluD,MAAMqH,QAAQqnD,GAAqBA,EAAkB,GAAKA,KACvDR,MAICluD,MAAMqH,QAAQqnD,IAA6C,iBAAhBR,IAGzCn/C,GAAqB2/C,EAAmBR,IAC3C;;;;;;;OAaZ,IAAIS,GAAc,CACdC,QAAS,EACTppD,IAAK,EACLqpD,OAAQ,EACRrtD,MAAO,EACPstD,SAAU,GAMd,SAASC,GAAiBziD,GACtB,OAAOA,EAAK1E,UAAU+mD,GAAYnpD,IAAKmpD,GAAYE,QAMvD,SAASG,GAAmB1iD,GACxB,OAAOA,EAAK1E,UAAU+mD,GAAYntD,MAAOmtD,GAAYG,UAkCzD,SAASG,GAAmB3iD,EAAMlI,GAC9B,IAAIgL,EAAMu/C,GAAYC,QACtB,OAAIx/C,IAAQhL,GACA,GAEZA,EAAQuqD,GAAYE,OAmFxB,SAASK,EAAkB5iD,EAAM6iD,EAAYhsC,GACzC,KAAOgsC,EAAahsC,GAAY7W,EAAKyR,WAAWoxC,GAAc,IAC1DA,IAEJ,OAAOA,EAvFsBD,CAAkB5iD,EAAMqiD,GAAYnpD,IAAMpB,EAAOgL,GACvEggD,GAAkB9iD,EAAMlI,EAAOgL,IAmC1C,SAASigD,GAAe/iD,EAAM6iD,GAC1B,IAAI//C,EAAMu/C,GAAYC,QAClBxqD,EAAQuqD,GAAYnpD,IAAM4pD,GAAkB9iD,EAAM6iD,EAAY//C,GAClE,OAAIA,IAAQhL,GAEA,GAEZA,EAAQuqD,GAAYE,OAsDxB,SAASS,EAAgBhjD,EAAM6iD,EAAYhsC,GAEvC,IADA,IAAIosC,EACGJ,EAAahsC,IACwB,MAAtCosC,EAAKjjD,EAAKyR,WAAWoxC,KAAyC,KAAPI,KAC7C,GAANA,IAA8B,MAAqB,GAANA,IAA8B,KACjFJ,IAEJ,OAAOA,EA7DsBG,CAAgBhjD,EAAMlI,EAAOgL,GAC1DhL,EAAQorD,GAAiBljD,EAAMlI,EAAOgL,GACtChL,EAAQuqD,GAAYntD,MAAQ4tD,GAAkB9iD,EAAMlI,EAAOgL,GAC3DhL,EAAQuqD,GAAYG,SAsFxB,SAASW,EAAkBnjD,EAAM6iD,EAAYhsC,GAMzC,IALA,IAAIusC,GAAO,EACPC,GAAO,EACPC,GAAO,EACPhvD,EAAIuuD,EACJU,EAAcjvD,EACXA,EAAIuiB,GAAU,CACjB,IAAIosC,EAAKjjD,EAAKyR,WAAWnd,KACzB,GAAW,KAAP2uD,EACA,OAAOM,EAEK,KAAPN,GAAuC,KAAPA,EACrCM,EAAcjvD,EAAIkvD,GAAkBxjD,EAAMijD,EAAI3uD,EAAGuiB,GAE5CgsC,IACLvuD,EAAI,GACI,KAARgvD,GACQ,KAARD,GAA8B,KAARD,GAA6B,KAAPH,EAC5CM,EAAcjvD,EAAIkvD,GAAkBxjD,EAAM,GAAsB1L,EAAGuiB,GAE9DosC,EAAK,KAEVM,EAAcjvD,GAElBgvD,EAAMD,EACNA,EAAMD,EACNA,GAAY,GAANH,EAEV,OAAOM,EAlHwBJ,CAAkBnjD,EAAMlI,EAAOgL,GACvDogD,GAAiBljD,EAAMlI,EAAOgL,IAMzC,SAAS2gD,GAAiBzjD,GACtBqiD,GAAYnpD,IAAM,EAClBmpD,GAAYE,OAAS,EACrBF,GAAYntD,MAAQ,EACpBmtD,GAAYG,SAAW,EACvBH,GAAYC,QAAUtiD,EAAKvL,OAW/B,SAASquD,GAAkB9iD,EAAM6iD,EAAYhsC,GACzC,KAAOgsC,EAAahsC,GAAY7W,EAAKyR,WAAWoxC,IAAe,IAC3DA,IAEJ,OAAOA,EAyCX,SAASK,GAAiBljD,EAAM6iD,EAAYhsC,EAAU6sC,GAQlD,OAPAb,EAAaC,GAAkB9iD,EAAM6iD,EAAYhsC,IAChCA,GAIbgsC,IAEGA,EAiDX,SAASW,GAAkBxjD,EAAM2jD,EAAed,EAAYhsC,GAGxD,IAFA,IAAIusC,GAAO,EACPtrD,EAAQ+qD,EACL/qD,EAAQ+e,GAAU,CACrB,IAAIosC,EAAKjjD,EAAKyR,WAAW3Z,KACzB,GAAImrD,GAAMU,GAAyB,KAARP,EACvB,OAAOtrD,EAKPsrD,EAHM,IAANH,GAAqC,KAARG,EAGvB,EAGAH,EAGd,MACI,IAAI9pD;;;;;;;;AAgCZ,SAASyqD,GAAiBrjC,IA52a1B,SAASsjC,EAAyBtjC,GAC9BvV,GAAiBC,OAAOkD,iBAAmBoS,EA42a3CsjC,CAAyBtjC,GAuB7B,SAASujC,GAAYthC,EAAMttB,EAAO4iD,GAE9B,OADAiM,GAAqBvhC,EAAMttB,EAAO4iD,GAAQ,GACnCgM,GAiBX,SAASE,GAAYr/B,EAAWzvB,GAE5B,OADA6uD,GAAqBp/B,EAAWzvB,EAAO,MAAM,GACtC8uD,GAqBX,SAASC,GAAW59C,GAChB69C,GAAgBC,GAAuBC,GAAmB/9C,GAAQ,GAWtE,SAAS+9C,GAAkB5hD,EAAexC,GACtC,IAAK,IAAI1L,EA3Rb,SAAS+vD,EAAWrkD,GAEhB,OADAyjD,GAAiBzjD,GACV+iD,GAAe/iD,EAAM8iD,GAAkB9iD,EAAM,EAAGqiD,GAAYC,UAyRtD+B,CAAWrkD,GAAO1L,GAAK,EAAGA,EAAIyuD,GAAe/iD,EAAM1L,GAC5D6vD,GAAsB3hD,EAAeigD,GAAiBziD,GAAO0iD,GAAmB1iD,IAqBxF,SAASskD,GAAWx4B,GAChBo4B,GAAgB3hD,GAAkBgiD,GAAmBz4B,GAAS,GAWlE,SAASy4B,GAAkB/hD,EAAexC,GACtC,IAAK,IAAI1L,EAvWb,SAASkwD,EAAexkD,GAEpB,OADAyjD,GAAiBzjD,GACV2iD,GAAmB3iD,EAAM8iD,GAAkB9iD,EAAM,EAAGqiD,GAAYC,UAqW1DkC,CAAexkD,GAAO1L,GAAK,EAAGA,EAAIquD,GAAmB3iD,EAAM1L,GACpEiO,GAAiBC,EAAeigD,GAAiBziD,IAAO,GAWhE,SAAS+jD,GAAqBvhC,EAAMttB,EAAOuvD,EAAmBh8B,GAC1D,IAAI3e,EAAQ0B,KACR/E,EAAQgF,KAIRiB,EAAeG,GAAsB,GAIzC,GAHIpG,EAAMokB,iBACN65B,GAAuBj+C,EAAO+b,EAAM9V,EAAc+b,GAElDvzB,IAAUgyB,IAAa4vB,GAAehtC,EAAO4C,EAAcxX,GAAQ,CAGnE,IAAIyvD,OAAiB,EACI,MAArBF,IACIE,EAn/ahB,SAASC,IAGL,IAAI35C,EAASD,GAAiBC,OAC9B,OAAkB,OAAXA,EAAkB,KAAOA,EAAOkD,iBA++aVy2C,MACjBH,EAAoBE,GAI5BE,GAAcp+C,EADFA,EAAMR,KAAKuI,KArycX,IAsycgB1E,EAAOA,EA/yc5B,IA+yc6C0Y,EAAM1Y,EAAM4C,EAAe,GA2mBvF,SAASo4C,EAAmC5vD,EAAOuvD,GAc/C,OAba,MAATvvD,IAGkC,mBAAtBuvD,EAEZvvD,EAAQuvD,EAAkBvvD,GAEQ,iBAAtBuvD,EACZvvD,GAAgBuvD,EAEM,iBAAVvvD,IACZA,EAAQ4F,EAAUqe,GAAgBjkB,MAE/BA,EAznBiF4vD,CAAmC5vD,EAAOuvD,GAAoBh8B,EAAc/b,IAexK,SAASw3C,GAAgB3hD,EAAkBwiD,EAAc7vD,EAAOuzB,GAC5D,IAAIhiB,EAAQgF,KACRiB,EAAeG,GAAsB,GACrCpG,EAAMokB,iBACN65B,GAAuBj+C,EAAO,KAAMiG,EAAc+b,GAEtD,IAAI3e,EAAQ0B,KACZ,GAAItW,IAAUgyB,IAAa4vB,GAAehtC,EAAO4C,EAAcxX,GAAQ,CAGnE,IAAI2T,EAAQpC,EAAMR,KAAKuI,KA/zcX,IAg0cZ,GAAIw2C,GAAsBn8C,EAAO4f,KAAkBw8B,GAAiBx+C,EAAOiG,GAAe,CAIlF,IAUAw4C,EAAez8B,EAAe5f,EAAMijB,QAAUjjB,EAAMxC,OAGnC,OAAjB6+C,IAEAhwD,EAAQqG,EAAuB2pD,EAAchwD,GAAgB,KAIjE0mD,GAAsCn1C,EAAOoC,EAAOiB,EAAO5U,EAAOuzB,QA4X9E,SAAS08B,EAAiB1+C,EAAOoC,EAAOiB,EAAOP,EAAU67C,EAAkBC,EAAkB58B,EAAc/b,GACnG04C,IAAqBl+B,KAErBk+B,EAAmB1D,IAMvB,IAJA,IAAI4D,EAAW,EACXlkB,EAAW,EACXmkB,EAAS,EAAIH,EAAiB3wD,OAAS2wD,EAAiB,GAAK,KAC7DzW,EAAS,EAAI0W,EAAiB5wD,OAAS4wD,EAAiB,GAAK,KAC/C,OAAXE,GAA8B,OAAX5W,GAAiB,CAGvC,IAAI/6B,EAAW0xC,EAAWF,EAAiB3wD,OAAS2wD,EAAiBE,EAAW,QAAK7rD,EACjF+iC,EAAW4E,EAAWikB,EAAiB5wD,OAAS4wD,EAAiBjkB,EAAW,QAAK3nC,EACjF+rD,EAAS,KACTtuB,OAAWz9B,EACX8rD,IAAW5W,GAEX2W,GAAY,EACZlkB,GAAY,EACRxtB,IAAa4oB,IACbgpB,EAAS7W,EACTzX,EAAWsF,IAGC,OAAXmS,GAA8B,OAAX4W,GAAmBA,EAAS5W,GAKpD2W,GAAY,EACZE,EAASD,IAOTnkB,GAAY,EACZokB,EAAS7W,EACTzX,EAAWsF,GAEA,OAAXgpB,GACAX,GAAcp+C,EAAOoC,EAAOiB,EAAOP,EAAUi8C,EAAQtuB,EAAUzO,EAAc/b,GAEjF64C,EAASD,EAAWF,EAAiB3wD,OAAS2wD,EAAiBE,GAAY,KAC3E3W,EAASvN,EAAWikB,EAAiB5wD,OAAS4wD,EAAiBjkB,GAAY,MAvavE+jB,CAAiB1+C,EAAOoC,EAAOiB,EAAOA,EAn2cnC,IAm2coDA,EAAM4C,EAAe,GAAI5C,EAAM4C,EAAe,GA8TjH,SAAS+4C,EAAuBljD,EAAkBwiD,EAAc7vD,GAC5D,GAAa,MAATA,GAAuD,KAAVA,EAC7C,OAAOwsD,GACX,IAAIgE,EAAqB,GACrBC,EAAiBxsC,GAAgBjkB,GACrC,GAAIxB,MAAMqH,QAAQ4qD,GACd,IAAK,IAAIrxD,EAAI,EAAGA,EAAIqxD,EAAelxD,OAAQH,IACvCiO,EAAiBmjD,EAAoBC,EAAerxD,IAAI,QAG3D,GAA8B,iBAAnBqxD,EACZ,IAAK,IAAIzsD,KAAOysD,EACRA,EAAe/xD,eAAesF,IAC9BqJ,EAAiBmjD,EAAoBxsD,EAAKysD,EAAezsD,QAIlC,iBAAnBysD,GACZZ,EAAaW,EAAoBC,GAMrC,OAAOD,EAtV2GD,CAAuBljD,EAAkBwiD,EAAc7vD,GAAQuzB,EAAc/b,IAUnM,SAASu4C,GAAiBx+C,EAAOiG,GAE7B,OAAOA,GAAgBjG,EAAMkkB,kBAWjC,SAAS+5B,GAAuBj+C,EAAOm7C,EAAal1C,EAAc+b,GAE9D,IAAItb,EAAQ1G,EAAMR,KAClB,GAAgC,OAA5BkH,EAAMT,EAAe,GAAa,CAMlC,IAAI7D,EAAQsE,EAAMqB,KA13cN,IA23cRo3C,EAAiBX,GAAiBx+C,EAAOiG,GACzCs4C,GAAsBn8C,EAAO4f,IAAiC,OAAhBm5B,IAAyBgE,IAKvEhE,GAAc,GAElBA,EAkBR,SAASiE,EAAuB14C,EAAOtE,EAAOi9C,EAAYr9B,GACtD,IAAIs9B,EAAmB74C,GAAuBC,GAC1C64C,EAAWv9B,EAAe5f,EAAMygB,gBAAkBzgB,EAAM0gB,eAC5D,GAAyB,OAArBw8B,EAKyG,KAA9Dt9B,EAAe5f,EAAMggB,cAAgBhgB,EAAMigB,iBAMlFg9B,EAAaG,GADbH,EAAaI,GAA6B,KAAM/4C,EAAOtE,EAAOi9C,EAAYr9B,GACxB5f,EAAMiI,MAAO2X,GAE/Du9B,EAAW,UAGd,CAGD,IAAI16B,EAAuBziB,EAAMyiB,qBAEjC,IADuE,IAA1BA,GAA+Bne,EAAMme,KAA0By6B,EAIxG,GAFAD,EACII,GAA6BH,EAAkB54C,EAAOtE,EAAOi9C,EAAYr9B,GAC5D,OAAbu9B,EAAmB,CAOnB,IAAIG,EAuCpB,SAASC,EAA2Bj5C,EAAOtE,EAAO4f,GAC9C,IAAIE,EAAWF,EAAe5f,EAAMggB,cAAgBhgB,EAAMigB,cAC1D,GAAuC,IAAnCV,GAAqBO,GAIzB,OAAOxb,EAAM6a,GAAqBW,IA7CGy9B,CAA2Bj5C,EAAOtE,EAAO4f,QACvChvB,IAAvB0sD,GAAoCzyD,MAAMqH,QAAQorD,IAkGtE,SAASE,EAA2Bl5C,EAAOtE,EAAO4f,EAAcm5B,GAI5Dz0C,EAAM6a,GAHSS,EAAe5f,EAAMggB,cAAgBhgB,EAAMigB,gBAGlB84B,EA/FxByE,CAA2Bl5C,EAAOtE,EAAO4f,EAFzC09B,EACIF,GAFJE,EAAqBD,GAA6B,KAAM/4C,EAAOtE,EAAOs9C,EAAmB,GAAkC19B,GAE1E5f,EAAMiI,MAAO2X,SAUlEu9B,EAkGhB,SAASM,EAAgBn5C,EAAOtE,EAAO4f,GAOnC,IANA,IAAIu9B,OAAWvsD,EACXwV,EAAepG,EAAMoG,aAKhB3a,EAAI,EAAIuU,EAAMyiB,qBAAsBh3B,EAAI2a,EAAc3a,IAE3D0xD,EAAWC,GAAyBD,EADxB74C,EAAM7Y,GAAG+P,UACgCokB,GAEzD,OAAOw9B,GAAyBD,EAAUn9C,EAAMiI,MAAO2X,GA7GhC69B,CAAgBn5C,EAAOtE,EAAO4f,GAOrD,YAHiBhvB,IAAbusD,IACAv9B,EAAgB5f,EAAMygB,gBAAkB08B,EAAan9C,EAAM0gB,eAAiBy8B,GAEzEF,EA5EWD,CAAuB14C,EAAOtE,EAAO+4C,EAAan5B,GAhvBxE,SAAS89B,EAAsBp5C,EAAOtE,EAAO29C,EAAuB1uD,EAAO2uD,EAAe3E,GAEtF,IAAI4E,EAAY5E,EAAiBj5C,EAAMggB,cAAgBhgB,EAAMigB,cACzD69B,EAAW3+B,GAAqB0+B,GAChCE,EAAWx+B,GAAqBs+B,GACpCv5C,EAAMrV,GAAS0uD,EACf,IACI5E,EADAiF,GAAyB,EAgB7B,GAdInzD,MAAMqH,QAAQyrD,IAKM,QAFpB5E,EAD0B4E,EACQ,KAG9B/jD,GAJsB+jD,EAIoB5E,GAAe,KAEzDiF,GAAyB,GAI7BjF,EAAc4E,EAEdC,EAMA,GAHuC,IAAbG,EAGD,CAErB,IAAIE,EAAe9+B,GAAqB7a,EAAMw5C,EAAW,IACzDx5C,EAAMrV,EAAQ,GAAKgwB,GAAgBg/B,EAAcH,GAG5B,IAAjBG,IAEA35C,EAAM25C,EAAe,GACjBz+B,GAAqBlb,EAAM25C,EAAe,GAAIhvD,IAGtDqV,EAAMw5C,EAAW,GAh4S7B,SAASI,EAAqB9+B,EAAetpB,GAGzC,OAAyB,OAAhBspB,EACJtpB,GAAY,GA43SaooD,CAAqB55C,EAAMw5C,EAAW,GAAI7uD,QAGhEqV,EAAMrV,EAAQ,GAAKgwB,GAAgB6+B,EAAU,GAG5B,IAAbA,IAEAx5C,EAAMw5C,EAAW,GAAKt+B,GAAqBlb,EAAMw5C,EAAW,GAAI7uD,IAGpE6uD,EAAW7uD,OAMfqV,EAAMrV,EAAQ,GAAKgwB,GAAgB8+B,EAAU,GAG5B,IAAbD,EACAA,EAAW7uD,EAIXqV,EAAMy5C,EAAW,GAAKv+B,GAAqBlb,EAAMy5C,EAAW,GAAI9uD,GAEpE8uD,EAAW9uD,EAIX+uD,IACA15C,EAAMrV,EAAQ,GAAKqwB,GAA8Bhb,EAAMrV,EAAQ,KAEnE6pD,GAAex0C,EAAOy0C,EAAa9pD,GAAO,GAC1C6pD,GAAex0C,EAAOy0C,EAAa9pD,GAAO,GAoB9C,SAASkvD,EAA+Bn+C,EAAO+4C,EAAaz0C,EAAOrV,EAAOgqD,GACtE,IAAIkE,EAAWlE,EAAiBj5C,EAAMygB,gBAAkBzgB,EAAM0gB,eAC9C,MAAZy8B,GAA6D,iBAAfpE,GAC9Cn/C,GAAqBujD,EAAUpE,IAAgB,IAE/Cz0C,EAAMrV,EAAQ,GAAKywB,GAA8Bpb,EAAMrV,EAAQ,KAxBnEkvD,CAA+Bn+C,EAAO+4C,EAAaz0C,EAAOrV,EAAOgqD,GACjE4E,EAAY5+B,GAAgB6+B,EAAUC,GAClC9E,EACAj5C,EAAMggB,cAAgB69B,EAGtB79C,EAAMigB,cAAgB49B,EA+pBtBH,CAAsBp5C,EAAOtE,EAAO+4C,EAAal1C,EAAck5C,EAAgBn9B,IA+LvF,SAASy9B,GAA6BH,EAAkB54C,EAAOtE,EAAOi9C,EAAYr9B,GAG9E,IAAIw+B,EAAmB,KACnBh4C,EAAepG,EAAMoG,aACrBqc,EAAuBziB,EAAMyiB,qBAOjC,KAN8B,IAA1BA,EACAA,EAAuBziB,EAAMmG,eAG7Bsc,IAEGA,EAAuBrc,IAG1B62C,EAAaG,GAAyBH,GAFtCmB,EAAmB95C,EAAMme,IAE0CjnB,UAAWokB,GAC1Ew+B,IAAqBlB,IAEzBz6B,IAQJ,OANyB,OAArBy6B,IAIAl9C,EAAMyiB,qBAAuBA,GAE1Bw6B,EASX,SAASG,GAAyBH,EAAYh1C,EAAO2X,GACjD,IAAIy+B,EAAgBz+B,EAAe,EAAkB,EACjD0+B,GAAiB,EACrB,GAAc,OAAVr2C,EACA,IAAK,IAAIxc,EAAI,EAAGA,EAAIwc,EAAMrc,OAAQH,IAAK,CACnC,IAAIsN,EAAOkP,EAAMxc,GACG,iBAATsN,EACPulD,EAAgBvlD,EAGZulD,IAAkBD,IACbxzD,MAAMqH,QAAQ+qD,KACfA,OAA4BrsD,IAAfqsD,EAA2B,GAAK,CAAC,GAAIA,IAEtDvjD,GAAiBujD,EAAYlkD,IAAM6mB,GAAsB3X,IAAQxc,KAKjF,YAAsBmF,IAAfqsD,EAA2B,KAAOA,EAkE7C,SAAS3B,GAAsB3hD,EAAetJ,EAAKhE,GAC3C0tB,GAA2B1pB,KAC3BhE,EAAQwsB,GAAgBxsB,IAE5BqN,GAAiBC,EAAetJ,EAAKhE,GAsFzC,SAAS2vD,GAAcp+C,EAAOoC,EAAOiB,EAAOP,EAAUiZ,EAAMttB,EAAOuzB,EAAc/b,GAC7E,GAAmB,IAAf7D,EAAM7O,KAAV,CAKA,IAAImT,EAAQ1G,EAAMR,KACdmhD,EAASj6C,EAAMT,EAAe,GAI7B26C,GAHqB/+B,GAA8B8+B,GACpDE,GAAiBn6C,EAAOtE,EAAOiB,EAAO0Y,EAAM4F,GAAqBg/B,GAAS3+B,QAC1EhvB,KAGK4tD,GAAsBnyD,IAEnBgzB,GAA8Bk/B,KAE9BlyD,EAAQoyD,GAAiBn6C,EAAO,KAAMrD,EAAO0Y,EAAM9V,EAAc+b,IA3jOjF,SAAS8+B,EAAah+C,EAAUkf,EAAcoP,EAAOrV,EAAMttB,GACvD,IAAIsyD,EAAel+C,GAAqBC,GACxC,GAAIkf,EAEKvzB,EAWGsyD,EACAj+C,EAASk+C,SAAS5vB,EAAOrV,GAIzBqV,EAAM6vB,UAAUxd,IAAI1nB,GAdpBglC,EACAj+C,EAASo+C,YAAY9vB,EAAOrV,GAG5BqV,EAAM6vB,UAAUznB,OAAOzd,OAc9B,CAGD,IAAI3jB,GAA8B,GAAtB2jB,EAAKnnB,QAAQ,UAAa5B,EAAY,EACrC,MAATvE,EAEIsyD,EACAj+C,EAASq+C,YAAY/vB,EAAOrV,EAAM3jB,GAGlCg5B,EAAM4E,MAAMorB,eAAerlC,GAK3BglC,EACAj+C,EAASu+C,SAASjwB,EAAOrV,EAAMttB,EAAO2J,GAItCg5B,EAAM4E,MAAMnrB,YAAYkR,EAAMttB,IAmhOtCqyD,CAAah+C,EAAUkf,EADX5e,GAAiB2E,KAAoB1E,GACL0Y,EAAMttB,KAkC1D,SAASoyD,GAAiBn6C,EAAOtE,EAAOiB,EAAO0Y,EAAM1qB,EAAO2wB,GAQxD,IAFA,IAAIs/B,EAA4B,OAAVl/C,EAClB3T,OAAQuE,EACL3B,EAAQ,GAAG,CACd,IAAIkwD,EAAS76C,EAAMrV,GACfmwD,EAAkBv0D,MAAMqH,QAAQitD,GAEhC9uD,EAAM+uD,EAAkBD,EAAO,GAAKA,EACpCE,EAAuB,OAARhvD,EACfivD,EAAoBr+C,EAAMhS,EAAQ,GAClCqwD,IAAsBjhC,KAQtBihC,EAAoBD,EAAexG,QAAgBjoD,GAEvD,IAAI2uD,EAAeF,EAAenlD,GAAiBolD,EAAmB3lC,GAClEtpB,IAAQspB,EAAO2lC,OAAoB1uD,EAIvC,GAHIwuD,IAAoBZ,GAAsBe,KAC1CA,EAAerlD,GAAiBilD,EAAQxlC,IAExC6kC,GAAsBe,KACtBlzD,EAAQkzD,EACJL,GACA,OAAO7yD,EAGf,IAAIkyD,EAASj6C,EAAMrV,EAAQ,GAC3BA,EAAQiwD,EAAkB//B,GAAqBo/B,GAAUh/B,GAAqBg/B,GAElF,GAAc,OAAVv+C,EAAgB,CAGhB,IAAIm9C,EAAWv9B,EAAe5f,EAAMygB,gBAAkBzgB,EAAM0gB,eAC5C,MAAZy8B,IACA9wD,EAAQ6N,GAAiBijD,EAAUxjC,IAG3C,OAAOttB,EAQX,SAASmyD,GAAsBnyD,GAK3B,YAAiBuE,IAAVvE,EAkCX,SAAS8vD,GAAsBn8C,EAAO4f,GAClC,OAA4F,IAApF5f,EAAMhK,OAAS4pB,EAAe,GAAyB;;;;;;;OAkBnE,SAAS4/B,GAAOvwD,EAAO5C,QACL,IAAVA,IAAoBA,EAAQ,IAChC,IAAI4U,EAAQ0B,KACR/E,EAAQgF,KACRqjB,EAAgBh3B,EAj8dJ,GAq8dZ+Q,EAAQpC,EAAMwN,gBACd4a,GAAiBpoB,EAAOqD,EAp9dnB,GAo9dkChS,EAAO,EAAiB,KAAM,MACrE2O,EAAMR,KAAK6oB,GACXw5B,EAAax+C,EAAMglB,GAAiBwJ,GAAepjC,EAAO4U,EAj9dnD,KAk9dXoQ,GAAYzT,EAAOqD,EAAOw+C,EAAYz/C,GAEtCkD,GAAyBlD,GAAO;;;;;;;OA8BpC,SAAS0/C,GAAkB1Q,GAEvB,OADA2Q,GAAmB,GAAI3Q,EAAI,IACpB0Q,GAqBX,SAASC,GAAmB5Q,EAAQC,EAAIC,GACpC,IAAIhuC,EAAQ0B,KACRsuC,EAAenC,GAAe7tC,EAAO8tC,EAAQC,EAAIC,GAIrD,OAHIgC,IAAiB5yB,IACjB+P,GAAoBntB,EAAO0E,KAAoBsrC,GAE5C0O,GAqBX,SAASC,GAAmB7Q,EAAQC,EAAIG,EAAIC,EAAIH,GAC5C,IAAIhuC,EAAQ0B,KACRsuC,EAAe/B,GAAejuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIH,GAI7D,OAHIgC,IAAiB5yB,IACjB+P,GAAoBntB,EAAO0E,KAAoBsrC,GAE5C2O,GAsBX,SAASC,GAAmB9Q,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GACpD,IAAIhuC,EAAQ0B,KACRsuC,EAAe5B,GAAepuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAIrE,OAHIgC,IAAiB5yB,IACjB+P,GAAoBntB,EAAO0E,KAAoBsrC,GAE5C4O,GAsBX,SAASC,GAAmB/Q,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAC5D,IAAIhuC,EAAQ0B,KACRsuC,EAAezB,GAAevuC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAI7E,OAHIgC,IAAiB5yB,IACjB+P,GAAoBntB,EAAO0E,KAAoBsrC,GAE5C6O,GAsBX,SAASC,GAAmBhR,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GACpE,IAAIhuC,EAAQ0B,KACRsuC,EAAetB,GAAe1uC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAIrF,OAHIgC,IAAiB5yB,IACjB+P,GAAoBntB,EAAO0E,KAAoBsrC,GAE5C8O,GAwBX,SAASC,GAAmBjR,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAC5E,IAAIhuC,EAAQ0B,KACRsuC,EAAenB,GAAe7uC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAI7F,OAHIgC,IAAiB5yB,IACjB+P,GAAoBntB,EAAO0E,KAAoBsrC,GAE5C+O,GAsBX,SAASC,GAAmBlR,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GACpF,IAAIhuC,EAAQ0B,KACRsuC,EAAehB,GAAehvC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAIrG,OAHIgC,IAAiB5yB,IACjB+P,GAAoBntB,EAAO0E,KAAoBsrC,GAE5CgP,GAsBX,SAASC,GAAmBnR,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAC5F,IAAIhuC,EAAQ0B,KACRsuC,EAAeb,GAAenvC,EAAO8tC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAI7G,OAHIgC,IAAiB5yB,IACjB+P,GAAoBntB,EAAO0E,KAAoBsrC,GAE5CiP,GA0BX,SAASC,GAAmBzxD,GACxB,IAAIuS,EAAQ0B,KACRsuC,EAAerC,GAAe3tC,EAAOvS,GAIzC,OAHIuiD,IAAiB5yB,IACjB+P,GAAoBntB,EAAO0E,KAAoBsrC,GAE5CkP;;;;;;;OA+BX,SAASC,GAAuBrR,EAAQC,EAAIC,GAGxCoM,GAAgB3hD,GAAkBgiD,GADV5M,GADZnsC,KACkCosC,EAAQC,EAAIC,IACc,GAyB5E,SAASoR,GAAuBtR,EAAQC,EAAIG,EAAIC,EAAIH,GAGhDoM,GAAgB3hD,GAAkBgiD,GADVxM,GADZvsC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIH,IACM,GA4B5E,SAASqR,GAAuBvR,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAGxDoM,GAAgB3hD,GAAkBgiD,GADVrM,GADZ1sC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,IACF,GA8B5E,SAASsR,GAAuBxR,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAGhEoM,GAAgB3hD,GAAkBgiD,GADVlM,GADZ7sC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,IACV,GAgC5E,SAASuR,GAAuBzR,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAGxEoM,GAAgB3hD,GAAkBgiD,GADV/L,GADZhtC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,IAClB,GAkC5E,SAASwR,GAAuB1R,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAGhFoM,GAAgB3hD,GAAkBgiD,GADV5L,GADZntC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,IAC1B,GAoC5E,SAASyR,GAAuB3R,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAGxFoM,GAAgB3hD,GAAkBgiD,GADVzL,GADZttC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,IAClC,GAsC5E,SAAS0R,GAAuB5R,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAGhGoM,GAAgB3hD,GAAkBgiD,GADVtL,GADZztC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,IAC1C,GAyB5E,SAAS2R,GAAuBlyD,GAG5B2sD,GAAgB3hD,GAAkBgiD,GADV9M,GADZjsC,KACkCjU,IAC0B;;;;;;;OA+B5E,SAASmyD,GAAuB9R,EAAQC,EAAIC,GAGxCmM,GADwBtM,GADZnsC,KACkCosC,EAAQC,EAAIC,IA0B9D,SAAS6R,GAAuB/R,EAAQC,EAAIG,EAAIC,EAAIH,GAGhDmM,GADwBlM,GADZvsC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIH,IA6BtE,SAAS8R,GAAuBhS,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAGxDmM,GADwB/L,GADZ1sC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,IA+B9E,SAAS+R,GAAuBjS,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAGhEmM,GADwB5L,GADZ7sC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,IAiCtF,SAASgS,GAAuBlS,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAGxEmM,GADwBzL,GADZhtC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,IAqC9F,SAASiS,GAAuBnS,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAGhFmM,GADwBtL,GADZntC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,IAuCtG,SAASkS,GAAuBpS,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAGxFmM,GADwBnL,GADZttC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,IAyC9G,SAASmS,GAAuBrS,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAGhGmM,GADwBhL,GADZztC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,IA2BtH,SAASoS,GAAuB3yD,GAG5B0sD,GADwBxM,GADZjsC,KACkCjU;;;;;;;OAqClD,SAAS4yD,GAAwB3nC,EAAMo1B,EAAQC,EAAIC,EAAQsS,GAIvD,OADArG,GAAqBvhC,EADGm1B,GADZnsC,KACkCosC,EAAQC,EAAIC,GACZsS,GAAa,GACpDD,GA8BX,SAASE,GAAwB7nC,EAAMo1B,EAAQC,EAAIG,EAAIC,EAAIH,EAAQsS,GAI/D,OADArG,GAAqBvhC,EADGu1B,GADZvsC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIH,GACpBsS,GAAa,GACpDC,GAgCX,SAASC,GAAwB9nC,EAAMo1B,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,EAAQsS,GAIvE,OADArG,GAAqBvhC,EADG01B,GADZ1sC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAC5BsS,GAAa,GACpDE,GAkCX,SAASC,GAAwB/nC,EAAMo1B,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,EAAQsS,GAI/E,OADArG,GAAqBvhC,EADG61B,GADZ7sC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GACpCsS,GAAa,GACpDG,GAoCX,SAASC,GAAwBhoC,EAAMo1B,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,EAAQsS,GAIvF,OADArG,GAAqBvhC,EADGg2B,GADZhtC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAC5CsS,GAAa,GACpDI,GAsCX,SAASC,GAAwBjoC,EAAMo1B,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,EAAQsS,GAI/F,OADArG,GAAqBvhC,EADGm2B,GADZntC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GACpDsS,GAAa,GACpDK,GAyCX,SAASC,GAAwBloC,EAAMo1B,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,EAAQsS,GAIvG,OADArG,GAAqBvhC,EADGs2B,GADZttC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAC5DsS,GAAa,GACpDM,GA2CX,SAASC,GAAwBnoC,EAAMo1B,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,EAAQsS,GAI/G,OADArG,GAAqBvhC,EADGy2B,GADZztC,KACkCosC,EAAQC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GACpEsS,GAAa,GACpDO,GAgCX,SAASC,GAAwBpoC,EAAMjrB,EAAQ6yD,GAI3C,OADArG,GAAqBvhC,EADGi1B,GADZjsC,KACkCjU,GACA6yD,GAAa,GACpDQ;;;;;;;OAwBX,SAASC,GAAerzD,EAAUtC,EAAOqrB,GACrC,IAAIzW,EAAQ0B,KAQZ,OANIsrC,GAAehtC,EADA8C,KACqB1X,IAGpCw9B,GAFYjnB,KACAiD,KAC0B5E,EAAOtS,EAAUtC,EAAO4U,EAnugBvD,IAmugBwEyW,GAAW,GAGvFsqC,GAuBX,SAASC,GAA6BtzD,EAAUtC,EAAOqrB,GACnD,IAAIzW,EAAQ0B,KAEZ,GAAIsrC,GAAehtC,EADA8C,KACqB1X,GAAQ,CAC5C,IAAIuR,EAAQgF,KACR5C,EAAQ6F,KAGZgkB,GAAwBjsB,EAAOoC,EAAOiB,EAAOtS,EAAUtC,EADxC2hC,GADE3pB,GAAuBzG,EAAMR,MACG4C,EAAOiB,GACgByW,GAAW,GAGvF,OAAOuqC;;;;;;;;;;;;;;OA2CX,SAASC,GAAa93C,GAClB+3C,GAAiB/3C,GACjB,IAAI7S,EAAU6qD,GAAah4C,GAAS,GACpC,OAAgB,OAAZ7S,EACO,WACe3G,IAAtB2G,EAAQ6iB,YACR7iB,EAAQ6iB,UAjxZhB,SAASioC,EAAwB7gD,EAAWP,GACxC,IAAIjB,EAAQiB,EAnjHJ,GAmjHiB7D,KAAKoE,GAE9B,OAAqB,EAAdxB,EAAMhK,MAAkCiL,EADrBjB,EAAMmG,gBAC4C,KA8wZpDk8C,CAAwB9qD,EAAQiK,UAAWjK,EAAQ0J,QAEpE1J,EAAQ6iB,WAcnB,SAASkoC,GAAWl4C,GAChB+3C,GAAiB/3C,GACjB,IAAI7S,EAAU6qD,GAAah4C,GAAS,GACpC,OAAmB,OAAZ7S,EAAmB,KAAOA,EAAQ0J,MA/0gB/B,GAg2gBd,SAASshD,GAAmBC,GACxB,IAAIjrD,EAAU6qD,GAAaI,GAAc,GACzC,GAAgB,OAAZjrD,EACA,OAAO,KAIX,IAHA,IACI2N,EADAjE,EAAQ1J,EAAQ0J,MAGG,OAAhBA,EA/2gBA,KA+2gByBiE,EAASoZ,GAAerd,KAEpDA,EAAQiE,EAEZ,OAAsB,IAAfjE,EAj3gBC,GAi3gBiC,KAAOA,EA32gBtC,GAw3gBd,SAASwhD,GAAkBD,GACvB,OAAO11D,EAASyxB,GAAeikC,GAAcjnC,YAYjD,SAASmnC,GAAYF,GACjB,IAAIjrD,EAAU6qD,GAAaI,GAAc,GACzC,OAAgB,OAAZjrD,EACO0rC,GAASC,KAEb,IAAIx2B,GADCnV,EAAQ0J,MAh5gBZ,GAg5gByB7D,KAAK7F,EAAQiK,WACfjK,EAAQ0J,OAqD3C,SAAS0hD,GAAcv4C,GACnB,IAAI7S,EAAU6qD,GAAah4C,GAM3B,YAL2BxZ,IAAvB2G,EAAQuG,aACRvG,EAAQuG,WAAa8c,GAAyBrjB,EAAQiK,UAAWjK,EAAQ0J,OAAO,IAItD,OAAvB1J,EAAQuG,WAAsB,GAAKhR,EAASyK,EAAQuG,YAE/D,SAASskD,GAAa7yD,EAAQqzD,QACF,IAApBA,IAA8BA,GAAkB,GACpD,IAAIrrD,EAAU2iB,GAAY3qB,GAC1B,IAAKgI,GAAWqrD,EACZ,MAAM,IAAItyD,MACN,qBAER,OAAOiH,EA8BX,SAASsrD,GAAeC,GACpB,OAAO5oC,GAAY4oC,GAAsB96C,OAkD7C,SAAS+6C,GAAa34C,GAClB+3C,GAAiB/3C,GACjB,IAAI44C,EAAWZ,GAAah4C,GAAS,GACrC,GAAiB,OAAb44C,EACA,MAAO,GACX,IAAI/hD,EAAQ+hD,EAAS/hD,MAEjBqwB,EAAWrwB,EAxihBL,GAyihBNowB,EAFQpwB,EA7ihBJ,GA+ihBakhB,QACjB8gC,EAAY,GAChB,GAAI5xB,GAAYC,EACZ,IAAK,IAAI7lC,EAAI,EAAGA,EAAI4lC,EAASzlC,QAAS,CAClC,IAAIs3D,EAAa7xB,EAAS5lC,KACtB03D,EAAc9xB,EAAS5lC,KAC3B,GAA0B,iBAAfy3D,EAAyB,CAChC,IAAIE,EAASF,EACTG,EAAkBtiD,GAAYE,EAAMkiD,IACpCtuB,EAAWvD,EAASD,EAAS5lC,MAC7B63D,EAAmBjyB,EAAS5lC,KAM5B2e,GAAWi5C,GACXJ,EAAUr2D,KAAK,CAAEwd,QAASA,EAAS7c,KAAM61D,EAAQvuB,SAAUA,EAAUugB,WAF5B,kBAArBkO,GAAiCA,EAEwCnyD,KAHzD,kBAArBmyD,GAAkCA,GAAoB,EAAK,MAAQ,YASlG,OADAL,EAAUM,KAAKC,IACRP,EAEX,SAASO,GAAc3W,EAAGpiD,GACtB,OAAIoiD,EAAEt/C,MAAQ9C,EAAE8C,KACL,EACJs/C,EAAEt/C,KAAO9C,EAAE8C,MAAQ,EAAI,EA+ClC,SAAS40D,GAAiB91D,GACtB,GAAuB,oBAAZo3D,WAA6Bp3D,aAAiBo3D,SACrD,MAAM,IAAInzD,MAAM;;;;;;;OAoBxB,SAASozD,GAAatpC,GAClB82B,GAAU92B,GACVqoC,GAAkBroC,GAAWjhB,SAAQ,SAAUs0B,GAAiB,OAAOyH,GAAczH;;;;;;;OAyBzF,IACIk2B,IAAa,EAyBjB,SAASC,GAAkBr2D,EAAMN,GAC7B,IAAwB,oBAAb42D,WAA6BA,WAK5BjwD,EAED,CACH,IAAI46B,EAHA56B,EAGwC,GACvC46B,IACDA,EALA56B,EAKwC,GAAI,IAEhD46B,EAAUjhC,GAAQN;;;;;;;OAgF9B,SAAS62D,GAAwB90B,EAAOz9B,EAAKu/B,EAAU/K,EAAiBg+B,EAAcrsC,GAClF,IAAI9Z,EAAQkzB,EAnyhBJ,GAqyhBRA,EAAS,IAAqB9B,EAC9B,IAAIhvB,EAAQgmB,GAAiBpoB,EAAO,KAAM,EAAG,EAAiB,KAAM,MAChE+kB,EAAc3iB,EAAM2iB,YAAcpxB,EAAIiK,UACtB,OAAhBmnB,IACA4pB,GAAqBvsC,EAAO2iB,GACd,OAAVqM,IACAjnB,GAAgBg8C,EAAc/0B,EAAOrM,GACf,OAAlB3iB,EAAMijB,SACN6Q,GAAiBiwB,EAAc/0B,EAAOhvB,EAAMijB,SAE3B,OAAjBjjB,EAAMxC,QACNk2B,GAAiBqwB,EAAc/0B,EAAOhvB,EAAMxC,UAIxD,IAAIwmD,EAAej+B,EAAgBnlB,eAAeouB,EAAOz9B,GACrD66B,EAAgBxG,GAAYkL,EAAUhI,GAA0Bv3B,GAAM,KAAMA,EAAIqL,OAAS,GAAiB,GAAsBk0B,EAlyhBpH,IAkyhB6I9wB,EAAO+lB,EAAiBi+B,EAActsC,GAQnM,OAPI9Z,EAAMwN,kBACNW,GAAmBd,GAA+BjL,EAAO8wB,GAAWlzB,EAAOrM,EAAIJ,MAC/Eu5B,GAAoB9sB,EAAOoC,GAC3B8qB,GAAe9qB,EAAO8wB,EAASllC,OAAQ,IAE3CygC,GAAcyE,EAAU1E,GAEjB0E,EA1yhBS,IA0yhBiB1E,EAMrC,SAAS63B,GAAoB73B,EAAe83B,EAAcC,EAAW32B,EAAa42B,GAC9E,IAAIxmD,EAAQumD,EAp0hBJ,GAs0hBJ/pC,EAzrVR,SAASiqC,EAAyBzmD,EAAOqD,EAAO1P,GAC5C,IAAI+yD,EAAYthD,KACZpF,EAAMwN,kBACF7Z,EAAIyJ,mBACJzJ,EAAIyJ,kBAAkBzJ,GAC1Bw5B,GAAgCntB,EAAO0mD,EAAW,GAClDp5B,GAAqBttB,EAAOqD,EAAO1P,IAEvC,IAAIiW,EAAY+F,GAAkBtM,EAAOrD,EAAOqD,EAAMrV,OAAS,EAAG04D,GAClEtpC,GAAgBxT,EAAWvG,GAC3B,IAAI+G,EAAS9G,GAAiBojD,EAAWrjD,GAIzC,OAHI+G,GACAgT,GAAgBhT,EAAQ/G,GAErBuG,EA2qVS68C,CAAyBzmD,EAAOumD,EAAWD,GAC3D12B,EAAYjS,WAAW3uB,KAAKwtB,GAC5BgS,EAj0hBU,GAi0hBehS,EACzBgqC,GAAgBA,EAAajrD,SAAQ,SAAU4E,GAAW,OAAOA,EAAQqc,EAAW8pC,MAGhFA,EAAazoD,gBACbyoD,EAAazoD,eAAe,EAAgB2e,EAAW+pC,EAAUv4D,OAAS,GAE9E,IAAI04D,EAAYthD,KAChB,GAAIpF,EAAMwN,kBACyB,OAA9B84C,EAAa5oD,cAAoD,OAA3B4oD,EAAa1oD,WAAqB,CAEzEoK,GADmB0+C,EAAUr1D,MA/zhBjB,IAi0hBZ,IAAIs1D,EAAYJ,EAp1hBZ,GAq1hBJ/4B,GAAqCm5B,EAAWL,GAChDr4B,GAAkB04B,EAAWJ,EAAWD,EAAa3oD,UACrDktB,GAAiCy7B,EAAc9pC,GAEnD,OAAOA,EAEX,SAASoqC,GAAkBjT,EAAWC,GAClC,MAAO,CACHj2B,WAAY,GACZg2B,UAAWA,GAAavnC,GACxBsnC,MAAOzjB,GACP2jB,cAAeA,GAAiB,KAChCx7C,MAAO,GAgBf,SAASyuD,GAAsBrqC,EAAW7oB,GACtC,IAAIgzD,EAAY3iD,GAAiBwY,GAl3hBzB,GAm3hBJoO,EAAW+7B,EAAUnnD,KAAKxR,OAAS,EAGvCsa,GAAuBq+C,EAAW,CAAEp+C,eAAgBqiB,EAAUpiB,aAAcoiB,EAAW;;;;;;;;AA6B3F,SAASk8B,GAAavzD,GAClB,OAAOzG,OAAOskB,eAAe7d,EAAKhG,WAAWD,YAQjD,SAASy5D,GAA2BC,GAIhC,IAHA,IAAIC,EAAYH,GAAaE,EAAWzzD,MACpC2zD,GAAsB,EACtBC,EAAmB,CAACH,GACjBC,GAAW,CACd,IAAIG,OAAWp0D,EACf,GAAIuP,GAAeykD,GAEfI,EAAWH,EAAU3wD,MAAQ2wD,EAAUzwD,SAEtC,CACD,GAAIywD,EAAU3wD,KACV,MAAM,IAAI5D,MAAM,wCAGpB00D,EAAWH,EAAUzwD,KAEzB,GAAI4wD,EAAU,CACV,GAAIF,EAAqB,CACrBC,EAAiBn4D,KAAKo4D,GAGtB,IAAIC,EAAeL,EACnBK,EAAavpD,OAASwpD,GAAiBN,EAAWlpD,QAClDupD,EAAalqD,eAAiBmqD,GAAiBN,EAAW7pD,gBAC1DkqD,EAAatpD,QAAUupD,GAAiBN,EAAWjpD,SAEnD,IAAIwpD,EAAoBH,EAAS1pD,aACjC6pD,GAAqBC,GAAoBR,EAAYO,GAErD,IAAIE,EAAiBL,EAAS9nD,UAC1BooD,EAAsBN,EAASvpD,eASnC,GARA4pD,GAAkBE,GAAiBX,EAAYS,GAC/CC,GAAuBE,GAAsBZ,EAAYU,GAEzD/0D,EAAeq0D,EAAWlpD,OAAQspD,EAAStpD,QAC3CnL,EAAeq0D,EAAW7pD,eAAgBiqD,EAASjqD,gBACnDxK,EAAeq0D,EAAWjpD,QAASqpD,EAASrpD,SAGxCwE,GAAe6kD,IAAaA,EAAS5nD,KAAKqoD,UAAW,CAGrD,IAAIC,EAAUd,EAAWxnD,KACzBsoD,EAAQD,WAAaC,EAAQD,WAAa,IAAI14D,OAAOi4D,EAAS5nD,KAAKqoD,WAIvER,EAAa7oD,oBACT6oD,EAAa7oD,qBAAuB4oD,EAAS5oD,oBACjD6oD,EAAa/oD,iBAAmB0oD,EAAW1oD,kBAAoB8oD,EAAS9oD,iBACxE+oD,EAAazoD,iBAAmBooD,EAAWpoD,kBAAoBwoD,EAASxoD,iBACxEyoD,EAAa3oD,cAAgBsoD,EAAWtoD,eAAiB0oD,EAAS1oD,cAClE2oD,EAAajpD,QAAU4oD,EAAW5oD,SAAWgpD,EAAShpD,QACtDipD,EAAavoD,UAAYkoD,EAAWloD,WAAasoD,EAAStoD,UAC1DuoD,EAAanpD,OAAS8oD,EAAW9oD,QAAUkpD,EAASlpD,OAGxD,IAAIqB,EAAW6nD,EAAS7nD,SACxB,GAAIA,EACA,IAAK,IAAI1R,EAAI,EAAGA,EAAI0R,EAASvR,OAAQH,IAAK,CACtC,IAAIsS,EAAUZ,EAAS1R,GACnBsS,GAAWA,EAAQ4nD,WACnB5nD,EAAQ6mD,GASR7mD,IAAY4mD,KACZG,GAAsB,IAKtCD,EAAYn6D,OAAOskB,eAAe61C,IAW1C,SAASe,EAAgCb,GAIrC,IAHA,IAAIxpD,EAAW,EACXC,EAAY,KAEP/P,EAAIs5D,EAAiBn5D,OAAS,EAAGH,GAAK,EAAGA,IAAK,CACnD,IAAI8F,EAAMwzD,EAAiBt5D,GAE3B8F,EAAIgK,SAAYA,GAAYhK,EAAIgK,SAEhChK,EAAIiK,UACAqN,GAAetX,EAAIiK,UAAWA,EAAYqN,GAAerN,EAAWjK,EAAIiK,aAnBhFoqD,CAAgCb,GAsBpC,SAASG,GAAiB74D,GACtB,OAAIA,IAAUoO,GACH,GAEFpO,IAAUqO,GACR,GAGArO,EAGf,SAASk5D,GAAiBX,EAAYS,GAClC,IAAIQ,EAAgBjB,EAAW1nD,UAE3B0nD,EAAW1nD,UADX2oD,EACuB,SAAUh+B,EAAIi+B,GACjCT,EAAex9B,EAAIi+B,GACnBD,EAAch+B,EAAIi+B,IAICT,EAG/B,SAASG,GAAsBZ,EAAYU,GACvC,IAAIS,EAAqBnB,EAAWnpD,eAEhCmpD,EAAWnpD,eADXsqD,EAC4B,SAAUl+B,EAAIi+B,EAAKx3C,GAC3Cg3C,EAAoBz9B,EAAIi+B,EAAKx3C,GAC7By3C,EAAmBl+B,EAAIi+B,EAAKx3C,IAIJg3C,EAGpC,SAASF,GAAoBR,EAAYO,GACrC,IAAIa,EAAmBpB,EAAWtpD,aAE9BspD,EAAWtpD,aADX0qD,EAC0B,SAAUn+B,EAAIi+B,GACpCX,EAAkBt9B,EAAIi+B,GACtBE,EAAiBn+B,EAAIi+B,IAICX;;;;;;;OAelC,IAAIc,GAAwB,CAExB,qBASAC,GAAwB,CAGxB,WACA,QACA,SACA,OACA,SACA,qBAEA,SACA,gBAEA,WAkBJ,SAASC,GAAwBvB,GAC7B,IAAI1wC,EAAKnmB,EAAIymB,EAAKL,EAEd6wC,EADAH,EAAYH,GAAaE,EAAWzzD,MAIpC6zD,EAFA7kD,GAAeykD,GAEJC,EAAU3wD,KAIV2wD,EAAUzwD,KAGzB,IAAIgyD,EAASxB,EACb,IAEI,IAAK,IAAIyB,EAA0Bt6D,EAASk6D,IAAwBK,EAA4BD,EAAwBj6D,QAASk6D,EAA0Bh6D,KAAMg6D,EAA4BD,EAAwBj6D,OAEjNg6D,EADIG,EAAQD,EAA0Bj6D,OACtB24D,EAASuB,GAGjC,MAAOlyC,GAASH,EAAM,CAAErnB,MAAOwnB,GAC/B,QACI,IACQiyC,IAA8BA,EAA0Bh6D,OAASyB,EAAKs4D,EAAwB/xC,SAASvmB,EAAGlC,KAAKw6D,GAEvH,QAAU,GAAInyC,EAAK,MAAMA,EAAIrnB,OAEjC,GAAIsT,GAAe6kD,GACf,IAEI,IAAK,IAAIwB,EAA0Bz6D,EAASm6D,IAAwBO,EAA4BD,EAAwBp6D,QAASq6D,EAA0Bn6D,KAAMm6D,EAA4BD,EAAwBp6D,OAAQ,CACzN,IAAIm6D,EACJH,EADIG,EAAQE,EAA0Bp6D,OACtB24D,EAASuB,IAGjC,MAAO3xC,GAASJ,EAAM,CAAE3nB,MAAO+nB,GAC/B,QACI,IACQ6xC,IAA8BA,EAA0Bn6D,OAAS6nB,EAAKqyC,EAAwBlyC,SAASH,EAAGtoB,KAAK26D,GAEvH,QAAU,GAAIhyC,EAAK,MAAMA,EAAI3nB;;;;;;;OAqBzC,IAAI65D,GAA8B,WAC9B,SAASA,EAAaC,EAAepH,EAAcqH,GAC/Ct8D,KAAKq8D,cAAgBA,EACrBr8D,KAAKi1D,aAAeA,EACpBj1D,KAAKs8D,YAAcA,EAQvB,OAHAF,EAAav7D,UAAU07D,cAAgB,WACnC,OAAOv8D,KAAKs8D,aAETF,EAZsB;;;;;;;OA6CjC,SAASI,GAAqBlC,GACtBA,EAAWzzD,KAAKhG,UAAU47D,cAC1BnC,EAAWlnD,SAAWspD,GACtBpC,EAAW/oD,UAQnB,SAASorD,IACL,OAAO,SAASC,IACZ,IAAIC,EAAqBC,GAAsB98D,MAC3CiQ,EAAU4sD,GAAsBA,EAAmB5sD,QACvD,GAAIA,EAAS,CACT,IAAIzE,EAAWqxD,EAAmBrxD,SAClC,GAAIA,IAAa2E,GACb0sD,EAAmBrxD,SAAWyE,OAK9B,IAAK,IAAIlK,KAAOkK,EACZzE,EAASzF,GAAOkK,EAAQlK,GAGhC82D,EAAmB5sD,QAAU,KAC7BjQ,KAAKy8D,YAAYxsD,KAzBE0sD,IA6B/B,SAASD,GAAoBj6C,EAAU1gB,EAAOgT,EAAYotB,GACtD,IAAI06B,EAAqBC,GAAsBr6C,IAanD,SAASs6C,EAAsBt6C,EAAUslC,GACrC,OAAOtlC,EAA6B,oBAAIslC;;;;;;;OAbpCgV,CAAsBt6C,EAAU,CAAEjX,SAAU2E,GAAWF,QAAS,OAChEA,EAAU4sD,EAAmB5sD,UAAY4sD,EAAmB5sD,QAAU,IACtEzE,EAAWqxD,EAAmBrxD,SAC9BwJ,EAAehV,KAAKyQ,eAAesE,GACnCioD,EAAiBxxD,EAASwJ,GAC9B/E,EAAQ+E,GAAgB,IAAIonD,GAAaY,GAAkBA,EAAe/H,aAAclzD,EAAOyJ,IAAa2E,IAC5GsS,EAAS0f,GAAepgC,EAG5B,SAAS+6D,GAAsBr6C,GAC3B,OAAOA,EAA6B,qBAAK,KA4C7C,SAASw6C,GAAkBvnB,EAAUpyB,EAAc45C,EAAuBt/B,EAAaxgB,GAEnF,GADAs4B,EAAWhtC,EAAkBgtC,GACzBn1C,MAAMqH,QAAQ8tC,GAId,IAAK,IAAIv0C,EAAI,EAAGA,EAAIu0C,EAASp0C,OAAQH,IACjC87D,GAAkBvnB,EAASv0C,GAAImiB,EAAc45C,EAAuBt/B,EAAaxgB,OAGpF,CACD,IAAI9J,EAAQgF,KACR3B,EAAQ0B,KACR/S,EAAQ6xC,GAAezB,GAAYA,EAAWhtC,EAAkBgtC,EAAS3qC,SACzEoyD,EAAkB7lB,GAAkB5B,GACpChgC,EAAQgD,KACR0kD,EAAqC,MAAxB1nD,EAAM2N,gBACnBK,EAAWhO,EAAMmG,eACjB4H,EAAwB/N,EAAM2N,iBAAmB,GACrD,GAAI8zB,GAAezB,KAAcA,EAAS6B,MAAO,CAE7C,IAAIl4C,EAAU,IAAI8d,GAAoBggD,EAAiB//C,EAAgB8qC,IACnEmV,EAAuBn1D,GAAQ5C,EAAOge,EAAclG,EAAiBggD,EAAaA,EAAa35C,EAAuBC,IAC5F,IAA1B25C,GACA57C,GAAmBd,GAA+BjL,EAAOiB,GAAQrD,EAAOhO,GACxEg4D,GAAgChqD,EAAOoiC,EAAUpyB,EAAahiB,QAC9DgiB,EAAahhB,KAAKgD,GAClBoQ,EAAMmG,iBACNnG,EAAMoG,eACFsB,IACA1H,EAAM2N,iBAAmB,OAE7B65C,EAAsB56D,KAAKjD,GAC3BsX,EAAMrU,KAAKjD,KAGX69D,EAAsBG,GAAwBh+D,EAC9CsX,EAAM0mD,GAAwBh+D,OAGjC,CAqBD,IAAIk+D,EAAgCr1D,GAAQ5C,EAAOge,EAAc85C,EAAa35C,EAAuBC,GACjG85C,EAAoCt1D,GAAQ5C,EAAOge,EAAc85C,EAAYA,EAAa35C,GAG1Fg6C,EAAgCD,GAAqC,GACrEN,EAAsBM,GACtBpgD,IAAmBqgD,IAClBrgD,KAL2BmgD,GAAiC,GAC7DL,EAAsBK,KAMtB97C,GAAmBd,GAA+BjL,EAAOiB,GAAQrD,EAAOhO,GACpEjG,EA6HpB,SAASq+D,EAAajhB,EAAW93C,EAAOyY,EAAgBwgB,EAAa+/B,GACjE,IAAIt+D,EAAU,IAAI8d,GAAoBs/B,EAAWr/B,EAAgB8qC,IAKjE,OAJA7oD,EAAQk4C,MAAQ,GAChBl4C,EAAQsF,MAAQA,EAChBtF,EAAQu+D,mBAAqB,EAC7BC,GAAgBx+D,EAASs+D,EAAG//B,IAAgBxgB,GACrC/d,EAnImBq+D,CAAatgD,EAAiB0gD,GAAoCC,GAA+Bb,EAAsB57D,OAAQ8b,EAAgBwgB,EAAau/B,IACrK//C,GAAkBqgD,IACnBP,EAAsBM,GAAmCL,gBAAkB99D,GAE/Ei+D,GAAgChqD,EAAOoiC,EAAUpyB,EAAahiB,OAAQ,GACtEgiB,EAAahhB,KAAKgD,GAClBoQ,EAAMmG,iBACNnG,EAAMoG,eACFsB,IACA1H,EAAM2N,iBAAmB,OAE7B65C,EAAsB56D,KAAKjD,GAC3BsX,EAAMrU,KAAKjD,IAMXi+D,GAAgChqD,EAAOoiC,EAAU6nB,GAAiC,EAAIA,EAClFC,EAHiBK,GAAgBX,EAAsB9/C,EAAiBogD,EACxED,GAAgCJ,GAAkB//C,GAAkBwgB,KAIvExgB,GAAkBwgB,GAAe6/B,GAClCP,EAAsBM,GAAmCI,uBAazE,SAASN,GAAgChqD,EAAOoiC,EAAUsoB,EAAcC,GACpE,IAAIC,EAAyB/mB,GAAezB,GAC5C,GAAIwoB,GArxPR,SAASC,EAAgBp8D,GACrB,QAASA,EAAMsxC,SAoxPe8qB,CAAgBzoB,GAAW,CACrD,IACIrjC,GADaqjC,EAASrC,UAAYqC,GAAU70C,UACpBwR,YAC5B,GAAIA,EAAa,CACb,IAAIiK,EAAQhJ,EAAM8I,eAAiB9I,EAAM8I,aAAe,IACxD,IAAK8hD,GAA0BxoB,EAAS6B,MAAO,CAG3C,IAAI6mB,EAAyB9hD,EAAMpU,QAAQ81D,IACX,IAA5BI,EACA9hD,EAAMha,KAAK07D,EAAc,CAACC,EAAgB5rD,IAG1CiK,EAAM8hD,EAAyB,GAAG97D,KAAK27D,EAAgB5rD,QAI3DiK,EAAMha,KAAK07D,EAAc3rD,KASzC,SAASwrD,GAAgBH,EAAcr+D,EAASg/D,GAI5C,OAHIA,GACAX,EAAaE,qBAEVF,EAAanmB,MAAMj1C,KAAKjD,GAAW,EAK9C,SAAS6I,GAAQuG,EAAMJ,EAAKivB,EAAO3tB,GAC/B,IAAK,IAAIxO,EAAIm8B,EAAOn8B,EAAIwO,EAAKxO,IACzB,GAAIkN,EAAIlN,KAAOsN,EACX,OAAOtN,EAEf,OAAQ,EAKZ,SAAS48D,GAA8B5qD,EAAG6G,EAAOskD,EAAO5oD,GACpD,OAAO6oD,GAAav+D,KAAKu3C,MAAO,IAOpC,SAASumB,GAAkC3qD,EAAG6G,EAAOrD,EAAOjB,GACxD,IACIie,EADA6qC,EAAYx+D,KAAKu3C,MAErB,GAAIv3C,KAAKm9D,gBAAiB,CACtB,IAAIsB,EAAiBz+D,KAAKm9D,gBAAgBS,mBACtCc,EAAiBz7C,GAAkBtM,EAAOA,EAh9iB1C,GAg9iBwD3W,KAAKm9D,gBAAgBx4D,MAAO+Q,GAIxF6oD,GAAaC,EAFb7qC,EAAS+qC,EAAehwD,MAAM,EAAG+vD,IAIjC,IAAK,IAAIt9D,EAAIs9D,EAAgBt9D,EAAIu9D,EAAep9D,OAAQH,IACpDwyB,EAAOrxB,KAAKo8D,EAAev9D,SAM/Bo9D,GAAaC,EAFb7qC,EAAS,IAIb,OAAOA,EAKX,SAAS4qC,GAAaC,EAAW7qC,GAC7B,IAAK,IAAIxyB,EAAI,EAAGA,EAAIq9D,EAAUl9D,OAAQH,IAElCwyB,EAAOrxB,MAAKjD,EADEm/D,EAAUr9D,OAG5B,OAAOwyB,EA8CX,SAASgrC,GAAmBj4D,EAAWk4D,GAEnC,YADsB,IAAlBA,IAA4BA,EAAgB,IACzC,SAAUtE,GACbA,EAAW5pD,kBACP,SAAUzJ,EAAK43D,GACX,OA/PhB,SAASnuD,EAAkBzJ,EAAKP,EAAWk4D,GACvC,IAAItrD,EAAQgF,KACZ,GAAIhF,EAAMwN,gBAAiB,CACvB,IAAI8c,EAAc/nB,GAAe5O,GAEjCg2D,GAAkB2B,EAAetrD,EAAMR,KAAMQ,EAAM2N,UAAW2c,GAAa,GAE3Eq/B,GAAkBv2D,EAAW4M,EAAMR,KAAMQ,EAAM2N,UAAW2c,GAAa,IAwPxDltB,CAAkBzJ,EACzB43D,EAAqBA,EAAmBn4D,GAAaA,EACrDk4D;;;;;;;OAlUhBpC,GAAqBnB,WAAY,EAqVjC,IAAIyD,GACA,SAASA,OAaTC,GACA,SAASA;;;;;;;;AAYb,SAASC,GAAwBlvC,GAC7B,IAAIvtB,EAAQyD,MAAM,kCAAoC2B,EAAUmoB,GAAa,kDAE7E,OADAvtB,EAAM08D,IAAmBnvC,EAClBvtB,EAEX,IA0IW28D,GA1IPD,GAAkB,cAIlBE,GAA+C,WAC/C,SAASA,KAKT,OAHAA,EAA8Bt+D,UAAUu+D,wBAA0B,SAAUtvC,GACxE,MAAMkvC,GAAwBlvC,IAE3BqvC,EANuC,GAiB9CE,GAA0C,WAC1C,SAASA,KAGT,OADAA,EAAyBzmB,KAAO,IAAIumB,GAC7BE,EAJkC,GAMzCC,GAAiD,WACjD,SAASA,EAAgCd,EAAWrgB,EAASohB,GACzDv/D,KAAKm+C,QAAUA,EACfn+C,KAAKu/D,UAAYA,EACjBv/D,KAAKw/D,WAAa,IAAInqB,IACtB,IAAK,IAAIl0C,EAAI,EAAGA,EAAIq9D,EAAUl9D,OAAQH,IAAK,CACvC,IAAI9B,EAAUm/D,EAAUr9D,GACxBnB,KAAKw/D,WAAW3pB,IAAIx2C,EAAQogE,cAAepgE,IAanD,OAVAigE,EAAgCz+D,UAAUu+D,wBAA0B,SAAUtvC,GAC1E,IAAIzwB,EAAUW,KAAKw/D,WAAW3zD,IAAIikB,GAIlC,IAHKzwB,GAAWW,KAAKm+C,UACjB9+C,EAAUW,KAAKm+C,QAAQihB,wBAAwBtvC,KAE9CzwB,EACD,MAAM2/D,GAAwBlvC,GAElC,OAAO,IAAI4vC,GAA8BrgE,EAASW,KAAKu/D,YAEpDD,EApByC,GAsBhDI,GAA+C,SAAUh6C,GAEzD,SAASg6C,EAA8BrgE,EAASkuC,GAC5C,IAAIhC,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KAQjC,OAPAurC,EAAMlsC,QAAUA,EAChBksC,EAAMgC,SAAWA,EACjBhC,EAAMnZ,SAAW/yB,EAAQ+yB,SACzBmZ,EAAMk0B,cAAgBpgE,EAAQogE,cAC9Bl0B,EAAMx6B,mBAAqB1R,EAAQ0R,mBACnCw6B,EAAMn6B,OAAS/R,EAAQ+R,OACvBm6B,EAAMl6B,QAAUhS,EAAQgS,QACjBk6B,EAKX,OAfA7qC,EAAUg/D,EAA+Bh6C,GAYzCg6C,EAA8B7+D,UAAUC,OAAS,SAAUsK,EAAU+hC,EAAkBwyB,EAAoBpyB,GACvG,OAAOvtC,KAAKX,QAAQyB,OAAOsK,EAAU+hC,EAAkBwyB,EAAoBpyB,GAAYvtC,KAAKutC,WAEzFmyB,EAhBuC,CAiBhDX,IAuCEpzB,GAA4B,WAC5B,SAASA,EAAWi0B,GAChB5/D,KAAK4/D,cAAgBA,EAOzB,OADAj0B,EAAWnhC,kBAAoB,WAAc,OAAOq1D,GAA2Bl0B,IACxEA,EAToB,GAW3Bm0B,GAv9SJ,SAASC,GAAiBr0B,GACtB,OAAOD,GAAiBC,EAAiBhzB,KAA4BL,OAw9SrEwnD,GAA6BC,GAe7BE,IANuB,IAAIv1D,GAAe,wBAO1C,SAASu1D,SAIFd,GAYR5/D,EAAQ4/D,sBAAwB5/D,EAAQ4/D,oBAAsB,KALzCA,GAA+B,UAAI,GAAK,YAI5DA,GAAoBA,GAA8B,SAAI,GAAK,WAiB/D,IAkDIe,GAlDAC,GAA2B,WAC3B,SAASA,KAOT,OADAA,EAAU11D,kBAAoB,WAAc,OAAO21D,MAC5CD,EARmB,GAU1BE,GApsSJ,SAASC,KAGL,IAAI1pD,EAAQ0B,KAERioD,EAAcrpD,GADNyB,KACqC/T,MAAOgS,GACxD,OAhBJ,SAAS4pD,EAAqBvpD,GAC1B,IAAIZ,EAAWY,EA1iRJ,IA2iRX,GAAIb,GAAqBC,GACrB,OAAOA,EAGP,MAAM,IAAIpQ,MAAM,gEAUbu6D,CAAqBhrD,GAAQ+qD,GAAeA,EAAc3pD,IAgsSjEwpD,GAA2BC,GAc3BI,GAA2B,WAC3B,SAASA,KAQT,OALAA,EAAUn5D,MAAQlB,EAAmB,CACjCb,MAAOk7D,EACPn6D,WAAY,OACZhH,QAAS,WAAc,OAAO,QAE3BmhE,EATmB,GAoC1BC,GAAU,IAZVR,GACA,SAASA,GAAQS,GACb1gE,KAAK0gE,KAAOA,EACZ1gE,KAAK2gE,MAAQD,EAAKl3C,MAAM,KAAK,GAC7BxpB,KAAK4gE,MAAQF,EAAKl3C,MAAM,KAAK,GAC7BxpB,KAAK6gE,MAAQH,EAAKl3C,MAAM,KAAK9a,MAAM,GAAG5G,KAAK,OAOzB,qBAStBg5D,GAA8C,WAC9C,SAASA,KAQT,OANAA,EAA6BjgE,UAAUkgE,SAAW,SAAUj0D,GACxD,OAAO61C,GAAqB71C,IAEhCg0D,EAA6BjgE,UAAUC,OAAS,SAAUkgE,GACtD,OAAO,IAAIC,GAAsBD,IAE9BF,EATsC,GAW7CI,GAAkB,SAAUv8D,EAAO8J,GAAQ,OAAOA,GAKlDwyD,GAAuC,WACvC,SAASA,EAAsBD,GAC3BhhE,KAAKsB,OAAS,EAEdtB,KAAKmhE,eAAiB,KAEtBnhE,KAAKohE,iBAAmB,KACxBphE,KAAKqhE,gBAAkB,KACvBrhE,KAAKshE,QAAU,KACfthE,KAAKuhE,QAAU,KACfvhE,KAAKwhE,eAAiB,KACtBxhE,KAAKyhE,eAAiB,KACtBzhE,KAAK0hE,WAAa,KAClB1hE,KAAK2hE,WAAa,KAClB3hE,KAAK4hE,cAAgB,KACrB5hE,KAAK6hE,cAAgB,KAErB7hE,KAAK8hE,qBAAuB,KAC5B9hE,KAAK+hE,qBAAuB,KAC5B/hE,KAAKgiE,WAAahB,GAAaE,GAwdnC,OAtdAD,EAAsBpgE,UAAUohE,YAAc,SAAUt/D,GACpD,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAKshE,QAAoB,OAAXvrB,EAAiBA,EAASA,EAAOmsB,MACzDv/D,EAAGozC,IAGXkrB,EAAsBpgE,UAAUshE,iBAAmB,SAAUx/D,GAKzD,IAJA,IAAIy/D,EAASpiE,KAAKshE,QACde,EAAariE,KAAK4hE,cAClBU,EAAkB,EAClBC,EAAc,KACXH,GAAUC,GAAY,CAGzB,IAAItsB,GAAUssB,GACVD,GACIA,EAAOI,aACHC,GAAiBJ,EAAYC,EAAiBC,GACtDH,EACAC,EACAK,EAAmBD,GAAiB1sB,EAAQusB,EAAiBC,GAC7DC,EAAezsB,EAAOysB,aAE1B,GAAIzsB,IAAWssB,EACXC,IACAD,EAAaA,EAAWM,kBAIxB,GADAP,EAASA,EAAOF,MACY,MAAxBnsB,EAAO6sB,cACPN,QAEC,CAEIC,IACDA,EAAc,IAClB,IAAIM,EAAyBH,EAAmBJ,EAC5CQ,EAAoBN,EAAeF,EACvC,GAAIO,GAA0BC,EAAmB,CAC7C,IAAK,IAAI3hE,EAAI,EAAGA,EAAI0hE,EAAwB1hE,IAAK,CAC7C,IAAI4hE,EAAS5hE,EAAIohE,EAAYjhE,OAASihE,EAAYphE,GAAMohE,EAAYphE,GAAK,EACrEwD,EAAQo+D,EAAS5hE,EACjB2hE,GAAqBn+D,GAASA,EAAQk+D,IACtCN,EAAYphE,GAAK4hE,EAAS,GAIlCR,EADoBxsB,EAAO6sB,eACEE,EAAoBD,GAIzDH,IAAqBF,GACrB7/D,EAAGozC,EAAQ2sB,EAAkBF,KAIzCvB,EAAsBpgE,UAAUmiE,oBAAsB,SAAUrgE,GAC5D,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAKqhE,gBAA4B,OAAXtrB,EAAiBA,EAASA,EAAOktB,cACjEtgE,EAAGozC,IAGXkrB,EAAsBpgE,UAAUqiE,iBAAmB,SAAUvgE,GACzD,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAKwhE,eAA2B,OAAXzrB,EAAiBA,EAASA,EAAOotB,WAChExgE,EAAGozC,IAGXkrB,EAAsBpgE,UAAUuiE,iBAAmB,SAAUzgE,GACzD,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAK0hE,WAAuB,OAAX3rB,EAAiBA,EAASA,EAAOstB,WAC5D1gE,EAAGozC,IAGXkrB,EAAsBpgE,UAAUyiE,mBAAqB,SAAU3gE,GAC3D,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAK4hE,cAA0B,OAAX7rB,EAAiBA,EAASA,EAAO4sB,aAC/DhgE,EAAGozC,IAGXkrB,EAAsBpgE,UAAU0iE,sBAAwB,SAAU5gE,GAC9D,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAK8hE,qBAAiC,OAAX/rB,EAAiBA,EAASA,EAAOytB,oBACtE7gE,EAAGozC,IAGXkrB,EAAsBpgE,UAAU4iE,KAAO,SAAUC,GAG7C,GAFkB,MAAdA,IACAA,EAAa,KACZ/gB,GAAqB+gB,GACtB,MAAM,IAAI19D,MAAM,yBAA2B2B,EAAU+7D,GAAc,4CAEvE,OAAI1jE,KAAK2jE,MAAMD,GACJ1jE,KAGA,MAGfihE,EAAsBpgE,UAAUuR,UAAY,aAC5C6uD,EAAsBpgE,UAAU8iE,MAAQ,SAAUD,GAC9C,IAAIn4B,EAAQvrC,KACZA,KAAK4jE,SACL,IAEIj/D,EACA8J,EACAo1D,EAJA9tB,EAAS/1C,KAAKshE,QACdwC,GAAa,EAIjB,GAAIvjE,MAAMqH,QAAQ87D,GAAa,CAC3B1jE,KAAKsB,OAASoiE,EAAWpiE,OACzB,IAAK,IAAIyiE,EAAU,EAAGA,EAAU/jE,KAAKsB,OAAQyiE,IAEzCF,EAAc7jE,KAAKgiE,WAAW+B,EAD9Bt1D,EAAOi1D,EAAWK,IAEH,OAAXhuB,GAAoBuM,GAAevM,EAAOiuB,UAAWH,IAKjDC,IAEA/tB,EAAS/1C,KAAKikE,mBAAmBluB,EAAQtnC,EAAMo1D,EAAaE,IAE3DzhB,GAAevM,EAAOtnC,KAAMA,IAC7BzO,KAAKkkE,mBAAmBnuB,EAAQtnC,KATpCsnC,EAAS/1C,KAAKmkE,UAAUpuB,EAAQtnC,EAAMo1D,EAAaE,GACnDD,GAAa,GAUjB/tB,EAASA,EAAOmsB,WAIpBv9D,EAAQ,EAvtNpB,SAASy/D,EAAkBt3D,EAAKnK,GAC5B,GAAIpC,MAAMqH,QAAQkF,GACd,IAAK,IAAI3L,EAAI,EAAGA,EAAI2L,EAAIxL,OAAQH,IAC5BwB,EAAGmK,EAAI3L,SAMX,IAFA,IAAIS,EAAWkL,EAAIq1C,QACf1zC,OAAO,IACDA,EAAO7M,EAASE,QAAY,MAClCa,EAAG8L,EAAK1M,OA8sNRqiE,CAAkBV,GAAY,SAAUj1D,GACpCo1D,EAAct4B,EAAMy2B,WAAWr9D,EAAO8J,GACvB,OAAXsnC,GAAoBuM,GAAevM,EAAOiuB,UAAWH,IAKjDC,IAEA/tB,EAASxK,EAAM04B,mBAAmBluB,EAAQtnC,EAAMo1D,EAAal/D,IAE5D29C,GAAevM,EAAOtnC,KAAMA,IAC7B88B,EAAM24B,mBAAmBnuB,EAAQtnC,KATrCsnC,EAASxK,EAAM44B,UAAUpuB,EAAQtnC,EAAMo1D,EAAal/D,GACpDm/D,GAAa,GAUjB/tB,EAASA,EAAOmsB,MAChBv9D,OAEJ3E,KAAKsB,OAASqD,EAIlB,OAFA3E,KAAKqkE,UAAUtuB,GACf/1C,KAAK0jE,WAAaA,EACX1jE,KAAKskE,SAEhBlkE,OAAO4D,eAAei9D,EAAsBpgE,UAAW,UAAW,CAI9DgL,IAAK,WACD,OAA+B,OAAxB7L,KAAKwhE,gBAA+C,OAApBxhE,KAAK0hE,YACjB,OAAvB1hE,KAAK4hE,eAAwD,OAA9B5hE,KAAK8hE,sBAE5C9pC,YAAY,EACZC,cAAc,IAUlBgpC,EAAsBpgE,UAAU+iE,OAAS,WACrC,GAAI5jE,KAAKskE,QAAS,CACd,IAAIvuB,OAAS,EACTwuB,OAAa,EACjB,IAAKxuB,EAAS/1C,KAAKqhE,gBAAkBrhE,KAAKshE,QAAoB,OAAXvrB,EAAiBA,EAASA,EAAOmsB,MAChFnsB,EAAOktB,cAAgBltB,EAAOmsB,MAElC,IAAKnsB,EAAS/1C,KAAKwhE,eAA2B,OAAXzrB,EAAiBA,EAASA,EAAOotB,WAChEptB,EAAO6sB,cAAgB7sB,EAAOysB,aAGlC,IADAxiE,KAAKwhE,eAAiBxhE,KAAKyhE,eAAiB,KACvC1rB,EAAS/1C,KAAK0hE,WAAuB,OAAX3rB,EAAiBA,EAASwuB,EACrDxuB,EAAO6sB,cAAgB7sB,EAAOysB,aAC9B+B,EAAaxuB,EAAOstB,WAExBrjE,KAAK0hE,WAAa1hE,KAAK2hE,WAAa,KACpC3hE,KAAK4hE,cAAgB5hE,KAAK6hE,cAAgB,KAC1C7hE,KAAK8hE,qBAAuB9hE,KAAK+hE,qBAAuB,OAehEd,EAAsBpgE,UAAUsjE,UAAY,SAAUpuB,EAAQtnC,EAAMo1D,EAAal/D,GAE7E,IAAI6/D,EAkCJ,OAjCe,OAAXzuB,EACAyuB,EAAiBxkE,KAAKuhE,SAGtBiD,EAAiBzuB,EAAO0uB,MAExBzkE,KAAK0kE,QAAQ3uB,IAIF,QADfA,EAAiC,OAAxB/1C,KAAKmhE,eAA0B,KAAOnhE,KAAKmhE,eAAet1D,IAAIg4D,EAAal/D,KAI3E29C,GAAevM,EAAOtnC,KAAMA,IAC7BzO,KAAKkkE,mBAAmBnuB,EAAQtnC,GACpCzO,KAAK2kE,WAAW5uB,EAAQyuB,EAAgB7/D,IAKzB,QADfoxC,EAAmC,OAA1B/1C,KAAKohE,iBAA4B,KAAOphE,KAAKohE,iBAAiBv1D,IAAIg4D,EAAa,QAI/EvhB,GAAevM,EAAOtnC,KAAMA,IAC7BzO,KAAKkkE,mBAAmBnuB,EAAQtnC,GACpCzO,KAAK4kE,eAAe7uB,EAAQyuB,EAAgB7/D,IAI5CoxC,EACI/1C,KAAK6kE,UAAU,IAAIC,GAAsBr2D,EAAMo1D,GAAcW,EAAgB7/D,GAGlFoxC,GA6BXkrB,EAAsBpgE,UAAUojE,mBAAqB,SAAUluB,EAAQtnC,EAAMo1D,EAAal/D,GACtF,IAAIogE,EAA2C,OAA1B/kE,KAAKohE,iBAA4B,KAAOphE,KAAKohE,iBAAiBv1D,IAAIg4D,EAAa,MAQpG,OAPuB,OAAnBkB,EACAhvB,EAAS/1C,KAAK4kE,eAAeG,EAAgBhvB,EAAO0uB,MAAO9/D,GAEtDoxC,EAAOysB,cAAgB79D,IAC5BoxC,EAAOysB,aAAe79D,EACtB3E,KAAKglE,YAAYjvB,EAAQpxC,IAEtBoxC,GASXkrB,EAAsBpgE,UAAUwjE,UAAY,SAAUtuB,GAElD,KAAkB,OAAXA,GAAiB,CACpB,IAAIwuB,EAAaxuB,EAAOmsB,MACxBliE,KAAKilE,eAAejlE,KAAKklE,QAAQnvB,IACjCA,EAASwuB,EAEiB,OAA1BvkE,KAAKohE,kBACLphE,KAAKohE,iBAAiBv0B,QAEE,OAAxB7sC,KAAKyhE,iBACLzhE,KAAKyhE,eAAe0B,WAAa,MAEb,OAApBnjE,KAAK2hE,aACL3hE,KAAK2hE,WAAW0B,WAAa,MAEZ,OAAjBrjE,KAAKuhE,UACLvhE,KAAKuhE,QAAQW,MAAQ,MAEE,OAAvBliE,KAAK6hE,gBACL7hE,KAAK6hE,cAAcc,aAAe,MAEJ,OAA9B3iE,KAAK+hE,uBACL/hE,KAAK+hE,qBAAqByB,oBAAsB,OAIxDvC,EAAsBpgE,UAAU+jE,eAAiB,SAAU7uB,EAAQovB,EAAYxgE,GAC7C,OAA1B3E,KAAKohE,kBACLphE,KAAKohE,iBAAiBt0B,OAAOiJ,GAEjC,IAAInhB,EAAOmhB,EAAOqvB,aACdtjE,EAAOi0C,EAAO4sB,aAelB,OAda,OAAT/tC,EACA50B,KAAK4hE,cAAgB9/D,EAGrB8yB,EAAK+tC,aAAe7gE,EAEX,OAATA,EACA9B,KAAK6hE,cAAgBjtC,EAGrB9yB,EAAKsjE,aAAexwC,EAExB50B,KAAKqlE,aAAatvB,EAAQovB,EAAYxgE,GACtC3E,KAAKglE,YAAYjvB,EAAQpxC,GAClBoxC,GAGXkrB,EAAsBpgE,UAAU8jE,WAAa,SAAU5uB,EAAQovB,EAAYxgE,GAIvE,OAHA3E,KAAKklE,QAAQnvB,GACb/1C,KAAKqlE,aAAatvB,EAAQovB,EAAYxgE,GACtC3E,KAAKglE,YAAYjvB,EAAQpxC,GAClBoxC,GAGXkrB,EAAsBpgE,UAAUgkE,UAAY,SAAU9uB,EAAQovB,EAAYxgE,GAatE,OAZA3E,KAAKqlE,aAAatvB,EAAQovB,EAAYxgE,GAIlC3E,KAAKyhE,eAHmB,OAAxBzhE,KAAKyhE,eAGiBzhE,KAAKwhE,eAAiBzrB,EAMtB/1C,KAAKyhE,eAAe0B,WAAaptB,EAEpDA,GAGXkrB,EAAsBpgE,UAAUwkE,aAAe,SAAUtvB,EAAQovB,EAAYxgE,GAKzE,IAAI7C,EAAsB,OAAfqjE,EAAsBnlE,KAAKshE,QAAU6D,EAAWjD,MAuB3D,OAnBAnsB,EAAOmsB,MAAQpgE,EACfi0C,EAAO0uB,MAAQU,EACF,OAATrjE,EACA9B,KAAKuhE,QAAUxrB,EAGfj0C,EAAK2iE,MAAQ1uB,EAEE,OAAfovB,EACAnlE,KAAKshE,QAAUvrB,EAGfovB,EAAWjD,MAAQnsB,EAEK,OAAxB/1C,KAAKmhE,iBACLnhE,KAAKmhE,eAAiB,IAAImE,IAE9BtlE,KAAKmhE,eAAeoE,IAAIxvB,GACxBA,EAAOysB,aAAe79D,EACfoxC,GAGXkrB,EAAsBpgE,UAAU6jE,QAAU,SAAU3uB,GAChD,OAAO/1C,KAAKilE,eAAejlE,KAAKklE,QAAQnvB,KAG5CkrB,EAAsBpgE,UAAUqkE,QAAU,SAAUnvB,GACpB,OAAxB/1C,KAAKmhE,gBACLnhE,KAAKmhE,eAAer0B,OAAOiJ,GAE/B,IAAInhB,EAAOmhB,EAAO0uB,MACd3iE,EAAOi0C,EAAOmsB,MAgBlB,OAZa,OAATttC,EACA50B,KAAKshE,QAAUx/D,EAGf8yB,EAAKstC,MAAQpgE,EAEJ,OAATA,EACA9B,KAAKuhE,QAAU3sC,EAGf9yB,EAAK2iE,MAAQ7vC,EAEVmhB,GAGXkrB,EAAsBpgE,UAAUmkE,YAAc,SAAUjvB,EAAQyvB,GAG5D,OAAIzvB,EAAO6sB,gBAAkB4C,IAMzBxlE,KAAK2hE,WAHe,OAApB3hE,KAAK2hE,WAGa3hE,KAAK0hE,WAAa3rB,EAKlB/1C,KAAK2hE,WAAW0B,WAAattB,GAVxCA,GAcfkrB,EAAsBpgE,UAAUokE,eAAiB,SAAUlvB,GAoBvD,OAnB8B,OAA1B/1C,KAAKohE,mBACLphE,KAAKohE,iBAAmB,IAAIkE,IAEhCtlE,KAAKohE,iBAAiBmE,IAAIxvB,GAC1BA,EAAOysB,aAAe,KACtBzsB,EAAO4sB,aAAe,KACK,OAAvB3iE,KAAK6hE,eAGL7hE,KAAK6hE,cAAgB7hE,KAAK4hE,cAAgB7rB,EAC1CA,EAAOqvB,aAAe,OAMtBrvB,EAAOqvB,aAAeplE,KAAK6hE,cAC3B7hE,KAAK6hE,cAAgB7hE,KAAK6hE,cAAcc,aAAe5sB,GAEpDA,GAGXkrB,EAAsBpgE,UAAUqjE,mBAAqB,SAAUnuB,EAAQtnC,GAQnE,OAPAsnC,EAAOtnC,KAAOA,EAEVzO,KAAK+hE,qBADyB,OAA9B/hE,KAAK+hE,qBACuB/hE,KAAK8hE,qBAAuB/rB,EAG5B/1C,KAAK+hE,qBAAqByB,oBAAsBztB,EAEzEA,GAEJkrB,EA3e+B,GA6etC6D,GACA,SAASA,GAAsBr2D,EAAMu1D,GACjChkE,KAAKyO,KAAOA,EACZzO,KAAKgkE,UAAYA,EACjBhkE,KAAKwiE,aAAe,KACpBxiE,KAAK4iE,cAAgB,KAErB5iE,KAAKijE,cAAgB,KAErBjjE,KAAKykE,MAAQ,KAEbzkE,KAAKkiE,MAAQ,KAEbliE,KAAKylE,SAAW,KAEhBzlE,KAAK0lE,SAAW,KAEhB1lE,KAAKolE,aAAe,KAEpBplE,KAAK2iE,aAAe,KAEpB3iE,KAAKmjE,WAAa,KAElBnjE,KAAKqjE,WAAa,KAElBrjE,KAAKwjE,oBAAsB,MAK/BmC,GAA0C,WAC1C,SAASA,IAEL3lE,KAAK4lE,MAAQ,KAEb5lE,KAAK6lE,MAAQ,KAiEjB,OA1DAF,EAAyB9kE,UAAUk2C,IAAM,SAAUhB,GAC5B,OAAf/1C,KAAK4lE,OACL5lE,KAAK4lE,MAAQ5lE,KAAK6lE,MAAQ9vB,EAC1BA,EAAO2vB,SAAW,KAClB3vB,EAAO0vB,SAAW,OAMlBzlE,KAAK6lE,MAAMH,SAAW3vB,EACtBA,EAAO0vB,SAAWzlE,KAAK6lE,MACvB9vB,EAAO2vB,SAAW,KAClB1lE,KAAK6lE,MAAQ9vB,IAKrB4vB,EAAyB9kE,UAAUgL,IAAM,SAAUm4D,EAAW8B,GAC1D,IAAI/vB,EACJ,IAAKA,EAAS/1C,KAAK4lE,MAAkB,OAAX7vB,EAAiBA,EAASA,EAAO2vB,SACvD,IAAwB,OAAnBI,GAA2BA,GAAkB/vB,EAAOysB,eACrDlgB,GAAevM,EAAOiuB,UAAWA,GACjC,OAAOjuB,EAGf,OAAO,MAOX4vB,EAAyB9kE,UAAUisC,OAAS,SAAUiJ,GASlD,IAAInhB,EAAOmhB,EAAO0vB,SACd3jE,EAAOi0C,EAAO2vB,SAalB,OAZa,OAAT9wC,EACA50B,KAAK4lE,MAAQ9jE,EAGb8yB,EAAK8wC,SAAW5jE,EAEP,OAATA,EACA9B,KAAK6lE,MAAQjxC,EAGb9yB,EAAK2jE,SAAW7wC,EAEE,OAAf50B,KAAK4lE,OAETD,EAtEkC,GAwEzCL,GAA+B,WAC/B,SAASA,IACLtlE,KAAK6H,IAAM,IAAIwtC,IA+CnB,OA7CAiwB,EAAczkE,UAAU0kE,IAAM,SAAUxvB,GACpC,IAAIhwC,EAAMgwC,EAAOiuB,UACb+B,EAAa/lE,KAAK6H,IAAIgE,IAAI9F,GACzBggE,IACDA,EAAa,IAAIJ,GACjB3lE,KAAK6H,IAAIguC,IAAI9vC,EAAKggE,IAEtBA,EAAWhvB,IAAIhB,IASnBuvB,EAAczkE,UAAUgL,IAAM,SAAUm4D,EAAW8B,GAC/C,IACIE,EAAahmE,KAAK6H,IAAIgE,IADhBm4D,GAEV,OAAOgC,EAAaA,EAAWn6D,IAAIm4D,EAAW8B,GAAkB,MAOpER,EAAczkE,UAAUisC,OAAS,SAAUiJ,GACvC,IAAIhwC,EAAMgwC,EAAOiuB,UAMjB,OALiBhkE,KAAK6H,IAAIgE,IAAI9F,GAEf+mC,OAAOiJ,IAClB/1C,KAAK6H,IAAIg6C,OAAO97C,GAEbgwC,GAEX31C,OAAO4D,eAAeshE,EAAczkE,UAAW,UAAW,CACtDgL,IAAK,WACD,OAAyB,IAAlB7L,KAAK6H,IAAIsH,MAEpB6oB,YAAY,EACZC,cAAc,IAElBqtC,EAAczkE,UAAUgsC,MAAQ,WAC5B7sC,KAAK6H,IAAIglC,SAENy4B,EAjDuB,GAmDlC,SAAS7C,GAAiBh0D,EAAM6zD,EAAiBC,GAC7C,IAAIK,EAAgBn0D,EAAKm0D,cACzB,GAAsB,OAAlBA,EACA,OAAOA,EACX,IAAIqD,EAAa,EAIjB,OAHI1D,GAAeK,EAAgBL,EAAYjhE,SAC3C2kE,EAAa1D,EAAYK,IAEtBA,EAAgBN,EAAkB2D;;;;;;;OAU7C,IAAIC,GAA8C,WAC9C,SAASA,KAQT,OANAA,EAA6BrlE,UAAUkgE,SAAW,SAAUj0D,GACxD,OAAOA,aAAeuoC,KAAOmO,GAAa12C,IAE9Co5D,EAA6BrlE,UAAUC,OAAS,WAC5C,OAAO,IAAIqlE,IAERD,EATsC,GAW7CC,GAAuC,WACvC,SAASA,IACLnmE,KAAKu6C,SAAW,IAAIlF,IACpBr1C,KAAKomE,SAAW,KAEhBpmE,KAAKqmE,aAAe,KACpBrmE,KAAKsmE,iBAAmB,KACxBtmE,KAAKumE,aAAe,KACpBvmE,KAAKwmE,aAAe,KACpBxmE,KAAKwhE,eAAiB,KACtBxhE,KAAKyhE,eAAiB,KACtBzhE,KAAK4hE,cAAgB,KACrB5hE,KAAK6hE,cAAgB,KA+MzB,OA7MAzhE,OAAO4D,eAAemiE,EAAsBtlE,UAAW,UAAW,CAC9DgL,IAAK,WACD,OAA+B,OAAxB7L,KAAKwhE,gBAAiD,OAAtBxhE,KAAKumE,cACjB,OAAvBvmE,KAAK4hE,eAEb5pC,YAAY,EACZC,cAAc,IAElBkuC,EAAsBtlE,UAAUohE,YAAc,SAAUt/D,GACpD,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAKomE,SAAqB,OAAXrwB,EAAiBA,EAASA,EAAOmsB,MAC1Dv/D,EAAGozC,IAGXowB,EAAsBtlE,UAAUmiE,oBAAsB,SAAUrgE,GAC5D,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAKsmE,iBAA6B,OAAXvwB,EAAiBA,EAASA,EAAOktB,cAClEtgE,EAAGozC,IAGXowB,EAAsBtlE,UAAU4lE,mBAAqB,SAAU9jE,GAC3D,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAKumE,aAAyB,OAAXxwB,EAAiBA,EAASA,EAAO2wB,aAC9D/jE,EAAGozC,IAGXowB,EAAsBtlE,UAAUqiE,iBAAmB,SAAUvgE,GACzD,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAKwhE,eAA2B,OAAXzrB,EAAiBA,EAASA,EAAOotB,WAChExgE,EAAGozC,IAGXowB,EAAsBtlE,UAAUyiE,mBAAqB,SAAU3gE,GAC3D,IAAIozC,EACJ,IAAKA,EAAS/1C,KAAK4hE,cAA0B,OAAX7rB,EAAiBA,EAASA,EAAO4sB,aAC/DhgE,EAAGozC,IAGXowB,EAAsBtlE,UAAU4iE,KAAO,SAAU57D,GAC7C,GAAKA,GAGA,KAAMA,aAAewtC,KAAOmO,GAAa37C,IAC1C,MAAM,IAAI7B,MAAM,yBAA2B2B,EAAUE,GAAO,6CAH5DA,EAAM,IAAIwtC,IAKd,OAAOr1C,KAAK2jE,MAAM97D,GAAO7H,KAAO,MAEpCmmE,EAAsBtlE,UAAUuR,UAAY,aAK5C+zD,EAAsBtlE,UAAU8iE,MAAQ,SAAU97D,GAC9C,IAAI0jC,EAAQvrC,KACZA,KAAK4jE,SACL,IAAIn8B,EAAeznC,KAAKomE,SAcxB,GAbApmE,KAAKqmE,aAAe,KACpBrmE,KAAK2mE,SAAS9+D,GAAK,SAAU9F,EAAOgE,GAChC,GAAI0hC,GAAgBA,EAAa1hC,MAAQA,EACrCwlC,EAAMq7B,mBAAmBn/B,EAAc1lC,GACvCwpC,EAAM86B,aAAe5+B,EACrBA,EAAeA,EAAay6B,UAE3B,CACD,IAAInsB,EAASxK,EAAMs7B,yBAAyB9gE,EAAKhE,GACjD0lC,EAAe8D,EAAMu7B,sBAAsBr/B,EAAcsO,OAI7DtO,EAAc,CACVA,EAAag9B,QACbh9B,EAAag9B,MAAMvC,MAAQ,MAE/BliE,KAAK4hE,cAAgBn6B,EACrB,IAAK,IAAIsO,EAAStO,EAAyB,OAAXsO,EAAiBA,EAASA,EAAO4sB,aACzD5sB,IAAW/1C,KAAKomE,WAChBpmE,KAAKomE,SAAW,MAEpBpmE,KAAKu6C,SAASsH,OAAO9L,EAAOhwC,KAC5BgwC,EAAO4sB,aAAe5sB,EAAOmsB,MAC7BnsB,EAAOsmB,cAAgBtmB,EAAOkf,aAC9Blf,EAAOkf,aAAe,KACtBlf,EAAO0uB,MAAQ,KACf1uB,EAAOmsB,MAAQ,KAQvB,OAJIliE,KAAKwmE,eACLxmE,KAAKwmE,aAAaE,aAAe,MACjC1mE,KAAKyhE,iBACLzhE,KAAKyhE,eAAe0B,WAAa,MAC9BnjE,KAAKskE,SAUhB6B,EAAsBtlE,UAAUimE,sBAAwB,SAAUz+D,EAAQ0tC,GACtE,GAAI1tC,EAAQ,CACR,IAAIusB,EAAOvsB,EAAOo8D,MAWlB,OAVA1uB,EAAOmsB,MAAQ75D,EACf0tC,EAAO0uB,MAAQ7vC,EACfvsB,EAAOo8D,MAAQ1uB,EACXnhB,IACAA,EAAKstC,MAAQnsB,GAEb1tC,IAAWrI,KAAKomE,WAChBpmE,KAAKomE,SAAWrwB,GAEpB/1C,KAAKqmE,aAAeh+D,EACbA,EAUX,OARIrI,KAAKqmE,cACLrmE,KAAKqmE,aAAanE,MAAQnsB,EAC1BA,EAAO0uB,MAAQzkE,KAAKqmE,cAGpBrmE,KAAKomE,SAAWrwB,EAEpB/1C,KAAKqmE,aAAetwB,EACb,MAEXowB,EAAsBtlE,UAAUgmE,yBAA2B,SAAU9gE,EAAKhE,GACtE,GAAI/B,KAAKu6C,SAAS3C,IAAI7xC,GAAM,CACxB,IAAIghE,EAAW/mE,KAAKu6C,SAAS1uC,IAAI9F,GACjC/F,KAAK4mE,mBAAmBG,EAAUhlE,GAClC,IAAI6yB,EAAOmyC,EAAStC,MAChB3iE,EAAOilE,EAAS7E,MASpB,OARIttC,IACAA,EAAKstC,MAAQpgE,GAEbA,IACAA,EAAK2iE,MAAQ7vC,GAEjBmyC,EAAS7E,MAAQ,KACjB6E,EAAStC,MAAQ,KACVsC,EAEX,IAAIhxB,EAAS,IAAIixB,GAAsBjhE,GAIvC,OAHA/F,KAAKu6C,SAAS1E,IAAI9vC,EAAKgwC,GACvBA,EAAOkf,aAAelzD,EACtB/B,KAAKinE,gBAAgBlxB,GACdA,GAGXowB,EAAsBtlE,UAAU+iE,OAAS,WACrC,GAAI5jE,KAAKskE,QAAS,CACd,IAAIvuB,OAAS,EAGb,IADA/1C,KAAKsmE,iBAAmBtmE,KAAKomE,SACxBrwB,EAAS/1C,KAAKsmE,iBAA6B,OAAXvwB,EAAiBA,EAASA,EAAOmsB,MAClEnsB,EAAOktB,cAAgBltB,EAAOmsB,MAIlC,IAAKnsB,EAAS/1C,KAAKumE,aAAyB,OAAXxwB,EAAiBA,EAASA,EAAO2wB,aAC9D3wB,EAAOsmB,cAAgBtmB,EAAOkf,aAElC,IAAKlf,EAAS/1C,KAAKwhE,eAA0B,MAAVzrB,EAAgBA,EAASA,EAAOotB,WAC/DptB,EAAOsmB,cAAgBtmB,EAAOkf,aAElCj1D,KAAKumE,aAAevmE,KAAKwmE,aAAe,KACxCxmE,KAAKwhE,eAAiBxhE,KAAKyhE,eAAiB,KAC5CzhE,KAAK4hE,cAAgB,OAI7BuE,EAAsBtlE,UAAU+lE,mBAAqB,SAAU7wB,EAAQ1M,GAC9DiZ,GAAejZ,EAAU0M,EAAOkf,gBACjClf,EAAOsmB,cAAgBtmB,EAAOkf,aAC9Blf,EAAOkf,aAAe5rB,EACtBrpC,KAAKknE,cAAcnxB,KAG3BowB,EAAsBtlE,UAAUomE,gBAAkB,SAAUlxB,GAC5B,OAAxB/1C,KAAKwhE,eACLxhE,KAAKwhE,eAAiBxhE,KAAKyhE,eAAiB1rB,GAG5C/1C,KAAKyhE,eAAe0B,WAAaptB,EACjC/1C,KAAKyhE,eAAiB1rB,IAG9BowB,EAAsBtlE,UAAUqmE,cAAgB,SAAUnxB,GAC5B,OAAtB/1C,KAAKumE,aACLvmE,KAAKumE,aAAevmE,KAAKwmE,aAAezwB,GAGxC/1C,KAAKwmE,aAAaE,aAAe3wB,EACjC/1C,KAAKwmE,aAAezwB,IAI5BowB,EAAsBtlE,UAAU8lE,SAAW,SAAU75D,EAAKnK,GAClDmK,aAAeuoC,IACfvoC,EAAI+B,QAAQlM,GAGZvC,OAAO6wC,KAAKnkC,GAAK+B,SAAQ,SAAU6qC,GAAK,OAAO/2C,EAAGmK,EAAI4sC,GAAIA,OAG3DysB,EA3N+B,GA6NtCa,GACA,SAASA,GAAsBjhE,GAC3B/F,KAAK+F,IAAMA,EACX/F,KAAKq8D,cAAgB,KACrBr8D,KAAKi1D,aAAe,KAEpBj1D,KAAKijE,cAAgB,KAErBjjE,KAAKkiE,MAAQ,KAEbliE,KAAKykE,MAAQ,KAEbzkE,KAAKmjE,WAAa,KAElBnjE,KAAK2iE,aAAe,KAEpB3iE,KAAK0mE,aAAe,MAiBxBS,GAAiC,WACjC,SAASA,EAAgB3I,GACrBx+D,KAAKw+D,UAAYA,EA4DrB,OA1DA2I,EAAgBrmE,OAAS,SAAU09D,EAAW5jD,GAC1C,GAAc,MAAVA,EAAgB,CAChB,IAAIwsD,EAASxsD,EAAO4jD,UAAU9vD,QAC9B8vD,EAAYA,EAAU/7D,OAAO2kE,GAEjC,OAAO,IAAID,EAAgB3I,IAsB/B2I,EAAgBE,OAAS,SAAU7I,GAC/B,MAAO,CACHzzD,QAASo8D,EACT5zB,WAAY,SAAU34B,GAClB,IAAKA,EAID,MAAM,IAAI5U,MAAM,2DAEpB,OAAOmhE,EAAgBrmE,OAAO09D,EAAW5jD,IAG7C43B,KAAM,CAAC,CAAC20B,EAAiB,IAAI1hE,EAAY,IAAIF,MAGrD4hE,EAAgBtmE,UAAUymE,KAAO,SAAUC,GACvC,IAAIloE,EAAUW,KAAKw+D,UAAU8I,MAAK,SAAU3J,GAAK,OAAOA,EAAEoD,SAASwG,MACnE,GAAe,MAAXloE,EACA,OAAOA,EAGP,MAAM,IAAI2G,MAAM,2CAA6CuhE,EAAW,cAWpF,SAASC,EAAwB3gE,GAC7B,OAAOA,EAAW,aAAYA;;;;;;;OAZkE2gE,CAAwBD,GAAY,MAIpIJ,EAAgB9/D,MAAQlB,EAAmB,CACvCb,MAAO6hE,EACP9gE,WAAY,OACZhH,QAAS,WAAc,OAAO,IAAI8nE,EAAgB,CAAC,IAAIrG,QAEpDqG,EA9DyB,GAgFhCM,GAAiC,WACjC,SAASA,EAAgBjJ,GACrBx+D,KAAKw+D,UAAYA,EAyDrB,OAvDAiJ,EAAgB3mE,OAAS,SAAU09D,EAAW5jD,GAC1C,GAAIA,EAAQ,CACR,IAAIwsD,EAASxsD,EAAO4jD,UAAU9vD,QAC9B8vD,EAAYA,EAAU/7D,OAAO2kE,GAEjC,OAAO,IAAIK,EAAgBjJ,IAsB/BiJ,EAAgBJ,OAAS,SAAU7I,GAC/B,MAAO,CACHzzD,QAAS08D,EACTl0B,WAAY,SAAU34B,GAClB,IAAKA,EAGD,MAAM,IAAI5U,MAAM,2DAEpB,OAAOyhE,EAAgB3mE,OAAO09D,EAAW5jD,IAG7C43B,KAAM,CAAC,CAACi1B,EAAiB,IAAIhiE,EAAY,IAAIF,MAGrDkiE,EAAgB5mE,UAAUymE,KAAO,SAAUI,GACvC,IAAIroE,EAAUW,KAAKw+D,UAAU8I,MAAK,SAAU3J,GAAK,OAAOA,EAAEoD,SAAS2G,MACnE,GAAIroE,EACA,OAAOA,EAEX,MAAM,IAAI2G,MAAM,2CAA6C0hE,EAAK,MAGtED,EAAgBpgE,MAAQlB,EAAmB,CACvCb,MAAOmiE,EACPphE,WAAY,OACZhH,QAAS,WAAc,OAAO,IAAIooE,EAAgB,CAAC,IAAIvB,QAEpDuB,EA3DyB,GAwEhCE,GAAa,CAAC,IAAIzB,IAKlB0B,GAAyB,IAAIT,GADd,CAAC,IAAIrG,KAEpB+G,GAAyB,IAAIJ,GAAgBE,IA2B7C77B,GAA6B,WAC7B,SAASA,KAOT,OADAA,EAAYthC,kBAAoB,WAAc,OAAOs9D,GAA4Bh8B,EAAaH,KACvFG,EARqB,GAU5Bi8B,GAtqVJ,SAASC,GAAkBn8B,EAAkBH,GACzC,OAAOE,GAAkBC,EAAkBH,EAAiBhzB,KAA4BL,OAuqVxFyvD,GAA8BC,GAiB9Bx7B,GAAkC,WAClC,SAASA,KAOT,OADAA,EAAiB/hC,kBAAoB,WAAc,OAAOy9D,GAAkC17B,EAAkBZ,KACvGY,EAR0B,GAUjC27B,GA3oVJ,SAASC,GAAuB77B,EAAuBZ,GAEnD,OAAOW,GAAmBC,EAAuBZ,EAD7BhzB,KAC6DL,OA2oVjF4vD,GAAoCC;;;;;;;;AASxC,SAASE,GAA4Cn7D,EAASwT,EAAU4nD,EAAWC,GAC/E,IAAIv6D,EAAM,8GAAgH0S,EAAW,sBAAwB4nD,EAAY,KAMzK,OALIC,IACAv6D,GACI,wJAcZ,SAASw6D,EAAex6D,EAAKd,GACzB,IAAIu7D,EAAM,IAAIxiE,MAAM+H,GAEpB,OADA06D,GAAiBD,EAAKv7D,GACfu7D,EAdAD,CAAex6D,EAAKd,GAgB/B,SAASw7D,GAAiBD,EAAKv7D,GAC3Bu7D,EAAuB,eAAIv7D,EAC3Bu7D,EAAgB,cAAIv7D,EAAQy7D,SAAS7kE,KAAKoJ,GAK9C,SAAS07D,GAAmBpkC,GACxB,OAAO,IAAIv+B,MAAM,wDAA0Du+B;;;;;;;OAc/E,SAASqkC,GAAe5xD,EAAM6xD,EAAgBC,GAU1C,IAAIC,EAAQ/xD,EAAK+xD,MACbC,EAAoB,KAARD,EAChB,OAAIC,IAAcH,GACd7xD,EAAK+xD,OAAiB,KAARA,EAAsCD,EACpD9xD,EAAKiyD,WAAa,GACX,GAEJD,IAAcF,EAIzB,SAASI,GAA4BlyD,EAAMgyD,EAAWrkE,GAClD,OAAkB,KAAbqS,EAAK+xD,SAAuCC,GAAahyD,EAAKiyD,WAAatkE,IAC5EqS,EAAKiyD,UAAYtkE,EAAQ,GAClB,GAuBf,SAASwkE,GAAWnyD,EAAMrS,GACtB,OAAOqS,EAAKqgB,MAAM1yB,GAKtB,SAASykE,GAAcpyD,EAAMrS,GACzB,OAAOqS,EAAKqgB,MAAM1yB,GAKtB,SAAS0kE,GAAeryD,EAAMrS,GAC1B,OAAOqS,EAAKqgB,MAAM1yB,GAKtB,SAAS2kE,GAAqBtyD,EAAMrS,GAChC,OAAOqS,EAAKqgB,MAAM1yB,GAKtB,SAAS4kE,GAAYvyD,EAAMrS,GACvB,OAAOqS,EAAKqgB,MAAM1yB,GAEtB,IASI6kE,GAAW,CACXC,oBAAgBnjE,EAChBojE,oBAAgBpjE,EAChB4lC,wBAAoB5lC,EACpBqjE,yBAAqBrjE,EACrBsjE,uBAAmBtjE,EACnBujE,sBAAkBvjE,EAClBwjE,2BAAuBxjE,EACvByjE,oBAAgBzjE,EAChB0jE,wBAAoB1jE,EACpB2jE,wBAAoB3jE,EACpB4jE,iBAAa5jE,EACb6jE,gBAAY7jE,EACZ8jE,wBAAoB9jE,EACpB+jE,iBAAa/jE,EACbgkE,sBAAkBhkE,EAClBikE,oBAAgBjkE,EAChBkkE,wBAAoBlkE,GAUpBmkE,GAAO,aACPC,GAAiB,IAAIr1B,IACzB,SAASs1B,GAASrlE,GACd,IAAIS,EAAM2kE,GAAe7+D,IAAIvG,GAK7B,OAJKS,IACDA,EAAM4B,EAAUrC,GAAS,IAAMolE,GAAev7D,KAC9Cu7D,GAAe70B,IAAIvwC,EAAOS,IAEvBA,EAuBX,IAAI6kE,GAAqB,EAkBzB,SAASC,GAAa7zD,EAAM/P,EAAK6jE,EAAY/oE,GAEzC,UAAkB,EAAbiV,EAAK+xD,QACLzmB,GAFWtrC,EAAK+zD,UAES9jE,EAAIsS,aAAeuxD,GAAa/oE,IAKlE,SAASipE,GAAsBh0D,EAAM/P,EAAK6jE,EAAY/oE,GAClD,QAAI8oE,GAAa7zD,EAAM/P,EAAK6jE,EAAY/oE,KACpCiV,EAAK+zD,UAAU9jE,EAAIsS,aAAeuxD,GAAc/oE,GACzC,GAIf,SAASkpE,GAAsBj0D,EAAM/P,EAAK6jE,EAAY/oE,GAClD,IAAI0e,EAAWzJ,EAAK+zD,UAAU9jE,EAAIsS,aAAeuxD,GACjD,GAAkB,EAAb9zD,EAAK+xD,QAAsCtmB,GAAehiC,EAAU1e,GAAQ,CAC7E,IAAImpE,EAAcjkE,EAAIuuB,SAASs1C,GAAY7nE,KAC3C,MAAMmlE,GAA4CoB,GAASY,mBAAmBpzD,EAAM/P,EAAIiQ,WAAYg0D,EAAc,KAAOzqD,EAAUyqD,EAAc,KAAOnpE,EAAmD,IAA9B,EAAbiV,EAAK+xD,SAG7K,SAASoC,GAAwBn0D,GAE7B,IADA,IAAIo0D,EAAWp0D,EACRo0D,GACsB,EAArBA,EAASnkE,IAAIyE,QACb0/D,EAASrC,OAAS,GAEtBqC,EAAWA,EAASC,qBAAuBD,EAASxwD,OAG5D,SAAS0wD,GAAsCt0D,EAAMu0D,GAEjD,IADA,IAAIH,EAAWp0D,EACRo0D,GAAYA,IAAaG,GAC5BH,EAASrC,OAAS,GAClBqC,EAAWA,EAASC,qBAAuBD,EAASxwD,OAG5D,SAAS4wD,GAAcx0D,EAAME,EAAW0zC,EAAW6gB,GAC/C,IAMI,OADAN,GAHgC,SADlBn0D,EAAK/P,IAAIowB,MAAMngB,GACLxL,MACpB09D,GAAcpyD,EAAME,GAAW4qB,cAC/B9qB,GAEGwyD,GAASa,YAAYrzD,EAAME,EAAW0zC,EAAW6gB,GAE5D,MAAOrpE,GAEH4U,EAAK00D,KAAK7nC,aAAa5e,YAAY7iB,IAG3C,SAASupE,GAAsB30D,GAC3B,OAAIA,EAAK4D,OAEEwuD,GADUpyD,EAAK4D,OACW5D,EAAK40D,cAAc10D,WAEjD,KAOX,SAAS20D,GAAa70D,GAElB,OADiBA,EAAK4D,OAEX5D,EAAK40D,cAAchxD,OAGnB,KAGf,SAASkxD,GAAW90D,EAAM/P,GACtB,OAAoB,UAAZA,EAAIyE,OACR,KAAK,EACD,OAAO09D,GAAcpyD,EAAM/P,EAAIiQ,WAAW60D,cAC9C,KAAK,EACD,OAAO5C,GAAWnyD,EAAM/P,EAAIiQ,WAAW80D,YAMnD,SAASC,GAAgBj1D,GACrB,QAASA,EAAK4D,WAAwC,MAA3B5D,EAAK40D,cAAclgE,OAElD,SAASwgE,GAAel1D,GACpB,SAASA,EAAK4D,QAAuC,MAA3B5D,EAAK40D,cAAclgE,OAEjD,SAASygE,GAAcC,GACnB,OAAO,GAAMA,EAAU,GAE3B,SAASC,GAAuBC,GAC5B,IAAIC,EAAiB,GACjBC,EAAkB,EAClBC,EAAa,GAajB,OAZIH,GACAA,EAAkBz9D,SAAQ,SAAUpL,GAChC,IAAIomB,EAAK3nB,EAAOuB,EAAI,GAAI2oE,EAAUviD,EAAG,GAAI6iD,EAAY7iD,EAAG,GACjC,iBAAZuiD,GACPG,EAAeH,GAAWM,EAC1BF,GAAmBL,GAAcC,IAGjCK,EAAWL,GAAWM,KAI3B,CAAEH,eAAgBA,EAAgBE,WAAYA,EAAYD,gBAAiBA,GAEtF,SAASG,GAAan6B,EAAMo6B,GACxB,OAAOp6B,EAAK3qC,KAAI,SAAU9F,GACtB,IAAI0B,EACA6B,EACAoG,EAWJ,OAVInL,MAAMqH,QAAQ7F,IACS2J,GAAvBjI,EAAKvB,EAAOH,EAAO,IAAe,GAAIuD,EAAQ7B,EAAG,KAGjDiI,EAAQ,EACRpG,EAAQvD,GAERuD,IAA2B,mBAAVA,GAAyC,iBAAVA,IAAuBsnE,GACvExsE,OAAO4D,eAAesB,EAz2oBrB,WAy2oBoC,CAAEvD,MAAO6qE,EAAY30C,cAAc,IAErE,CAAEvsB,MAAOA,EAAOpG,MAAOA,EAAOqlE,SAAUA,GAASrlE,OAGhE,SAASunE,GAAuB71D,EAAM81D,EAAY7lE,GAC9C,IAAI+9B,EAAe/9B,EAAI+9B,aACvB,OAAIA,EACmD,IAAzB,EAArBA,EAAat5B,QAC0C,IAAlC,SAArBs5B,EAAat5B,QACbs5B,EAAallB,QAAQitD,uBAClB/nC,EAAallB,QAAQitD,sBAAsBh6D,gBAAkBzT,EAAQwJ,kBAAkB0+B,OAGpF4hC,GAAcpyD,EAAM/P,EAAI+9B,aAAa9tB,WAAW60D,mBAN3D,EAUOe,EAGf,IAAIE,GAAmB,IAAIC,QAC3B,SAASC,GAAkB7tE,GACvB,IAAI0C,EAAQirE,GAAiBnhE,IAAIxM,GAMjC,OALK0C,KACDA,EAAQ1C,GAAQ,WAAc,OAAOorE,OAC/BprE,QAAUA,EAChB2tE,GAAiBn3B,IAAIx2C,EAAS0C,IAE3BA,EAOX,SAASorE,GAAqBn2D,EAAMutB,EAAQtY,EAAYlD,EAAa9jB,GAElD,IAAXs/B,IACAtY,EAAajV,EAAKZ,SAAS6V,WAAW6/C,GAAW90D,EAAMA,EAAK/P,IAAImmE,sBAEpEC,GAAwBr2D,EAAMutB,EAAQ,EAAGvtB,EAAK/P,IAAIowB,MAAM/1B,OAAS,EAAG2qB,EAAYlD,EAAa9jB,GAEjG,SAASooE,GAAwBr2D,EAAMutB,EAAQmrB,EAAYhsC,EAAUuI,EAAYlD,EAAa9jB,GAC1F,IAAK,IAAI9D,EAAIuuD,EAAYvuD,GAAKuiB,EAAUviB,IAAK,CACzC,IAAImsE,EAAUt2D,EAAK/P,IAAIowB,MAAMl2B,GACT,GAAhBmsE,EAAQ5hE,OACR6hE,GAAgBv2D,EAAMs2D,EAAS/oC,EAAQtY,EAAYlD,EAAa9jB,GAGpE9D,GAAKmsE,EAAQE,YAGrB,SAASC,GAA0Bz2D,EAAM02D,EAAgBnpC,EAAQtY,EAAYlD,EAAa9jB,GAEtF,IADA,IAAI0oE,EAAW32D,EACR22D,IAAa1B,GAAgB0B,IAChCA,EAAWA,EAAS/yD,OAMxB,IAJA,IAAIzD,EAAWw2D,EAAS/yD,OACpBgzD,EAAY/B,GAAa8B,GAEzBjqD,EAAWkqD,EAAU12D,UAAY02D,EAAUJ,WACtCrsE,EAFQysE,EAAU12D,UAAY,EAEd/V,GAAKuiB,EAAUviB,IAAK,CACzC,IAAImsE,EAAUn2D,EAASlQ,IAAIowB,MAAMl2B,GAC7BmsE,EAAQI,iBAAmBA,GAC3BH,GAAgBp2D,EAAUm2D,EAAS/oC,EAAQtY,EAAYlD,EAAa9jB,GAGxE9D,GAAKmsE,EAAQE,WAEjB,IAAKr2D,EAASyD,OAAQ,CAElB,IAAIizD,EAAiB72D,EAAK00D,KAAKv+B,iBAAiBugC,GAChD,GAAIG,EACA,IAAS1sE,EAAI,EAAGA,EAAI0sE,EAAevsE,OAAQH,IACvC2sE,GAAqB92D,EAAM62D,EAAe1sE,GAAIojC,EAAQtY,EAAYlD,EAAa9jB,IAK/F,SAASsoE,GAAgBv2D,EAAMs2D,EAAS/oC,EAAQtY,EAAYlD,EAAa9jB,GACrE,GAAoB,EAAhBqoE,EAAQ5hE,MACR+hE,GAA0Bz2D,EAAMs2D,EAAQS,UAAUppE,MAAO4/B,EAAQtY,EAAYlD,EAAa9jB,OAEzF,CACD,IAAI+oE,EAAKlC,GAAW90D,EAAMs2D,GAe1B,GAde,IAAX/oC,GAAmD,SAAhB+oC,EAAQ5hE,OACnB,GAAvB4hE,EAAQW,cAEkB,GAAvBX,EAAQW,cACRH,GAAqB92D,EAAMg3D,EAAIzpC,EAAQtY,EAAYlD,EAAa9jB,GAEzC,GAAvBqoE,EAAQW,cAERH,GADe1E,GAAcpyD,EAAMs2D,EAAQp2D,WAAW4qB,cACvBksC,EAAIzpC,EAAQtY,EAAYlD,EAAa9jB,IAIxE6oE,GAAqB92D,EAAMg3D,EAAIzpC,EAAQtY,EAAYlD,EAAa9jB,GAEhD,SAAhBqoE,EAAQ5hE,MAER,IADA,IAAIwiE,EAAgB9E,GAAcpyD,EAAMs2D,EAAQp2D,WAAWi3D,cAAcC,eAChE10B,EAAI,EAAGA,EAAIw0B,EAAc5sE,OAAQo4C,IACtCyzB,GAAqBe,EAAcx0B,GAAInV,EAAQtY,EAAYlD,EAAa9jB,GAG5D,EAAhBqoE,EAAQ5hE,QAAgC4hE,EAAQxtD,QAAQ7c,MACxDoqE,GAAwBr2D,EAAMutB,EAAQ+oC,EAAQp2D,UAAY,EAAGo2D,EAAQp2D,UAAYo2D,EAAQE,WAAYvhD,EAAYlD,EAAa9jB,IAI1I,SAAS6oE,GAAqB92D,EAAM80D,EAAYvnC,EAAQtY,EAAYlD,EAAa9jB,GAC7E,IAAImR,EAAWY,EAAKZ,SACpB,OAAQmuB,GACJ,KAAK,EACDnuB,EAAS2Q,YAAYkF,EAAY6/C,GACjC,MACJ,KAAK,EACD11D,EAASqxB,aAAaxb,EAAY6/C,EAAY/iD,GAC9C,MACJ,KAAK,EACD3S,EAAS4R,YAAYiE,EAAY6/C,GACjC,MACJ,KAAK,EACD7mE,EAAO3C,KAAKwpE,IAIxB,IAAIuC,GAAe,kBACnB,SAASC,GAAerrE,GACpB,GAAgB,MAAZA,EAAK,GAAY,CACjB,IAAImmB,EAAQnmB,EAAKmmB,MAAMilD,IACvB,MAAO,CAACjlD,EAAM,GAAIA,EAAM,IAE5B,MAAO,CAAC,GAAInmB,GAEhB,SAASsrE,GAAiB/4C,GAEtB,IADA,IAAI9pB,EAAQ,EACHvK,EAAI,EAAGA,EAAIq0B,EAASl0B,OAAQH,IACjCuK,GAAS8pB,EAASr0B,GAAGuK,MAEzB,OAAOA,EA2CX,SAAS8iE,GAAkBhuD,GACvB,OAAY,MAALA,EAAYA,EAAE5d,WAAa,GAEtC,IAUI6rE,GAAkB,GAClBC,GAAsB/D,GAAShyB,IAC/Bg2B,GAAsBhE,GAAShgE,IAC/BikE,GAAsBjE,GAASh9D,IAqDnC,SAASkhE,GAAmB/7D,EAAMg8D,EAAQ7iE,QAChB,IAAlBA,IAA4BA,EAAgB0sC,GAAS/tC,oBACzD,IAAIS,EAASF,GAAmB2H,GAChC,IACI,GAAmB,EAAfg8D,EAAOpjE,MACP,OAAOojE,EAAOxpE,MAKlB,GAHmB,EAAfwpE,EAAOpjE,QACPO,EAAgB,MAED,EAAf6iE,EAAOpjE,MACP,OAAOoH,EAAKqrC,QAAQtyC,IAAIijE,EAAOxpE,MAAO2G,GAE1C,IAAI8iE,EAAaD,EAAOnE,SACxB,OAAQoE,GACJ,KAAKL,GACL,KAAKC,GACL,KAAKC,GACD,OAAO97D,EAEf,IACI5G,EADA8iE,EAAcl8D,EAAKm8D,KAAKC,eAAeH,GAE3C,GAAIC,EAAa,CACb,IAAIG,EAAmBr8D,EAAKorC,WAAW8wB,EAAYrqE,OAKnD,YAJyB2B,IAArB6oE,IACAA,EAAmBr8D,EAAKorC,WAAW8wB,EAAYrqE,OAC3CyqE,GAAwBt8D,EAAMk8D,IAE/BG,IAAqBV,QAAkBnoE,EAAY6oE,EAEzD,IAAKjjE,EAAgBtF,EAAiBkoE,EAAOxpE,SAyB1D,SAAS+pE,EAAc9hC,EAAUtmC,GAC7B,IAAIZ,EAAaY,EAAIZ,WACrB,OAAqB,MAAdA,IACa,QAAfA,GAAwBA,IAAeknC,EAAS0hC,KAAKx6D,OAN9D,SAAS66D,EAA0B/hC,EAAU94B,GACzC,OAAO84B,EAAS0hC,KAAKM,QAAQrnE,QAAQuM,IAAU,EAMvC66D,CAA0B/hC,EAAUlnC,IA7BqBgpE,CAAcv8D,EAAM5G,GAAgB,CAC7F,IAAIvH,EAAQmO,EAAKorC,WAAW58C,OAS5B,OARAwR,EAAKm8D,KAAKvoE,UAAU/B,GAASmO,EAAKm8D,KAAKC,eAAeJ,EAAOnE,UAAY,CACrEj/D,MAAO,KACP3J,MAAOmK,EAAc7M,QACrBmzC,KAAM,GACN7tC,MAAOA,EACPW,MAAOwpE,EAAOxpE,OAElBwN,EAAKorC,WAAWv5C,GAAS8pE,GACjB37D,EAAKorC,WAAWv5C,GACpByqE,GAAwBt8D,EAAMA,EAAKm8D,KAAKC,eAAeJ,EAAOnE,WAEjE,OAAmB,EAAfmE,EAAOpjE,MACLO,EAEJ6G,EAAKqrC,QAAQtyC,IAAIijE,EAAOxpE,MAAO2G,GAE1C,QACId,GAAmBE,IAY3B,SAAS+jE,GAAwB7hC,EAAUyhC,GACvC,IAAIQ,EACJ,OAA4B,UAApBR,EAAYtjE,OAChB,KAAK,IACD8jE,EAsBZ,SAASC,EAAaliC,EAAUppC,EAAMquC,GAClC,IAAI6L,EAAM7L,EAAKlxC,OACf,OAAQ+8C,GACJ,KAAK,EACD,OAAO,IAAIl6C,EACf,KAAK,EACD,OAAO,IAAIA,EAAK0qE,GAAmBthC,EAAUiF,EAAK,KACtD,KAAK,EACD,OAAO,IAAIruC,EAAK0qE,GAAmBthC,EAAUiF,EAAK,IAAKq8B,GAAmBthC,EAAUiF,EAAK,KAC7F,KAAK,EACD,OAAO,IAAIruC,EAAK0qE,GAAmBthC,EAAUiF,EAAK,IAAKq8B,GAAmBthC,EAAUiF,EAAK,IAAKq8B,GAAmBthC,EAAUiF,EAAK,KACpI,QAEI,IADA,IAAIk9B,EAAY,GACPvuE,EAAI,EAAGA,EAAIk9C,EAAKl9C,IACrBuuE,EAAUvuE,GAAK0tE,GAAmBthC,EAAUiF,EAAKrxC,IAErD,OAAO,IAAKgD,EAAKN,KAAKrC,MAAM2C,EAAM3B,EAAS,MAAC,GAASktE,MAtCxCD,CAAaliC,EAAUyhC,EAAYjtE,MAAOitE,EAAYx8B,MACnE,MACJ,KAAK,KACDg9B,EAsCZ,SAASG,EAAapiC,EAAUluC,EAASmzC,GACrC,IAAI6L,EAAM7L,EAAKlxC,OACf,OAAQ+8C,GACJ,KAAK,EACD,OAAOh/C,IACX,KAAK,EACD,OAAOA,EAAQwvE,GAAmBthC,EAAUiF,EAAK,KACrD,KAAK,EACD,OAAOnzC,EAAQwvE,GAAmBthC,EAAUiF,EAAK,IAAKq8B,GAAmBthC,EAAUiF,EAAK,KAC5F,KAAK,EACD,OAAOnzC,EAAQwvE,GAAmBthC,EAAUiF,EAAK,IAAKq8B,GAAmBthC,EAAUiF,EAAK,IAAKq8B,GAAmBthC,EAAUiF,EAAK,KACnI,QAEI,IADA,IAAIk9B,EAAY,GACPvuE,EAAI,EAAGA,EAAIk9C,EAAKl9C,IACrBuuE,EAAUvuE,GAAK0tE,GAAmBthC,EAAUiF,EAAKrxC,IAErD,OAAO9B,EAAQmC,WAAM,EAAQgB,EAASktE,KAtDzBC,CAAapiC,EAAUyhC,EAAYjtE,MAAOitE,EAAYx8B,MACnE,MACJ,KAAK,KACDg9B,EAAaX,GAAmBthC,EAAUyhC,EAAYx8B,KAAK,IAC3D,MACJ,KAAK,IACDg9B,EAAaR,EAAYjtE,MAWjC,OAJIytE,IAAef,IAAkC,OAAfe,GAA6C,iBAAfA,GAC1C,OAApBR,EAAYtjE,OAAqE,mBAA3B8jE,EAAWn9D,cACnE28D,EAAYtjE,OAAS,aAEHpF,IAAfkpE,EAA2Bf,GAAkBe,EAgHxD,SAASI,GAAmBC,EAAanxC,GACrC,IAAIwvC,EAAgB2B,EAAY1B,cAAcC,eAI9C,IAHiB,MAAb1vC,GAAqBA,GAAawvC,EAAc5sE,UAChDo9B,EAAYwvC,EAAc5sE,OAAS,GAEnCo9B,EAAY,EACZ,OAAO,KAEX,IAAI1nB,EAAOk3D,EAAcxvC,GAMzB,OALA1nB,EAAKq0D,oBAAsB,KAC3Br8D,GAAgBk/D,EAAexvC,GAE/B8qC,GAASgB,mBAAmBxzD,GAC5B84D,GAAmB94D,GACZA,EA+BX,SAAS+4D,GAAyBF,EAAaG,EAAUh5D,GACrD,IAAIi5D,EAAiBD,EAAWlE,GAAWkE,EAAUA,EAAS/oE,IAAImmE,oBAAsByC,EAAY9D,cAChG9/C,EAAajV,EAAKZ,SAAS6V,WAAWgkD,GACtClnD,EAAc/R,EAAKZ,SAAS2S,YAAYknD,GAG5C9C,GAAqBn2D,EAAM,EAAsBiV,EAAYlD,OAAaziB,GAE9E,SAASwpE,GAAmB94D,GACxBm2D,GAAqBn2D,EAAM,EAAqB,KAAM,UAAM1Q;;;;;;;OAUhE,IAAI4pE,GAAgB,GAMpB,SAASC,GAAkCjjC,GACvC,OAAOA,EAAiBkjC,eAE5B,IAAIC,GAAmC,SAAU3qD,GAE7C,SAAS2qD,EAAkBj+C,EAAUqtC,EAAe2Q,EAAgBE,EAASC,EAAUx/D,GACnF,IAAIw6B,EAGJ7lB,EAAOnkB,KAAKvB,OAASA,KAOrB,OANAurC,EAAMnZ,SAAWA,EACjBmZ,EAAMk0B,cAAgBA,EACtBl0B,EAAM+kC,QAAUA,EAChB/kC,EAAMglC,SAAWA,EACjBhlC,EAAMx6B,mBAAqBA,EAC3Bw6B,EAAM6kC,eAAiBA,EAChB7kC,EA2CX,OAvDA7qC,EAAU2vE,EAAmB3qD,GAc7BtlB,OAAO4D,eAAeqsE,EAAkBxvE,UAAW,SAAU,CACzDgL,IAAK,WACD,IAAI2kE,EAAY,GACZp/D,EAASpR,KAAKswE,QAClB,IAAK,IAAIjsE,KAAY+M,EAEjBo/D,EAAUluE,KAAK,CAAE+B,SAAUA,EAAUosE,aADlBr/D,EAAO/M,KAG9B,OAAOmsE,GAEXx4C,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeqsE,EAAkBxvE,UAAW,UAAW,CAC1DgL,IAAK,WACD,IAAI6kE,EAAa,GACjB,IAAK,IAAIrsE,KAAYrE,KAAKuwE,SAEtBG,EAAWpuE,KAAK,CAAE+B,SAAUA,EAAUosE,aADnBzwE,KAAKuwE,SAASlsE,KAGrC,OAAOqsE,GAEX14C,YAAY,EACZC,cAAc,IAKlBo4C,EAAkBxvE,UAAUC,OAAS,SAAUsK,EAAU+hC,EAAkBwyB,EAAoBpyB,GAC3F,IAAKA,EACD,MAAM,IAAIvnC,MAAM,+BAEpB,IAAI2qE,EAAUzD,GAAkBltE,KAAKowE,gBACjCQ,EAAqBD,EAAQt5C,MAAM,GAAGvX,QAAQ+wD,kBAAkB35D,UAChEF,EAAOwyD,GAASE,eAAet+D,EAAU+hC,GAAoB,GAAIwyB,EAAoBgR,EAASpjC,EAAU2iC,IACxGpgD,EAAYu5C,GAAeryD,EAAM45D,GAAoBnuD,SAIzD,OAHIk9C,GACA3oD,EAAKZ,SAAS4H,aAAaorD,GAAcpyD,EAAM,GAAG+0D,cAAe,aAActL,GAAQC,MAEpF,IAAIoQ,GAAc95D,EAAM,IAAI+5D,GAAS/5D,GAAO8Y,IAEhDugD,EAxD2B,CAyDpCtR,IACE+R,GAA+B,SAAUprD,GAEzC,SAASorD,EAAcxlC,EAAO0lC,EAAUC,GACpC,IAAI1lC,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KAQjC,OAPAurC,EAAMD,MAAQA,EACdC,EAAMylC,SAAWA,EACjBzlC,EAAM0lC,WAAaA,EACnB1lC,EAAM2lC,OAAS3lC,EAAMD,MAAMrkC,IAAIowB,MAAM,GACrCkU,EAAMp0B,SAAW65D,EACjBzlC,EAAM4lC,kBAAoBH,EAC1BzlC,EAAM9oB,SAAWwuD,EACV1lC,EA6BX,OAvCA7qC,EAAUowE,EAAeprD,GAYzBtlB,OAAO4D,eAAe8sE,EAAcjwE,UAAW,WAAY,CACvDgL,IAAK,WACD,OAAO,IAAI8/B,GAAWy9B,GAAcppE,KAAKsrC,MAAOtrC,KAAKkxE,OAAOh6D,WAAW60D,gBAE3E/zC,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe8sE,EAAcjwE,UAAW,WAAY,CACvDgL,IAAK,WACD,OAAO,IAAIulE,GAAUpxE,KAAKsrC,MAAOtrC,KAAKkxE,SAE1Cl5C,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe8sE,EAAcjwE,UAAW,gBAAiB,CAC5DgL,IAAK,WACD,OAAO7L,KAAKixE,WAAWrwE,aAE3Bo3B,YAAY,EACZC,cAAc,IAElB64C,EAAcjwE,UAAUwmC,QAAU,WAC9BrnC,KAAKgxE,SAAS3pC,WAElBypC,EAAcjwE,UAAUuR,UAAY,SAAUm4B,GAC1CvqC,KAAKgxE,SAAS5+D,UAAUm4B,IAErBumC,EAxCuB,CAyChChS,IACF,SAASuS,GAAwBr6D,EAAMs6D,EAAOC,GAC1C,OAAO,IAAIC,GAAkBx6D,EAAMs6D,EAAOC,GAE9C,IAAIC,GAAmC,WACnC,SAASA,EAAkBlmC,EAAO4lC,EAAQO,GACtCzxE,KAAKsrC,MAAQA,EACbtrC,KAAKkxE,OAASA,EACdlxE,KAAKyxE,MAAQA,EAIbzxE,KAAKouE,eAAiB,GAkG1B,OAhGAhuE,OAAO4D,eAAewtE,EAAkB3wE,UAAW,UAAW,CAC1DgL,IAAK,WACD,OAAO,IAAI8/B,GAAW3rC,KAAKyxE,MAAM1F,gBAErC/zC,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAewtE,EAAkB3wE,UAAW,WAAY,CAC3DgL,IAAK,WACD,OAAO,IAAIulE,GAAUpxE,KAAKsrC,MAAOtrC,KAAKkxE,SAE1Cl5C,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAewtE,EAAkB3wE,UAAW,iBAAkB,CAEjEgL,IAAK,WAGD,IAFA,IAAImL,EAAOhX,KAAKsrC,MACZgmC,EAAQtxE,KAAKkxE,OAAOt2D,QAChB02D,GAASt6D,GACbs6D,EAAQzF,GAAa70D,GACrBA,EAAOA,EAAK4D,OAEhB,OAAO5D,EAAO,IAAIo6D,GAAUp6D,EAAMs6D,GAAS,IAAIF,GAAUpxE,KAAKsrC,MAAO,OAEzEtT,YAAY,EACZC,cAAc,IAElBu5C,EAAkB3wE,UAAUgsC,MAAQ,WAEhC,IADA,IACS1rC,EADCnB,KAAKouE,eAAe9sE,OACX,EAAGH,GAAK,EAAGA,IAAK,CAC/B,IAAI6V,EAAO44D,GAAmB5vE,KAAKyxE,MAAOtwE,GAC1CqoE,GAASU,YAAYlzD,KAG7Bw6D,EAAkB3wE,UAAUgL,IAAM,SAAUlH,GACxC,IAAIqS,EAAOhX,KAAKouE,eAAezpE,GAC/B,GAAIqS,EAAM,CACN,IAAI06D,EAAM,IAAIX,GAAS/5D,GAEvB,OADA06D,EAAI3mC,yBAAyB/qC,MACtB0xE,EAEX,OAAO,MAEXtxE,OAAO4D,eAAewtE,EAAkB3wE,UAAW,SAAU,CACzDgL,IAAK,WACD,OAAO7L,KAAKouE,eAAe9sE,QAE/B02B,YAAY,EACZC,cAAc,IAElBu5C,EAAkB3wE,UAAUqrC,mBAAqB,SAAUa,EAAa9/B,EAAStI,GAC7E,IAAIynC,EAAUW,EAAYb,mBAAmBj/B,GAAW,IAExD,OADAjN,KAAKgtC,OAAOZ,EAASznC,GACdynC,GAEXolC,EAAkB3wE,UAAUosC,gBAAkB,SAAUC,EAAkBvoC,EAAOyG,EAAU+hC,EAAkBC,GACzG,IAAIC,EAAkBjiC,GAAYpL,KAAKstC,eAClCF,GAAiBF,aAA4BwyB,KAC9CtyB,EAAcC,EAAgBxhC,IAAI8B,KAEtC,IAAI6/B,EAAeN,EAAiBpsC,OAAOusC,EAAiBF,OAAkB7mC,EAAW8mC,GAEzF,OADAptC,KAAKgtC,OAAOQ,EAAar2B,SAAUxS,GAC5B6oC,GAEXgkC,EAAkB3wE,UAAUmsC,OAAS,SAAUZ,EAASznC,GACpD,GAAIynC,EAAQ9S,UACR,MAAM,IAAItzB,MAAM,sDAEpB,IAAI2rE,EAAWvlC;;;;;;;;AAIf,OAlTR,SAASwlC,EAAmBryD,EAAYswD,EAAanxC,EAAW1nB,GAC5D,IAAIk3D,EAAgB2B,EAAY1B,cAAcC,eAC1C1vC,MAAAA,IACAA,EAAYwvC,EAAc5sE,QAE9B0V,EAAKq0D,oBAAsB9rD,EAC3BzQ,GAAWo/D,EAAexvC,EAAW1nB,GAMzC,SAAS66D,EAAoBC,EAAe96D,GACxC,IAAI+6D,EAAiBpG,GAAsB30D,GAC3C,GAAK+6D,GAAkBA,IAAmBD,KACzB,GAAb96D,EAAK+xD,OADT,CAWA/xD,EAAK+xD,OAAS,GACd,IAAIiJ,EAAiBD,EAAelhE,SAASohE,gBACxCD,IACDA,EAAiBD,EAAelhE,SAASohE,gBAAkB,IAE/DD,EAAe1vE,KAAK0U,GAKxB,SAASk7D,EAA4BvB,EAASrD,GAC1C,KAAoB,EAAhBA,EAAQ5hE,OAAZ,CAGAilE,EAAQwB,WAAa,EACrB7E,EAAQ5hE,OAAS,EAEjB,IADA,IAAIkgE,EAAgB0B,EAAQ1yD,OACrBgxD,GACHA,EAAcwG,YAAc,EAC5BxG,EAAgBA,EAAchxD,QAXlCs3D,CAA4Bl7D,EAAK4D,OAAO3T,IAAK+P,EAAK40D,gBA1BlDiG,CAAoBhC,EAAa74D,GACjCwyD,GAASgB,mBAAmBxzD,GAE5B+4D,GAAyBF,EADVnxC,EAAY,EAAIwvC,EAAcxvC,EAAY,GAAK,KACd1nB,GAsS5C46D,CAAmB5xE,KAAKsrC,MAAOtrC,KAAKyxE,MAAO9sE,EAD5BgtE,EAASrmC,OAExBqmC,EAAS5mC,yBAAyB/qC,MAC3BosC,GAEXolC,EAAkB3wE,UAAUmtC,KAAO,SAAU5B,EAASo2B,GAClD,GAAIp2B,EAAQ9S,UACR,MAAM,IAAItzB,MAAM,oDAEpB,IAAI48D,EAAgB5iE,KAAKouE,eAAelmE,QAAQkkC,EAAQd,OAExD,OA9OR,SAAS+mC,EAAiBxC,EAAayC,EAAcC,GACjD,IAAIrE,EAAgB2B,EAAY1B,cAAcC,eAC1Cp3D,EAAOk3D,EAAcoE,GACzBtjE,GAAgBk/D,EAAeoE,GACX,MAAhBC,IACAA,EAAerE,EAAc5sE,QAEjCwN,GAAWo/D,EAAeqE,EAAcv7D,GAGxCwyD,GAASgB,mBAAmBxzD,GAC5B84D,GAAmB94D,GAEnB+4D,GAAyBF,EADV0C,EAAe,EAAIrE,EAAcqE,EAAe,GAAK,KACpBv7D,GAgO5Cq7D,CAAiBryE,KAAKyxE,MAAO7O,EAAeJ,GACrCp2B,GAEXolC,EAAkB3wE,UAAUqH,QAAU,SAAUkkC,GAC5C,OAAOpsC,KAAKouE,eAAelmE,QAAQkkC,EAAQd,QAE/CkmC,EAAkB3wE,UAAUisC,OAAS,SAAUnoC,GAC3C,IAAI05B,EAAWuxC,GAAmB5vE,KAAKyxE,MAAO9sE,GAC1C05B,GACAmrC,GAASU,YAAY7rC,IAG7BmzC,EAAkB3wE,UAAUypC,OAAS,SAAU3lC,GAC3C,IAAIqS,EAAO44D,GAAmB5vE,KAAKyxE,MAAO9sE,GAC1C,OAAOqS,EAAO,IAAI+5D,GAAS/5D,GAAQ,MAEhCw6D,EA1G2B,GA4GtC,SAASgB,GAAwBx7D,GAC7B,OAAO,IAAI+5D,GAAS/5D,GAExB,IAAI+5D,GAA0B,WAC1B,SAASA,EAASzlC,GACdtrC,KAAKsrC,MAAQA,EACbtrC,KAAK+pC,kBAAoB,KACzB/pC,KAAK8pC,QAAU,KAiFnB,OA/EA1pC,OAAO4D,eAAe+sE,EAASlwE,UAAW,YAAa,CACnDgL,IAAK,WACD,OA1sBZ,SAAS4mE,EAAgBz7D,GACrB,IAAI07D,EAAc,GAElB,OADAvF,GAAqBn2D,EAAM,OAAiB1Q,OAAWA,EAAWosE,GAC3DA,EAusBQD,CAAgBzyE,KAAKsrC,QAEhCtT,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe+sE,EAASlwE,UAAW,UAAW,CACjDgL,IAAK,WACD,OAAO7L,KAAKsrC,MAAMr+B,SAEtB+qB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe+sE,EAASlwE,UAAW,YAAa,CACnDgL,IAAK,WACD,OAAoD,IAAzB,IAAnB7L,KAAKsrC,MAAMy9B,QAEvB/wC,YAAY,EACZC,cAAc,IAElB84C,EAASlwE,UAAU6pC,aAAe,WAC9BygC,GAAwBnrE,KAAKsrC,QAEjCylC,EAASlwE,UAAUypC,OAAS,WACxBtqC,KAAKsrC,MAAMy9B,QAAS,GAExBgI,EAASlwE,UAAU+pC,cAAgB,WAC/B,IAAI+nC,EAAK3yE,KAAKsrC,MAAMogC,KAAKjwC,gBACrBk3C,EAAGr1C,OACHq1C,EAAGr1C,QAEP,IACIksC,GAASQ,mBAAmBhqE,KAAKsrC,OAErC,QACQqnC,EAAGhjE,KACHgjE,EAAGhjE,QAIfohE,EAASlwE,UAAUgqC,eAAiB,WAChC2+B,GAASS,mBAAmBjqE,KAAKsrC,QAErCylC,EAASlwE,UAAU8pC,SAAW,WAC1B3qC,KAAKsrC,MAAMy9B,OAAS,GAExBgI,EAASlwE,UAAUuR,UAAY,SAAUm4B,GAChCvqC,KAAKsrC,MAAMsnC,cACZ5yE,KAAKsrC,MAAMsnC,YAAc,IAE7B5yE,KAAKsrC,MAAMsnC,YAAYtwE,KAAKioC,IAEhCwmC,EAASlwE,UAAUwmC,QAAU,WACrBrnC,KAAK8pC,QACL9pC,KAAK8pC,QAAQ9D,WAAWhmC,MAEnBA,KAAK+pC,mBACV/pC,KAAK+pC,kBAAkBO,OAAOtqC,KAAK+pC,kBAAkB7hC,QAAQlI,OAEjEwpE,GAASU,YAAYlqE,KAAKsrC,QAE9BylC,EAASlwE,UAAUoqC,iBAAmB,WAClCjrC,KAAK8pC,QAAU,KACfgmC,GAAmB9vE,KAAKsrC,OACxBk+B,GAASgB,mBAAmBxqE,KAAKsrC,QAErCylC,EAASlwE,UAAUsqC,eAAiB,SAAUC,GAC1C,GAAIprC,KAAK+pC,kBACL,MAAM,IAAI/jC,MAAM,qDAEpBhG,KAAK8pC,QAAUsB,GAEnB2lC,EAASlwE,UAAUkqC,yBAA2B,SAAUC,GACpD,GAAIhrC,KAAK8pC,QACL,MAAM,IAAI9jC,MAAM,iEAEpBhG,KAAK+pC,kBAAoBiB,GAEtB+lC,EArFkB,GAuF7B,SAAS8B,GAAmB77D,EAAM/P,GAC9B,OAAO,IAAI6rE,GAAa97D,EAAM/P,GAElC,IAAI6rE,GAA8B,SAAUptD,GAExC,SAASotD,EAAaC,EAAa9D,GAC/B,IAAI1jC,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KAGjC,OAFAurC,EAAMwnC,YAAcA,EACpBxnC,EAAM0jC,KAAOA,EACN1jC,EAYX,OAjBA7qC,EAAUoyE,EAAcptD,GAOxBotD,EAAajyE,UAAUqrC,mBAAqB,SAAUj/B,GAClD,OAAO,IAAI8jE,GAASvH,GAASt9B,mBAAmBlsC,KAAK+yE,YAAa/yE,KAAKivE,KAAMjvE,KAAKivE,KAAKnvD,QAAQjP,SAAU5D,KAE7G7M,OAAO4D,eAAe8uE,EAAajyE,UAAW,aAAc,CACxDgL,IAAK,WACD,OAAO,IAAI8/B,GAAWy9B,GAAcppE,KAAK+yE,YAAa/yE,KAAKivE,KAAK/3D,WAAW60D,gBAE/E/zC,YAAY,EACZC,cAAc,IAEX66C,EAlBsB,CAmB/BhnC,IACF,SAASknC,GAAiBh8D,EAAMs6D,GAC5B,OAAO,IAAIF,GAAUp6D,EAAMs6D,GAE/B,IAAIF,GAA2B,WAC3B,SAASA,EAAUp6D,EAAMs6D,GACrBtxE,KAAKgX,KAAOA,EACZhX,KAAKsxE,MAAQA,EAOjB,OALAF,EAAUvwE,UAAUgL,IAAM,SAAUvG,EAAO2G,GAGvC,YAFsB,IAAlBA,IAA4BA,EAAgB0sC,GAAS/tC,oBAElD4+D,GAASW,WAAWnqE,KAAKgX,KAAMhX,KAAKsxE,QADhBtxE,KAAKsxE,OAA8D,IAAlC,SAAnBtxE,KAAKsxE,MAAM5lE,OACoB,CAAEA,MAAO,EAAcpG,MAAOA,EAAOqlE,SAAUA,GAASrlE,IAAU2G,IAEvImlE,EAVmB,GA0B9B,SAASxH,GAAkBqJ,EAAYr4D,EAAQs4D,EAAqBjsE,GAChE,OAAO,IAAIksE,GAAaF,EAAYr4D,EAAQs4D,EAAqBjsE,GAErE,IAAIksE,GAA8B,WAC9B,SAASA,EAAaC,EAAaj1B,EAASk1B,EAAsBpE,GAC9DjvE,KAAKozE,YAAcA,EACnBpzE,KAAKm+C,QAAUA,EACfn+C,KAAKqzE,qBAAuBA,EAC5BrzE,KAAKivE,KAAOA,EACZjvE,KAAKszE,kBAAoB,GACzBtzE,KAAKw1C,YAAa,EAClBx1C,KAAKoL,SAAWpL,KAvoBxB,SAASuzE,EAAazgE,GAGlB,IAFA,IAAI7L,EAAM6L,EAAKm8D,KACXvoE,EAAYoM,EAAKorC,WAAahvC,GAASjI,EAAIP,UAAUpF,QAChDH,EAAI,EAAGA,EAAI8F,EAAIP,UAAUpF,OAAQH,IAAK,CAC3C,IAAIqyE,EAAUvsE,EAAIP,UAAUvF,GACN,KAAhBqyE,EAAQ9nE,YAEWpF,IAAjBI,EAAUvF,KACVuF,EAAUvF,GAAKiuE,GAAwBt8D,EAAM0gE,KAgoBrDD,CAAavzE,MAuCjB,OArCAmzE,EAAatyE,UAAUgL,IAAM,SAAUvG,EAAO2G,EAAewnE,QACnC,IAAlBxnE,IAA4BA,EAAgB0sC,GAAS/tC,yBACrC,IAAhB6oE,IAA0BA,EAAcn0E,EAAQ8F,YAAYuG,SAChE,IAAID,EAAQ,EAOZ,OANI+nE,EAAcn0E,EAAQ8F,YAAYK,SAClCiG,GAAS,EAEJ+nE,EAAcn0E,EAAQ8F,YAAYI,OACvCkG,GAAS,GAENmjE,GAAmB7uE,KAAM,CAAEsF,MAAOA,EAAOqlE,SAAUA,GAASrlE,GAAQoG,MAAOA,GAASO,IAE/F7L,OAAO4D,eAAemvE,EAAatyE,UAAW,WAAY,CACtDgL,IAAK,WACD,OAAO7L,KAAK6L,IAAI7L,KAAKozE,cAEzBp7C,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAemvE,EAAatyE,UAAW,2BAA4B,CACtEgL,IAAK,WACD,OAAO7L,KAAK6L,IAAIwzD,KAEpBrnC,YAAY,EACZC,cAAc,IAElBk7C,EAAatyE,UAAUwmC,QAAU,WAC7B,GAAIrnC,KAAKw1C,WACL,MAAM,IAAIxvC,MAAM,iBAAmB2B,EAAU3H,KAAKyiB,SAAS7hB,aAAe,gCAE9EZ,KAAKw1C,YAAa,EA9hB1B,SAASk+B,EAAsBnmC,EAAUomC,GAGrC,IAFA,IAAI1sE,EAAMsmC,EAAS0hC,KACf31C,EAAY,IAAIic,IACXp0C,EAAI,EAAGA,EAAI8F,EAAIP,UAAUpF,OAAQH,IAEtC,GAAoB,OADN8F,EAAIP,UAAUvF,GAChBuK,MAAgC,CACxC,IAAI+W,EAAW8qB,EAAS2Q,WAAW/8C,GACnC,GAAIshB,GAAYA,IAAagsD,GAAiB,CAC1C,IAAIr8D,EAAYqQ,EAASpQ,YACA,mBAAdD,GAA6BknB,EAAUse,IAAIn1B,KAClDrQ,EAAU5Q,MAAMihB,GAChB6W,EAAUyd,IAAIt0B,MAohB1BixD,CAAsB1zE,MACtBA,KAAKszE,kBAAkBzkE,SAAQ,SAAU+kE,GAAY,OAAOA,QAEhET,EAAatyE,UAAUuR,UAAY,SAAUm4B,GACzCvqC,KAAKszE,kBAAkBhxE,KAAKioC,IAEzB4oC,EAhDsB,GA0D7BU,GAAoBlJ,GAASzK,IAC7B4T,GAAqBnJ,GAASh/B,IAC9BooC,GAA2BpJ,GAASp+B,IACpCynC,GAAsBrJ,GAAS7+B,IAC/BmoC,GAA4BtJ,GAASj8B,IACrCwlC,GAAwBvJ,GAAShyB,IACjCw7B,GAAwBxJ,GAAShgE;;;;;;;OAgCrC,SAASskE,GAAKmF,EAAY1oE,EAAO4gE,EAAmBkB,EAAYloE,EAAOvD,EAAOywC,EAAMhd,EAAUnkB,GAC1F,IAAI5N,EAAK4oE,GAAuBC,GAAoBC,EAAiB9oE,EAAG8oE,eAAgBE,EAAahpE,EAAGgpE,WAAYD,EAAkB/oE,EAAG+oE,gBACpIn7D,IACDA,EAAU,IAETmkB,IACDA,EAAW,IAKfzzB,EAAQ2G,EAAkB3G,GAC1B,IAAIsyE,EAAU1H,GAAan6B,EAAM7qC,EAAUrC,IAC3C,MAAO,CAEH4R,WAAY,EACZ0D,OAAQ,KACRoqB,aAAc,KACdzrB,cAAe,EACf+6D,aAAc,EAEdF,WAAYA,EACZ1oE,MAAOA,EACP0mE,WAAY,EACZmC,iBAAkB,EAClBC,oBAAqB,EACrBjI,eAAgBA,EAChBC,gBAAiBA,EACjBC,WAAYA,EACZiB,gBAAiB,EACjBF,WAAYA,EACZh4C,SAAUA,EACVy4C,aAAcM,GAAiB/4C,GAC/BnkB,QAASA,EACTyO,QAAS,KACT41B,SAAU,CAAEpwC,MAAOA,EAAOvD,MAAOA,EAAOywC,KAAM6hC,GAC9CxnE,KAAM,KACN4nE,MAAO,KACP1G,UAAW,MAGnB,SAAS2G,GAAuB19D,EAAM/P,GAClC,OAAO0tE,GAA0B39D,EAAM/P,GAE3C,SAAS2tE,GAAmB59D,EAAM/P,GAG9B,IADA,IAAI0mE,EAAW32D,EACR22D,EAAS/yD,SAAWqxD,GAAgB0B,IACvCA,EAAWA,EAAS/yD,OAKxB,OAAOi6D,GAAYlH,EAAS/yD,OAAQixD,GAAa8B,IAFtB,EAEuD1mE,EAAIyuC,SAAS3zC,MAAOkF,EAAIyuC,SAASlD,MAEvH,SAASsiC,GAAwB99D,EAAM/P,GAEnC,IAEIwb,EAAWoyD,GAAY79D,EAAM/P,EAAI2T,QAFG,MAAZ3T,EAAIyE,OAAiC,EAEEzE,EAAIyuC,SAAS3zC,MAAOkF,EAAIyuC,SAASlD,MACpG,GAAIvrC,EAAIoK,QAAQ/P,OACZ,IAAK,IAAIH,EAAI,EAAGA,EAAI8F,EAAIoK,QAAQ/P,OAAQH,IAAK,CACzC,IAAI4zE,EAAS9tE,EAAIoK,QAAQlQ,GACrB6zE,EAAmBvyD,EAASsyD,EAAO1wE,UACvC,IAAIomD,GAAauqB,GAKb,MAAM,IAAIhvE,MAAM,WAAa+uE,EAAO1wE,SAAW,wBAA0Boe,EAAS7hB,YAAYqC,KAAO,MAJrG,IAAI+oD,EAAegpB,EAAiBtqB,UAAUuqB,GAAoBj+D,EAAM/P,EAAI2T,OAAO1D,UAAW69D,EAAOnqB,YACrG5zC,EAAK47D,YAAY3rE,EAAIqtE,YAAcnzE,GAAK6qD,EAAa5kB,YAAYvjC,KAAKmoD,GAOlF,OAAOvpC,EAEX,SAASwyD,GAAoBj+D,EAAMrS,EAAOimD,GACtC,OAAO,SAAU6gB,GAAS,OAAOD,GAAcx0D,EAAMrS,EAAOimD,EAAW6gB,IAmF3E,SAASkJ,GAA0B39D,EAAM/P,GAErC,IAAIiuE,GAAoC,KAAZjuE,EAAIyE,OAAsC,EAClEsjE,EAAc/nE,EAAIyuC,SACtB,OAAoB,UAAZzuC,EAAIyE,OACR,KAAK,IACD,OAAOmpE,GAAY79D,EAAM/P,EAAI2T,OAAQs6D,EAAsBlG,EAAYjtE,MAAOitE,EAAYx8B,MAC9F,KAAK,KACD,OA0BZ,SAAS2iC,EAAYn+D,EAAMs6D,EAAO4D,EAAsB71E,EAASmzC,GAC7D,IAAI6L,EAAM7L,EAAKlxC,OACf,OAAQ+8C,GACJ,KAAK,EACD,OAAOh/C,IACX,KAAK,EACD,OAAOA,EAAQ8qE,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,KACtE,KAAK,EACD,OAAOnzC,EAAQ8qE,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,IAAK23B,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,KAC9H,KAAK,EACD,OAAOnzC,EAAQ8qE,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,IAAK23B,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,IAAK23B,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,KACtL,QAEI,IADA,IAAIk9B,EAAY,GACPvuE,EAAI,EAAGA,EAAIk9C,EAAKl9C,IACrBuuE,EAAUptE,KAAK6nE,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAKrxC,KAEtE,OAAO9B,EAAQmC,WAAM,EAAQgB,EAASktE,KA1C/ByF,CAAYn+D,EAAM/P,EAAI2T,OAAQs6D,EAAsBlG,EAAYjtE,MAAOitE,EAAYx8B,MAC9F,KAAK,KACD,OAAO23B,GAAWnzD,EAAM/P,EAAI2T,OAAQs6D,EAAsBlG,EAAYx8B,KAAK,IAC/E,KAAK,IACD,OAAOw8B,EAAYjtE,OAG/B,SAAS8yE,GAAY79D,EAAMs6D,EAAO4D,EAAsB/wE,EAAMquC,GAC1D,IAAI6L,EAAM7L,EAAKlxC,OACf,OAAQ+8C,GACJ,KAAK,EACD,OAAO,IAAIl6C,EACf,KAAK,EACD,OAAO,IAAIA,EAAKgmE,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,KACvE,KAAK,EACD,OAAO,IAAIruC,EAAKgmE,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,IAAK23B,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,KAC/H,KAAK,EACD,OAAO,IAAIruC,EAAKgmE,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,IAAK23B,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,IAAK23B,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAK,KACvL,QAEI,IADA,IAAIk9B,EAAY,GACPvuE,EAAI,EAAGA,EAAIk9C,EAAKl9C,IACrBuuE,EAAUptE,KAAK6nE,GAAWnzD,EAAMs6D,EAAO4D,EAAsB1iC,EAAKrxC,KAEtE,OAAO,IAAKgD,EAAKN,KAAKrC,MAAM2C,EAAM3B,EAAS,MAAC,GAASktE,MAuCjE,IAAI0F,GAAwC,GAC5C,SAASjL,GAAWnzD,EAAMs6D,EAAO4D,EAAsBpG,EAAQ7iE,GAE3D,QADsB,IAAlBA,IAA4BA,EAAgB0sC,GAAS/tC,oBACtC,EAAfkkE,EAAOpjE,MACP,OAAOojE,EAAOxpE,MAElB,IAAI+Z,EAAYrI,EACG,EAAf83D,EAAOpjE,QACPO,EAAgB,MAEpB,IAAI0+D,EAAWmE,EAAOnE,SAClBA,IAAasJ,KAGbiB,KAA0B5D,IAASA,EAAMxxD,QAAQgiB,gBAEjDwvC,GAAyB,EAAfxC,EAAOpjE,QACjBwpE,GAAuB,EACvB5D,EAAQA,EAAM12D,QAGlB,IADA,IAAIy6D,EAAar+D,EACVq+D,GAAY,CACf,GAAI/D,EACA,OAAQ3G,GACJ,KAAKkJ,GAED,OADeyB,GAAaD,EAAY/D,EAAO4D,GAC/B9+D,SAEpB,KAAK09D,GACD,OAAO,IAAInoC,GAAWy9B,GAAciM,EAAY/D,EAAMp6D,WAAW60D,eACrE,KAAKgI,GACD,OAAO3K,GAAciM,EAAY/D,EAAMp6D,WAAWi3D,cACtD,KAAK6F,GACD,GAAI1C,EAAMxxD,QAAQjP,SACd,OAAOu4D,GAAciM,EAAY/D,EAAMp6D,WAAWrG,SAEtD,MAEJ,KAAKojE,GAED,OAAOzB,GADM8C,GAAaD,EAAY/D,EAAO4D,IAGjD,KAAKhB,GACL,KAAKC,GACD,OAAOnB,GAAiBqC,EAAY/D,GACxC,QACI,IAAIiE,GAAiBL,EAAuB5D,EAAMxxD,QAAQ01D,aACtDlE,EAAMxxD,QAAQ21D,iBAAiB9K,GACnC,GAAI4K,EAAe,CACf,IAAIG,EAAerM,GAAegM,EAAYE,EAAcr+D,WAK5D,OAJKw+D,IACDA,EAAe,CAAEjzD,SAAUkyD,GAA0BU,EAAYE,IACjEF,EAAWh+C,MAAMk+C,EAAcr+D,WAAaw+D,GAEzCA,EAAajzD,UAIpCyyD,EAAuBjJ,GAAgBoJ,GACvC/D,EAAQzF,GAAawJ,GACrBA,EAAaA,EAAWz6D,OACL,EAAfk0D,EAAOpjE,QACP2pE,EAAa,MAGrB,IAAItzE,EAAQsd,EAAUqsD,KAAKtgE,SAASS,IAAIijE,EAAOxpE,MAAO8vE,IACtD,OAAIrzE,IAAUqzE,IACVnpE,IAAkBmpE,GAMXrzE,EAEJsd,EAAUqsD,KAAKn+B,SAASniC,SAASS,IAAIijE,EAAOxpE,MAAO2G,GAE9D,SAASqpE,GAAat+D,EAAMs6D,EAAO4D,GAC/B,IAAIvH,EACJ,GAAIuH,EACAvH,EAAWvE,GAAcpyD,EAAMs6D,EAAMp6D,WAAW4qB,mBAIhD,IADA6rC,EAAW32D,EACJ22D,EAAS/yD,SAAWqxD,GAAgB0B,IACvCA,EAAWA,EAAS/yD,OAG5B,OAAO+yD,EAEX,SAASgI,GAAW3+D,EAAM0+D,EAAczuE,EAAK6jE,EAAY/oE,EAAO6zE,GAC5D,GAAgB,MAAZ3uE,EAAIyE,MAA+B,CACnC,IAAIiiE,EAAWvE,GAAcpyD,EAAM/P,EAAI2T,OAAO1D,WAAW4qB,cAChC,EAArB6rC,EAAS1mE,IAAIyE,QACbiiE,EAAS5E,OAAS,GAS1B,GADA2M,EAAajzD,SALCxb,EAAIuuB,SAASs1C,GACJ7nE,MAIWlB,EAClB,OAAZkF,EAAIyE,MAAgC,CACpCkqE,EAAUA,GAAW,GACrB,IAAIn1D,EAAW0iC,GAAaG,OAAOtsC,EAAK+zD,UAAU9jE,EAAIsS,aAAeuxD,IAErE8K,EADgB3uE,EAAIuuB,SAASs1C,GACX+K,iBACd,IAAIzZ,GAAa37C,EAAU1e,EAA6C,IAAxB,EAAbiV,EAAK+xD,QAGhD,OADA/xD,EAAK+zD,UAAU9jE,EAAIsS,aAAeuxD,GAAc/oE,EACzC6zE,EA6CX,SAASE,GAAgC9+D,EAAM28D,GAC3C,GAAM38D,EAAK/P,IAAIkrE,UAAYwB,EAK3B,IAFA,IAAIt8C,EAAQrgB,EAAK/P,IAAIowB,MACjB4xC,EAAY,EACP9nE,EAAI,EAAGA,EAAIk2B,EAAM/1B,OAAQH,IAAK,CACnC,IAAImsE,EAAUj2C,EAAMl2B,GAChBosB,EAAW+/C,EAAQ1yD,OASvB,KARK2S,GAAY+/C,EAAQ5hE,MAAQioE,GAE7BoC,GAAuB/+D,EAAM7V,EAAGmsE,EAAQ5hE,MAAQioE,EAAY1K,KAEtB,IAArCqE,EAAQ8E,WAAauB,KAEtBxyE,GAAKmsE,EAAQE,YAEVjgD,GAA8B,EAAjBA,EAAS7hB,OACzBvK,IAAMosB,EAASrW,UAAYqW,EAASigD,YAEhCjgD,EAASgnD,iBAAmBZ,IAC5B1K,EAAY+M,GAA+Bh/D,EAAMuW,EAAUomD,EAAY1K,IAE3E17C,EAAWA,EAAS3S,QAIhC,SAASo7D,GAA+Bh/D,EAAMs6D,EAAOqC,EAAY1K,GAC7D,IAAK,IAAI9nE,EAAImwE,EAAMp6D,UAAY,EAAG/V,GAAKmwE,EAAMp6D,UAAYo6D,EAAM9D,WAAYrsE,IAAK,CAC5E,IAAImsE,EAAUt2D,EAAK/P,IAAIowB,MAAMl2B,GACzBmsE,EAAQ5hE,MAAQioE,GAChBoC,GAAuB/+D,EAAM7V,EAAGmsE,EAAQ5hE,MAAQioE,EAAY1K,KAGhE9nE,GAAKmsE,EAAQE,WAEjB,OAAOvE,EAEX,SAAS8M,GAAuB/+D,EAAMrS,EAAOgvE,EAAY1K,GACrD,IAAIyM,EAAerM,GAAeryD,EAAMrS,GACxC,GAAK+wE,EAAL,CAGA,IAAIhgC,EAAWggC,EAAajzD,SACvBizB,IAGL8zB,GAASC,eAAezyD,EAAMrS,GACb,QAAbgvE,GACAzK,GAA4BlyD,EAAM,IAA6CiyD,IAC/EvzB,EAAS7jC,qBAEI,QAAb8hE,GACAj+B,EAAS3jC,wBAEI,QAAb4hE,GACAzK,GAA4BlyD,EAAM,IAA0CiyD,IAC5EvzB,EAASzjC,kBAEI,QAAb0hE,GACAj+B,EAASvjC,qBAEI,OAAbwhE,GACAj+B,EAASrjC;;;;;;;OAWjB,IAAI4jE,GAA4C,SAAUvwD,GAKtD,SAAS25C,EAAyB9xB,GAC9B,IAAIhC,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KAEjC,OADAurC,EAAMgC,SAAWA,EACVhC,EAOX,OAdA7qC,EAAU2+D,EAA0B35C,GASpC25C,EAAyBx+D,UAAUu+D,wBAA0B,SAAUtvC,GAEnE,IAAI8pC,EAAe5lD,GAAgB8b,GACnC,OAAO,IAAIomD,GAAmBtc,EAAc55D,KAAKutC,WAE9C8xB,EAfoC,CAgB7CA,IACF,SAAS8W,GAAWtuE,GAChB,IAAI2H,EAAQ,GACZ,IAAK,IAAI4mE,KAAevuE,EAChBA,EAAIpH,eAAe21E,IAEnB5mE,EAAMlN,KAAK,CAAE+B,SADEwD,EAAIuuE,GACc3F,aAAc2F,IAGvD,OAAO5mE,EAUX,IAAI6mE,GAAY,IAAI5rE,GAAe,kBAAmB,CAClDpE,WAAY,OACZhH,QAAS,WAAc,OAAOqgB,MAsB9Bw2D,GAAoC,SAAUxwD,GAM9C,SAASq5C,EAAiBnF,EAAcrsB,GACpC,IAAIhC,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KAQjC,OAPAurC,EAAMquB,aAAeA,EACrBruB,EAAMgC,SAAWA,EACjBhC,EAAMk0B,cAAgB7F,EAAa/yD,KACnC0kC,EAAMnZ,SA7ohBd,SAASkkD,EAAyBC,GAC9B,OAAOA,EAAa1uE,IAAI6rB,IAAsB5rB,KAAK,KA4ohB9BwuE,CAAyB1c,EAAajnD,WACvD44B,EAAMx6B,mBACF6oD,EAAa7oD,mBAAqB6oD,EAAa7oD,mBAAqB,GACxEw6B,EAAMirC,kBAAoBjpC,EACnBhC,EA6FX,OA3GA7qC,EAAUq+D,EAAkBr5C,GAgB5BtlB,OAAO4D,eAAe+6D,EAAiBl+D,UAAW,SAAU,CACxDgL,IAAK,WACD,OAAOsqE,GAAWn2E,KAAK45D,aAAaxoD,SAExC4mB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAe+6D,EAAiBl+D,UAAW,UAAW,CACzDgL,IAAK,WACD,OAAOsqE,GAAWn2E,KAAK45D,aAAavoD,UAExC2mB,YAAY,EACZC,cAAc,IAElB8mC,EAAiBl+D,UAAUC,OAAS,SAAUsK,EAAU+hC,EAAkBwyB,EAAoBpyB,GAE1F,IA4BIzd,EACA2mD,EA7BAC,GADJnpC,EAAWA,GAAYvtC,KAAKutC,UApDpC,SAASopC,EAAsBD,EAAkB9zD,GAC7C,MAAO,CACH/W,IAAK,SAAUvG,EAAO2G,EAAeP,GACjC,IAAI3J,EAAQ20E,EAAiB7qE,IAAIvG,EAAO8vE,GAAuC1pE,GAC/E,OAAI3J,IAAUqzE,IACVnpE,IAAkBmpE,GAMXrzE,EAEJ6gB,EAAe/W,IAAIvG,EAAO2G,EAAeP,KAwClBirE,CAAsBvrE,EAAUmiC,EAASniC,UAAYA,EACnFqwB,EAAkBi7C,EAAiB7qE,IAAIm0D,GAAkB3pD,IACzD+W,EAAYspD,EAAiB7qE,IAAI20D,GAAW,MAC5C/G,EAAeh+B,EAAgBnlB,eAAe,KAAMtW,KAAK45D,cAGzDgd,EAAc52E,KAAK45D,aAAajnD,UAAU,GAAG,IAAM,MACnDkkE,EAAYlX,EACZ7gC,GAAkB26B,EAAckG,EAAoB3/D,KAAK45D,aAAa7mD,eACtEooB,GAAcy7C,EAAan7C,EAAgBnlB,eAAe,KAAMtW,KAAK45D,cA1EjF,SAASkd,EAAeF,GACpB,IAAI3zE,EAAO2zE,EAAYxqD,cACvB,MAAgB,QAATnpB,EA7ipBS,6BA6ipBkC,SAATA,EA5ipBrB,iCA4ipB2D,KAwEa6zE,CAAeF,IACnGG,EAAY/2E,KAAK45D,aAAatnD,OAAS,IACvC,IAKA0kE,EAA2C,iBAAvBrX,GACpB,kCAAkC7vB,KAAK6vB,GACvCz8B,EAAcg3B,KAEdD,EAAYx7B,GAAY,GAAe,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,KAAM,MAC9Eo7B,EAAYv+B,GAAY,KAAM2+B,EAAW/2B,EAAa6zC,EAAW,KAAM,KAAMt7C,EAAiBg+B,EAAcrsC,EAAWspD,GAM3Hl8D,GAAUq/C,EAAW,MAGrB,IACI,IAAI/3B,EAAgB03B,GAAwBqd,EAAW72E,KAAK45D,aAAcC,EAAWp+B,EAAiBg+B,GACtG,GAAIod,EACA,GAAIlX,EACAliD,GAAgBg8C,EAAcod,EAAW,CAAC,aAAcpW,GAAQC,WAE/D,CAID,IAAIj9D,EA9rhBxB,SAASwzE,EAAmC7kD,GAKxC,IAJA,IAAIzU,EAAQ,GACRgb,EAAU,GACVx3B,EAAI,EACJ+X,EAAO,EACJ/X,EAAIixB,EAAS9wB,QAAQ,CACxB,IAAIuyB,EAAgBzB,EAASjxB,GAC7B,GAA6B,iBAAlB0yB,EACM,IAAT3a,EACsB,KAAlB2a,GACAlW,EAAMrb,KAAKuxB,EAAezB,IAAWjxB,IAG3B,IAAT+X,GACLyf,EAAQr2B,KAAKuxB,OAGhB,CAID,IAAKpB,GAAWvZ,GACZ,MACJA,EAAO2a,EAEX1yB,IAEJ,MAAO,CAAEwc,MAAOA,EAAOgb,QAASA,GAmqhBPs+C,CAAmCj3E,KAAK45D,aAAajnD,UAAU,IAAKgL,EAAQla,EAAGka,MAAOgb,EAAUl1B,EAAGk1B,QACxGhb,GACAF,GAAgBg8C,EAAcod,EAAWl5D,GAEzCgb,GAAWA,EAAQr3B,OAAS,GAC5BkoC,GAAiBiwB,EAAcod,EAAWl+C,EAAQ7wB,KAAK,MAInE2uE,EAAe3/D,GAAS+iD,EAz0pBxB,GAy0pB0C,GACtC1sB,IAIAspC,EAAa/9C,WAAayU,EAAiBtlC,KAAI,SAAUqvE,GACrD,OAAO32E,MAAMs9C,KAAKq5B,OAM1BpnD,EAAY6pC,GAAoB73B,EAAe9hC,KAAK45D,aAAcC,EAAW32B,EAAa,CAACi3B,KAC3Fn+B,GAAWi+B,EAAWJ,EAAW,MAErC,QACIz+C,KAEJ,IAAIoyB,EAAe,IAAI2pC,GAAen3E,KAAKy/D,cAAe3vC,EAAW2b,GAAiBE,GAAY8qC,EAAc5c,GAAYA,EAAW4c,GAMvI,OALK9W,IAAsBqX,IAGvBxpC,EAAar2B,SAAS6yB,WAAWrvB,MAAQ87D,GAEtCjpC,GAEJuxB,EA5G4B,CA6GrCA,IAC6B,IAAIkX,GAmBnC,IA6MWmB,GA7MPD,GAAgC,SAAUzxD,GAE1C,SAASo5C,EAAaW,EAAeh9C,EAAUrD,EAAUi4D,EAAYhzD,GACjE,IAAIknB,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KASjC,OARAurC,EAAMnsB,SAAWA,EACjBmsB,EAAM8rC,WAAaA,EACnB9rC,EAAMlnB,OAASA,EACfknB,EAAM+rC,WAAa,GACnB/rC,EAAM9oB,SAAWA,EACjB8oB,EAAMp0B,SAAWo0B,EAAM4lC,kBAAoB,IAAI9lC,GAAYgsC,GAC3D9rC,EAAMp0B,SAAS6yB,WAAalO,GAAuBu7C,EAl4pB/C,GAk4pBkE,MAAO,EAAGA,GAChF9rC,EAAMk0B,cAAgBA,EACfl0B,EAqBX,OAhCA7qC,EAAUo+D,EAAcp5C,GAaxBtlB,OAAO4D,eAAe86D,EAAaj+D,UAAW,WAAY,CACtDgL,IAAK,WACD,OAAO,IAAIuW,GAAapiB,KAAKqkB,OAAQrkB,KAAKq3E,aAE9Cr/C,YAAY,EACZC,cAAc,IAElB6mC,EAAaj+D,UAAUwmC,QAAU,WACzBrnC,KAAKs3E,aACLt3E,KAAKs3E,WAAWzoE,SAAQ,SAAUlM,GAAM,OAAOA,OAC/C3C,KAAKs3E,WAAa,MACjBt3E,KAAKmX,SAASmiB,WAAat5B,KAAKmX,SAASkwB,YAGlDy3B,EAAaj+D,UAAUuR,UAAY,SAAUm4B,GACrCvqC,KAAKs3E,YACLt3E,KAAKs3E,WAAWh1E,KAAKioC,IAGtBu0B,EAjCwB,CAkCjCA,IAmCEyY,QAAIjxE,EAOJkxE,GAAW,CACX,KACA,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,MAAOD,IAC3B,CAAC,CAAC,KAAM,MAAOA,GAAGA,IAClB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAChF,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACnE,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAEzCA,GACA,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC9E,CACI,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAC1E,UAAW,WAAY,aAG/BA,GACA,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,MAAO,CAAC,gBAAiB,gBAC7C,EACA,CAAC,EAAG,GACJ,CAAC,SAAU,WAAY,YAAa,mBACpC,CAAC,SAAU,YAAa,cAAe,kBACvC,CAAC,WAAYA,GAAG,eAAkBA,IAClC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,KAC1D,CAAC,YAAa,SAAU,YAAa,OACrC,MACA,IACA,YACA,GACA,MArCJ,SAASE,GAAOr2E,GACZ,IAAID,EAAIu2E,KAAKC,MAAMD,KAAKE,IAAIx2E,IAAKof,EAAIpf,EAAEwB,WAAWwK,QAAQ,YAAa,IAAI9L,OAC3E,OAAU,IAANH,GAAiB,IAANqf,EACJ,EACJ,IA+CPq3D,GAAc;;;;;;;OAyBlB,SAASC,GAAeC,GACpB,IAAIC,EAqFR,SAASC,EAAgBF,GACrB,OAAOA,EAAO3rD,cAAchf,QAAQ,KAAM;;;;;;;OAtFnB6qE,CAAgBF,GACnC3uD,EAAQ8uD,GAAcF,GAC1B,GAAI5uD,EACA,OAAOA,EAGX,IAAI+uD,EAAeH,EAAiBxuD,MAAM,KAAK,GAE/C,GADAJ,EAAQ8uD,GAAcC,GAElB,OAAO/uD,EAEX,GAAqB,OAAjB+uD,EACA,OAAOX,GAEX,MAAM,IAAIxxE,MAAM,uCAA0C+xE,EAAS,MAuBvE,SAASK,GAAoBL,GAEzB,OADWD,GAAeC,GACdz4E,EAAQ+4E,iBAAiBC,YAMzC,SAASJ,GAAcF,GAKnB,OAJMA,KAAoBH,KACtBA,GAAYG,GAAoB1uE,EAAQ1J,IAAM0J,EAAQ1J,GAAG24E,QAAUjvE,EAAQ1J,GAAG24E,OAAOC,SACjFlvE,EAAQ1J,GAAG24E,OAAOC,QAAQR,IAE3BH,GAAYG,IAQZZ,GAuBR93E,EAAQ+4E,mBAAqB/4E,EAAQ+4E,iBAAmB,KAtBvCjB,GAA0B,SAAI,GAAK,WACnDA,GAAgBA,GAAkC,iBAAI,GAAK,mBAC3DA,GAAgBA,GAAsC,qBAAI,GAAK,uBAC/DA,GAAgBA,GAA4B,WAAI,GAAK,aACrDA,GAAgBA,GAAgC,eAAI,GAAK,iBACzDA,GAAgBA,GAA8B,aAAI,GAAK,eACvDA,GAAgBA,GAAkC,iBAAI,GAAK,mBAC3DA,GAAgBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAgC,eAAI,GAAK,iBACzDA,GAAgBA,GAA8B,aAAI,GAAK,eACvDA,GAAgBA,GAA4B,WAAI,IAAM,aACtDA,GAAgBA,GAA4B,WAAI,IAAM,aACtDA,GAAgBA,GAAgC,eAAI,IAAM,iBAC1DA,GAAgBA,GAA+B,cAAI,IAAM,gBACzDA,GAAgBA,GAA+B,cAAI,IAAM,gBACzDA,GAAgBA,GAA8B,aAAI,IAAM,eACxDA,GAAgBA,GAAgC,eAAI,IAAM,iBAC1DA,GAAgBA,GAA8B,aAAI,IAAM,eACxDA,GAAgBA,GAA4B,WAAI,IAAM,aACtDA,GAAgBA,GAAgC,eAAI,IAAM,iBAC1DA,GAAgBA,GAA4B,WAAI,IAAM,aACtDA,GAAgBA,GAA2B,UAAI,IAAM,YAuCzD,IAQIqB,GAAmB,6CACnBC,GAAqB,qBACrBC,GAAY,yBACZC,GAAiB,iBACjBC,GAAa,6CAGbC,GAAqC,eACrCC,GAAyB,iCACzBC,GAAqB,4CACrBC,GAA6B,kBAC7BC,GAAiB,2BACjBC,GAA2B,OAC3BC,GAAwB,aAU5B,SAASC,GAAaC,GAClB,IAAKA,EACD,MAAO,GAEX,IAMIlwD,EANAmwD,EAAU,EACVC,EAAa,GACbt/C,EAAU,GACVu/C,EAAS,QAIb,IAFAA,EAAOC,UAAY,EAEZtwD,EAAQqwD,EAAOE,KAAKL,IAAU,CACjC,IAAIM,EAAMxwD,EAAMzkB,MAChB,GAAgB,KAAZykB,EAAM,IAEN,GADAowD,EAAWvqE,MACc,GAArBuqE,EAAWl4E,OAAa,CAExB,IAAIu4E,EAAQP,EAAQnxE,UAAUoxE,EAASK,GACnCnB,GAAiB3oC,KAAK+pC,GACtB3/C,EAAQ53B,KAAKw3E,GAAcD,IAG3B3/C,EAAQ53B,KAAKu3E,GAEjBN,EAAUK,EAAM,OAGnB,CACD,GAAyB,GAArBJ,EAAWl4E,OAAa,CACxB,IAAIy4E,EAAcT,EAAQnxE,UAAUoxE,EAASK,GAC7C1/C,EAAQ53B,KAAKy3E,GACbR,EAAUK,EAAM,EAEpBJ,EAAWl3E,KAAK,MAGxB,IAAI6F,EAAYmxE,EAAQnxE,UAAUoxE,GAElC,OADAr/C,EAAQ53B,KAAK6F,GACN+xB,EASX,SAAS4/C,GAAcR,GAiBnB,IAhBA,IAAIU,EAAQ,GACR51E,EAAS,GACT61E,EAAU,EACVC,EAAc,EAWdhtE,EAAQmsE,GAVZC,EAAUA,EAAQlsE,QAAQqrE,IAAkB,SAAU0B,EAAKC,EAASvzE,GAQhE,OANIozE,EADS,WAATpzE,EACU,EAGA,EAEdqzE,EAAcG,SAASD,EAAQptE,OAAO,GAAI,IACnC,OAIF4sE,EAAM,EAAGA,EAAM1sE,EAAM5L,QAAS,CACnC,IAAIyE,EAAMmH,EAAM0sE,KAAOnwD,OACP,IAAZwwD,IAEAl0E,EAAMA,EAAIqH,QAAQ,oBAAqB,OAEvCrH,EAAIzE,QACJ04E,EAAM13E,KAAKyD,GAEf,IAAIu0E,EAASjB,GAAansE,EAAM0sE,MAC5BI,EAAM14E,OAAS8C,EAAO9C,QACtB8C,EAAO9B,KAAKg4E,GAIpB,MAAO,CAAEzzE,KAAMozE,EAASC,YAAaA,EAAaF,MAAOA,EAAO51E,OAAQA,GAK5E,SAASm2E,GAA+B5tE,GAMpC,IALA,IAAIyc,EAIAoxD,EAHAxyE,EAAM,GACNrD,EAAQ,EACR81E,GAAa,EAEqC,QAA9CrxD,EAAQsvD,GAAmBiB,KAAKhtE,KAC/B8tE,EAMGrxD,EAAM,KAAOsxD,MAAgBF,EAzHhC,MA0HG71E,EAAQykB,EAAMzkB,MACd81E,GAAa,IAPjBzyE,GAAO2E,EAAQxE,UAAUxD,EAAOykB,EAAMzkB,MAAQykB,EAAM,GAAG9nB,QACvDk5E,EAAapxD,EAAM,GACnBqxD,GAAa,GAYrB,OADAzyE,EAAO2E,EAAQK,OAAOrI,GAsC1B,SAASg2E,GAA6BR,EAAKS,EAAiB98D,EAAU+c,QAC/C,IAAfA,IAAyBA,EAAa,MAI1C,IAHA,IAAIggD,EAAgB,CAAC,KAAM,MACvBC,EAAYX,EAAI3wD,MAAMovD,IACtB/2D,EAAO,EACFvV,EAAI,EAAGA,EAAIwuE,EAAUx5E,OAAQgL,IAAK,CACvC,IAAIyuE,EAAYD,EAAUxuE,GAC1B,GAAQ,EAAJA,EAAO,CAEP,IAAIiN,EAAe8gE,SAASU,EAAW,IACvCF,EAAcv4E,MAAM,EAAIiX,GACxBsI,GAAcm5D,GAAUzhE,OAEL,KAAdwhE,GAELF,EAAcv4E,KAAKy4E,GAU3B,OAPAF,EAAcv4E,KAAKs4E,GAAmB,GACjC98D,EAAW,EAAe,IAC3BA,GACA+8D,EAAcv4E,KAAKwb,EAAU+c,GAEjCggD,EAAc,GAAKh5D,EACnBg5D,EAAc,GAAKA,EAAcv5E,OAAS,EACnCu5E,EAEX,SAASI,GAAeC,EAAer5D,GAGnC,IAAIuH,OAFS,IAATvH,IAAmBA,EAAO,GAC9BA,GAAcm5D,GAAUE,EAAchB,aAEtC,IAAK,IAAI/4E,EAAI,EAAGA,EAAI+5E,EAAc92E,OAAO9C,OAAQH,IAE7C,IADA,IAAIg6E,EAAWD,EAAc92E,OAAOjD,GAC3BmL,EAAI,EAAGA,EAAI6uE,EAAS75E,OAAQgL,IAAK,CACtC,IAAIvK,EAAQo5E,EAAS7uE,GACrB,GAAqB,iBAAVvK,EACP,KAAOqnB,EAAQwvD,GAAee,KAAK53E,IAC/B8f,GAAcm5D,GAAUX,SAASjxD,EAAM,GAAI,UAI/CvH,EAAOo5D,GAAel5E,EAAO8f,GAIzC,OAAOA,EAEX,IAAIu5D,GAAiB,GACjBC,IAAyB,EAS7B,SAASL,GAAUzhE,GACf,OAAO,GAAKm+D,KAAK4D,IAAI/hE,EAAc,IAEvC,IA2CIgiE,GA3CAC,GAAmB,GA8BvB,SAASC,GAAY92E,EAAOgI,EAAS+uE,GACjC,IAAIpoE,EAAQgF,KAEZ8iE,KAAiBC,IAAyB12E,EAE1C+oD,IAAmB,GACfp6C,EAAMwN,iBAAyD,OAAtCxN,EAAMR,KAAKnO,EA73qBxB,KA24qBpB,SAASg3E,EAAmBhlE,EAAOrD,EAAO3O,EAAOgI,EAAS+uE,GACtD,IAAIhsB,EAAap8C,EAAM2N,UAAU3f,OA54qBjB,GA64qBhBi6E,GAAgB,EAChB,IAAI5iE,EAAwBD,KACxB6uB,EAAczuB,KAAgBH,EAAwBA,GAAyBA,EAAsBiC,OACrGwG,EAAcmmB,GAAeA,IAAgB5wB,EA95qBxC,GA85qBwD4wB,EAAY5iC,MAh5qB7D,GAg5qBqFA,EACjGi3E,EAAqB,EACzBJ,GAAiBI,GAAsBx6D,EACvC,IAAIy6D,EAAgB,GAMpB,GAAIl3E,EAAQ,GAAKgU,IAA0B4uB,EAAa,CACpD,IAAIu0C,EAAqBnjE,EAAsBhU,MA15qBnC,GA65qBPmU,OACDgjE,GAAsBA,GAG1BD,EAAcv5E,KAAKw5E,GAAsB,EAAoB,GAEjE,IAAIjB,EAAgB,GAChBkB,EAAiB,GACrB,GAAgB,KAAZpvE,GAAkBqvE,GAAsBN,GAGxCG,EAAcv5E,KAAKqK,EAASsvE,GAAevsB,GAAatuC,GAAe,GAAwB,QAK/F,IAFA,IAAI86D,EAlKZ,SAASC,EAA0BxvE,EAAS+uE,GACxC,GAAIM,GAAsBN,GAEtB,OAAOnB,GAA+B5tE,GAItC,IAAIoD,EAAQpD,EAAQzE,QAAQ,IAAMwzE,EA1J7B,KA0J0D,EAAIA,EAAiB94E,WAAWtB,OAC3FqO,EAAMhD,EAAQyvE,OAAO,IAAIzuD,OAAO+sD,eAAyBgB,EA3JxD,MA4JL,OAAOnB,GAA+B5tE,EAAQxE,UAAU4H,EAAOJ,IAyJrCwsE,CAA0BxvE,EAAS+uE,GACzDW,EA41BZ,SAASC,EAAYv6E,GACjB,OAAOA,EAAMqL,QAAQmvE,GAAqB,KA71BvBD,CAAYJ,GAAqB1yD,MAAMmvD,IAC7Cx3E,EAAI,EAAGA,EAAIk7E,EAAS/6E,OAAQH,IAAK,CACtC,IAAIY,EAAQs6E,EAASl7E,GACrB,GAAQ,EAAJA,EAEA,GAAwB,MAApBY,EAAMgL,OAAO,IAEb,GAAwB,MAApBhL,EAAMgL,OAAO,GAA0B,CACvC,IAAIyvE,EAAUnC,SAASt4E,EAAMiL,OAAO,GAAI,IACxCoU,EAAco6D,KAAmBI,GACjCC,EAAcv5E,KAAKk6E,GAAW,EAAoB,QAGrD,CACGA,EAAUnC,SAASt4E,EAAMiL,OAAO,GAAI,IAAxC,IACIyvE,EAAgC,MAApB16E,EAAMgL,OAAO,GAI7B8uE,EAAcv5E,MAAMm6E,EAAYD,GAAWA,IAAY,EACnD,EAAgBp7D,GAAe,GAAwB,GACvDq7D,IACAjB,KAAmBI,GAAsBx6D,EAAco7D,QAO/D,IADA,IAAItvE,EAAQmsE,GAAat3E,GAChBuK,EAAI,EAAGA,EAAIY,EAAM5L,OAAQgL,IAC9B,GAAQ,EAAJA,EAAO,CAEP,IAAI4uE,EAAgBhuE,EAAMZ,GAI1B,GAA6B,iBAAlB4uE,EACP,MAAM,IAAIl1E,MAAM,sCAAyCk2E,EAAsB,cAGnF,IAAIQ,EAAeT,GAAevsB,GAClCmsB,EAAcv5E,KAAKoyB,GAAoD,GAAIgoD,EAAct7D,GAAe,GAAwB,GAEhI,IAAIS,EAAOo5D,GAAeC,GAC1ByB,GAASZ,EAAgBb,EAAewB,EAAcA,GAEtD,IAAI/hD,EAAYohD,EAAez6E,OAAS,EACxCu5E,EAAcv4E,KAAK04E,GAAUE,EAAchB,aAC3C,GACC,EAAIgB,EAAchB,YAAawC,GAAgB,EAAoB,EAAmB/hD,EAAW9Y,EAClG,EACA66D,GAAgB,EAAoB,EAAmB/hD,QAEtD,GAAiB,KAAbztB,EAAMZ,GAAW,CACtB,IAAIO,EAAOK,EAAMZ,GAEbswE,EAAa/vE,EAAKuc,MAAMwvD,IAExBiE,EAAgBZ,GAAevsB,GACnCmsB,EAAcv5E,KAEds6E,EAAa,GAAK/vE,EAAMgwE,EAAez7D,GAAe,GAAwB,GAC1Ew7D,GACAzuE,GAAcwsE,GAA6B9tE,EAAMgwE,GAAgBhC,IAOrFU,GAAgB,GA5kgBxB,SAASuB,EAAaxpE,EAAOqD,EAAOomE,GAGhC,GAAIA,EAAkB,GACdzpE,EAAMwN,gBAAiB,CACvB,IAAK,IAAI3f,EAAI,EAAGA,EAAI47E,EAAiB57E,IACjCmS,EAAM2N,UAAU3e,KAAK,MACrBgR,EAAMR,KAAKxQ,KAAK,MAChBqU,EAAMrU,KAAK,MAIVgR,EAAMmkB,oBAMPnkB,EAAMmkB,oBAAoBn1B,KAAKy6E,GAL/BzpE,EAAMkkB,mBAAqBulD,GAgkgBnCD,CAAaxpE,EAAOqD,EAAO4kE,IAW/BjoE,EAAMR,KAAKnO,EA9/qBK,IAw/qBJ,CACRiM,KAAM2qE,GACNz6E,OAAQ+6E,EACRmB,OAAQnC,EACRrgD,KAAMuhD,EAAez6E,OAASy6E,EAAiB,MA9H/CJ,CAAmBtjE,KAAY/E,EAAO3O,EAAOgI,EAAS+uE,GAO9D,SAASO,GAAevsB,GACpB,OAAOA,EAAa6rB,KA0HxB,SAAS0B,GAAe3pE,EAAOoC,EAAO6xB,EAAa21C,EAAevmE,GAE9D,IAAI8V,EAAW/W,EAAM5T,KAChBo7E,IACDA,EAAgB31C,GAGhB21C,IAAkB31C,GAAe7xB,IAAU6xB,EAAY5sB,OACvDjF,EAAM5T,KAAOylC,EAAY5sB,MACzB4sB,EAAY5sB,MAAQjF,GAEfwnE,IAAkB31C,GAAe7xB,IAAUwnE,EAAcp7E,MAC9D4T,EAAM5T,KAAOo7E,EAAcp7E,KAC3Bo7E,EAAcp7E,KAAO4T,GAGrBA,EAAM5T,KAAO,KAEbylC,IAAgB5wB,EAhirBX,KAiirBLjB,EAAMkF,OAAS2sB,GAInB,IADA,IAAI1R,EAASngB,EAAM5T,KACZ+zB,GACCA,EAAO/zB,OAAS4T,IAChBmgB,EAAO/zB,KAAO2qB,GAElBoJ,EAASA,EAAO/zB,KAGpB,GAAmB,IAAf4T,EAAM7O,KAEN,OADAmiC,GAAgB11B,EAAOqD,EAAOjB,GACvBA,EAEXqR,GAAYzT,EAAOqD,EAAOC,GAAiBlB,EAAOiB,GAAQjB,GAC1D,IAAI0B,EAAYT,EAAMjB,EAAM/Q,OAK5B,OAJmB,IAAf+Q,EAAM7O,MAA8B2O,GAAa4B,IAEjD2P,GAAYzT,EAAOqD,EAAOS,EAzgrBrB,GAygrBwC1B,GAE1CA,EAEX,SAASsmE,GAAsBN,GAC3B,YAA4Bp1E,IAArBo1E,EAsBX,SAASyB,GAAkBxwE,EAASywE,QACX,IAAjBA,IAA2BA,EAAe,IAW9C,IAAIzpD,EAAShnB,EACb,GAAImsE,GAAmChpC,KAAKnjC,GAAU,CAClD,IAAI0wE,EAAY,GACZC,EAAqB,CAndV,GAodf3pD,EAASA,EAAOvmB,QAAQ2rE,IAAwB,SAAUl3E,EAAG07E,EAAKC,GAC9D,IAAI/vD,EAAU8vD,GAAOC,EACjBC,EAAeJ,EAAU5vD,IAAY,GAUzC,GATKgwD,EAAan8E,SACdmsB,EAAQjE,MAAM,KAAK3a,SAAQ,SAAU6uE,GACjC,IAAIt0D,EAAQs0D,EAAYt0D,MAAMgwD,IAC1BuE,EAAav0D,EAAQixD,SAASjxD,EAAM,GAAI,IA1dzC,EA2dCw0D,EAAqBzE,GAAyBrpC,KAAK4tC,GACvDD,EAAan7E,KAAK,CAACq7E,EAAYC,EAAoBF,OAEvDL,EAAU5vD,GAAWgwD,IAEpBA,EAAan8E,OACd,MAAM,IAAI0E,MAAM,6CAA+CynB,GAKnE,IAHA,IAAIowD,EAAoBP,EAAmBA,EAAmBh8E,OAAS,GACnE2qD,EAAM,EAED9qD,EAAI,EAAGA,EAAIs8E,EAAan8E,OAAQH,IACrC,GAAIs8E,EAAat8E,GAAG,KAAO08E,EAAmB,CAC1C5xB,EAAM9qD,EACN,MAIR,IAAIsC,EAAKvB,EAAOu7E,EAAaxxB,GAAM,GAAI0xB,EAAal6E,EAAG,GAAgCi6E,EAAcj6E,EAAG,GASxG,OATgFA,EAAG,GAE/E65E,EAAmBruE,MAEd4uE,IAAsBF,GAC3BL,EAAmBh7E,KAAKq7E,GAG5BF,EAAa1uE,OAAOk9C,EAAK,GAClByxB,KAIf,OAAKt9E,OAAO6wC,KAAKmsC,GAAc97E,OAmB/BqyB,GAPAA,GANAA,EAASA,EAAOvmB,QAAQ4rE,IAAoB,SAAU5vD,EAAOrZ,EAAOhK,EAAK+3E,EAAOC,EAAMpuE,GAClF,OAAOytE,EAAa38E,eAAesF,GAAO,GAAKgK,EAAQqtE,EAAar3E,GAAO4J,EAAMyZ,MAKrEhc,QAAQ6rE,IAA4B,SAAU7vD,EAAOrjB,GACjE,OAAOq3E,EAAa38E,eAAesF,GAAOq3E,EAAar3E,GAAOqjB,MAMlDhc,QAAQ8rE,IAAgB,SAAU9vD,EAAOrjB,GACrD,GAAIq3E,EAAa38E,eAAesF,GAAM,CAClC,IAAIwI,EAAO6uE,EAAar3E,GACxB,IAAKwI,EAAKjN,OACN,MAAM,IAAI0E,MAAM,qCAAuCojB,EAAQ,cAAgBrjB,GAEnF,OAAOwI,EAAKuB,QAEhB,OAAOsZ,KA1BAuK,EAoCf,SAASqqD,KACL,IAAIrnE,EAAQ0B,MAUhB,SAAS4lE,EAAiB3qE,EAAOqD,GAY7B,IATA,IAAIunE,EAAY9C,GAAeC,MAC3B8C,EAAQ7qE,EAAMR,KAAKorE,EA3qrBP,IA8qrBZE,EAAkB1lE,KAElB2lE,EAAeC,GAAkBJ,EAAWC,EAAMr9E,OAAQwS,EAAOqD,GAEjEhS,EAAQu5E,EAAY,EACjBv5E,GAASy5E,EAAgBz5E,MAnrrBhB,IAmrrBuC,EACd,IAAjC05E,EAAan2E,QAAQvD,IACrB45E,GAAWjrE,EAAOqD,EAAOhS,GAA4B,GAGzD,IAAI+Q,EAAQoB,GAASxD,EAAO3O,IACxB+Q,GACgB,IAAfA,EAAM7O,MAA6C,IAAf6O,EAAM7O,MACxB,IAAf6O,EAAM7O,MACW,OAArB6O,EAAM4iB,aAIN3zB,GAAS+Q,EAAM4iB,WAAWh3B,QAAU,GAExCqD,KAlCJs5E,CAFY3lE,KAEY3B,GAExB+2C,IAAmB,GAsCvB,SAAS8wB,GAAyBlrE,EAAOqD,EAAOhS,EAAOkC,EAAM6W,EAAQza,GACjE,IAAI0V,EAAwBD,KAE5B/B,EAAMhS,EA3srBU,IA2srBe+Y,EAC/B,IAAIhI,EAAQgmB,GAAiBpoB,EAAOqD,EA1trB3B,GA0trB0ChS,EAAOkC,EAAM5D,EAAM,MAMtE,OAHI0V,GAAyBA,EAAsB7W,OAAS4T,IACxDiD,EAAsB7W,KAAO,MAE1B4T,EAEX,SAAS4oE,GAAkB35E,EAAOk3E,EAAevoE,EAAOqD,GAKpD,IAJA,IAAIP,EAAWO,EA9trBJ,IA+trBP8nE,EAAe,KACfvB,EAAgB,KAChBmB,EAAe,GACVl9E,EAAI,EAAGA,EAAI06E,EAAcv6E,OAAQH,IAAK,CAC3C,IAAIg5B,EAAS0hD,EAAc16E,GAC3B,GAAqB,iBAAVg5B,EAAoB,CAC3B,IAAIukD,EAAYv5C,GAAehL,EAAQ/jB,GACnCymE,EAAgBhB,IAAgB16E,GAEpC+7E,EAAgBuB,EAChBA,EACID,GAAyBlrE,EAAOqD,EAAOkmE,EAAe,EAAiB6B,EAAW,MACtFL,EAAa/7E,KAAKu6E,GAClB9jE,UAEC,GAAqB,iBAAVohB,EACZ,OAAiB,EAATA,GACJ,KAAK,EACD,IAAIwkD,EAAuBxkD,IAAW,GAYtC+iD,EACID,GAAe3pE,EAAOmrE,EAXtBE,IAAyBh6E,EAGNgS,EA3vrB9B,GA8vrB8BG,GAASxD,EAAOqrE,GAKmBzB,EAAevmE,GACzE,MACJ,KAAK,EAGD,IAAIkC,EAAWshB,GAAU,EACrBjjB,GAAa2B,EAAWshB,GAAUA,KAAY,EAClDkkD,EAAa/7E,KAAK4U,GAClBgmE,EAAgBuB,GAChBA,EAAe3nE,GAASxD,EAAO4D,KAE3B0B,GAAyB6lE,EAAc5lE,GAE3C,MACJ,KAAK,EAEDqkE,EAAgBuB,EAAe3nE,GAASxD,EADrB6mB,IAAW,GAE9BvhB,GAAyB6lE,GAAc,GACvC,MACJ,KAAK,EACD,IACI3gE,EAAW+9D,IAAgB16E,GAC3B2yB,EAAY+nD,IAAgB16E,GAGhC6gC,GAAyBlrB,GAASxD,EAL9BsrE,EAAmBzkD,IAAW,GAK0BxjB,EAAOmH,EAAUgW,EAAW,KAAM,MAC9F,MACJ,QACI,MAAM,IAAI9tB,MAAM,yDAA4Dm0B,EAAS,UAI7F,OAAQA,GACJ,KAAKzF,GACD,IAAI2F,EAAewhD,IAAgB16E,GAC/B09E,EAAmBhD,IAAgB16E,GAGnC29E,EAAe1oE,EAASi4B,cAAchU,GAE1C6iD,EAAgBuB,EAChBA,EAAeD,GAAyBlrE,EAAOqD,EAAOkoE,EAAkB,EAAsBC,EAAc,MAC5GT,EAAa/7E,KAAKu8E,GAClBnuD,GAAgBouD,EAAcnoE,GAC9B8nE,EAAaM,gBAAkB,KAE/BhmE,KACA,MACJ,KAAK0b,GACD,IACImqD,EADAI,EAAenD,IAAgB16E,GAMnC+7E,EAAgBuB,EAChBA,EAAeD,GAAyBlrE,EAAOqD,EAN3CioE,EAAmB/C,IAAgB16E,GAMiC,EAHrDiV,EAAS0Q,cAAck4D,GAG6DA,GACvGX,EAAa/7E,KAAKs8E,GAClB,MACJ,QACI,MAAM,IAAI54E,MAAM,yDAA4Dm0B,EAAS,MAKrG,OADAphB,KACOslE,EA4FX,SAASE,GAAWjrE,EAAOqD,EAAOhS,EAAOs6E,GACrC,IAAIC,EAAiBpoE,GAASxD,EAAO3O,GACjCw6E,EAAiBzoE,GAAiB/R,EAAOgS,GACzCwoE,GACAt6C,GAAiBluB,EA/5rBV,IA+5rB2BwoE,GAEtC,IAAI/nE,EAAYL,GAAKJ,EAAOhS,GACxB6Q,GAAa4B,IAEe,IAAxB8nE,EAAer4E,MACfg+B,GAAiBluB,EAr6rBd,IAm6rBUS,EA73rBZ,IAk4rBL6nE,IAEAC,EAAexzE,OAAS,IA8BhC,SAAS0zE,GAAOz6E,EAAOgI,EAAS+uE,GAC5BD,GAAY92E,EAAOgI,EAAS+uE,GAC5BsC,KAUJ,SAASqB,GAAiB16E,EAAOP,IASjC,SAASk7E,EAAwB3oE,EAAOrD,EAAO3O,EAAOP,GAIlD,IAHA,IACIm7E,EADkB7mE,KACqB/T,MAt9rB3B,GAu9rBZk2E,EAAgB,GACX15E,EAAI,EAAGA,EAAIiD,EAAO9C,OAAQH,GAAK,EAIpC,IAHA,IAAI2c,EAAW1Z,EAAOjD,GAElB+L,EADU9I,EAAOjD,EAAI,GACLqoB,MAAMqvD,IACjBvsE,EAAI,EAAGA,EAAIY,EAAM5L,OAAQgL,IAAK,CACnC,IAAIvK,EAAQmL,EAAMZ,GAClB,GAAQ,EAAJA,EAGA,MAAM,IAAItG,MAAM,uDAEf,GAAc,KAAVjE,EAGL,GADmBA,EAAMqnB,MAAMwvD,IAEvBtlE,EAAMwN,iBAAyD,OAAtCxN,EAAMR,KAAKnO,EAv+rBxC,KAw+rBIwJ,GAAcwsE,GAA6B54E,EAAOw9E,EAAsBzhE,GAAW+8D,OAGtF,CACD,IAAInlE,EAAQoB,GAASxD,EAAOisE,GAGT,IAAf7pE,EAAM7O,MACNm7B,GAAyBtsB,EAAOiB,EAAOmH,EAAU/b,EAAO,KAAM,MAGlE,IAAI09B,EAA6B,OAAjB/pB,EAAMtE,QAAmBsE,EAAMtE,OAAO0M,GAClD2hB,GACAE,GAAqBrsB,EAAOqD,EAAO8oB,EAAW3hB,EAAU/b,IAUxEuR,EAAMwN,iBAAyD,OAAtCxN,EAAMR,KAAKnO,EA//rBxB,MAggsBZ2O,EAAMR,KAAKnO,EAhgsBC,IAggsBwBk2E,GAjDxCyE,CAHYjnE,KACAC,KAE0B3T,EAAOP,GAoDjD,IAAIo7E,GAAa,EACbC,GAAgB,EAWpB,SAASC,GAAU39E,GAMf,OAJI4hD,GADQtrC,KACcoB,KAAoB1X,KAC1Cy9E,IAA2B,GAAKC,IAEpCA,KACOC,GAUX,SAASC,GAAYh7E,GACjB,GAAI86E,GAAe,CACf,IAAInsE,EAAQgF,KAER6lE,EAAQ7qE,EAAMR,KAAKnO,EAnisBX,IAoisBRk2E,OAAgB,EAChBrgD,EAAO,KACPj6B,MAAMqH,QAAQu2E,GACdtD,EAAgBsD,GAGhBtD,EAAgBsD,EAAMnB,OACtBxiD,EAAO2jD,EAAM3jD,MAEjB,IAAIolD,EAAqBtmE,KAAoBmmE,GAAgB,EACzD9oE,EAAQ0B,MAtPpB,SAASwnE,EAAkBhF,EAAergD,EAAMolD,EAAoBJ,EAAYlsE,EAAOqD,EAAOmpE,QACnE,IAAnBA,IAA6BA,GAAiB,GAElD,IADA,IAAIC,GAAc,EACT5+E,EAAI,EAAGA,EAAI05E,EAAcv5E,OAAQH,IAAK,CAE3C,IAAIs5B,EAAWogD,EAAc15E,GAEzBu5B,EAAYmgD,IAAgB15E,GAChC,GAAI2+E,GAAmBrlD,EAAW+kD,EAG9B,IADA,IAAIz9E,EAAQ,GACHuK,EAAInL,EAAI,EAAGmL,GAAMnL,EAAIu5B,EAAYpuB,IAAK,CAC3C,IAAI6tB,EAAS0gD,EAAcvuE,GAC3B,GAAqB,iBAAV6tB,EACPp4B,GAASo4B,OAER,GAAqB,iBAAVA,EACZ,GAAIA,EAAS,EAETp4B,GAASyd,GAAgB7I,EAAMipE,EAAqBzlD,QAEnD,CACD,IAAIjjB,EAAYijB,IAAW,EAEvBS,OAAO,EACPolD,OAAW,EACf,OAAiB,EAAT7lD,GACJ,KAAK,EACD,IAAI91B,EAAWw2E,IAAgBvuE,GAC3BuuB,EAAaggD,IAAgBvuE,GACjCizB,GAAwBjsB,EAAOwD,GAASxD,EAAO4D,GAAYP,EAAOtS,EAAUtC,EAAO4U,EA/1rBpG,IA+1rBqHkkB,GAAY,GAChH,MACJ,KAAK,EACDiJ,GAAoBntB,EAAOO,EAAWnV,GACtC,MACJ,KAAK,EAKD,GAHA64B,EAAOJ,EADKqgD,IAAgBvuE,IAIK,QAFjC0zE,EAAWlpE,GAASxD,EAAO4D,IAEd6nE,gBAET,IADA,IAAIkB,EAAcrlD,EAAKkS,OAAOkzC,EAASjB,iBAC9BrlC,EAAI,EAAGA,EAAIumC,EAAY3+E,OAAQo4C,IAAK,CACzC,IAAIwmC,EAAeD,EAAYvmC,GAC/B,OAAuB,EAAfwmC,GACJ,KAAK,EAKD3B,GAAWjrE,EAAOqD,EAJAupE,IAAiB,GAIwB,GAC3D,MACJ,KAAK,EACD,IAEIC,EADiBrpE,GAASxD,EADL2sE,EAAYvmC,EAAI,KAAO,GAEfqlC,gBACb,OAAhBoB,GAGAhyE,GADiBqsB,EADK0lD,IAAiB,GAEdpzC,OAAOqzC,GAAcF,IAOlE,IAAIG,EAAYC,GAAazlD,EAAM74B,GACnCi+E,EAASjB,iBAAiC,IAAfqB,EAAmBA,EAAY,KACtDA,GAAa,IAEb9B,IAAmB,EAAG1jD,EAAK95B,OAAOs/E,GAAY9sE,EAAOqD,GACrDopE,GAAc,GAElB,MACJ,KAAK,EAEDnlD,EAAOJ,EADKqgD,IAAgBvuE,IAGK,QADjC0zE,EAAWlpE,GAASxD,EAAO4D,IACd6nE,iBACTc,EAAkBjlD,EAAKoiD,OAAOgD,EAASjB,iBAAkBvkD,EAAMolD,EAAoBJ,EAAYlsE,EAAOqD,EAAOopE,KAQzI5+E,GAAKu5B,GAgKLmlD,CAAkBhF,EAAergD,EAAMolD,EAAoBJ,GAAYlsE,EAAOqD,GAE9E6oE,GAAa,EACbC,GAAgB,GASxB,SAASY,GAAanF,EAAeoF,GACjC,IAAI37E,EAAQu2E,EAAclB,MAAM9xE,QAAQo4E,GACxC,IAAe,IAAX37E,EACA,OAAQu2E,EAAcr0E,MAClB,KAAK,EACD,IAAI05E,EAr+BpB,SAASC,EAAcz+E,EAAOg2E,GAE1B,OADaK,GAAoBL,EAApBK,CAA4Br2E,IAErC,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,OACX,QACI,MAAO,SAu9BgBy+E,CAAcF,EAmOjD,SAASG,IACL,OAAOC;;;;;;;OApOoDD,KAEhC,KADf97E,EAAQu2E,EAAclB,MAAM9xE,QAAQq4E,KACC,UAAjBA,IAChB57E,EAAQu2E,EAAclB,MAAM9xE,QAAQ,UAExC,MAEJ,KAAK,EACDvD,EAAQu2E,EAAclB,MAAM9xE,QAAQ,SAKhD,OAAOvD,EAUX,SAASg4E,GAASgE,EAAOzF,EAAexrB,EAAYl4B,GAMhD,IALA,IAAIopD,EAAc,GACdX,EAAc,GACdY,EAAc,GACdjwE,EAAO,GACPkwE,EAAY,GACP3/E,EAAI,EAAGA,EAAI+5E,EAAc92E,OAAO9C,OAAQH,IAAK,CAIlD,IAFA,IAAIg6E,EAAWD,EAAc92E,OAAOjD,GAChC4/E,EAAa,GACRz0E,EAAI,EAAGA,EAAI6uE,EAAS75E,OAAQgL,IAAK,CACtC,IAAIvK,EAAQo5E,EAAS7uE,GACrB,GAAqB,iBAAVvK,EAAoB,CAE3B,IAAIi/E,EAAWD,EAAWz+E,KAAKP,GAAS,EAExCo5E,EAAS7uE,GAAK,WAAe00E,EAAW,WAGhD,IAAIC,EAAUC,GAAa/F,EAASrzE,KAAK,IAAK4nD,EAAYqxB,EAAYJ,EAAOnpD,GAC7EopD,EAAYt+E,KAAK2+E,EAAQngF,QACzBm/E,EAAY39E,KAAK2+E,EAAQn0C,QACzB+zC,EAAYv+E,KAAK2+E,EAAQjE,QACzBpsE,EAAKtO,KAAK2+E,EAAQrwE,MAClBkwE,EAAUx+E,KAAK2+E,EAAQH,WAW3BH,EAAMr+E,KATK,CACPuE,KAAMq0E,EAAcr0E,KACpB+J,KAAMA,EACNkwE,UAAWA,EACX9G,MAAOkB,EAAclB,MACrBl5E,OAAQ8/E,EACR9zC,OAAQmzC,EACRjD,OAAQ6D,IAIZtF,IAAiB7D,KAAKyJ,IAAI3/E,MAAMk2E,KAAMl1E,EAASoO,IAYnD,SAASswE,GAAaj0D,EAAY7L,EAAa2/D,EAAYJ,EAAOnpD,GAC9D,IACI5Q,EADkB,IAAIL,GAAgBtQ,MACHiR,oBAAoB+F,GAC3D,IAAKrG,EACD,MAAM,IAAI5gB,MAAM,yCAEpB,IACIo7E,EAAU,CAAExwE,KAAM,EAAGkwE,UAAW,GAAIhgF,OAAQ,GAAIgsC,OAAQ,GAAIkwC,OAAQ,IAExE,OAaJ,SAASqE,EAAWC,EAAaL,EAAS7/D,EAAa2/D,EAAYJ,EAAOnpD,GACtE,GAAI8pD,EAAa,CAEb,IADA,IAAIC,EAAqB,GAClBD,GAAa,CAChB,IAAI70D,EAAW60D,EAAYv4D,YACvBklB,EAAWzW,KAAsBypD,EAAQrwE,KAC7C,OAAQ0wE,EAAY14D,UAChB,KAAKC,KAAKC,aACN,IAAIhJ,EAAUwhE,EACVp1D,EAAUpM,EAAQoM,QAAQE,cAC9B,GAAKrB,GAAetqB,eAAeyrB,GAI9B,CACD+0D,EAAQngF,OAAOwB,KAAKmyB,GAAgBvI,EAAS+hB,EAAU7sB,GAAe,GAAwB,GAE9F,IADA,IAAIoH,EAAU1I,EAAQ2I,WACbtnB,EAAI,EAAGA,EAAIqnB,EAAQlnB,OAAQH,IAAK,CACrC,IAAI+xB,EAAO1K,EAAQ/Z,KAAKtN,GACpBqgF,EAAgBtuD,EAAKjwB,KAAKmpB,cACT8G,EAAKnxB,MAAMqnB,MAAMwvD,IAG9BxtD,GAAY3qB,eAAe+gF,IAEvBrzE,GADA6c,GAAUw2D,GACI7G,GAA6BznD,EAAKnxB,MAAOksC,EAAU/a,EAAKjwB,KAAMimB,IAEvE+B,GAAau2D,GACJ7G,GAA6BznD,EAAKnxB,MAAOksC,EAAU/a,EAAKjwB,KAAMqmB,IAG9DqxD,GAA6BznD,EAAKnxB,MAAOksC,EAAU/a,EAAKjwB,MANqBg+E,EAAQjE,QAe3GiE,EAAQngF,OAAOwB,KAAK2rC,GAAY,EAAoB,EAAc/a,EAAKjwB,KAAMiwB,EAAKnxB,OAI1Fs/E,EAAWC,EAAYr5D,WAAYg5D,EAAShzC,EAAU8yC,EAAYJ,EAAOnpD,GAEzEypD,EAAQn0C,OAAOxqC,KAAK2rC,GAAY,EAAoB,QAlCpDgzC,EAAQrwE,OAoCZ,MACJ,KAAKiY,KAAK+C,UACN,IAAI7pB,EAAQu/E,EAAY1qD,aAAe,GACnCgmD,EAAa76E,EAAMqnB,MAAMwvD,IAC7BqI,EAAQngF,OAAOwB,KAAKs6E,EAAa,GAAK76E,EAAOksC,EAAU7sB,GAAe,GAAwB,GAC9F6/D,EAAQn0C,OAAOxqC,KAAK2rC,GAAY,EAAoB,GAChD2uC,GACAzuE,GAAcwsE,GAA6B54E,EAAOksC,GAAWgzC,EAAQjE,QAEzE,MACJ,KAAKn0D,KAAK44D,aAEN,IAAIr4D,EAAQs4D,GAAW/H,KAAK2H,EAAY1qD,aAAe,IACvD,GAAIxN,EAAO,CACP,IAAIu4D,EAAiBtH,SAASjxD,EAAM,GAAI,IAGxC63D,EAAQngF,OAAOwB,KAAKoyB,GAFwC,GAEduZ,EAAU7sB,GAAe,GAAwB,GAE/FmgE,EAAmBj/E,KAAK,CADpBs/E,EAAYb,EAAWY,GACS1zC,SAIpCgzC,EAAQrwE,OAEZ,MACJ,QAEIqwE,EAAQrwE,OAEhB0wE,EAAc70D,EAElB,IAAStrB,EAAI,EAAGA,EAAIogF,EAAmBjgF,OAAQH,IAAK,CAChD,IAAIygF,EACAC,EAAqBN,EAAmBpgF,GAAG,GAC/Cw7E,GAASgE,EAFLiB,EAAYL,EAAmBpgF,GAAG,GAEX0gF,EAAoBrqD,EAAoBypD,EAAQrwE,MAE3E,IAAIkxE,EAAgBnB,EAAMr/E,OAAS,EACnC2/E,EAAQrwE,MAAQ8mE,KAAKyJ,IAAI3/E,MAAMk2E,KAAMl1E,EAASm+E,EAAMmB,GAAelxE,OACnEqwE,EAAQH,UAAUx+E,KAAKw/E,GACvB,IAAIjgE,EAAOo5D,GAAe2G,GAC1BX,EAAQjE,OAAO16E,KAAK04E,GAAU4G,EAAU1H,aACxC,GACC,EAAI0H,EAAU1H,YAAa2H,GAAsB,EAAoB,EAAmBC,EAAejgE,EACxG,EACAggE,GAAsB,EAAoB,EAAmBC,GAC7Db,EAAQn0C,OAAOxqC,KAAKw/E,GAAiB,EAAoB,EAAyBD,GAAsB,EAAoB,KA5GpIR,EAFc/zD,GAAmB1G,IAAqBA,GAEnCqB,WAAYm5D,EAAShgE,EAAa2/D,EAAYJ,EAAOnpD,GACjE4pD,EAEX,IAAIM,GAAa,UAoHbnF,GAAsB,UAStBmE,GAjqCoB,QAyqCxB,SAASqB,GAAYC,GACjBn0E,GAAcm0E,EAAU,mCACA,iBAAbA,IACPtB,GAAYsB,EAAS51D,cAAchf,QAAQ,KAAM;;;;;;;;AAmFzD,IAAImiE,GAAU,IAAIl6B,IAUlB,SAAS4sC,GAAwBhvE,EAAIpM,EAAMq7E,GACvC,GAAIr7E,GAAQA,IAASq7E,EACjB,MAAM,IAAIl8E,MAAM,mCAAqCiN,EAAK,MAAQtL,EAAUd,GAAQ,OAASc,EAAUd,EAAK5D,OAGpH,SAASk/E,GAAqBjrC,GAC1B,GAA6B,OAAzBA,EAAahtC,KAAK+I,GAAa,CAC/B,IAAIA,EAAKikC,EAAahtC,KAAK+I,GAE3BgvE,GAAwBhvE,EADTs8D,GAAQ1jE,IAAIoH,GACWikC,GACtCq4B,GAAQ15B,IAAI5iC,EAAIikC,GAEpB,IAAIvwC,EAAUuwC,EAAahtC,KAAKvD,QAC5BA,aAAmB0Z,WACnB1Z,EAAUA,KAEVA,GACAA,EAAQkI,SAAQ,SAAU1N,GAAK,OAAOghF,GAAqBhhF;;;;;;;;AAiBnE,IAAIihF,GAA+B,SAAU18D,GAEzC,SAAS08D,EAAclrC,EAAciH,GACjC,IAAI5S,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KACjCurC,EAAM4S,QAAUA,EAEhB5S,EAAM8nC,qBAAuB,GAC7B9nC,EAAMngC,SAAWmgC,EACjBA,EAAM+rC,WAAa,GAOnB/rC,EAAM82C,yBAA2B,IAAIpM,GAA2B1qC,GAChE,IAAI72B,EAAcC,GAAeuiC,GAG7BorC,EA/8sBZ,SAASC,EAAiB17E,GACtB,OAAOA,EAAKsD,KAAkB;;;;;;;OA88sBNo4E,CAAiBrrC,GAcrC,OAbAorC,GAAiBP,GAAYO,GAC7B/2C,EAAM8nC,qBAAuBjzD,GAAc1L,EAAYL,WACvDk3B,EAAMi3C,YAAcvtC,GAAuCiC,EAAciH,EAAS,CAC9E,CAAEpzC,QAAS4C,GAAa1C,SAAUsgC,GAAS,CACvCxgC,QAASs0D,GACTp0D,SAAUsgC,EAAM82C,2BAErB16E,EAAUuvC,IAIb3L,EAAMi3C,YAAYttC,2BAClB3J,EAAM9oB,SAAW8oB,EAAM1/B,IAAIqrC,GACpB3L,EAqBX,OArDA7qC,EAAU0hF,EAAe18D,GAkCzB08D,EAAcvhF,UAAUgL,IAAM,SAAUvG,EAAO2G,EAAewnE,GAG1D,YAFsB,IAAlBxnE,IAA4BA,EAAgB0sC,GAAS/tC,yBACrC,IAAhB6oE,IAA0BA,EAAcn0E,EAAQ8F,YAAYuG,SAC5DrG,IAAUqzC,IAAYrzC,IAAUqI,IAAerI,IAAUqF,GAClD3K,KAEJA,KAAKwiF,YAAY32E,IAAIvG,EAAO2G,EAAewnE,IAEtD2O,EAAcvhF,UAAUwmC,QAAU,WAE9B,IAAIj8B,EAAWpL,KAAKwiF,aACnBp3E,EAASkuB,WAAaluB,EAASi8B,UAChCrnC,KAAKs3E,WAAWzoE,SAAQ,SAAUlM,GAAM,OAAOA,OAC/C3C,KAAKs3E,WAAa,MAEtB8K,EAAcvhF,UAAUuR,UAAY,SAAUm4B,GAE1CvqC,KAAKs3E,WAAWh1E,KAAKioC,IAElB63C,EAtDuB,CAuDhCz0E,IACE80E,GAAmC,SAAU/8D,GAE7C,SAAS9X,EAAgBqlE,GACrB,IAAI1nC,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KA6BjC,OA5BAurC,EAAM0nC,WAAaA,EAEC,OADFt+D,GAAes+D,IAyB7BkP,GAAqBlP,GAElB1nC,EAKX,OApCA7qC,EAAUkN,EAAiB8X,GAiC3B9X,EAAgB/M,UAAUC,OAAS,SAAUwsC,GACzC,OAAO,IAAI80C,GAAcpiF,KAAKizE,WAAY3lC,IAEvC1/B,EArC2B,CAsCpCA;;;;;;;;AAqCF,SAAS80E,GAAgBC,EAAYC,EAAQC,GACzC,IAAItpE,EAAeJ,KAAmBwpE,EAClChsE,EAAQ0B,KACZ,OAAO1B,EAAM4C,KAAkBwa,GAC3B0vB,GAAc9sC,EAAO4C,EAAcspE,EAAUD,EAAOrhF,KAAKshF,GAAWD,KACpEl/B,GAAW/sC,EAAO4C,GAc1B,SAASupE,GAAgBH,EAAYC,EAAQG,EAAKF,GAC9C,OAAOG,GAAsB3qE,KAAYc,KAAkBwpE,EAAYC,EAAQG,EAAKF,GAexF,SAASI,GAAgBN,EAAYC,EAAQ9+B,EAAMC,EAAM8+B,GACrD,OAAOK,GAAsB7qE,KAAYc,KAAkBwpE,EAAYC,EAAQ9+B,EAAMC,EAAM8+B,GAgB/F,SAASM,GAAgBR,EAAYC,EAAQ9+B,EAAMC,EAAMG,EAAM2+B,GAC3D,OAAOO,GAAsB/qE,KAAYc,KAAkBwpE,EAAYC,EAAQ9+B,EAAMC,EAAMG,EAAM2+B,GAiBrG,SAASQ,GAAgBV,EAAYC,EAAQ9+B,EAAMC,EAAMG,EAAME,EAAMy+B,GACjE,OAAOS,GAAsBjrE,KAAYc,KAAkBwpE,EAAYC,EAAQ9+B,EAAMC,EAAMG,EAAME,EAAMy+B,GAkB3G,SAASU,GAAgBZ,EAAYC,EAAQ9+B,EAAMC,EAAMG,EAAME,EAAMo/B,EAAMX,GACvE,IAAItpE,EAAeJ,KAAmBwpE,EAClChsE,EAAQ0B,KACR2rC,EAAYG,GAAgBxtC,EAAO4C,EAAcuqC,EAAMC,EAAMG,EAAME,GACvE,OAAOT,GAAehtC,EAAO4C,EAAe,EAAGiqE,IAASx/B,EACpDP,GAAc9sC,EAAO4C,EAAe,EAAGspE,EAAUD,EAAOrhF,KAAKshF,EAAS/+B,EAAMC,EAAMG,EAAME,EAAMo/B,GAC1FZ,EAAO9+B,EAAMC,EAAMG,EAAME,EAAMo/B,IACnC9/B,GAAW/sC,EAAO4C,EAAe,GAmBzC,SAASkqE,GAAgBd,EAAYC,EAAQ9+B,EAAMC,EAAMG,EAAME,EAAMo/B,EAAME,EAAMb,GAC7E,IAAItpE,EAAeJ,KAAmBwpE,EAClChsE,EAAQ0B,KACR2rC,EAAYG,GAAgBxtC,EAAO4C,EAAcuqC,EAAMC,EAAMG,EAAME,GACvE,OAAOP,GAAgBltC,EAAO4C,EAAe,EAAGiqE,EAAME,IAAS1/B,EAC3DP,GAAc9sC,EAAO4C,EAAe,EAAGspE,EAAUD,EAAOrhF,KAAKshF,EAAS/+B,EAAMC,EAAMG,EAAME,EAAMo/B,EAAME,GAChGd,EAAO9+B,EAAMC,EAAMG,EAAME,EAAMo/B,EAAME,IACzChgC,GAAW/sC,EAAO4C,EAAe,GAoBzC,SAASoqE,GAAgBhB,EAAYC,EAAQ9+B,EAAMC,EAAMG,EAAME,EAAMo/B,EAAME,EAAME,EAAMf,GACnF,IAAItpE,EAAeJ,KAAmBwpE,EAClChsE,EAAQ0B,KACR2rC,EAAYG,GAAgBxtC,EAAO4C,EAAcuqC,EAAMC,EAAMG,EAAME,GACvE,OAAOH,GAAgBttC,EAAO4C,EAAe,EAAGiqE,EAAME,EAAME,IAAS5/B,EACjEP,GAAc9sC,EAAO4C,EAAe,EAAGspE,EAAUD,EAAOrhF,KAAKshF,EAAS/+B,EAAMC,EAAMG,EAAME,EAAMo/B,EAAME,EAAME,GACtGhB,EAAO9+B,EAAMC,EAAMG,EAAME,EAAMo/B,EAAME,EAAME,IAC/ClgC,GAAW/sC,EAAO4C,EAAe,GAqBzC,SAASsqE,GAAgBlB,EAAYC,EAAQ9+B,EAAMC,EAAMG,EAAME,EAAMo/B,EAAME,EAAME,EAAME,EAAMjB,GACzF,IAAItpE,EAAeJ,KAAmBwpE,EAClChsE,EAAQ0B,KACR2rC,EAAYG,GAAgBxtC,EAAO4C,EAAcuqC,EAAMC,EAAMG,EAAME,GACvE,OAAOD,GAAgBxtC,EAAO4C,EAAe,EAAGiqE,EAAME,EAAME,EAAME,IAAS9/B,EACvEP,GAAc9sC,EAAO4C,EAAe,EAAGspE,EAAUD,EAAOrhF,KAAKshF,EAAS/+B,EAAMC,EAAMG,EAAME,EAAMo/B,EAAME,EAAME,EAAME,GAC5GlB,EAAO9+B,EAAMC,EAAMG,EAAME,EAAMo/B,EAAME,EAAME,EAAME,IACrDpgC,GAAW/sC,EAAO4C,EAAe,GAiBzC,SAASwqE,GAAgBpB,EAAYC,EAAQoB,EAAMnB,GAC/C,OAAOoB,GAAsB5rE,KAAYc,KAAkBwpE,EAAYC,EAAQoB,EAAMnB,GASzF,SAASqB,GAA2BvtE,EAAOwtE,GAEvC,IAAIC,EAAkBztE,EAAMwtE,GAC5B,OAAOC,IAAoBrwD,QAAYztB,EAAY89E,EAcvD,SAASpB,GAAsBrsE,EAAO0tE,EAAa1B,EAAYC,EAAQG,EAAKF,GACxE,IAAItpE,EAAe8qE,EAAc1B,EACjC,OAAOh/B,GAAehtC,EAAO4C,EAAcwpE,GACvCt/B,GAAc9sC,EAAO4C,EAAe,EAAGspE,EAAUD,EAAOrhF,KAAKshF,EAASE,GAAOH,EAAOG,IACpFmB,GAA2BvtE,EAAO4C,EAAe,GAezD,SAAS2pE,GAAsBvsE,EAAO0tE,EAAa1B,EAAYC,EAAQ9+B,EAAMC,EAAM8+B,GAC/E,IAAItpE,EAAe8qE,EAAc1B,EACjC,OAAO9+B,GAAgBltC,EAAO4C,EAAcuqC,EAAMC,GAC9CN,GAAc9sC,EAAO4C,EAAe,EAAGspE,EAAUD,EAAOrhF,KAAKshF,EAAS/+B,EAAMC,GAAQ6+B,EAAO9+B,EAAMC,IACjGmgC,GAA2BvtE,EAAO4C,EAAe,GAgBzD,SAAS6pE,GAAsBzsE,EAAO0tE,EAAa1B,EAAYC,EAAQ9+B,EAAMC,EAAMG,EAAM2+B,GACrF,IAAItpE,EAAe8qE,EAAc1B,EACjC,OAAO1+B,GAAgBttC,EAAO4C,EAAcuqC,EAAMC,EAAMG,GACpDT,GAAc9sC,EAAO4C,EAAe,EAAGspE,EAAUD,EAAOrhF,KAAKshF,EAAS/+B,EAAMC,EAAMG,GAAQ0+B,EAAO9+B,EAAMC,EAAMG,IAC7GggC,GAA2BvtE,EAAO4C,EAAe,GAkBzD,SAAS+pE,GAAsB3sE,EAAO0tE,EAAa1B,EAAYC,EAAQ9+B,EAAMC,EAAMG,EAAME,EAAMy+B,GAC3F,IAAItpE,EAAe8qE,EAAc1B,EACjC,OAAOx+B,GAAgBxtC,EAAO4C,EAAcuqC,EAAMC,EAAMG,EAAME,GAC1DX,GAAc9sC,EAAO4C,EAAe,EAAGspE,EAAUD,EAAOrhF,KAAKshF,EAAS/+B,EAAMC,EAAMG,EAAME,GAAQw+B,EAAO9+B,EAAMC,EAAMG,EAAME,IACzH8/B,GAA2BvtE,EAAO4C,EAAe,GAiBzD,SAAS0qE,GAAsBttE,EAAO0tE,EAAa1B,EAAYC,EAAQoB,EAAMnB,GAGzE,IAFA,IAAItpE,EAAe8qE,EAAc1B,EAC7B3+B,GAAY,EACP7iD,EAAI,EAAGA,EAAI6iF,EAAK1iF,OAAQH,IAC7BwiD,GAAehtC,EAAO4C,IAAgByqE,EAAK7iF,MAAQ6iD,GAAY,GAEnE,OAAOA,EAAYP,GAAc9sC,EAAO4C,EAAcqpE,EAAOphF,MAAMqhF,EAASmB,IACxEE,GAA2BvtE,EAAO4C;;;;;;;OAmB1C,SAAS+qE,GAAO3/E,EAAO4/E,GACnB,IACIpvE,EADA7B,EAAQgF,KAERqjB,EAAgBh3B,EAz2tBJ,GA02tBZ2O,EAAMwN,iBACN3L,EA4BR,SAASqvE,EAAavhF,EAAMi9B,GACxB,GAAIA,EACA,IAAK,IAAI/+B,EAAI++B,EAAS5+B,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC3C,IAAIgU,EAAU+qB,EAAS/+B,GACvB,GAAI8B,IAASkS,EAAQlS,KACjB,OAAOkS,EAInB,MAAM,IAAInP,MAAM,aAAe/C,EAAO,yBArCxBuhF,CAAaD,EAAUjxE,EAAMykB,cACvCzkB,EAAMR,KAAK6oB,GAAiBxmB,EACxBA,EAAQ/C,YACPkB,EAAM8I,eAAiB9I,EAAM8I,aAAe,KAAK9Z,KAAKq5B,EAAexmB,EAAQ/C,YAIlF+C,EAAU7B,EAAMR,KAAK6oB,GAEzB,IAAI8oD,EAActvE,EAAQ9V,UAAY8V,EAAQ9V,QAAUgW,GAAcF,EAAQtO,OAC1Egc,EAA+BvX,GAAwB48C,IAGvDpkC,EAA+BvD,IAAwB,GACvDmkE,EAAeD,IAInB,OAHAlkE,GAAwBuD,GACxBxY,GAAwBuX,GACxBklC,GAAMz0C,EAAO+E,KAAY1T,EAAO+/E,GACzBA,EAiCX,SAASC,GAAYhgF,EAAOg+E,EAAY79B,GACpC,IAAInuC,EAAQ0B,KACRqsE,EAAe3tE,GAAKJ,EAAOhS,GAC/B,OAAOigF,GAAcjuE,EAAOkuE,GAAOluE,EAAOhS,GACtCq+E,GAAsBrsE,EAAOwC,KAAkBwpE,EAAY+B,EAAaI,UAAWhgC,EAAI4/B,GACvFA,EAAaI,UAAUhgC,IAe/B,SAASigC,GAAYpgF,EAAOg+E,EAAY79B,EAAIG,GACxC,IAAItuC,EAAQ0B,KACRqsE,EAAe3tE,GAAKJ,EAAOhS,GAC/B,OAAOigF,GAAcjuE,EAAOkuE,GAAOluE,EAAOhS,GACtCu+E,GAAsBvsE,EAAOwC,KAAkBwpE,EAAY+B,EAAaI,UAAWhgC,EAAIG,EAAIy/B,GAC3FA,EAAaI,UAAUhgC,EAAIG,IAgBnC,SAAS+/B,GAAYrgF,EAAOg+E,EAAY79B,EAAIG,EAAIG,GAC5C,IAAIzuC,EAAQ0B,KACRqsE,EAAe3tE,GAAKJ,EAAOhS,GAC/B,OAAOigF,GAAcjuE,EAAOkuE,GAAOluE,EAAOhS,GAASy+E,GAAsBzsE,EAAOwC,KAAkBwpE,EAAY+B,EAAaI,UAAWhgC,EAAIG,EAAIG,EAAIs/B,GAC9IA,EAAaI,UAAUhgC,EAAIG,EAAIG,IAiBvC,SAAS6/B,GAAYtgF,EAAOg+E,EAAY79B,EAAIG,EAAIG,EAAIG,GAChD,IAAI5uC,EAAQ0B,KACRqsE,EAAe3tE,GAAKJ,EAAOhS,GAC/B,OAAOigF,GAAcjuE,EAAOkuE,GAAOluE,EAAOhS,GAAS2+E,GAAsB3sE,EAAOwC,KAAkBwpE,EAAY+B,EAAaI,UAAWhgC,EAAIG,EAAIG,EAAIG,EAAIm/B,GAClJA,EAAaI,UAAUhgC,EAAIG,EAAIG,EAAIG,IAc3C,SAAS2/B,GAAYvgF,EAAOg+E,EAAYv+E,GACpC,IAAIuS,EAAQ0B,KACRqsE,EAAe3tE,GAAKJ,EAAOhS,GAC/B,OAAOigF,GAAcjuE,EAAOkuE,GAAOluE,EAAOhS,GACtCs/E,GAAsBttE,EAAOwC,KAAkBwpE,EAAY+B,EAAaI,UAAW1gF,EAAQsgF,GAC3FA,EAAaI,UAAUtjF,MAAMkjF,EAActgF,IAEnD,SAASygF,GAAOluE,EAAOhS,GACnB,OAAOgS,EAzguBC,GAyguBY7D,KAAKnO,EAt/tBT,IAs/tBgCyQ,KASpD,SAASwvE,GAAcjuE,EAAO0yB,GAQ1B,OAPI8Z,GAAaI,UAAUla,KACvBA,EAAW8Z,GAAaG,OAAOja,GAI/B1yB,EAD6B2C,MACGya,IAE7BsV;;;;;;;OA6DX,IAAI87C,GAA8B,SAAUz/D,GASxC,SAASy/D,EAAaC,QACF,IAAZA,IAAsBA,GAAU,GACpC,IAAI75C,EAAQ7lB,EAAOnkB,KAAKvB,OAASA,KAEjC,OADAurC,EAAM85C,UAAYD,EACX75C,EAqEX,OAjFA7qC,EAAUykF,EAAcz/D,GAkBxBy/D,EAAatkF,UAAUykF,KAAO,SAAUvjF,GACpC2jB,EAAO7kB,UAAUiB,KAAKP,KAAKvB,KAAM+B,IAUrCojF,EAAatkF,UAAU6pD,UAAY,SAAU66B,EAAiBhjF,EAAOijF,GACjE,IAAIC,EACAC,EAAU,SAAUld,GAAO,OAAO,MAClCmd,EAAa,WAAc,OAAO,MAClCJ,GAA8C,iBAApBA,GAC1BE,EAAczlF,KAAKqlF,UAAY,SAAUtjF,GACrC6d,YAAW,WAAc,OAAO2lE,EAAgBzjF,KAAKC,OACrD,SAAUA,GACVwjF,EAAgBzjF,KAAKC,IAErBwjF,EAAgBhjF,QAChBmjF,EAAU1lF,KAAKqlF,UAAY,SAAU7c,GACjC5oD,YAAW,WAAc,OAAO2lE,EAAgBhjF,MAAMimE,OACtD,SAAUA,GACV+c,EAAgBhjF,MAAMimE,KAG1B+c,EAAgBC,WAChBG,EAAa3lF,KAAKqlF,UAAY,WAC1BzlE,YAAW,WAAc,OAAO2lE,EAAgBC,eAChD,WACAD,EAAgBC,eAKxBC,EAAczlF,KAAKqlF,UAAY,SAAUtjF,GACrC6d,YAAW,WAAc,OAAO2lE,EAAgBxjF,OAChD,SAAUA,GACVwjF,EAAgBxjF,IAEhBQ,IACAmjF,EAAU1lF,KAAKqlF,UAAY,SAAU7c,GACjC5oD,YAAW,WAAc,OAAOrd,EAAMimE,OACtC,SAAUA,GACVjmE,EAAMimE,KAGVgd,IACAG,EAAa3lF,KAAKqlF,UAAY,WAC1BzlE,YAAW,WAAc,OAAO4lE,QAChC,WACAA,OAIZ,IAAII,EAAOlgE,EAAO7kB,UAAU6pD,UAAUnpD,KAAKvB,KAAMylF,EAAaC,EAASC,GAIvE,OAHIJ,aAA2BzlF,EAAK+lF,cAChCN,EAAgBxuC,IAAI6uC,GAEjBA,GAEJT,EAlFsB,CAmF/BrlF,EAAKgmF;;;;;;;OASP,SAASC,KACL,OAAO/lF,KAAKgmF,SAAS7jC,QA4BzB,IAAI8jC,GAA2B,WAC3B,SAASA,IACLjmF,KAAKo5B,OAAQ,EACbp5B,KAAKgmF,SAAW,GAChBhmF,KAAK41E,QAAU,IAAIuP,GACnBnlF,KAAKsB,OAAS,EAKd,IAAI4kF,EAAS/jC,KACT19B,EAAQwhE,EAAUplF,UACjB4jB,EAAMyhE,KACPzhE,EAAMyhE,GAAUH,IAkFxB,OA5EAE,EAAUplF,UAAUgH,IAAM,SAAUlF,GAChC,OAAO3C,KAAKgmF,SAASn+E,IAAIlF,IAM7BsjF,EAAUplF,UAAUslF,OAAS,SAAUxjF,GACnC,OAAO3C,KAAKgmF,SAASG,OAAOxjF,IAMhCsjF,EAAUplF,UAAUymE,KAAO,SAAU3kE,GACjC,OAAO3C,KAAKgmF,SAAS1e,KAAK3kE,IAM9BsjF,EAAUplF,UAAUulF,OAAS,SAAUzjF,EAAI0jF,GACvC,OAAOrmF,KAAKgmF,SAASI,OAAOzjF,EAAI0jF,IAMpCJ,EAAUplF,UAAUgO,QAAU,SAAUlM,GACpC3C,KAAKgmF,SAASn3E,QAAQlM,IAM1BsjF,EAAUplF,UAAUo8C,KAAO,SAAUt6C,GACjC,OAAO3C,KAAKgmF,SAAS/oC,KAAKt6C,IAK9BsjF,EAAUplF,UAAUylF,QAAU,WAC1B,OAAOtmF,KAAKgmF,SAASt3E,SAEzBu3E,EAAUplF,UAAU+B,SAAW,WAC3B,OAAO5C,KAAKgmF,SAASpjF,YASzBqjF,EAAUplF,UAAU0lF,MAAQ,SAAUC,GAClCxmF,KAAKgmF,SAAW13E,GAAQk4E,GACxBxmF,KAAKo5B,OAAQ,EACbp5B,KAAKsB,OAAStB,KAAKgmF,SAAS1kF,OAC5BtB,KAAKymF,KAAOzmF,KAAKgmF,SAAShmF,KAAKsB,OAAS,GACxCtB,KAAKy/C,MAAQz/C,KAAKgmF,SAAS,IAK/BC,EAAUplF,UAAU6lF,gBAAkB,WAClC1mF,KAAK41E,QAAQ0P,KAAKtlF,OAGtBimF,EAAUplF,UAAU8lF,SAAW,WAC3B3mF,KAAKo5B,OAAQ,GAGjB6sD,EAAUplF,UAAUwmC,QAAU,WAC1BrnC,KAAK41E,QAAQ4P,WACbxlF,KAAK41E,QAAQxuC,eAEV6+C,EA/FmB,GAgI1BW,GAAyB,WACzB,SAASA,EAAQC,GACb7mF,KAAK6mF,UAAYA,EACjB7mF,KAAKmgC,QAAU,KAQnB,OANAymD,EAAQ/lF,UAAUimF,MAAQ,WACtB,OAAO,IAAIF,EAAQ5mF,KAAK6mF,YAE5BD,EAAQ/lF,UAAU8lF,SAAW,WACzB3mF,KAAK6mF,UAAUF,YAEZC,EAXiB,GAaxBG,GAA2B,WAC3B,SAASA,EAAUxvD,QACC,IAAZA,IAAsBA,EAAU,IACpCv3B,KAAKu3B,QAAUA,EAiCnB,OA/BAwvD,EAAUlmF,UAAUqrC,mBAAqB,SAAU54B,GAC/C,IAAI0zE,EAAW1zE,EAAMikB,QACrB,GAAiB,OAAbyvD,EAAmB,CAOnB,IANA,IAAIC,EAAgD,OAAzB3zE,EAAMnC,eAA0BmC,EAAMnC,eAAe,GAAK61E,EAAS1lF,OAC1F4lF,EAAe,GAKV/lF,EAAI,EAAGA,EAAI8lF,EAAsB9lF,IAAK,CAC3C,IAAIgmF,EAASH,EAASI,WAAWjmF,GAEjC+lF,EAAa5kF,KADMtC,KAAKu3B,QAAQ4vD,EAAOE,wBACRP,SAEnC,OAAO,IAAIC,EAAUG,GAEzB,OAAO,MAEXH,EAAUlmF,UAAU0kC,WAAa,SAAUjyB,GACvCtT,KAAKsnF,wBAAwBh0E,IAEjCyzE,EAAUlmF,UAAUmlC,WAAa,SAAU1yB,GACvCtT,KAAKsnF,wBAAwBh0E,IAEjCyzE,EAAUlmF,UAAUymF,wBAA0B,SAAUh0E,GACpD,IAAK,IAAInS,EAAI,EAAGA,EAAInB,KAAKu3B,QAAQj2B,OAAQH,IACD,OAAhComF,GAAUj0E,EAAOnS,GAAGg/B,SACpBngC,KAAKu3B,QAAQp2B,GAAGwlF,YAIrBI,EApCmB,GAsC1BS,GACA,SAASA,GAAgBC,EAAWnnC,EAAaonC,EAAUC,QAC1C,IAATA,IAAmBA,EAAO,MAC9B3nF,KAAKynF,UAAYA,EACjBznF,KAAKsgD,YAAcA,EACnBtgD,KAAK0nF,SAAWA,EAChB1nF,KAAK2nF,KAAOA,GAIhBC,GAA2B,WAC3B,SAASA,EAAUrwD,QACC,IAAZA,IAAsBA,EAAU,IACpCv3B,KAAKu3B,QAAUA,EAoDnB,OAlDAqwD,EAAU/mF,UAAUioD,aAAe,SAAUx1C,EAAOoC,GAGhD,IAAK,IAAIvU,EAAI,EAAGA,EAAInB,KAAKu3B,QAAQj2B,OAAQH,IACrCnB,KAAKu3B,QAAQp2B,GAAG2nD,aAAax1C,EAAOoC,IAG5CkyE,EAAU/mF,UAAUsoD,WAAa,SAAUzzC,GACvC,IAAK,IAAIvU,EAAI,EAAGA,EAAInB,KAAKu3B,QAAQj2B,OAAQH,IACrCnB,KAAKu3B,QAAQp2B,GAAGgoD,WAAWzzC,IAGnCkyE,EAAU/mF,UAAUg8B,cAAgB,SAAUnnB,GAE1C,IADA,IAAImyE,EAAwB,KACnB1mF,EAAI,EAAGA,EAAInB,KAAKsB,OAAQH,IAAK,CAClC,IAAI2mF,EAA4C,OAA1BD,EAAiCA,EAAsBvmF,OAAS,EAClFymF,EAAc/nF,KAAKonF,WAAWjmF,GAAG07B,cAAcnnB,EAAOoyE,GACtDC,IACAA,EAAYV,uBAAyBlmF,EACP,OAA1B0mF,EACAA,EAAsBvlF,KAAKylF,GAG3BF,EAAwB,CAACE,IAIrC,OAAiC,OAA1BF,EAAiC,IAAID,EAAUC,GAAyB,MAEnFD,EAAU/mF,UAAUgQ,SAAW,SAAUyC,EAAOoC,GAG5C,IAAK,IAAIvU,EAAI,EAAGA,EAAInB,KAAKu3B,QAAQj2B,OAAQH,IACrCnB,KAAKu3B,QAAQp2B,GAAG0P,SAASyC,EAAOoC,IAGxCkyE,EAAU/mF,UAAUumF,WAAa,SAAUziF,GAEvC,OAAO3E,KAAKu3B,QAAQ5yB,IAExBvE,OAAO4D,eAAe4jF,EAAU/mF,UAAW,SAAU,CACjDgL,IAAK,WACD,OAAO7L,KAAKu3B,QAAQj2B,QAExB02B,YAAY,EACZC,cAAc,IAElB2vD,EAAU/mF,UAAUmnF,MAAQ,SAAUC,GAClCjoF,KAAKu3B,QAAQj1B,KAAK2lF,IAEfL,EAvDmB,GAyD1BM,GAAyB,WACzB,SAASA,EAAQ7zC,EAAUn9B,QACL,IAAdA,IAAwBA,GAAa,GACzClX,KAAKq0C,SAAWA,EAChBr0C,KAAKmgC,QAAU,KACfngC,KAAKqnF,wBAA0B,EAC/BrnF,KAAKmoF,mBAAoB,EAMzBnoF,KAAKooF,oBAAqB,EAC1BpoF,KAAKqoF,sBAAwBnxE,EA8FjC,OA5FAgxE,EAAQrnF,UAAUioD,aAAe,SAAUx1C,EAAOoC,GAC1C1V,KAAKsoF,iBAAiB5yE,IACtB1V,KAAKuoF,WAAWj1E,EAAOoC,IAG/BwyE,EAAQrnF,UAAUsoD,WAAa,SAAUzzC,GACjC1V,KAAKqoF,wBAA0B3yE,EAAM/Q,QACrC3E,KAAKooF,oBAAqB,IAGlCF,EAAQrnF,UAAUgQ,SAAW,SAAUyC,EAAOoC,GAC1C1V,KAAK8oD,aAAax1C,EAAOoC,IAE7BwyE,EAAQrnF,UAAUg8B,cAAgB,SAAUnnB,EAAOoyE,GAC/C,OAAI9nF,KAAKsoF,iBAAiB5yE,IACtB1V,KAAKmoF,mBAAoB,EAGzBnoF,KAAKwoF,UAAU9yE,EAAM/Q,MAAOmjF,GACrB,IAAII,EAAQloF,KAAKq0C,WAErB,MAEX6zC,EAAQrnF,UAAUynF,iBAAmB,SAAU5yE,GAC3C,GAAI1V,KAAKooF,qBAAoD,IAA9BpoF,KAAKq0C,SAASiM,YAAuB,CAahE,IAZA,IAAImoC,EAAqBzoF,KAAKqoF,sBAC1B96D,EAAW7X,EAAMkF,OAWD,OAAb2S,GAAuC,IAAlBA,EAAS1mB,MACjC0mB,EAAS5oB,QAAU8jF,GACnBl7D,EAAWA,EAAS3S,OAExB,OAAO6tE,KAAqC,OAAbl7D,EAAoBA,EAAS5oB,OAAS,GAEzE,OAAO3E,KAAKooF,oBAEhBF,EAAQrnF,UAAU0nF,WAAa,SAAUj1E,EAAOoC,GAC5C,GAAInV,MAAMqH,QAAQ5H,KAAKq0C,SAASozC,WAE5B,IADA,IAAInvD,EAAat4B,KAAKq0C,SAASozC,UACtBtmF,EAAI,EAAGA,EAAIm3B,EAAWh3B,OAAQH,IACnCnB,KAAK0oF,yBAAyBp1E,EAAOoC,EAAOizE,GAAyBjzE,EAAO4iB,EAAWn3B,SAG1F,CACD,IAAIynF,EAAgB5oF,KAAKq0C,SAASozC,UAC9BmB,IAAkB98C,GACC,IAAfp2B,EAAM7O,MACN7G,KAAK0oF,yBAAyBp1E,EAAOoC,GAAQ,GAIjD1V,KAAK0oF,yBAAyBp1E,EAAOoC,EAAOsN,GAA0BtN,EAAOpC,EAAOs1E,GAAe,GAAO,MAItHV,EAAQrnF,UAAU6nF,yBAA2B,SAAUp1E,EAAOoC,EAAOmzE,GACjE,GAAqB,OAAjBA,EAAuB,CACvB,IAAIlB,EAAO3nF,KAAKq0C,SAASszC,KACzB,GAAa,OAATA,EACA,GAAIA,IAASh8C,IAAcg8C,IAASp7C,IAChCo7C,IAAS77C,IAA8B,IAAfp2B,EAAM7O,KAC9B7G,KAAKwoF,SAAS9yE,EAAM/Q,OAAQ,OAE3B,CACD,IAAImkF,EAAyB9lE,GAA0BtN,EAAOpC,EAAOq0E,GAAM,GAAO,GACnD,OAA3BmB,GACA9oF,KAAKwoF,SAAS9yE,EAAM/Q,MAAOmkF,QAKnC9oF,KAAKwoF,SAAS9yE,EAAM/Q,MAAOkkF,KAIvCX,EAAQrnF,UAAU2nF,SAAW,SAAUj9B,EAAUw9B,GACxB,OAAjB/oF,KAAKmgC,QACLngC,KAAKmgC,QAAU,CAACorB,EAAUw9B,GAG1B/oF,KAAKmgC,QAAQ79B,KAAKipD,EAAUw9B,IAG7Bb,EA3GiB;;;;;;;OAqH5B,SAASS,GAAyBjzE,EAAO0c,GACrC,IAAIkG,EAAa5iB,EAAM4iB,WACvB,GAAmB,OAAfA,EACA,IAAK,IAAIn3B,EAAI,EAAGA,EAAIm3B,EAAWh3B,OAAQH,GAAK,EACxC,GAAIm3B,EAAWn3B,KAAOixB,EAClB,OAAOkG,EAAWn3B,EAAI,GAIlC,OAAO,KAWX,SAAS6nF,GAAoBryE,EAAOjB,EAAOuzE,EAAatB,GACpD,OAAqB,IAAjBsB,EAVR,SAASC,EAAwBxzE,EAAOiH,GACpC,OAAmB,IAAfjH,EAAM7O,MAA2C,IAAf6O,EAAM7O,KACjC4kC,GAAiBE,GAAYj2B,EAAOiH,GAEvB,IAAfjH,EAAM7O,KACJ+kC,GAAkBE,GAAaH,GAAYj2B,EAAOiH,GAEtD,KAKIusE,CAAwBxzE,EAAOiB,IAEhB,IAAjBsyE,EASb,SAASE,EAAmBxyE,EAAOjB,EAAOiyE,GACtC,OAAIA,IAASh8C,GACFF,GAAiBE,GAAYj2B,EAAOiB,GAEtCgxE,IAAS77C,GACPF,GAAkBE,GAAaH,GAAYj2B,EAAOiB,GAEpDgxE,IAASp7C,GAGPF,GAAmBE,GAAkBZ,GAAYj2B,EAAOiB,QAH9D,EAdMwyE,CAAmBxyE,EAAOjB,EAAOiyE,GAIjC1kE,GAAkBtM,EAAOA,EA1lvB5B,GA0lvB0CsyE,EAAavzE,GAyBnE,SAAS0zE,GAAuB91E,EAAOqD,EAAOwwE,EAAQkC,GAClD,IAAIC,EAAS3yE,EAhnvBH,GAgnvBkB4gB,QAAQ8xD,GACpC,GAAuB,OAAnBC,EAAOnpD,QAAkB,CAIzB,IAHA,IAAIopD,EAAYj2E,EAAMR,KAClB02E,EAAgBrC,EAAOhnD,QACvBxM,EAAS,GACJxyB,EAAI,EAAGA,EAAIqoF,EAAcloF,OAAQH,GAAK,EAAG,CAC9C,IAAIsoF,EAAiBD,EAAcroF,GAK/BwyB,EAAOrxB,KAJPmnF,EAAiB,EAIL,KAKAT,GAAoBryE,EADpB4yE,EAAUE,GACwBD,EAAcroF,EAAI,GAAIgmF,EAAO9yC,SAASszC,OAG5F2B,EAAOnpD,QAAUxM,EAErB,OAAO21D,EAAOnpD,QAkDlB,SAASupD,GAAe7C,GACpB,IAAIlwE,EAAQ0B,KACR/E,EAAQgF,KACR+wE,EAAapvE,KACjBE,GAAqBkvE,EAAa,GAClC,IAAIlC,EAASI,GAAUj0E,EAAO+1E,GAC9B,GAAIxC,EAAUztD,OAAU7hB,GAAeZ,KAAWwwE,EAAO9yC,SAASqzC,SAAW,CACzE,GAAuB,OAAnBP,EAAOhnD,QACP0mD,EAAUN,MAAM,QAEf,CACD,IAAI5yD,EAASwzD,EAAOgB,kBAvDhC,SAASwB,EAAoBr2E,EAAOqD,EAAO0yE,EAAY11D,GACnD,IAAIwzD,EAAS7zE,EAAMikB,QAAQ6vD,WAAWiC,GAClCG,EAAgBrC,EAAOhnD,QAC3B,GAAsB,OAAlBqpD,EAEA,IADA,IAAII,EAAeR,GAAuB91E,EAAOqD,EAAOwwE,EAAQkC,GACvDloF,EAAI,EAAGA,EAAIqoF,EAAcloF,OAAQH,GAAK,EAAG,CAC9C,IAAIoqD,EAAWi+B,EAAcroF,GAC7B,GAAIoqD,EAAW,EACX53B,EAAOrxB,KAAKsnF,EAAazoF,EAAI,QAE5B,CAKD,IAJA,IAAI2mF,EAAkB0B,EAAcroF,EAAI,GACpCukC,EAAwB/uB,GAAO40C,GAG1Bs+B,EAtmvBK,EAsmvB0BA,EAAMnkD,EAAsBpkC,OAAQuoF,KACpEjtD,EAAgB8I,EAAsBmkD,IA/ovBjC,MAgpvBqCjtD,EA9pvBrD,IA+pvBW+sD,EAAoB/sD,EAjqvBhC,GAiqvBsDA,EAAekrD,EAAiBn0D,GAKlF,GAA2C,OAAvC+R,EAznvBF,GA2nvBE,IADA,IAAIokD,EAAiBpkD,EA1nvBvB,GA2nvBWqkD,EAAM,EAAGA,EAAMD,EAAexoF,OAAQyoF,IAAO,CAClD,IAAIntD,EACJ+sD,GADI/sD,EAAgBktD,EAAeC,IAzqvB/C,GA0qvBsDntD,EAAekrD,EAAiBn0D,KAM9F,OAAOA,EAuBKg2D,CAAoBr2E,EAAOqD,EAAO0yE,EAAY,IAC9CD,GAAuB91E,EAAOqD,EAAOwwE,EAAQkC,GACjDxC,EAAUN,MAAM5yD,GAChBkzD,EAAUH,kBAEd,OAAO,EAEX,OAAO,EAWX,SAASsD,GAAkBvC,EAAWwC,EAAStC,GAC3CuC,GAAkB5xE,KAAYD,KAAYovE,EAAWwC,EAAStC,GAAM,GAWxE,SAASwC,GAAY1C,EAAWwC,EAAStC,GACrCuC,GAAkB5xE,KAAYD,KAAYovE,EAAWwC,EAAStC,GAAM,GAExE,SAASuC,GAAkB52E,EAAOqD,EAAO8wE,EAAWwC,EAAStC,EAAMD,GAC3Dp0E,EAAMwN,kBACNspE,GAAa92E,EAAO,IAAIk0E,GAAgBC,EAAWwC,EAASvC,EAAUC,IAAQ,GAC1ED,IACAp0E,EAAMqkB,mBAAoB,IAGlC0yD,GAAa/2E,EAAOqD,GAcxB,SAAS2zE,GAAetmE,EAAgByjE,EAAWwC,EAAStC,GACxD4C,GAAqBjyE,KAAYD,KAAYovE,EAAWwC,EAAStC,GAAM,EAAOjvE,KAA4BsL,GAc9G,SAASwmE,GAAqBxmE,EAAgByjE,EAAWwC,EAAStC,GAC9D4C,GAAqBjyE,KAAYD,KAAYovE,EAAWwC,EAAStC,GAAM,EAAMjvE,KAA4BsL,GAE7G,SAASumE,GAAqBj3E,EAAOqD,EAAO8wE,EAAWwC,EAAStC,EAAMD,EAAUhyE,EAAOsO,GAC/E1Q,EAAMwN,kBACNspE,GAAa92E,EAAO,IAAIk0E,GAAgBC,EAAWwC,EAASvC,EAAUC,GAAOjyE,EAAM/Q,OAkC3F,SAAS8lF,EAAkCn3E,EAAO0Q,GAC9C,IAAI0mE,EAAsBp3E,EAAMnC,iBAAmBmC,EAAMnC,eAAiB,IAEtE6S,KAD0B1Q,EAAMnC,eAAe7P,OAASopF,EAAoBA,EAAoBppF,OAAS,IAAM,IAE/GopF,EAAoBpoF,KAAKgR,EAAMikB,QAAQj2B,OAAS,EAAG0iB,GArCnDymE,CAAkCn3E,EAAO0Q,GACrC0jE,IACAp0E,EAAMskB,sBAAuB,IAGrCyyD,GAAa/2E,EAAOqD,GAOxB,SAASg0E,KACL,OAEJ,SAASC,EAAkBj0E,EAAO0yE,GAI9B,OAAO1yE,EAjyvBG,GAiyvBY4gB,QAAQ8xD,GAAYxC,UANnC+D,CAAkBvyE,KAAY4B,MAQzC,SAASowE,GAAa/2E,EAAOqD,GACzB,IAAIkwE,EAAY,IAAIZ,IA98jBxB,SAAS4E,EAAwBv3E,EAAOqD,EAAO1J,EAASw9B,GACpD,IAAIzD,EAAWxD,GAAY7sB,GAC3BqwB,EAAS1kC,KAAK2K,GACVqG,EAAMwN,iBACN2iB,GAAgBnwB,GAAOhR,KAAKmoC,EAAWzD,EAAS1lC,OAAS,GA28jB7DupF,CAAwBv3E,EAAOqD,EAAOkwE,EAAWA,EAAUx/C,SACpC,OAAnB1wB,EAtyvBM,KAuyvBNA,EAvyvBM,GAuyvBW,IAAIowE,IACzBpwE,EAxyvBU,GAwyvBK4gB,QAAQj1B,KAAK,IAAIskF,GAAQC,IAE5C,SAASuD,GAAa92E,EAAO+gC,EAAUn9B,GACb,OAAlB5D,EAAMikB,UACNjkB,EAAMikB,QAAU,IAAIqwD,IACxBt0E,EAAMikB,QAAQywD,MAAM,IAAIE,GAAQ7zC,EAAUn9B,IAS9C,SAASqwE,GAAUj0E,EAAO3O,GAEtB,OAAO2O,EAAMikB,QAAQ6vD,WAAWziF;;;;;;;OAgBpC,SAASmmF,GAAuBp1E,EAAOiH,GACnC,OAAOivB,GAAkBE,GAAaH,GAAYj2B,EAAOiH,GAO7D,SAASouE,GAA8Br/E,QACrB,IAAVA,IAAoBA,EAAQpM,EAAQ8F,YAAYuG,SACpD,IAAI5J,EAAQwsC,IAAwB,GACpC,GAAa,MAATxsC,GAAmB2J,EAAQpM,EAAQ8F,YAAYG,SAI/C,OAAOxD,EAHP,MAAM,IAAIiE,MAAM;;;;;;;;;;;;;;OA2BxB,IAAIglF,GAAuC,CACvC3mC,cAAeA,GACf4B,0BAA2BA,GAC3BE,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3Bp2C,oBAAqBA,GACrB2E,oBAAqBA,GACrB9O,qBAAsBA,EACtBK,mBAAoBA,EACpB4N,mBAAoBA,GACpBc,eAAgBA,GAChBgzC,oBAAqBA,GACrB16C,iBAAkBA,GAClBgX,wBAAyBA,GACzB1Y,WAAYA,GACZq8C,oBAAqBA,GACrBI,mBAAoBA,GACpBx8C,sBAAuBA,GACvBg/E,gCAAiCA,GACjCD,yBAA0BA,GAC1BtuB,uBAAwBA,GACxBmC,qBAAsBA,GACtB9C,0BAA2BA,GAC3BxB,6BAA8BA,GAC9BjT,cAAeA,GACfoF,gBAAiBA,GACjB3E,0BAA2BA,GAC3BC,wBAAyBA,GACzBpsC,kBAAmBA,GACnBD,oBAAqBA,GACrBD,iBAAkBA,GAClBrD,mBAAoBA,GACpBC,oBAAqBA,GACrBuwC,iBAAkBA,GAClBM,eAAgBA,GAChBK,YAAaA,GACbC,0BAA2BA,GAC3BE,wBAAyBA,GACzBC,qBAAsBA,GACtBg5B,kBAAmBA,GACnBI,kBAAmBA,GACnBG,kBAAmBA,GACnBE,kBAAmBA,GACnBE,kBAAmBA,GACnBE,kBAAmBA,GACnBE,kBAAmBA,GACnBE,kBAAmBA,GACnBE,kBAAmBA,GACnBE,kBAAmBA,GACnBx5B,mBAAoBA,GACpBhyC,gBAAiBA,GACjBoyC,aAAcA,GACdgD,eAAgBA,GAChBgK,+BAAgCA,GAChC1M,mCAAoCA,GACpC05B,cAAeA,GACfI,cAAeA,GACfC,cAAeA,GACfC,cAAeA,GACfC,cAAeA,GACf/3B,kBAAmBA,GACnBuK,iBAAkBA,GAClBlP,aAAcA,GACdqF,wBAAyBA,GACzBC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1Bg2B,SAAUA,GACVoF,iBAAkBA,GAClBS,cAAeA,GACfH,oBAAqBA,GACrBQ,uBAAwBA,GACxBG,cAAeA,GACfL,iBAAkBA,GAClBtiC,cAAeA,GACfmJ,aAAcA,GACd2E,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BxF,aAAcA,GACdyF,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BpG,cAAeA,GACfqG,0BAA2BA,GAC3BE,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BhH,mBAAoBA,GACpBI,cAAeA,GACfr8B,WAAYA,GACZH,YAAaA,GACbkzB,aAAcA,GACd2N,SAAUA,GACVE,oBAAqBA,GACrBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBlM,sBAAuBA,GACvBU,oBAAqBA,GACrB+0B,SAAUA,GACVC,mBAAoBA,GACpBK,YAAaA,GACbjE,cAAeA,GACfuC,YAAaA,GACb2B,cAAeA,GACfxC,oBAAqBA,GACrBt9D,kBAAmBA,GACnBI,oBAAqBA,GACrBC,gBAAiBA,GACjBnM,sBAAuBA,GACvBS,qBAAsBA,GACtB2Z,iBAAkBA,GAClBI,kBAAmBA,GACnBgB,0BAA2BA,GAC3BV,wBAAyBA,GACzBG,mBAAoBA,GACpBN,gBAAiBA,GACjBS,6BAA8BA,IAG9B87D,GAAa,KA8BbC,GAAgB,GAChBC,GAAc,GAQdC,IAAsB,EAM1B,SAASC,KACL,IAAKD,GAAqB,CACtBA,IAAsB,EACtB,IACI,IAAK,IAAIjqF,EAAIgqF,GAAY7pF,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC9C,IAAIsC,EAAK0nF,GAAYhqF,GAAI8xE,EAAaxvE,EAAGwvE,WAAY1lC,EAAW9pC,EAAG8pC,SAC/DA,EAASj5B,cAAgBi5B,EAASj5B,aAAag3E,MAAMC,MAErDJ,GAAYp8E,OAAO5N,EAAG,GACtBqqF,GAA6BvY,EAAY1lC,KAIrD,QACI69C,IAAsB,IASlC,SAASG,GAAsBE,GAC3B,OAAIlrF,MAAMqH,QAAQ6jF,GACPA,EAAYH,MAAMC,MAEpB7iF,EAAkB+iF,GAO/B,SAASC,GAAgBzY,EAAY1lC,QAChB,IAAbA,IAAuBA,EAAW,IACtCo+C,GAAoB1Y,EAAY1lC,GA7CpC,SAASq+C,EAA+B3Y,EAAY1lC,GAChD49C,GAAY7oF,KAAK,CAAE2wE,WAAYA,EAAY1lC,SAAUA,IAiDrDq+C,CAA+B3Y,EAAY1lC,GAQ/C,SAASo+C,GAAoB1Y,EAAY1lC,EAAUs+C,QACN,IAArCA,IAA+CA,GAAmC,GAGtF,IAAIv3E,EAAehG,GAAQi/B,EAASj5B,cAAgB42E,IAChDx2E,EAAc,KAClBtU,OAAO4D,eAAeivE,EAAYhpE,GAAY,CAC1CguB,cAAc,EACdpsB,IAAK,WA4BD,OA3BoB,OAAhB6I,KAMAA,EAAcnL,IAAoBmiF,gBAAgBV,GAAgB,SAAW/X,EAAWhwE,KAAO,WAAiB,CAC5G4D,KAAMosE,EACN5+D,UAAW/F,GAAQi/B,EAASl5B,WAAa62E,IAAerjF,IAAIa,GAC5D4L,aAAcA,EAAazM,IAAIa,GAC/B/B,QAAS2H,GAAQi/B,EAAS5mC,SAAWukF,IAChCrjF,IAAIa,GACJb,IAAIikF,IACTxsF,QAASgP,GAAQi/B,EAASjuC,SAAW4rF,IAChCrjF,IAAIa,GACJb,IAAIikF,IACTz4E,QAASk6B,EAASl6B,QAAU/E,GAAQi/B,EAASl6B,SAAW,KACxDJ,GAAIs6B,EAASt6B,IAAM,QAMNI,UACbqB,EAAYrB,QAAU,KAGvBqB,KAGf,IAAIhN,EAAgB,KACpBtH,OAAO4D,eAAeivE,EAAY9rE,EAAY,CAC1C0E,IAAK,WACD,GAAsB,OAAlBnE,EAAwB,CAGxB,IAAIxC,EAAO,CACPjC,KAAMgwE,EAAWhwE,KACjB4D,KAAMosE,EACNzgC,KAAMF,GAAoB2gC,GAC1BvsE,UAAW6mC,EAAS7mC,WAAawkF,GACjCvkF,QAAS,EACJ4mC,EAAS5mC,SAAWukF,IAAerjF,IAAIa,IACvC6kC,EAASjuC,SAAW4rF,IAAerjF,IAAIa,KAGhDhB,EAAgB6B,IAAoBwiF,gBAAgBf,GAAgB,SAAW/X,EAAWhwE,KAAO,WAAiBiC,GAEtH,OAAOwC,GAGXuwB,cAAc,IA+LtB,SAASuzD,GAA6BvY,EAAY1lC,GAC9C,IAAIj5B,EAAehG,GAAQi/B,EAASj5B,cAAgB42E,IAChDc,EAAmBC,GAAoBhZ,GAC3C3+D,EAAazF,SAAQ,SAAU48E,GACvBA,EAAYhrF,eAAekJ,GAI3BuiF,GADmBl4E,GADHy3E,GAEyBO,GAEnCP,EAAYhrF,eAAeoJ,KAAgB4hF,EAAYhrF,eAAesJ,MAE5E0hF,EAAYU,gBAAkBlZ,MAQ1C,SAASiZ,GAA2BtyB,EAAcoyB,GAC9CpyB,EAAannD,cAAgB,WACzB,OAAOlS,MAAMs9C,KAAKmuC,EAAiBI,YAAY54E,YAC1C3L,KAAI,SAAUwkF,GAAO,OAAOA,EAAI5rF,eAAekJ,GAAeqK,GAAgBq4E,GAAOp4E,GAAgBo4E,MACrGlG,QAAO,SAAUl/E,GAAO,QAASA,MAE1C2yD,EAAalnD,SAAW,WACpB,OAAOnS,MAAMs9C,KAAKmuC,EAAiBI,YAAYz4E,OAAO9L,KAAI,SAAUykF,GAAQ,OAAOp4E,GAAWo4E,OAElG1yB,EAAavmD,QAAU24E,EAAiB34E,QAKxCumD,EAAatmD,MAAQ,KAWzB,SAAS24E,GAAoBhZ,GACzB,IAAKsZ,GAAWtZ,GACZ,MAAM,IAAIjtE,MAAMitE,EAAWhwE,KAAO,+CAEtC,IAAIgE,EAAM0N,GAAes+D,GACzB,GAAoC,OAAhChsE,EAAIsN,wBACJ,OAAOtN,EAAIsN,wBAEf,IAAIi4E,EAAS,CACTn5E,QAASpM,EAAIoM,SAAW,KACxB+4E,YAAa,CACT54E,WAAY,IAAI+hC,IAChB5hC,MAAO,IAAI4hC,KAEfk3C,SAAU,CACNj5E,WAAY,IAAI+hC,IAChB5hC,MAAO,IAAI4hC,MAmDnB,OAhDAn1B,GAAcnZ,EAAIN,SAASkI,SAAQ,SAAU+nC,GACzC,IAAI81C,EAAe91C,EACnB,IAAK21C,GAAWG,GACZ,MAAM,IAAI1mF,MAAM,aAAe0mF,EAAazpF,KAAO,wCAIvD,IAAI0pF,EAAgBV,GAAoBS,GACxCC,EAAcF,SAASj5E,WAAW3E,SAAQ,SAAU+9E,GAAS,OAAOJ,EAAOJ,YAAY54E,WAAWujC,IAAI61C,MACtGD,EAAcF,SAAS94E,MAAM9E,SAAQ,SAAU+9E,GAAS,OAAOJ,EAAOJ,YAAYz4E,MAAMojC,IAAI61C,SAEhGxsE,GAAcnZ,EAAIqN,cAAczF,SAAQ,SAAUg+E,GAE1C34E,GADmB24E,GAEnBL,EAAOJ,YAAYz4E,MAAMojC,IAAI81C,GAM7BL,EAAOJ,YAAY54E,WAAWujC,IAAI81C,MAG1CzsE,GAAcnZ,EAAI3H,SAASuP,SAAQ,SAAU49E,GACzC,IAAIK,EAAeL,EAGnB,GAAIF,GAAWO,GAAe,CAG1B,IAAIC,EAAgBd,GAAoBa,GACxCC,EAAcN,SAASj5E,WAAW3E,SAAQ,SAAU+9E,GAChDJ,EAAOJ,YAAY54E,WAAWujC,IAAI61C,GAClCJ,EAAOC,SAASj5E,WAAWujC,IAAI61C,MAEnCG,EAAcN,SAAS94E,MAAM9E,SAAQ,SAAU+9E,GAC3CJ,EAAOJ,YAAYz4E,MAAMojC,IAAI61C,GAC7BJ,EAAOC,SAAS94E,MAAMojC,IAAI61C,WAGzB14E,GAAW44E,GAChBN,EAAOC,SAAS94E,MAAMojC,IAAI+1C,GAG1BN,EAAOC,SAASj5E,WAAWujC,IAAI+1C,MAGvC7lF,EAAIsN,wBAA0Bi4E,EACvBA,EAEX,SAASV,GAA0B/pF,GAC/B,OAKJ,SAASirF,EAAsBjrF,GAC3B,YAA0BuE,IAAnBvE,EAAMwrC,SANTy/C,CAAsBjrF,GACfA,EAAMwrC,SAEVxrC,EAKX,SAASwqF,GAAWxqF,GAChB,QAAS4S,GAAe5S;;;;;;;OAmB5B,SAASkrF,GAAiBpmF,EAAMwtC,GAI5B,IAAI64C,EAAiB,MAv/azB,SAASC,EAAyCtmF,EAAMwtC,GAChD0N,GAAyB1N,KACzB8M,GAAiCtL,IAAIhvC,EAAMwtC,GAC3CuN,GAA8B7K,IAAIlwC,IAs/atCsmF,CAAyCtmF,EAAMwtC,GAI/C+4C,GAAuBvmF,EAAMwtC,GAC7Bj0C,OAAO4D,eAAe6C,EAAM8C,EAAa,CACrCkC,IAAK,WACD,GAAuB,OAAnBqhF,EAAyB,CACzB,IAAIz6C,EAAWlpC,IACf,GAAIw4C,GAAyB1N,GAAW,CACpC,IAAI9xC,EAAQ,CAAC,cAAgBsE,EAAK5D,KAAO,sBAQzC,MAPIoxC,EAASgN,aACT9+C,EAAMD,KAAK,mBAAqB+xC,EAASgN,aAEzChN,EAASiN,WAAajN,EAASiN,UAAUhgD,QACzCiB,EAAMD,KAAK,iBAAmB6K,KAAKxF,UAAU0sC,EAASiN,YAE1D/+C,EAAMD,KAAK,2DACL,IAAI0D,MAAMzD,EAAMuF,KAAK,OAM/B,IAAIrB,EAtfpB,SAAS4mF,IACL,OAAOpC,GAqfmBoC,GACVC,EAAsBj5C,EAASi5C,yBACPhnF,IAAxBgnF,IAEIA,EADY,OAAZ7mF,QAAoDH,IAAhCG,EAAQ6mF,qBACN7mF,EAAQ6mF,qBAMtC,IAAIv6E,EAAgBshC,EAASthC,mBACPzM,IAAlByM,IAEIA,EADY,OAAZtM,QAAqDH,IAAjCG,EAAQ8mF,qBACZ9mF,EAAQ8mF,qBAGRjuF,EAAQwJ,kBAAkBkK,UAGlD,IAAIquC,EAAchN,EAASgN,aAAe,SAAWx6C,EAAK5D,KAAO,iBAC7DiC,EAAOnE,EAASA,EAAS,GAAIysF,GAAkB3mF,EAAMwtC,IAAY,CAAEo5C,eAAgBh7C,EAASi7C,sBAAsB,YAAa7mF,EAAK5D,KAAMo+C,GAAcxwC,SAAUwjC,EAASxjC,UAAY,GAAIy8E,oBAAqBA,EAAqBp6E,OAAQmhC,EAASnhC,QAAU9C,GAAau9E,WAAYt5C,EAASs5C,WAAYn6E,WAAY,GAAIjB,gBAAiB8hC,EAAS9hC,gBAAiBoB,MAAO,IAAI0hC,IAAOtiC,cAAeA,EAAe66E,cAAev5C,EAASu5C,cAAehvB,cAAevqB,EAASuqB,eAAiB,OAe7e,GAdI15D,EAAK2oF,iBACLC,GAAoCjnF,GAExCqmF,EAAiBz6C,EAASw6C,iBAAiBjC,GAAgB3pC,EAAan8C,GAMxEmmF,KAgBhB,SAAS0C,EAAiBj+D,GACtB,YAAqCxpB,IAA9BwpB,EAAUq8D,gBAZD4B,CAAiBlnF,GAAO,CACxB,IAAI2lF,EAASP,GAAoBplF,EAAKslF,iBACtCD,GAA2BgB,EAAgBV,IAGnD,OAAOU,GAGXj1D,cAAc,IAatB,SAAS+1D,GAAiBnnF,EAAMqW,GAC5B,IAAI+wE,EAAiB,KACrBb,GAAuBvmF,EAAMqW,GAAa,IAC1C9c,OAAO4D,eAAe6C,EAAMgD,GAAY,CACpCgC,IAAK,WACD,GAAuB,OAAnBoiF,EAAyB,CAIzB,IAAI/oF,EAAOgpF,GAAqBrnF,EAAMqW,GAAa,IACnD+wE,EACI1kF,IAAoBykF,iBAAiBhD,GAAgB9lF,EAAKipF,aAAcjpF,EAAKmvC,UAErF,OAAO45C,GAGXh2D,cAAc,IAGtB,SAASi2D,GAAqBrnF,EAAMwtC,GAChC,IAAIpxC,EAAO4D,GAAQA,EAAK5D,KACpBkrF,EAAe,SAAWlrF,EAAO,WACjCwvC,EAAWlpC,IACX6kF,EAASZ,GAAkB3mF,EAAMwtC,GAKrC,OAJA+5C,EAAOX,eAAiBh7C,EAASi7C,sBAAsB,YAAazqF,EAAMkrF,GACtEC,EAAOP,iBACPC,GAAoCjnF,GAEjC,CAAEwtC,SAAU+5C,EAAQD,aAAcA,GAE7C,SAASf,GAAuBvmF,EAAMwtC,GAClC,IAAID,EAAe,KACnBh0C,OAAO4D,eAAe6C,EAAMwD,GAAgB,CACxCwB,IAAK,WACD,GAAqB,OAAjBuoC,EAAuB,CACvB,IAAIlvC,EAAOgpF,GAAqBrnF,EAAMwtC,GAClC5B,EAAWlpC,IACf6qC,EAAe3B,EAAS6B,eAAe02C,GAAgB,SAAWnkF,EAAK5D,KAAO,WAAiBlC,EAASA,EAAS,GAAImE,EAAKmvC,UAAW,CAAEE,SAAU,kBAAmBtvC,OAAQwtC,EAAS5pC,gBAAgBwlF,aAEzM,OAAOj6C,GAGXnc,cAAc,IAGtB,SAASq2D,GAA0BznF,GAC/B,OAAOzG,OAAOskB,eAAe7d,EAAKhG,aAAeT,OAAOS,UAM5D,SAAS2sF,GAAkB3mF,EAAMwtC,GAE7B,IA2EqB/iC,EA3EjB89B,EAAUiD,KACVxB,EAAezB,EAAQ+B,gBAAgBtqC,GAC3C,MAAO,CACH5D,KAAM4D,EAAK5D,KACX4D,KAAMA,EACN8sC,kBAAmB,EACnBvhB,cAAgC9rB,IAAtB+tC,EAASjiB,SAAyBiiB,EAASjiB,SAAW,KAChEogB,KAAMF,GAAoBzrC,GAC1B00B,KAAM8Y,EAAS9Y,MAAQprB,GACvB0gC,aAAcA,EACdz/B,OAAQijC,EAASjjC,QAAUhB,GAC3BiB,QAASgjC,EAAShjC,SAAWjB,GAC7BmnB,QAASg3D,GAAuB1nF,EAAMgqC,EAAc29C,IACpDC,UAAW,CAAEC,cAAet/C,EAAQgC,iBAAiBvqC,EAAM,gBAC3D4mF,eAAgB,KAChBI,iBAAkBS,GAA0BznF,GAC5CyK,UA2DiBA,EA3DS+iC,EAAS/iC,cA4DnBhL,IAAbgL,EAAyB,KAAOq9E,GAAar9E,IA3DhD5K,UAAW2tC,EAAS3tC,WAAa,KACjCkoF,YAAaL,GAAuB1nF,EAAMgqC,EAAcwP,KAMhE,SAASytC,GAAoCjnF,GAIzC,IAHA,IAAIgoF,EAAezuF,OAAOS,UACtB+Z,EAASxa,OAAOskB,eAAe7d,EAAKhG,WAAWD,YAE5Cga,GAAUA,IAAWi0E,GAGnB56E,GAAgB2G,IAAY5G,GAAgB4G,KAC7Ck0E,GAA2Bl0E,IAC3BozE,GAAiBpzE,EAAQ,MAE7BA,EAASxa,OAAOskB,eAAe9J,GAgBvC,SAAS2zE,GAAuB1nF,EAAMgqC,EAAck+C,GAChD,IAAIC,EAAc,GACdn4C,EAAU,SAAUolB,GACpB,GAAIprB,EAAapwC,eAAew7D,GAAQ,CACpC,IAAIgzB,EAAgBp+C,EAAaorB,GACjCgzB,EAAcpgF,SAAQ,SAAUqgF,GAC5B,GAAIH,EAAWG,GAAM,CACjB,IAAKA,EAAI98D,SACL,MAAM,IAAIpsB,MAAM,8CAAgDi2D,EAAQ,SAC5Dx8C,GAAkB5Y,GAAQ,+CAE1C,GAAIooF,EAAchyC,KAAKkyC,IACnB,MAAM,IAAInpF,MAAM,0DAEpBgpF,EAAY1sF,KAxBhC,SAAS8sF,EAAyBC,EAAcH,GAC5C,MAAO,CACHG,aAAcA,EACd5H,WAN2Br1D,EAMU88D,EAAI98D,SALlB,iBAAbA,EAAwBu8D,GAAav8D,GAAY1pB,EAAkB0pB,IAM7EkuB,YAAa4uC,EAAI5uC,YACjBb,MAAOyvC,EAAIzvC,MACXkoC,KAAMuH,EAAIvH,KAAOuH,EAAIvH,KAAO,KAC5B2H,SAAUJ,EAAII,QAVtB,IAAmCl9D,EA2BEg9D,CAAyBnzB,EAAOizB,UAKjE,IAAK,IAAIjzB,KAASprB,EACdgG,EAAQolB,GAEZ,OAAO+yB,EAKX,SAASR,GAAezsF,GACpB,IAAIkB,EAAOlB,EAAMkC,eACjB,MAAgB,iBAAThB,GAAoC,oBAATA,EAEtC,SAASo9C,GAAYt+C,GACjB,IAAIkB,EAAOlB,EAAMkC,eACjB,MAAgB,cAAThB,GAAiC,iBAATA,EAEnC,SAASksF,GAAkBptF,GACvB,MAAgC,UAAzBA,EAAMkC,eAEjB,SAAS0qF,GAAa5sF,GAClB,OAAOA,EAAMynB,MAAM,KAAK3hB,KAAI,SAAU0nF,GAAS,OAAOA,EAAM9lE,UApZ5C,IAAI4rB,IACD,IAAIA,IAqZ3B,IAAIm6C,GAAkB,CAClB,cAAe,WAAY,cAAe,YAAa,kBAAmB,qBAC1E,qBAAsB,yBAE1B,SAASV,GAA2BjoF,GAChC,IAAIuoC,EAAUiD,KACd,GAAIm9C,GAAgBvyC,MAAK,SAAUwyC,GAAY,OAAOrgD,EAAQgC,iBAAiBvqC,EAAM4oF,MACjF,OAAO,EAEX,IAAI5+C,EAAezB,EAAQyB,aAAahqC,GACxC,IAAK,IAAIo1D,KAASprB,EAEd,IADA,IAAIH,EAAcG,EAAaorB,GACtB96D,EAAI,EAAGA,EAAIuvC,EAAYpvC,OAAQH,IAAK,CACzC,IAAI8O,EAAUygC,EAAYvvC,GACtBuuF,EAAez/E,EAAQhM,eAC3B,GAAIkrF,GAAkBl/E,IAAYu+E,GAAev+E,IAAYowC,GAAYpwC,IACpD,WAAjBy/E,GAA8C,gBAAjBA,GACZ,iBAAjBA,EACA,OAAO,EAInB,OAAO;;;;;;;OAUX,SAASC,GAAY9oF,EAAM3B,GACvB,IAAI0qF,EAAY,KACZx7C,EAAe,KACnBh0C,OAAO4D,eAAe6C,EAAMwD,GAAgB,CACxCwB,IAAK,WACD,GAAqB,OAAjBuoC,EAAuB,CACvB,IAAIC,EAAWw7C,GAAgBhpF,EAAM3B,GACjCutC,EAAWlpC,IACf6qC,EAAe3B,EAAS6B,eAAe02C,GAAgB,SAAW32C,EAASpxC,KAAO,WAAiBlC,EAASA,EAAS,GAAIszC,GAAW,CAAEE,SAAU,kBAAmBtvC,OAAQwtC,EAAS5pC,gBAAgBinF,QAExM,OAAO17C,GAGXnc,cAAc,IAElB73B,OAAO4D,eAAe6C,EAAMkD,GAAa,CACrC8B,IAAK,WACD,GAAkB,OAAd+jF,EAAoB,CACpB,IAAIv7C,EAAWw7C,GAAgBhpF,EAAM3B,GACrC0qF,EAAYrmF,IAAoBomF,YAAY3E,GAAgB,SAAW32C,EAASpxC,KAAO,YAAkBoxC,GAE7G,OAAOu7C,GAGX33D,cAAc,IAGtB,SAAS43D,GAAgBhpF,EAAM3B,GAC3B,MAAO,CACH2B,KAAMA,EACN8sC,kBAAmB,EACnB1wC,KAAM4D,EAAK5D,KACXuvC,KAAMF,GAAoBzrC,GAC1B09E,SAAUr/E,EAAKjC,KACfmS,UAAoB9O,IAAdpB,EAAKkQ,MAAqBlQ,EAAKkQ,MAS7C,IAAIi5E,GAAYrrF,EAAc,aAAa,SAAUqpF,GAEjD,YADY,IAARA,IAAkBA,EAAM,IACrBA,SACR/lF,OAAWA,GAAW,SAAUO,EAAM3B,GAAQ,OAAO6qF,GAAyBlpF,EAAM3B,MAOnF8qF,GAAYhtF,EAAc,aAAa,SAAUkrB,GAEjD,YADU,IAANA,IAAgBA,EAAI,IAChBntB,EAAS,CAAEwR,gBAAiBjT,EAAQ+N,wBAAwB1B,SAAWuiB,KAChFmgE,QAAW/nF,GAAW,SAAUO,EAAM3B,GAAQ,OAAO+qF,GAAyBppF,EAAM3B,MAKnF4qF,GAAO9sF,EAAc,QAAQ,SAAUxC,GAAK,OAAQO,EAAS,CAAEqU,MAAM,GAAQ5U,UAAQ8F,OAAWA,GAAW,SAAUO,EAAM3B,GAAQ,OAAOgrF,GAAoBrpF,EAAM3B,MAKpKirF,GAAQtrF,EAAkB,SAAS,SAAUurF,GAAuB,MAAO,CAAGA,oBAAqBA,MAKnGC,GAASxrF,EAAkB,UAAU,SAAUurF,GAAuB,MAAO,CAAGA,oBAAqBA,MAKrGE,GAAczrF,EAAkB,eAAe,SAAU0rF,GAAoB,MAAO,CAAGA,iBAAkBA,MAyDzGC,GAAe3rF,EAAkB,gBAAgB,SAAU+lD,EAAWlnD,GAAQ,MAAO,CAAGknD,UAAWA,EAAWlnD,KAAMA,MACpH+sF,GAAsCxD,GACtCyD,GAAsC1C,GACtC2C,GAAiChB,GAIjCM,GAA2BQ,GAC3BV,GAA2BW,GAC3BR,GAAsBS,GAMtBC,GAAW5tF,EAAc,YAAY,SAAUuqC,GAAY,OAAOA,SAAajnC,OAAWA,GAY9F,SAAUO,EAAM3B,GAAQ,OAAO2rF,GAAwBhqF,EAAM3B,MAYzD4rF,GAAqCpF,GAErCmF,GAA0BC,GAmD1BC,GAAkB,IAAItmF,GAAe,2BAMrCumF,GAAuC,WACvC,SAASA,EAAsBC,GAC3B,IAAI1lD,EAAQvrC,KACZA,KAAKixF,SAAWA,EAChBjxF,KAAKkxF,aAAc,EACnBlxF,KAAKgC,MAAO,EACZhC,KAAKmxF,YAAc,IAAIp2D,SAAQ,SAAU/yB,EAAKopF,GAC1C7lD,EAAMvQ,QAAUhzB,EAChBujC,EAAM8lD,OAASD,KAoCvB,OAhCAJ,EAAsBnwF,UAAUywF,gBAAkB,WAC9C,IAAI/lD,EAAQvrC,KACZ,IAAIA,KAAKkxF,YAAT,CAGA,IAAIK,EAAoB,GACpB/L,EAAW,WACXj6C,EAAMvpC,MAAO,EACbupC,EAAMvQ,WAEV,GAAIh7B,KAAKixF,SACL,IAAK,IAAI9vF,EAAI,EAAGA,EAAInB,KAAKixF,SAAS3vF,OAAQH,IAAK,CAC3C,IAAIqwF,EAAaxxF,KAAKixF,SAAS9vF,KAC3BqpD,GAAUgnC,IACVD,EAAkBjvF,KAAKkvF,GAInCz2D,QAAQ2mB,IAAI6vC,GACPtwC,MAAK,WACNukC,OAECiM,OAAM,SAAUrvF,GACjBmpC,EAAM8lD,OAAOjvF,MAEgB,IAA7BmvF,EAAkBjwF,QAClBkkF,IAEJxlF,KAAKkxF,aAAc,IAGvBF,EAAsB3pF,MAAQlB,EAAmB,CAAEb,MAAO0rF,EAAuB3xF,QADjF2xF,EAAsB1mF,KAAO,SAASonF,EAA8BzwF,GAAK,OAAO,IAAKA,GAAK+vF,GAAuBllF,GAASilF,GAAiB,OAEpIC,EA5C+B,GAwEtCW,GAAS,IAAIlnF,GAAe,SAQ5BmnF,GAAyB,CACzB7mF,QAAS4mF,GACTp+C,WATJ,SAASs+C,KACL,MAAO,GAAKC,KAAgBA,KAAgBA,MAS5Ct/C,KAAM,IAEV,SAASs/C,KACL,OAAO9mF,OAAO+mF,aAAa,GAAKra,KAAKC,MAAsB,GAAhBD,KAAKsa,WAMpD,IAoKWC,GApKPC,GAAuB,IAAIznF,GAAe,wBAK1C0nF,GAAc,IAAI1nF,GAAe,eASjC2nF,GAAyB,IAAI3nF,GAAe,wBAK5C4nF,GAAmB,IAAI5nF,GAAe,iCAStC6nF,GAAyB,WACzB,SAASA,KAaT,OAXAA,EAAQzxF,UAAU0xF,IAAM,SAAU5lF,GAE9BmY,QAAQytE,IAAI5lF,IAGhB2lF,EAAQzxF,UAAUwoB,KAAO,SAAU1c,GAE/BmY,QAAQuE,KAAK1c,IAGjB2lF,EAAQjrF,MAAQlB,EAAmB,CAAEb,MAAOgtF,EAASjzF,QADrDizF,EAAQhoF,KAAO,SAASkoF,EAAgBvxF,GAAK,OAAO,IAAKA,GAAKqxF,MAEvDA,EAdiB,GAiDxBG,GAAc,IAAIhoF,GAAe,YAuCjCioF,GAAwB,IAAIjoF,GAAe,uBAyB3CkoF,GAAe,IAAIloF,GAAe,gBAsBlCmoF,GAAsB,IAAInoF,GAAe,uBAClCwnF,GAIR3yF,EAAQ2yF,6BAA+B3yF,EAAQ2yF,2BAA6B,KAHhDA,GAAkC,MAAI,GAAK,QACtEA,GAA2BA,GAAoC,QAAI,GAAK,UACxEA,GAA2BA,GAAmC,OAAI,GAAK;;;;;;;;AAU3E,IAgBIY,GACA,SAASA,GAA6BC,EAAiBC,GACnD/yF,KAAK8yF,gBAAkBA,EACvB9yF,KAAK+yF,mBAAqBA,GAQ9BC,GAAwC,SAAU/f,GAClD,OAAO,IAAIwP,GAAkBxP,IAE7BggB,GAA6BD,GAE7BE,GAAyC,SAAUjgB,GACnD,OAAOl4C,QAAQC,QAAQg4D,GAAsC/f,KAE7DkgB,GAA8BD,GAE9BE,GAAwD,SAAUngB,GAClE,IAAI6f,EAAkBE,GAAsC/f,GAExD8f,EAAqB3yE,GADTzL,GAAes+D,GACkB3+D,cAC5C8xE,QAAO,SAAU5nB,EAAWitB,GAC7B,IAAI7xB,EAAe5lD,GAAgBy3E,GAEnC,OADA7xB,GAAgB4E,EAAUl8D,KAAK,IAAI4zE,GAAmBtc,IAC/C4E,IACR,IACH,OAAO,IAAIq0B,GAA6BC,EAAiBC,IAEzDM,GAA6CD,GAE7CE,GAAyD,SAAUrgB,GACnE,OAAOl4C,QAAQC,QAAQo4D,GAAsDngB,KAE7EsgB,GAA8CD,GAY9CE,GAA0B,WAC1B,SAASA,IAKLxzF,KAAKyzF,kBAAoBR,GAIzBjzF,KAAK0zF,mBAAqBP,GAI1BnzF,KAAK2zF,kCAAoCN,GAIzCrzF,KAAK4zF,mCAAqCL,GAkB9C,OAbAC,EAAS3yF,UAAUgzF,WAAa,aAIhCL,EAAS3yF,UAAUizF,cAAgB,SAAUjtF,KAI7C2sF,EAAS3yF,UAAUkzF,YAAc,SAAU9gB,KAI3CugB,EAASnsF,MAAQlB,EAAmB,CAAEb,MAAOkuF,EAAUn0F,QADvDm0F,EAASlpF,KAAO,SAAS0pF,EAAiB/yF,GAAK,OAAO,IAAKA,GAAKuyF,MAEzDA,EApCkB,GA8CzBS,GAAmB,IAAIxpF,GAAe,mBAMtCypF,GACA,SAASA,OAYTnzC,GAAgChmB,QAAQC,QAAQ,GACpD,SAASm5D,GAAkBxxF,GACH,oBAATyxF,KAEPrzC,GAAQE,MAAK,WACTt+C,GAAMA,EAAGnB,MAAM,KAAM,SAIzB4yF,KAAKnkF,QAAQkkF,kBAAkB,oBAAqBxxF;;;;;;;;;;;;;;;AA8G5D,IAAI0xF,GAAwB,WACxB,SAASA,EAAO5wF,GACZ,IAAIomB,EAAKpmB,EAAG6wF,qBAAsBA,OAA8B,IAAPzqE,GAAwBA,EAAIC,EAAKrmB,EAAG8wF,mCAAoCA,OAA4C,IAAPzqE,GAAwBA,EA2B9L,GA1BA9pB,KAAKw0F,sBAAuB,EAC5Bx0F,KAAKy0F,sBAAuB,EAI5Bz0F,KAAK00F,UAAW,EAIhB10F,KAAK20F,WAAa,IAAIxP,IAAa,GAMnCnlF,KAAK40F,iBAAmB,IAAIzP,IAAa,GAMzCnlF,KAAK60F,SAAW,IAAI1P,IAAa,GAIjCnlF,KAAK80F,QAAU,IAAI3P,IAAa,GACb,oBAARiP,KACP,MAAM,IAAIpuF,MAAM,kDAEpBouF,KAAKW,oBACM/0F,KACNg1F,SAAW,EADLh1F,KAENi1F,OAFMj1F,KAEQk1F,OAASd,KAAKnkF,QAC7BmkF,KAAkB,cAHXp0F,KAIFk1F,OAJEl1F,KAIYk1F,OAAOC,KAAKf,KAAkB,cAEjDA,KAA2B,uBANpBp0F,KAOFk1F,OAPEl1F,KAOYk1F,OAAOC,KAAK,IAAIf,KAA2B,uBAE9DE,GAAwBF,KAA6B,yBAT9Cp0F,KAUFk1F,OAVEl1F,KAUYk1F,OAAOC,KAAKf,KAA6B,yBAVrDp0F,KAYNu0F,mCAAqCA,EAZ/Bv0F,KAaNo1F,6BAA+B,EAbzBp1F,KAcNq1F,4BAlJb,SAASC,IACL,IAAID,EAA8B/rF,EAA+B,sBAC7DisF,EAA6BjsF,EAA8B,qBAC/D,GAAoB,oBAAT8qF,MAAwBiB,GAA+BE,EAA4B,CAG1F,IAAIC,EAAiCH,EAA4BjB,KAAKqB,WAAW,qBAC7ED,IACAH,EAA8BG,GAElC,IAAIE,EAAgCH,EAA2BnB,KAAKqB,WAAW,qBAC3EC,IACAH,EAA6BG,GAGrC,MAAO,CAAEL,4BAA6BA,EAA6BE,2BAA4BA,GAmIxDD,GAAiCD,4BA8G5E,SAASM,EAAiCC,GACtC,IAGIC,IAA8BD,EAAKrB,oCACnCqB,EAAKP,6BAJmC,YAZhD,SAASS,EAA8BF,IACO,IAAtCA,EAAKR,8BAGTQ,EAAKR,4BAA8BQ,EAAKP,4BAA4B9zF,KAAK+H,GAAS,WAC9EssF,EAAKR,6BAA+B,EACpCW,GAAsBH,GACtBI,GAAYJ,MAEhBG,GAAsBH,IAIlBE,CAA8BF,IAIlCA,EAAKV,OAASU,EAAKV,OAAOC,KAAK,CAC3BlyF,KAAM,UACNgzF,WAAY,CAAEC,eAAiB,EAAML,0BAA6BA,GAClEM,aAAc,SAAUC,EAAUnmF,EAAShL,EAAQoxF,EAAMC,EAAWC,GAChE,IAEI,OADAC,GAAQZ,GACDQ,EAASK,WAAWxxF,EAAQoxF,EAAMC,EAAWC,GAExD,QACQV,GAA2C,cAAdQ,EAAKxvF,MAClCgvF,IAEJa,GAAQd,KAGhBe,SAAU,SAAUP,EAAUnmF,EAAShL,EAAQslC,EAAU+rD,EAAWC,EAAWrwF,GAC3E,IAEI,OADAswF,GAAQZ,GACDQ,EAASQ,OAAO3xF,EAAQslC,EAAU+rD,EAAWC,EAAWrwF,GAEnE,QACIwwF,GAAQd,KAGhBiB,UAAW,SAAUT,EAAUnmF,EAAShL,EAAQ6xF,GAC5CV,EAASW,QAAQ9xF,EAAQ6xF,GACrB7mF,IAAYhL,IAGe,aAAvB6xF,EAAaE,QACbpB,EAAKqB,sBAAwBH,EAAaI,UAC1CnB,GAAsBH,GACtBI,GAAYJ,IAEgB,aAAvBkB,EAAaE,SAClBpB,EAAKpB,qBAAuBsC,EAAaK,aAIrDC,cAAe,SAAUhB,EAAUnmF,EAAShL,EAAQ1C,GAGhD,OAFA6zF,EAASnxE,YAAYhgB,EAAQ1C,GAC7BqzF,EAAKyB,mBAAkB,WAAc,OAAOzB,EAAKd,QAAQxP,KAAK/iF,OACvD,KA7JXozF,CAfW31F,MA0Ff,OAzEAq0F,EAAOiD,gBAAkB,WACrB,OAA6C,IAAtClD,KAAKnkF,QAAQpE,IAAI,kBAE5BwoF,EAAOkD,oBAAsB,WACzB,IAAKlD,EAAOiD,kBACR,MAAM,IAAItxF,MAAM,mDAGxBquF,EAAOmD,uBAAyB,WAC5B,GAAInD,EAAOiD,kBACP,MAAM,IAAItxF,MAAM,mDAexBquF,EAAOxzF,UAAU42F,IAAM,SAAU90F,EAAI2zF,EAAWC,GAC5C,OAAOv2F,KAAKk1F,OAAOuC,IAAI90F,EAAI2zF,EAAWC,IAc1ClC,EAAOxzF,UAAU62F,QAAU,SAAU/0F,EAAI2zF,EAAWC,EAAWtzF,GAC3D,IAAI2yF,EAAO51F,KAAKk1F,OACZmB,EAAOT,EAAK+B,kBAAkB,gBAAkB10F,EAAMN,EAAIi1F,GAAeC,GAAQA,IACrF,IACI,OAAOjC,EAAK8B,QAAQrB,EAAMC,EAAWC,GAEzC,QACIX,EAAKkC,WAAWzB,KAOxBhC,EAAOxzF,UAAUk3F,WAAa,SAAUp1F,EAAI2zF,EAAWC,GACnD,OAAOv2F,KAAKk1F,OAAO6C,WAAWp1F,EAAI2zF,EAAWC,IAejDlC,EAAOxzF,UAAUw2F,kBAAoB,SAAU10F,GAC3C,OAAO3C,KAAKi1F,OAAOwC,IAAI90F,IAEpB0xF,EA3HgB,GA6H3B,SAASwD,MACT,IAAID,GAAgB,GACpB,SAAS5B,GAAYJ,GACjB,GAAqB,GAAjBA,EAAKZ,WAAkBY,EAAKnB,uBAAyBmB,EAAKlB,SAC1D,IACIkB,EAAKZ,WACLY,EAAKhB,iBAAiBtP,KAAK,MAE/B,QAEI,GADAsQ,EAAKZ,YACAY,EAAKnB,qBACN,IACImB,EAAKyB,mBAAkB,WAAc,OAAOzB,EAAKf,SAASvP,KAAK,SAEnE,QACIsQ,EAAKlB,UAAW,IAqEpC,SAASqB,GAAsBH,GAGvBA,EAAKnB,wBAFLmB,EAAKqB,uBACJrB,EAAKrB,qCAA4E,IAAtCqB,EAAKR,6BAOzD,SAASoB,GAAQZ,GACbA,EAAKZ,WACDY,EAAKlB,WACLkB,EAAKlB,UAAW,EAChBkB,EAAKjB,WAAWrP,KAAK,OAG7B,SAASoR,GAAQd,GACbA,EAAKZ,WACLgB,GAAYJ,GAMhB,IAgSIoC,GAhSAC,GAA4B,WAC5B,SAASA,IACLj4F,KAAKy0F,sBAAuB,EAC5Bz0F,KAAKw0F,sBAAuB,EAC5Bx0F,KAAK00F,UAAW,EAChB10F,KAAK20F,WAAa,IAAIxP,GACtBnlF,KAAK40F,iBAAmB,IAAIzP,GAC5BnlF,KAAK60F,SAAW,IAAI1P,GACpBnlF,KAAK80F,QAAU,IAAI3P,GAcvB,OAZA8S,EAAWp3F,UAAU42F,IAAM,SAAU90F,EAAI2zF,EAAWC,GAChD,OAAO5zF,EAAGnB,MAAM80F,EAAWC,IAE/B0B,EAAWp3F,UAAUk3F,WAAa,SAAUp1F,EAAI2zF,EAAWC,GACvD,OAAO5zF,EAAGnB,MAAM80F,EAAWC,IAE/B0B,EAAWp3F,UAAUw2F,kBAAoB,SAAU10F,GAC/C,OAAOA,KAEXs1F,EAAWp3F,UAAU62F,QAAU,SAAU/0F,EAAI2zF,EAAWC,EAAWtzF,GAC/D,OAAON,EAAGnB,MAAM80F,EAAWC,IAExB0B,EAtBoB,GAsC3BC,GAA6B,WAC7B,SAASA,EAAYC,GACjB,IAAI5sD,EAAQvrC,KACZA,KAAKm4F,QAAUA,EACfn4F,KAAKo4F,cAAgB,EACrBp4F,KAAKq4F,eAAgB,EAOrBr4F,KAAKs4F,UAAW,EAChBt4F,KAAKu4F,WAAa,GAClBv4F,KAAKw4F,iBAAmB,KACxBx4F,KAAKy4F,sBACLN,EAAQV,KAAI,WACRlsD,EAAMitD,iBACa,oBAARpE,KAAsB,KAAOA,KAAKnkF,QAAQpE,IAAI,uBA8IjE,OA3IAqsF,EAAYr3F,UAAU43F,oBAAsB,WACxC,IAAIltD,EAAQvrC,KACZA,KAAKm4F,QAAQxD,WAAWjqC,UAAU,CAC9B5oD,KAAM,WACFypC,EAAM+sD,UAAW,EACjB/sD,EAAM8sD,eAAgB,KAG9Br4F,KAAKm4F,QAAQd,mBAAkB,WAC3B9rD,EAAM4sD,QAAQtD,SAASnqC,UAAU,CAC7B5oD,KAAM,WACFuyF,GAAOmD,yBACPrD,IAAkB,WACd5oD,EAAM8sD,eAAgB,EACtB9sD,EAAMmtD,iCAU1BR,EAAYr3F,UAAU83F,4BAA8B,WAGhD,OAFA34F,KAAKo4F,eAAiB,EACtBp4F,KAAKs4F,UAAW,EACTt4F,KAAKo4F,eAMhBF,EAAYr3F,UAAU+3F,4BAA8B,WAEhD,GADA54F,KAAKo4F,eAAiB,EAClBp4F,KAAKo4F,cAAgB,EACrB,MAAM,IAAIpyF,MAAM,qCAGpB,OADAhG,KAAK04F,uBACE14F,KAAKo4F,eAKhBF,EAAYr3F,UAAU6zF,SAAW,WAC7B,OAAO10F,KAAKq4F,eAAwC,IAAvBr4F,KAAKo4F,gBAAwBp4F,KAAKm4F,QAAQ3D,sBAE3E0D,EAAYr3F,UAAU63F,qBAAuB,WACzC,IAAIntD,EAAQvrC,KACZ,GAAIA,KAAK00F,WAELP,IAAkB,WACd,KAAmC,IAA5B5oD,EAAMgtD,WAAWj3F,QAAc,CAClC,IAAIu3F,EAAKttD,EAAMgtD,WAAWtpF,MAC1B6pF,aAAaD,EAAGE,WAChBF,EAAGG,OAAOztD,EAAM+sD,UAEpB/sD,EAAM+sD,UAAW,SAGpB,CAED,IAAIW,EAAYj5F,KAAKk5F,kBACrBl5F,KAAKu4F,WAAav4F,KAAKu4F,WAAWpS,QAAO,SAAU0S,GAC/C,OAAIA,EAAGM,WAAYN,EAAGM,SAASF,KAC3BH,aAAaD,EAAGE,YACT,MAIf/4F,KAAKs4F,UAAW,IAGxBJ,EAAYr3F,UAAUq4F,gBAAkB,WACpC,OAAKl5F,KAAKw4F,iBAIHx4F,KAAKw4F,iBAAiBY,WAAWvxF,KAAI,SAAU5G,GAClD,MAAO,CACHiF,OAAQjF,EAAEiF,OAGVmzF,iBAAkBp4F,EAAEo4F,iBACpBvmF,KAAM7R,EAAE6R,SATL,IAafolF,EAAYr3F,UAAUy4F,YAAc,SAAUT,EAAIU,EAASJ,GACvD,IAAI5tD,EAAQvrC,KACR+4F,GAAa,EACbQ,GAAWA,EAAU,IACrBR,EAAYn5E,YAAW,WACnB2rB,EAAMgtD,WAAahtD,EAAMgtD,WAAWpS,QAAO,SAAU0S,GAAM,OAAOA,EAAGE,YAAcA,KACnFF,EAAGttD,EAAM+sD,SAAU/sD,EAAM2tD,qBAC1BK,IAEPv5F,KAAKu4F,WAAWj2F,KAAK,CAAE02F,OAAQH,EAAIE,UAAWA,EAAWI,SAAUA,KAcvEjB,EAAYr3F,UAAU24F,WAAa,SAAUR,EAAQO,EAASJ,GAC1D,GAAIA,IAAan5F,KAAKw4F,iBAClB,MAAM,IAAIxyF,MAAM,8HAIpBhG,KAAKs5F,YAAYN,EAAQO,EAASJ,GAClCn5F,KAAK04F,wBAMTR,EAAYr3F,UAAU44F,uBAAyB,WAC3C,OAAOz5F,KAAKo4F,eAQhBF,EAAYr3F,UAAU64F,cAAgB,SAAUC,EAAOjkD,EAAUkkD,GAE7D,MAAO,IAGX1B,EAAY7wF,MAAQlB,EAAmB,CAAEb,MAAO4yF,EAAa74F,QAD7D64F,EAAY5tF,KAAO,SAASuvF,EAAoB54F,GAAK,OAAO,IAAKA,GAAKi3F,GAAapsF,GAASuoF,QAErF6D,EAhKqB,GAyK5B4B,GAAqC,WACrC,SAASA,IAEL95F,KAAK+5F,cAAgB,IAAI1kD,IACzB2kD,GAAmBC,YAAYj6F,MAsDnC,OA/CA85F,EAAoBj5F,UAAUq5F,oBAAsB,SAAU50F,EAAO60F,GACjEn6F,KAAK+5F,cAAclkD,IAAIvwC,EAAO60F,IAMlCL,EAAoBj5F,UAAUu5F,sBAAwB,SAAU90F,GAC5DtF,KAAK+5F,cAAcl4C,OAAOv8C,IAK9Bw0F,EAAoBj5F,UAAUw5F,0BAA4B,WACtDr6F,KAAK+5F,cAAcltD,SAMvBitD,EAAoBj5F,UAAUy5F,eAAiB,SAAUC,GACrD,OAAOv6F,KAAK+5F,cAAcluF,IAAI0uF,IAAS,MAK3CT,EAAoBj5F,UAAU25F,oBAAsB,WAChD,OAAOj6F,MAAMs9C,KAAK79C,KAAK+5F,cAAc31F,WAKzC01F,EAAoBj5F,UAAU45F,mBAAqB,WAC/C,OAAOl6F,MAAMs9C,KAAK79C,KAAK+5F,cAAc9oD,SAQzC6oD,EAAoBj5F,UAAU65F,sBAAwB,SAAUH,EAAMI,GAElE,YADwB,IAApBA,IAA8BA,GAAkB,GAC7CX,GAAmBU,sBAAsB16F,KAAMu6F,EAAMI,IAGhEb,EAAoBzyF,MAAQlB,EAAmB,CAAEb,MAAOw0F,EAAqBz6F,QAD7Ey6F,EAAoBxvF,KAAO,SAASswF,EAA4B35F,GAAK,OAAO,IAAKA,GAAK64F,MAE/EA,EA1D6B,GA+EpCE,GAAqB,IAhBgB,WACrC,SAASa,KAMT,OAJAA,EAAoBh6F,UAAUo5F,YAAc,SAAU/5D,KACtD26D,EAAoBh6F,UAAU65F,sBAAwB,SAAUx6D,EAAUq6D,EAAMI,GAC5E,OAAO,MAEJE,EAP6B,IAmBpCC,GAAyBC;;;;;;;OAM7B,SAASA,GAAkC3vF,EAAU3E,EAASwsE,GAE1D,IAAI+nB,EAAkB5vF,EAASS,IAAIooF,GAAkB,IAAIxxF,OAAOgE,IACvC,oBAAdw0F,WAA6BA,YA/+D5C,SAASC,EAAcz0F,GACnB,GAAmB,OAAfwkF,GAAqB,CACrB,GAAIxkF,EAAQ8mF,uBAAyBtC,GAAWsC,qBAG5C,OAEJ,GAAI9mF,EAAQ6mF,sBAAwBrC,GAAWqC,oBAG3C,OAGRrC,GAAaxkF,EAs+DTy0F,CAAc,CACV3N,qBAAsB4N,GAAaH,EAAgBnzF,KAAI,SAAUpB,GAAW,OAAOA,EAAQ8mF,yBAC3FD,oBAAqB6N,GAAaH,EAAgBnzF,KAAI,SAAUpB,GAAW,OAAOA,EAAQ6mF,0BAGlG,IAAI8N,EAAgB,IAAI3Y,GAAkBxP,GAC1C,GA9+dJ,SAASooB,IACL,OAAiD,IAA1Cl6C,GAAiChyC,KA6+dpCksF,GACA,OAAOtgE,QAAQC,QAAQogE,GAE3B,IAAIE,EAopBR,SAASC,EAAaruF,GAClB,IAAIymB,EAAS,GAEb,OADAzmB,EAAM2B,SAAQ,SAAU2sF,GAAQ,OAAOA,GAAQ7nE,EAAOrxB,KAAKd,MAAMmyB,EAAQnxB,EAASg5F,OAC3E7nE;;;;;;;;;;;;;;;;;;;;;OAvpBiB4nE,CAAaP,EAAgBnzF,KAAI,SAAUnG,GAAK,OAAOA,EAAEgF,cAKjF,GAAiC,IAA7B40F,EAAkBh6F,OAClB,OAAOy5B,QAAQC,QAAQogE,GAE3B,IAAI3oD,EAAWlpC,IAEXkyF,EADmB9iD,GAAS73C,OAAO,CAAE4F,UAAW40F,IACdzvF,IAAI4mC,EAASipD,gBAGnD,OAAOh7C,IAA0B,SAAUv3B,GAAO,OAAO4R,QAAQC,QAAQygE,EAAe5vF,IAAIsd,OACvF83B,MAAK,WAAc,OAAOm6C,KASnC,IACI5kB,GAAkBmlB,GAItB,SAASA,GAA2BC,GAChC,OAAOA,EAAGplB,gBAEd,IAAIqlB,GAA2B,IAAIpxF,GAAe,sBAM9CqxF,GACA,SAASA,GAAa74F,EAAMqC,GACxBtF,KAAKiD,KAAOA,EACZjD,KAAKsF,MAAQA,GAUrB,SAASy2F,GAAe3wF,GACpB,GAAI4sF,KAAcA,GAAU1+D,YACvB0+D,GAAU5sF,SAASS,IAAIgwF,IAA0B,GAClD,MAAM,IAAI71F,MAAM,iFAGpBgyF,GAAY5sF,EAASS,IAAImwF,IACzB,IAAIC,EAAQ7wF,EAASS,IAAIqmF,GAAsB,MAG/C,OAFI+J,GACAA,EAAMptF,SAAQ,SAAUw3E,GAAQ,OAAOA,OACpC2R,GAOX,SAASkE,GAAsBC,EAAuBl5F,EAAMyD,QACtC,IAAdA,IAAwBA,EAAY,IACxC,IAAI01F,EAAO,aAAen5F,EACtBob,EAAS,IAAI5T,GAAe2xF,GAChC,OAAO,SAAUC,QACU,IAAnBA,IAA6BA,EAAiB,IAClD,IAAIC,EAAWC,KACf,IAAKD,GAAYA,EAASlxF,SAASS,IAAIgwF,IAA0B,GAC7D,GAAIM,EACAA,EAAsBz1F,EAAUjE,OAAO45F,GAAgB55F,OAAO,CAAEsI,QAASsT,EAAQpT,UAAU,SAE1F,CACD,IAAIuxF,EAAoB91F,EAAUjE,OAAO45F,GAAgB55F,OAAO,CAAEsI,QAASsT,EAAQpT,UAAU,GAAQ,CACjGF,QAASypC,GACTvpC,SAAU,aAEd8wF,GAAepjD,GAAS73C,OAAO,CAAE4F,UAAW81F,EAAmBv5F,KAAMm5F,KAG7E,OAAOK,GAAep+E,IAQ9B,SAASo+E,GAAeC,GACpB,IAAIJ,EAAWC,KACf,IAAKD,EACD,MAAM,IAAIt2F,MAAM,uBAEpB,IAAKs2F,EAASlxF,SAASS,IAAI6wF,EAAe,MACtC,MAAM,IAAI12F,MAAM,wFAEpB,OAAOs2F,EAiBX,SAASC,KACL,OAAOvE,KAAcA,GAAU1+D,UAAY0+D,GAAY,KAY3D,IAAIgE,GAA6B,WAE7B,SAASA,EAAYW,GACjB38F,KAAK28F,UAAYA,EACjB38F,KAAK48F,SAAW,GAChB58F,KAAKszE,kBAAoB,GACzBtzE,KAAKw1C,YAAa,EA2ItB,OAnHAwmD,EAAYn7F,UAAUg8F,uBAAyB,SAAUzB,EAAe30F,GACpE,IAAI8kC,EAAQvrC,KAOR88F,EAgHZ,SAASC,EAAUC,EAAcC,GAW7B,MATqB,SAAjBD,EACS,IAAI/E,IAGc,YAAjB+E,OAA6B12F,EAAY02F,IAAiB,IAAI3I,GAAO,CAC3EC,qBAAsBhuE,KACtBiuE,mCAAoC0I,IAxH3BF,CAFMt2F,EAAUA,EAAQq2F,YAASx2F,EACjBG,GAAWA,EAAQw2F,wBAA0B,GAEtEv2F,EAAY,CAAC,CAAEqE,QAASspF,GAAQppF,SAAU6xF,IAG9C,OAAOA,EAAOrF,KAAI,WACd,IAAIyF,EAAiBvkD,GAAS73C,OAAO,CAAE4F,UAAWA,EAAWkU,OAAQ2wB,EAAMngC,SAAUnI,KAAMm4F,EAAcnoB,WAAWhwE,OAChHk6F,EAAY/B,EAAct6F,OAAOo8F,GACjCE,EAAmBD,EAAU/xF,SAASS,IAAIkZ,GAAc,MAC5D,IAAKq4E,EACD,MAAM,IAAIp3F,MAAM,iEAQpB,OANAm3F,EAAU/qF,WAAU,WAAc,OAAO06B,GAAOvB,EAAMqxD,SAAUO,MAChEL,EAAOzF,mBAAkB,WAAc,OAAOyF,EAAOhI,QAAQpqC,UAAU,CACnE5oD,KAAM,SAAUS,GACZ66F,EAAiBn4E,YAAY1iB,SA+GjD,SAAS86F,EAA6Bx5D,EAAci5D,EAAQvyD,GACxD,IACI,IAAI5W,EAAS4W,IACb,OAAIigB,GAAU72B,GACHA,EAAO89D,OAAM,SAAUrvF,GAG1B,MAFA06F,EAAOzF,mBAAkB,WAAc,OAAOxzD,EAAa5e,YAAY7iB,MAEjEA,KAGPuxB,EAEX,MAAOvxB,GAGH,MAFA06F,EAAOzF,mBAAkB,WAAc,OAAOxzD,EAAa5e,YAAY7iB,MAEjEA,GA3HKi7F,CAA6BD,EAAkBN,GAAQ,WAC1D,IAAIQ,EAAaH,EAAU/xF,SAASS,IAAImlF,IAExC,OADAsM,EAAWhM,kBACJgM,EAAWnM,YAAYlwC,MAAK,WAO/B,OAHI8gC,GADeob,EAAU/xF,SAASS,IAAI4mF,GA3kKtC,UAAA,SA8kKJlnD,EAAMgyD,mBAAmBJ,GAClBA,YAqBvBnB,EAAYn7F,UAAU28F,gBAAkB,SAAUvqB,EAAY+nB,GAC1D,IAAIzvD,EAAQvrC,UACY,IAApBg7F,IAA8BA,EAAkB,IACpD,IAAIv0F,EAAUg3F,GAAe,GAAIzC,GACjC,OAAOF,GAAuB96F,KAAKoL,SAAU3E,EAASwsE,GACjDhyB,MAAK,SAAUm6C,GAAiB,OAAO7vD,EAAMsxD,uBAAuBzB,EAAe30F,OAE5Fu1F,EAAYn7F,UAAU08F,mBAAqB,SAAUJ,GACjD,IAAI/xD,EAAS+xD,EAAU/xF,SAASS,IAAI6xF,IACpC,GAAIP,EAAU9pB,qBAAqB/xE,OAAS,EACxC67F,EAAU9pB,qBAAqBxkE,SAAQ,SAAU8uD,GAAK,OAAOvyB,EAAO/2B,UAAUspD,UAE7E,CAAA,IAAIw/B,EAAU16E,SAASk7E,cAIxB,MAAM,IAAI33F,MAAM,cAAgB2B,EAAUw1F,EAAU16E,SAC/C7hB,aAAe,yIAJpBu8F,EAAU16E,SAASk7E,cAAcvyD,GAOrCprC,KAAK48F,SAASt6F,KAAK66F,IAKvBnB,EAAYn7F,UAAUuR,UAAY,SAAUm4B,GACxCvqC,KAAKszE,kBAAkBhxE,KAAKioC,IAEhCnqC,OAAO4D,eAAeg4F,EAAYn7F,UAAW,WAAY,CAKrDgL,IAAK,WACD,OAAO7L,KAAK28F,WAEhB3kE,YAAY,EACZC,cAAc,IAKlB+jE,EAAYn7F,UAAUwmC,QAAU,WAC5B,GAAIrnC,KAAKw1C,WACL,MAAM,IAAIxvC,MAAM,4CAEpBhG,KAAK48F,SAASluF,QAAQG,SAAQ,SAAUtP,GAAU,OAAOA,EAAO8nC,aAChErnC,KAAKszE,kBAAkBzkE,SAAQ,SAAU+kE,GAAY,OAAOA,OAC5D5zE,KAAKw1C,YAAa,GAEtBp1C,OAAO4D,eAAeg4F,EAAYn7F,UAAW,YAAa,CACtDgL,IAAK,WACD,OAAO7L,KAAKw1C,YAEhBxd,YAAY,EACZC,cAAc,IAGlB+jE,EAAY30F,MAAQlB,EAAmB,CAAEb,MAAO02F,EAAa38F,QAD7D28F,EAAY1xF,KAAO,SAASszF,EAAoB38F,GAAK,OAAO,IAAKA,GAAK+6F,GAAalwF,GAAS6sC,QAErFqjD,EAjJqB,GAqLhC,SAASyB,GAAejvF,EAAK+vC,GAOzB,OANIh+C,MAAMqH,QAAQ22C,GACRA,EAAK6nC,OAAOqX,GAAgBjvF,GAG5BzN,EAASA,EAAS,GAAIyN,GAAM+vC,GAiG1C,IAAIm/C,GAAgC,WAEhC,SAASA,EAAeG,EAAO74E,EAAU23E,EAAWmB,EAAmBC,EAA2BC,GAC9F,IAAIzyD,EAAQvrC,KACZA,KAAK69F,MAAQA,EACb79F,KAAKglB,SAAWA,EAChBhlB,KAAK28F,UAAYA,EACjB38F,KAAK89F,kBAAoBA,EACzB99F,KAAK+9F,0BAA4BA,EACjC/9F,KAAKg+F,YAAcA,EAEnBh+F,KAAKi+F,oBAAsB,GAC3Bj+F,KAAKk+F,OAAS,GACdl+F,KAAKm+F,cAAe,EACpBn+F,KAAKo+F,sBAAuB,EAC5Bp+F,KAAKq+F,SAAU,EAKfr+F,KAAKs+F,eAAiB,GAItBt+F,KAAKixB,WAAa,GAClBjxB,KAAKo+F,qBAAuB93E,KAC5BtmB,KAAK69F,MAAMjJ,iBAAiBlqC,UAAU,CAClC5oD,KAAM,WACFypC,EAAMsyD,MAAMpG,KAAI,WACZlsD,EAAMgzD,aAIlB,IAAIC,EAAoB,IAAI1+F,EAAK2+F,YAAW,SAAUC,GAClDnzD,EAAM8yD,QAAU9yD,EAAMsyD,MAAMnJ,WAAanpD,EAAMsyD,MAAMrJ,uBAChDjpD,EAAMsyD,MAAMpJ,qBACjBlpD,EAAMsyD,MAAMxG,mBAAkB,WAC1BqH,EAAS58F,KAAKypC,EAAM8yD,SACpBK,EAASlZ,iBAGbkP,EAAW,IAAI50F,EAAK2+F,YAAW,SAAUC,GAGzC,IAAIC,EACJpzD,EAAMsyD,MAAMxG,mBAAkB,WAC1BsH,EAAYpzD,EAAMsyD,MAAMhJ,SAASnqC,WAAU,WACvC2pC,GAAOmD,yBAGPrD,IAAkB,WACT5oD,EAAM8yD,SAAY9yD,EAAMsyD,MAAMrJ,sBAC9BjpD,EAAMsyD,MAAMpJ,uBACblpD,EAAM8yD,SAAU,EAChBK,EAAS58F,MAAK,aAK9B,IAAI88F,EAAcrzD,EAAMsyD,MAAMlJ,WAAWjqC,WAAU,WAC/C2pC,GAAOkD,sBACHhsD,EAAM8yD,UACN9yD,EAAM8yD,SAAU,EAChB9yD,EAAMsyD,MAAMxG,mBAAkB,WAC1BqH,EAAS58F,MAAK,UAI1B,OAAO,WACH68F,EAAUv3D,cACVw3D,EAAYx3D,kBAGpBpnC,KAAK00F,SACD50F,EAAKmqB,MAAMu0E,EAAmB9J,EAASpI,KAAKvsF,EAAU8+F,UAwJ9D,OAtIAnB,EAAe78F,UAAUwT,UAAY,SAAUyqF,EAAoBn/B,GAC/D,IAIIzyB,EAJA3B,EAAQvrC,KACZ,IAAKA,KAAKg+F,YAAYh8F,KAClB,MAAM,IAAIgE,MAAM,iJAIhBknC,EADA4xD,aAA8B//B,GACX+/B,EAIf9+F,KAAK+9F,0BAA0B3+B,wBAAwB0/B,GAE/D9+F,KAAKs+F,eAAeh8F,KAAK4qC,EAAiBuyB,eAE1C,IAAIlyB,EAAWipC,GAAgBtpC,QAAoB5mC,EAAYtG,KAAK28F,UAAU9wF,IAAI8B,IAE9EoxF,EAAU7xD,EAAiBpsC,OAAO63C,GAASC,KAAM,GADhC+mB,GAAsBzyB,EAAiB9a,SACamb,GACzEwxD,EAAQ3sF,WAAU,WACdm5B,EAAMyzD,iBAAiBD,MAE3B,IAAI5E,EAAc4E,EAAQ3zF,SAASS,IAAIqsF,GAAa,MASpD,OARIiC,GACA4E,EAAQ3zF,SAASS,IAAIiuF,IAChBI,oBAAoB6E,EAAQ3/E,SAASwgD,cAAeu6B,GAE7Dn6F,KAAKi/F,eAAeF,GAChBz4E,MACAtmB,KAAKglB,SAASutE,IAAI,oGAEfwM,GAYXrB,EAAe78F,UAAU09F,KAAO,WAC5B,IAAI30E,EAAKnmB,EAAIymB,EAAKL,EACd0hB,EAAQvrC,KACZ,GAAIA,KAAKm+F,aACL,MAAM,IAAIn4F,MAAM,6CAEpB,IACIhG,KAAKm+F,cAAe,EACpB,IACI,IAAK,IAAIr0E,EAAKroB,EAASzB,KAAKk+F,QAASgB,EAAKp1E,EAAGhoB,QAASo9F,EAAGl9F,KAAMk9F,EAAKp1E,EAAGhoB,OACxDo9F,EAAGn9F,MACT6oC,gBAGb,MAAO7gB,GAASH,EAAM,CAAErnB,MAAOwnB,GAC/B,QACI,IACQm1E,IAAOA,EAAGl9F,OAASyB,EAAKqmB,EAAGE,SAASvmB,EAAGlC,KAAKuoB,GAEpD,QAAU,GAAIF,EAAK,MAAMA,EAAIrnB,OAEjC,GAAIvC,KAAKo+F,qBACL,IACI,IAAK,IAAIe,EAAK19F,EAASzB,KAAKk+F,QAASkB,EAAKD,EAAGr9F,QAASs9F,EAAGp9F,KAAMo9F,EAAKD,EAAGr9F,OACxDs9F,EAAGr9F,MACT8oC,iBAGb,MAAOvgB,GAASJ,EAAM,CAAE3nB,MAAO+nB,GAC/B,QACI,IACQ80E,IAAOA,EAAGp9F,OAAS6nB,EAAKs1E,EAAGn1E,SAASH,EAAGtoB,KAAK49F,GAEpD,QAAU,GAAIj1E,EAAK,MAAMA,EAAI3nB,QAIzC,MAAOH,GAEHpC,KAAK69F,MAAMxG,mBAAkB,WAAc,OAAO9rD,EAAMuyD,kBAAkB74E,YAAY7iB,MAE1F,QACIpC,KAAKm+F,cAAe,IAQ5BT,EAAe78F,UAAUw+F,WAAa,SAAUjzD,GAC5C,IAAIp1B,EAAOo1B,EACXpsC,KAAKk+F,OAAO57F,KAAK0U,GACjBA,EAAKm0B,eAAenrC,OAKxB09F,EAAe78F,UAAUmlC,WAAa,SAAUoG,GAC5C,IAAIp1B,EAAOo1B,EACXU,GAAO9sC,KAAKk+F,OAAQlnF,GACpBA,EAAKi0B,oBAETyyD,EAAe78F,UAAUo+F,eAAiB,SAAUzxD,GAChDxtC,KAAKq/F,WAAW7xD,EAAar2B,UAC7BnX,KAAKu+F,OACLv+F,KAAKixB,WAAW3uB,KAAKkrC,GAELxtC,KAAK28F,UAAU9wF,IAAIumF,GAAwB,IAAI3vF,OAAOzC,KAAKi+F,qBACjEpvF,SAAQ,SAAU+kE,GAAY,OAAOA,EAASpmC,OAE5DkwD,EAAe78F,UAAUm+F,iBAAmB,SAAUxxD,GAClDxtC,KAAKgmC,WAAWwH,EAAar2B,UAC7B21B,GAAO9sC,KAAKixB,WAAYuc,IAG5BkwD,EAAe78F,UAAUwR,YAAc,WAEnCrS,KAAKk+F,OAAOxvF,QAAQG,SAAQ,SAAUmI,GAAQ,OAAOA,EAAKqwB,cAE9DjnC,OAAO4D,eAAe05F,EAAe78F,UAAW,YAAa,CAIzDgL,IAAK,WACD,OAAO7L,KAAKk+F,OAAO58F,QAEvB02B,YAAY,EACZC,cAAc,IAGlBylE,EAAer2F,MAAQlB,EAAmB,CAAEb,MAAOo4F,EAAgBr+F,QADnEq+F,EAAepzF,KAAO,SAASg1F,EAAuBr+F,GAAK,OAAO,IAAKA,GAAKy8F,GAAgB5xF,GAASuoF,IAASvoF,GAASwmF,IAAUxmF,GAAS6sC,IAAW7sC,GAASiZ,IAAejZ,GAASuzD,IAA2BvzD,GAASklF,QAEnN0M,EAlOwB,GAuOnC,SAAS5wD,GAAOv+B,EAAMga,GAClB,IAAI5jB,EAAQ4J,EAAKrG,QAAQqgB,GACrB5jB,GAAS,GACT4J,EAAKQ,OAAOpK,EAAO,GAG3B,SAASw2F,GAAaz3F,GAClB,IAAK,IAAIvC,EAAIuC,EAAKpC,OAAS,EAAGH,GAAK,EAAGA,IAClC,QAAgBmF,IAAZ5C,EAAKvC,GACL,OAAOuC,EAAKvC,GAyCxB,IAAIo+F,GACA,SAASA,OAUb,SAASC,GAA4BvsF,GACjC,IAAIpM,EA9yIR,SAAS44F,EAA0BxsF,GAC/B,OAAOs8D,GAAQ1jE,IAAIoH,IAAOkB,GAAuBlB,GA6yItCwsF,CAA0BxsF,GACrC,IAAKpM,EACD,MAUR,SAAS64F,EAAczsF,GACnB,OAAO,IAAIjN,MAAM,qBAAuBiN,EAAK,WAXnCysF,CAAczsF,GACxB,OAAO,IAAIwvE,GAAkB57E,GAQjC,IAAI84F,GAAmBH,GAenBI,GACA,SAASA,OAITC,GAAiB,CACjBC,kBAAmB,GACnBC,kBAAmB,cAQnBC,GAAwC,WACxC,SAASA,EAAuBC,EAAWC,GACvClgG,KAAKigG,UAAYA,EACjBjgG,KAAKmgG,QAAUD,GAAUL,GA8B7B,OA5BAG,EAAuBn/F,UAAUkW,KAAO,SAAUqpF,GAE9C,OAAoDpgG,KAAKqgG,eAAeD,IAE5EJ,EAAuBn/F,UAAUw/F,eAAiB,SAAUD,GACxD,IAAI70D,EAAQvrC,KACRyD,EAAKvB,EAAOk+F,EAAK52E,MApCZ,KAoC+B,GAAIjqB,EAASkE,EAAG,GAAI68F,EAAa78F,EAAG,GAI5E,YAHmB6C,IAAfg6F,IACAA,EAAa,WAEVC,OAAOC,OAAOjhG,GAChB0hD,MAAK,SAAU1hD,GAAU,OAAOA,EAAO+gG,MACvCr/C,MAAK,SAAUp6C,GAAQ,OAAO45F,GAAc55F,EAAMtH,EAAQ+gG,MAC1Dr/C,MAAK,SAAUp6C,GAAQ,OAAO0kC,EAAM00D,UAAUvM,mBAAmB7sF,OAE1Em5F,EAAuBn/F,UAAU6/F,YAAc,SAAUN,GACrD,IAAI38F,EAAKvB,EAAOk+F,EAAK52E,MA9CZ,KA8C+B,GAAIjqB,EAASkE,EAAG,GAAI68F,EAAa78F,EAAG,GACxEk9F,EA9Ce,YAmDnB,YAJmBr6F,IAAfg6F,IACAA,EAAa,UACbK,EAAqB,IAElBJ,OAAOC,OAAOxgG,KAAKmgG,QAAQL,kBAAoBvgG,EAASS,KAAKmgG,QAAQJ,mBACvE9+C,MAAK,SAAU1hD,GAAU,OAAOA,EAAO+gG,EAAaK,MACpD1/C,MAAK,SAAU5hD,GAAW,OAAOohG,GAAcphG,EAASE,EAAQ+gG,OAGzEN,EAAuB34F,MAAQlB,EAAmB,CAAEb,MAAO06F,EAAwB3gG,QADnF2gG,EAAuB11F,KAAO,SAASs2F,EAA+B3/F,GAAK,OAAO,IAAKA,GAAK++F,GAAwBl0F,GAAS0nF,IAAW1nF,GAAS8zF,GAA8B,OAExKI,EAjCgC,GAwC3C,SAASS,GAAc1+F,EAAO8+F,EAAYP,GACtC,IAAKv+F,EACD,MAAM,IAAIiE,MAAM,gBAAkBs6F,EAAa,SAAWO,EAAa,KAE3E,OAAO9+F;;;;;;;OAoBX,IAAI++F,GAA2B,SAAUp7E,GAErC,SAASkkB,IACL,OAAkB,OAAXlkB,GAAmBA,EAAOlkB,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUkpC,EAASlkB,GAIZkkB,EALmB,CAM5B8E,IAsDEqyD,GAAiC,SAAUr7E,GAE3C,SAASq7E,IACL,OAAkB,OAAXr7E,GAAmBA,EAAOlkB,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUqgG,EAAiBr7E,GAIpBq7E,EALyB,CAMlCD,IAaEE,GACA,SAASA,GAAmB/9F,EAAMsnC,GAC9BvqC,KAAKiD,KAAOA,EACZjD,KAAKuqC,SAAWA,GAIpB02D,GAAqC,WACrC,SAASA,EAAoBC,EAAYtmF,EAAQumF,GAC7CnhG,KAAK24D,UAAY,GACjB34D,KAAK4a,OAAS,KACd5a,KAAKmhG,cAAgBA,EACrBnhG,KAAKkhG,WAAaA,EACdtmF,GAAUA,aAAkBwmF,IAC5BxmF,EAAOymF,SAASrhG,MAsCxB,OAnCAI,OAAO4D,eAAei9F,EAAoBpgG,UAAW,WAAY,CAC7DgL,IAAK,WACD,OAAO7L,KAAKmhG,cAAc/1F,UAE9B4sB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAei9F,EAAoBpgG,UAAW,oBAAqB,CACtEgL,IAAK,WACD,OAAO7L,KAAKmhG,cAAcrxE,WAE9BkI,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAei9F,EAAoBpgG,UAAW,UAAW,CAC5DgL,IAAK,WACD,OAAO7L,KAAKmhG,cAAcl0F,SAE9B+qB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAei9F,EAAoBpgG,UAAW,aAAc,CAC/DgL,IAAK,WACD,OAAO7L,KAAKmhG,cAAc10B,YAE9Bz0C,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAei9F,EAAoBpgG,UAAW,iBAAkB,CACnEgL,IAAK,WACD,OAAO7L,KAAKmhG,cAAcG,gBAE9BtpE,YAAY,EACZC,cAAc,IAEXgpE,EA7C6B,GA+CpCG,GAAwC,SAAU17E,GAElD,SAAS07E,EAAuBF,EAAYtmF,EAAQumF,GAChD,IAAI51D,EAAQ7lB,EAAOnkB,KAAKvB,KAAMkhG,EAAYtmF,EAAQumF,IAAkBnhG,KAOpE,OANAurC,EAAM0qD,WAAa,GACnB1qD,EAAM9iB,WAAa,GACnB8iB,EAAM5S,QAAU,GAChB4S,EAAMr4B,OAAS,GACfq4B,EAAMg2D,WAAa,GACnBh2D,EAAMq0B,cAAgBshC,EACf31D,EAuEX,OAhFA7qC,EAAU0gG,EAAwB17E,GAWlC07E,EAAuBvgG,UAAUwgG,SAAW,SAAU1mF,GAC9CA,IACA3a,KAAKuhG,WAAWj/F,KAAKqY,GACrBA,EAAMC,OAAS5a,OAGvBohG,EAAuBvgG,UAAUmnB,YAAc,SAAUrN,GACrD,IAAI6mF,EAAaxhG,KAAKuhG,WAAWr5F,QAAQyS,IACrB,IAAhB6mF,IACA7mF,EAAMC,OAAS,KACf5a,KAAKuhG,WAAWxyF,OAAOyyF,EAAY,KAG3CJ,EAAuBvgG,UAAU4gG,oBAAsB,SAAU9mF,EAAO+mF,GACpE,IAAIj+F,EACA8nC,EAAQvrC,KACR2hG,EAAe3hG,KAAKuhG,WAAWr5F,QAAQyS,IACrB,IAAlBgnF,KACCl+F,EAAKzD,KAAKuhG,YAAYxyF,OAAOvN,MAAMiC,EAAIjB,EAAS,CAACm/F,EAAe,EAAG,GAAID,IACxEA,EAAY7yF,SAAQ,SAAUqf,GACtBA,EAAEtT,QACFsT,EAAEtT,OAAOoN,YAAYkG,GAEzBvT,EAAMC,OAAS2wB,OAI3B61D,EAAuBvgG,UAAU4mC,aAAe,SAAUm6D,EAAUC,GAChE,IAAIC,EAAW9hG,KAAKuhG,WAAWr5F,QAAQ05F,IACrB,IAAdE,EACA9hG,KAAKqhG,SAASQ,IAGVA,EAASjnF,QACTinF,EAASjnF,OAAOoN,YAAY65E,GAEhCA,EAASjnF,OAAS5a,KAClBA,KAAKuhG,WAAWxyF,OAAO+yF,EAAU,EAAGD,KAG5CT,EAAuBvgG,UAAU4zE,MAAQ,SAAUgT,GAE/C,OADcznF,KAAK+hG,SAASta,GACb,IAAM,MAEzB2Z,EAAuBvgG,UAAUkhG,SAAW,SAAUta,GAClD,IAAItnD,EAAU,GAEd,OADA6hE,GAAsBhiG,KAAMynF,EAAWtnD,GAChCA,GAEXihE,EAAuBvgG,UAAUohG,cAAgB,SAAUxa,GACvD,IAAItnD,EAAU,GAEd,OADA+hE,GAAmBliG,KAAMynF,EAAWtnD,GAC7BA,GAEX//B,OAAO4D,eAAeo9F,EAAuBvgG,UAAW,WAAY,CAChEgL,IAAK,WACD,OAAO7L,KAAKuhG,WACPpb,QAAO,SAAU35D,GAAQ,OAAOA,aAAgB40E,MAEzDppE,YAAY,EACZC,cAAc,IAElBmpE,EAAuBvgG,UAAUshG,oBAAsB,SAAUv3C,EAAWw3C,GACxEpiG,KAAK24D,UAAU9pD,SAAQ,SAAU+kE,GACzBA,EAAS3wE,MAAQ2nD,GACjBgpB,EAASrpC,SAAS63D,OAIvBhB,EAjFgC,CAkFzCH,IAOF,SAASe,GAAsBliF,EAAS2nE,EAAWtnD,GAC/CrgB,EAAQyhF,WAAW1yF,SAAQ,SAAU2d,GAC7BA,aAAgB40E,KACZ3Z,EAAUj7D,IACV2T,EAAQ79B,KAAKkqB,GAEjBw1E,GAAsBx1E,EAAMi7D,EAAWtnD,OAInD,SAAS+hE,GAAmBj2E,EAAYw7D,EAAWtnD,GAC3ClU,aAAsBm1E,IACtBn1E,EAAWs1E,WAAW1yF,SAAQ,SAAU2d,GAChCi7D,EAAUj7D,IACV2T,EAAQ79B,KAAKkqB,GAEbA,aAAgB40E,IAChBc,GAAmB11E,EAAMi7D,EAAWtnD,MAKpD,IAAIkiE,GAAsC,WACtC,SAASA,EAAqBnB,GAC1BlhG,KAAKkhG,WAAaA,EAsDtB,OApDA9gG,OAAO4D,eAAeq+F,EAAqBxhG,UAAW,SAAU,CAC5DgL,IAAK,WACD,IAAI+O,EAAS5a,KAAKkhG,WAAWj1E,WAC7B,OAAOrR,EAAS,IAAI0nF,GAAwB1nF,GAAU,MAE1Dod,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeq+F,EAAqBxhG,UAAW,WAAY,CAC9DgL,IAAK,WACD,OAAOusD,GAAYp4D,KAAKkhG,aAE5BlpE,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeq+F,EAAqBxhG,UAAW,oBAAqB,CACvEgL,IAAK,WACD,IAAI+zD,EAAgB5/D,KAAKkhG,WACzB,OAAOthC,IACFhI,GAAagI,IAAkB3H,GAAmB2H,KAE3D5nC,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeq+F,EAAqBxhG,UAAW,UAAW,CAC7DgL,IAAK,WACD,OAAO+rD,GAAa53D,KAAKkhG,aAAelpC,GAAWh4D,KAAKkhG,aAE5DlpE,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeq+F,EAAqBxhG,UAAW,YAAa,CAC/DgL,IAAK,WACD,OAAO4sD,GAAaz4D,KAAKkhG,YAAY/a,QAAO,SAAUvS,GAAY,MAAyB,QAAlBA,EAAS/sE,SAEtFmxB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeq+F,EAAqBxhG,UAAW,aAAc,CAChEgL,IAAK,WACD,OAznVZ,SAAS02F,EAAat9F,GAClB,IAAIgI,EAAU6qD,GAAa7yD,GAAQ,GACnC,OAAgB,OAAZgI,EACO,SACe3G,IAAtB2G,EAAQ4jB,YACR5jB,EAAQ4jB,UA16ZhB,SAAS2xE,EAAkB7rF,EAAOO,GAC9B,IAAIxB,EAAQiB,EA5jHJ,GA4jHiB7D,KAAKoE,GAC9B,GAAIxB,GAASA,EAAM4iB,WAAY,CAG3B,IAFA,IAAI3E,EAAS,GACT4K,EAAa7oB,EAAM/Q,MAAQ,EACtBxD,EAAI,EAAGA,EAAIuU,EAAM4iB,WAAWh3B,OAAQH,GAAK,EAC9CwyB,EAAOje,EAAM4iB,WAAWn3B,IAAMwV,EAAM4nB,GACpCA,IAEJ,OAAO5K,EAEX,OAAO,KA+5ZiB6uE,CAAkBv1F,EAAQ0J,MAAO1J,EAAQiK,YAE1DjK,EAAQ4jB,WAAa,IAknVb0xE,CAAaviG,KAAKkhG,aAE7BlpE,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeq+F,EAAqBxhG,UAAW,iBAAkB,CACpEgL,IAAK,WACD,OAxsVZ,SAAS42F,EAAmB3iF,GACxB,IAAI7S,EAAU6qD,GAAah4C,GAAS,GACpC,GAAgB,OAAZ7S,EACA,MAAO,GAOX,IANA,IAsLwBH,EArLpBwG,EADQrG,EAAQ0J,MA55gBZ,GA85gBJjB,EAAQpC,EAAMR,KAAK7F,EAAQiK,WAC3BoqF,EAAiB,GAEjB59E,EAAWhO,EAAMoG,aACZ3a,EAFgC,MAAxBuU,EAAM2N,gBAEEliB,EAAIuiB,EAAUviB,IAAK,CACxC,IAAIY,EAAQuR,EAAMR,KAAK3R,QAgLPmF,KADIwG,EA9KG/K,GA+KhB8E,WAAuCP,IAAjBwG,EAAI+D,eAAiDvK,IAAvBwG,EAAI2D,iBA1K3D1O,EAAQA,EAAM8E,MAElBy6F,EAAeh/F,KAAKP,GAExB,OAAOu/F,EAmrVQmB,CAAmBziG,KAAKkhG,aAEnClpE,YAAY,EACZC,cAAc,IAEXoqE,EAxD8B,GA0DrCC,GAAyC,SAAU58E,GAEnD,SAAS48E,EAAwBpB,GAI7B,OADQx7E,EAAOnkB,KAAKvB,KAAMkhG,IAAelhG,KAgN7C,OApNAU,EAAU4hG,EAAyB58E,GAOnCtlB,OAAO4D,eAAes+F,EAAwBzhG,UAAW,gBAAiB,CACtEgL,IAAK,WACD,OAAO7L,KAAKkhG,WAAWt4E,UAAYC,KAAKC,aAAe9oB,KAAKkhG,WAAa,MAE7ElpE,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAes+F,EAAwBzhG,UAAW,OAAQ,CAC7DgL,IAAK,WACD,IACI,IAAIoB,EAAU6qD,GAAa93D,KAAKkhG,YAIhC,OAHYj0F,EAAQ0J,MA1n2BxB,GA2n2B6B7D,KACP7F,EAAQiK,WACbgV,QAEjB,MAAO9pB,GACH,OAAOpC,KAAKkhG,WAAW/0E,WAG/B6L,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAes+F,EAAwBzhG,UAAW,aAAc,CAanEgL,IAAK,WACD,IAAIoB,EAAU6qD,GAAa93D,KAAKkhG,YAAY,GAC5C,GAAe,MAAXj0F,EACA,MAAO,GAEX,IAAI0J,EAAQ1J,EAAQ0J,MAChBqD,EAAQrD,EAzp2BZ,GAyp2ByB7D,KACrB4C,EAAQsE,EAAM/M,EAAQiK,WACtB++E,EAAa,GAMjB,OA6JZ,SAASyM,EAAkB5iF,EAASm2E,GAChC,GAAIn2E,EAIA,IAFA,IAAIhT,EAAM1M,OAAOskB,eAAe5E,GAC5B6iF,EAAgB95E,KAAKhoB,UACV,OAARiM,GAAgBA,IAAQ61F,GAAe,CAC1C,IAAIC,EAAcxiG,OAAOyiG,0BAA0B/1F,GACnD,IAAK,IAAI/G,KAAO68F,EACZ,IAAK78F,EAAI+8F,WAAW,QAAU/8F,EAAI+8F,WAAW,MAAO,CAIhD,IAAI/gG,EAAQ+d,EAAQ/Z,GAChBg9F,GAAiBhhG,KACjBk0F,EAAWlwF,GAAOhE,GAI9B+K,EAAM1M,OAAOskB,eAAe5X,IAnL5B41F,CAAkB1iG,KAAK4/D,cAAeq2B,GAmXlD,SAAS+M,EAAwB/M,EAAYvgF,EAAOiB,EAAOqD,GACvD,IAAIipF,EAAiBvtF,EAAM0iB,iBAC3B,GAAuB,OAAnB6qE,EACA,IAAK,IAAI9hG,EAAI,EAAGA,EAAI8hG,EAAe3hG,OAAQH,IAAK,CAC5C,IAAIoY,EAAe0pF,EAAe9hG,GAE9B+hG,EADelpF,EAAMT,GACQiQ,MA7g0Bf,KA8g0Bd6lE,EAAe6T,EAAc,GACjC,GAAIA,EAAc5hG,OAAS,EAAG,CAE1B,IADA,IAAIS,EAAQmhG,EAAc,GACjB52F,EAAI,EAAGA,EAAI42F,EAAc5hG,OAAS,EAAGgL,IAC1CvK,GAASyd,GAAgB7I,EAAM4C,EAAejN,EAAI,IAAM42F,EAAc52F,EAAI,GAE9E2pF,EAAW5G,GAAgBttF,OAG3Bk0F,EAAW5G,GAAgB14E,EAAM4C,IAhYrCypF,CAAwB/M,EAAYvgF,EAAOiB,EAAOqD,GAC3Ci8E,GAEXj+D,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAes+F,EAAwBzhG,UAAW,aAAc,CACnEgL,IAAK,WACD,IAAI4c,EAAa,GACb3I,EAAU9f,KAAK4/D,cACnB,IAAK9/C,EACD,OAAO2I,EAEX,IAAIxb,EAAU6qD,GAAah4C,GAAS,GACpC,GAAe,MAAX7S,EACA,MAAO,GAEX,IACIg0B,EADQh0B,EAAQ0J,MAjr2BpB,GAkr2B8B7D,KAAK7F,EAAQiK,WAAWyG,MAClDwlF,EAAsB,GAQ1B,GAAIliE,EAEA,IADA,IAAI9/B,EAAI,EACDA,EAAI8/B,EAAW3/B,QAAQ,CAC1B,IAAIwc,EAAWmjB,EAAW9/B,GAG1B,GAAwB,iBAAb2c,EACP,MAEJ2K,EAAW3K,GADKmjB,EAAW9/B,EAAI,GAE/BgiG,EAAoB7gG,KAAKwb,EAASsO,eAClCjrB,GAAK,EAGb,IAAIiiG,EAAStjF,EAAQ2I,WACrB,IAAStnB,EAAI,EAAGA,EAAIiiG,EAAO9hG,OAAQH,IAAK,CACpC,IAAI+xB,EAAOkwE,EAAOjiG,GACdkiG,EAAgBnwE,EAAKjwB,KAAKmpB,eAGsB,IAAhD+2E,EAAoBj7F,QAAQm7F,KAG5B56E,EAAW46E,GAAiBnwE,EAAKnxB,OAGzC,OAAO0mB,GAEXuP,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAes+F,EAAwBzhG,UAAW,SAAU,CAC/DgL,IAAK,WACD,OAAI7L,KAAK4/D,eAAiB5/D,KAAK4/D,cAAct2B,MAClCtpC,KAAK4/D,cAAct2B,MAEvB,IAEXtR,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAes+F,EAAwBzhG,UAAW,UAAW,CAChEgL,IAAK,WACD,IAAI8nB,EAAS,GAGTnC,EAFUxxB,KAAK4/D,cAEKpuC,UAIxB,OAHcA,GAAkC,iBAAdA,EAAyBA,EAAU8xE,QAAQ95E,MAAM,KAC/EgI,EAAUhI,MAAM,MACZ3a,SAAQ,SAAU9M,GAAS,OAAO4xB,EAAO5xB,IAAS,KACnD4xB,GAEXqE,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAes+F,EAAwBzhG,UAAW,aAAc,CACnEgL,IAAK,WAGD,IAFA,IAAI01F,EAAavhG,KAAKkhG,WAAWK,WAC7BgC,EAAW,GACNpiG,EAAI,EAAGA,EAAIogG,EAAWjgG,OAAQH,IAEnCoiG,EAASjhG,KAAKkhG,GADAjC,EAAWpgG,KAG7B,OAAOoiG,GAEXvrE,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAes+F,EAAwBzhG,UAAW,WAAY,CACjEgL,IAAK,WACD,IAAI+zD,EAAgB5/D,KAAK4/D,cACzB,IAAKA,EACD,MAAO,GAGX,IAFA,IAAI2hC,EAAa3hC,EAAc2jC,SAC3BA,EAAW,GACNpiG,EAAI,EAAGA,EAAIogG,EAAWjgG,OAAQH,IAEnCoiG,EAASjhG,KAAKkhG,GADAjC,EAAWpgG,KAG7B,OAAOoiG,GAEXvrE,YAAY,EACZC,cAAc,IAElBqqE,EAAwBzhG,UAAU4zE,MAAQ,SAAUgT,GAEhD,OADcznF,KAAK+hG,SAASta,GACb,IAAM,MAEzB6a,EAAwBzhG,UAAUkhG,SAAW,SAAUta,GACnD,IAAItnD,EAAU,GAEd,OADAsjE,GAAYzjG,KAAMynF,EAAWtnD,GAAS,GAC/BA,GAEXmiE,EAAwBzhG,UAAUohG,cAAgB,SAAUxa,GACxD,IAAItnD,EAAU,GAEd,OADAsjE,GAAYzjG,KAAMynF,EAAWtnD,GAAS,GAC/BA,GAEXmiE,EAAwBzhG,UAAUshG,oBAAsB,SAAUv3C,EAAWw3C,GACzE,IAAI51E,EAAOxsB,KAAKkhG,WACZwC,EAAmB,GACvB1jG,KAAK24D,UAAU9pD,SAAQ,SAAU+kE,GAC7B,GAAIA,EAAS3wE,OAAS2nD,EAAW,CAC7B,IAAIrgB,EAAWqpC,EAASrpC,SACxBA,EAAShpC,KAAKirB,EAAM41E,GACpBsB,EAAiBphG,KAAKioC,OAKK,mBAAxB/d,EAAKm3E,gBAIZn3E,EAAKm3E,eAAe/4C,GAAW/7C,SAAQ,SAAU+kE,GAO7C,IAAqD,IAAjDA,EAAShxE,WAAWsF,QAAQ,gBAAwB,CACpD,IAAI07F,EAAoBhwB,EAAS,gBACjC,OAAwD,IAAjD8vB,EAAiBx7F,QAAQ07F,IAC5BA,EAAkBriG,KAAKirB,EAAM41E,QAK1CE,EArNiC,CAsN1CD,IAuBF,SAASU,GAAiBhhG,GACtB,MAAwB,iBAAVA,GAAuC,kBAAVA,GAAwC,iBAAVA,GAC3D,OAAVA,EAER,SAAS0hG,GAAYI,EAAepc,EAAWtnD,EAAS2jE,GACpD,IAAI72F,EAAU6qD,GAAa+rC,EAAc3C,YAAY,GACrC,OAAZj0F,EAEA82F,GADkB92F,EAAQ0J,MA312BtB,GA212BmC7D,KAAK7F,EAAQiK,WAClBjK,EAAQ0J,MAAO8wE,EAAWtnD,EAAS2jE,EAAcD,EAAc3C,YAKjG8C,GAA4BH,EAAc3C,WAAYzZ,EAAWtnD,EAAS2jE,GAalF,SAASC,GAAqBruF,EAAOiB,EAAO8wE,EAAWtnD,EAAS2jE,EAAcG,GAC1E,IAAIr6E,EAAKnmB,EACLy9F,EAAarqF,GAAuBnB,EAAOiB,GAE/C,GAAmB,IAAfjB,EAAM7O,MAA2C,IAAf6O,EAAM7O,KAAmC,CAG3Eq9F,GAAiBhD,EAAYzZ,EAAWtnD,EAAS2jE,EAAcG,GAC3DtuF,GAAgBD,IAGZosB,EAAgB7qB,GAAyBvB,EAAM/Q,MAAOgS,KACrCmrB,EA132BrB,GA032B0C7Z,YACtC87E,GAAqBjiE,EA332BzB,GA232B8C7Z,WAAY6Z,EAAe2lD,EAAWtnD,EAAS2jE,EAAcG,IAIvGvuF,EAAMiF,OAENopF,GAAqBruF,EAAMiF,MAAOhE,EAAO8wE,EAAWtnD,EAAS2jE,EAAcG,GAU/E/C,GAAc8C,GAA4B9C,EAAYzZ,EAAWtnD,EAAS2jE,IAI9E,IAAIK,EAAkBxtF,EAAMjB,EAAM/Q,OAC9B6Q,GAAa2uF,IACbC,GAAgCD,EAAiB1c,EAAWtnD,EAAS2jE,EAAcG,QAGtF,GAAmB,IAAfvuF,EAAM7O,KAA4B,CAGvC,IAAI+Q,EAAajB,EAAMjB,EAAM/Q,OAC7Bu/F,GAAiBtsF,EAx22BZ,GAw22BgC6vE,EAAWtnD,EAAS2jE,EAAcG,GAEvEG,GAAgCxsF,EAAY6vE,EAAWtnD,EAAS2jE,EAAcG,QAE7E,GAAmB,IAAfvuF,EAAM7O,KAA6B,CAGxC,IAAIi7B,EAEAuiE,GAFAviE,EAAgBnrB,EAh52BK,KAVpB,GA452BoB+hB,WAAWhjB,EAAMgjB,YAC1C,GAAIn4B,MAAMqH,QAAQy8F,GACd,IACI,IAAK,IAAIC,EAAS7iG,EAAS4iG,GAAOE,EAAWD,EAAOxiG,QAASyiG,EAASviG,KAAMuiG,EAAWD,EAAOxiG,OAE1FoiG,GADmBK,EAASxiG,MACG0lF,EAAWtnD,EAAS2jE,EAAcG,GAGzE,MAAOl6E,GAASH,EAAM,CAAErnB,MAAOwnB,GAC/B,QACI,IACQw6E,IAAaA,EAASviG,OAASyB,EAAK6gG,EAAOt6E,SAASvmB,EAAGlC,KAAK+iG,GAEpE,QAAU,GAAI16E,EAAK,MAAMA,EAAIrnB,YAGhC,GAAI8hG,EAAM,CACX,IACIG,EADAC,EAAY3iE,EAh72Bf,GAk72BDiiE,GADIS,EAAYC,EAn72BhB,GAm72BiC3xF,KAAKuxF,EAAK1/F,OACX8/F,EAAWhd,EAAWtnD,EAAS2jE,EAAcG,SAG5EvuF,EAAMiF,OAEXopF,GAAqBruF,EAAMiF,MAAOhE,EAAO8wE,EAAWtnD,EAAS2jE,EAAcG,GAG3EA,IAAmB/C,IAGfsD,EAA2B,EAAd9uF,EAAMhK,MAA+BgK,EAAM+iB,eAAiB/iB,EAAM5T,OAE/EiiG,GAAqBS,EAAW7tF,EAAO8wE,EAAWtnD,EAAS2jE,EAAcG,GAarF,SAASG,GAAgCxsF,EAAY6vE,EAAWtnD,EAAS2jE,EAAcG,GACnF,IAAK,IAAI9iG,EAv52BiB,EAu52BYA,EAAIyW,EAAWtW,OAAQH,IAAK,CAC9D,IAAIujG,EAAY9sF,EAAWzW,GAC3B4iG,GAAqBW,EAj92BjB,GAi92BkCl4E,KAAMk4E,EAAWjd,EAAWtnD,EAAS2jE,EAAcG,IAYjG,SAASC,GAAiBhD,EAAYzZ,EAAWtnD,EAAS2jE,EAAcG,GACpE,GAAIA,IAAmB/C,EAAY,CAC/B,IAAIyD,EAAYC,GAAe1D,GAC/B,IAAKyD,EACD,QAKAb,GAAgBa,aAAqBrC,IAA2B7a,EAAUkd,KAC1C,IAAhCxkE,EAAQj4B,QAAQy8F,KAGVb,GAAgBrc,EAAUkd,KACA,IAAhCxkE,EAAQj4B,QAAQy8F,KAHhBxkE,EAAQ79B,KAAKqiG,IAgBzB,SAASX,GAA4B/3E,EAAYw7D,EAAWtnD,EAAS2jE,GAGjE,IAFA,IAAIzsE,EAAQpL,EAAWs1E,WACnBjgG,EAAS+1B,EAAM/1B,OACVH,EAAI,EAAGA,EAAIG,EAAQH,IAAK,CAC7B,IAAIqrB,EAAO6K,EAAMl2B,GACbwjG,EAAYC,GAAep4E,GAC3Bm4E,KACIb,GAAgBa,aAAqBrC,IAA2B7a,EAAUkd,KAC1C,IAAhCxkE,EAAQj4B,QAAQy8F,KAGVb,GAAgBrc,EAAUkd,KACA,IAAhCxkE,EAAQj4B,QAAQy8F,KAHhBxkE,EAAQ79B,KAAKqiG,GAMjBX,GAA4Bx3E,EAAMi7D,EAAWtnD,EAAS2jE,KA+BlE,IAAIe,GAAyB,IAAIxvD,IAKjC,SAASmuD,GAAwBtC,GAC7B,OAAIA,aAAsBr4E,MAChBq4E,EAAWzgG,eAHD,kBAIZygG,EAA4B,aAAIA,EAAWt4E,UAAYC,KAAKC,aACxD,IAAIw5E,GAAwBpB,GAC5B,IAAImB,GAAqBnB,IAE1BA,EAA4B,cAEhC,KAKX,IAAI0D,GAAiBpB,GAWrB,SAASsB,GAAet4E,GACpBq4E,GAAuBhvD,IAAIrpB,EAAK00E,WAAY10E,GAQhD,IAm+CIu4E,GAn+CAC,GAAY3C,GAIZ4C,GAAe3C,GA6Bf4C,GAAehJ,GAAsB,KAAM,OAZhB,CAE3B,CAAEnxF,QAASonF,GAAalnF,SAAU,WAClC,CAAEF,QAASixF,GAAaxpD,KAAM,CAACmG,KAC/B,CAAE5tC,QAAS+uF,GAAqBtnD,KAAM,IACtC,CAAEznC,QAASunF,GAAS9/C,KAAM,MA6D1B2yD,GAA+B,CAC/B,CACIp6F,QAAS2yF,GACTrqD,SAAUqqD,GACVlrD,KAAM,CAAC6hD,GAAQ/B,GAAS35C,GAAU5zB,GAAcs6C,GAA0B2xB,KAE9E,CAAEjmF,QAASsrE,GAAW7jC,KAAM,CAAC6hD,IAAS9gD,WA0B1C,SAAS6xD,GAAqBtI,GAC1B,IAAIuI,EAAQ,GAMZ,OALAvI,EAAOjI,SAASnqC,WAAU,WACtB,KAAO26C,EAAM/jG,QACT+jG,EAAMp2F,KAANo2F,MAGD,SAAU1iG,GACb0iG,EAAM/iG,KAAKK,MAjCf,CACIoI,QAASimF,GACT39C,SAAU29C,GACVx+C,KAAM,CAAC,CAAC,IAAIjtC,EAAYwrF,MAE5B,CAAEhmF,QAASyoF,GAAUngD,SAAUmgD,GAAUhhD,KAAM,IAC/Co/C,GACA,CAAE7mF,QAASo8D,GAAiB5zB;;;;;;;;AA3DhC,SAAS+xD,KACL,OAAO19B,IA0D0Dp1B,KAAM,IACvE,CAAEznC,QAAS08D,GAAiBl0B,WAzDhC,SAASgyD,KACL,OAAO19B,IAwD0Dr1B,KAAM,IACvE,CACIznC,QAAS0nF,GACTl/C,WAzDR,SAASiyD,GAAeztB,GAKpB,OAFIgK,GAFJhK,EAASA,GAYb,SAAS0tB,IAkBD,MAA2C,oBAAdC,WAA6BA,UAAU3tB,QA1hNpD,QA4/MD0tB,IAIZ1tB,GAqDHvlC,KAAM,CAAC,CAAC,IAAIntC,EAAOotF,IAAc,IAAIltF,EAAY,IAAIE,KAEzD,CAAEsF,QAAS2nF,GAAuBznF,SAljNd,QAklNpB06F,GAAmC,WAEnC,SAASA,EAAkBv6D,IAI3B,OAFAu6D,EAAkBz7F,KAAOkK,GAAiB,CAAEvN,KAAM8+F,IAClDA,EAAkBr+F,KAAOd,EAAiB,CAAEnH,QAAS,SAASumG,EAA0B3kG,GAAK,OAAO,IAAKA,GAAK0kG,GAAmB75F,GAAS4xF,MAAqBh3F,UAAWy+F,KACnKQ,EAN2B,GAwJtC,SAAS7+E,GAAc9P,EAAM81D,EAAY7lE,GACrC,IAGIshB,EAHA+oD,EAAQrqE,EAAI6Y,QACZ6/C,EAAqB3oD,EAAK00D,KAAKm6B,eAC/BzvF,EAAWY,EAAKZ,SAEpB,GAAIY,EAAK4D,SAAW+kD,EAAoB,CAEhCp3C,EADA+oD,EAAMruE,KACDmT,EAAS0Q,cAAcwqD,EAAMruE,KAAMquE,EAAMw0B,IAGzC1vF,EAASi4B,cAAc,IAEhC,IAAI03D,EAAWl5B,GAAuB71D,EAAM81D,EAAY7lE,GACpD8+F,GACA3vF,EAAS2Q,YAAYg/E,EAAUx9E,QAOnCA,EAAKnS,EAAS4oB,kBAAkB2gC,IAFP2R,EAAMvE,uBAC3BuE,EAAMvE,sBAAsBh6D,gBAAkBzT,EAAQwJ,kBAAkBm2B,WAGhF,GAAIqyC,EAAM3zD,MACN,IAAK,IAAIxc,EAAI,EAAGA,EAAImwE,EAAM3zD,MAAMrc,OAAQH,IAAK,CACzC,IAAIsC,EAAKvB,EAAOovE,EAAM3zD,MAAMxc,GAAI,GAChCiV,EAAS4H,aAAauK,EADmC9kB,EAAG,GAAYA,EAAG,GAAlCA,EAAG,IAIpD,OAAO8kB,EAEX,SAASy9E,GAAuBhvF,EAAM22D,EAAU1mE,EAAKshB,GACjD,IAAK,IAAIpnB,EAAI,EAAGA,EAAI8F,EAAIoK,QAAQ/P,OAAQH,IAAK,CACzC,IAAI4zE,EAAS9tE,EAAIoK,QAAQlQ,GACrB8kG,EAAqBC,GAA0BlvF,EAAM/P,EAAIiQ,WA5pR/BjU,EA4pR8E8xE,EAAOnqB,WA5pR7F3lD,EA4pRuE8vE,EAAO9vE,QA3pRxFA,EAAS,IAAMhC,EAAOA,IA4pR9BkjG,EAAepxB,EAAO9vE,OACtBmhG,EAAepvF,EACG,cAAlB+9D,EAAO9vE,SACPkhG,EAAe,KACfC,EAAez4B,GAEnB,IAAI04B,EAAaD,EAAahwF,SAASy1C,OAAOs6C,GAAgB59E,EAAIwsD,EAAOnqB,UAAWq7C,GACpFjvF,EAAK47D,YAAY3rE,EAAIqtE,YAAcnzE,GAAKklG,EApqRhD,IAA8BphG,EAAQhC,EAuqRtC,SAASijG,GAA0BlvF,EAAMrS,EAAOimD,GAC5C,OAAO,SAAU6gB,GAAS,OAAOD,GAAcx0D,EAAMrS,EAAOimD,EAAW6gB,IAmC3E,SAAS66B,GAA2BtvF,EAAM/P,EAAK6jE,EAAY/oE,GACvD,IAAKipE,GAAsBh0D,EAAM/P,EAAK6jE,EAAY/oE,GAC9C,OAAO,EAEX,IAAIq4E,EAAUnzE,EAAIuuB,SAASs1C,GACvByG,EAASnI,GAAcpyD,EAAM/P,EAAIiQ,WACjC40D,EAAayF,EAAOxF,cACpB9oE,EAAOm3E,EAAQn3E,KACnB,OAAwB,GAAhBm3E,EAAQ1uE,OACZ,KAAK,GAmBb,SAAS66F,EAAoBvvF,EAAMojE,EAAStO,EAAYg6B,EAAI7iG,EAAMlB,GAC9D,IAAIykG,EAAkBpsB,EAAQosB,gBAC1BC,EAAcD,EAAkBxvF,EAAK00D,KAAKt+C,UAAUiB,SAASm4E,EAAiBzkG,GAASA,EAC3F0kG,EAA6B,MAAfA,EAAsBA,EAAY7jG,WAAa,KAC7D,IAAIwT,EAAWY,EAAKZ,SACP,MAATrU,EACAqU,EAAS4H,aAAa8tD,EAAY7oE,EAAMwjG,EAAaX,GAGrD1vF,EAASsS,gBAAgBojD,EAAY7oE,EAAM6iG,GA3BvCS,CAAoBvvF,EAAMojE,EAAStO,EAAYsO,EAAQ0rB,GAAI7iG,EAAMlB,GACjE,MACJ,KAAK,GA4Bb,SAAS2kG,EAAgB1vF,EAAM80D,EAAY7oE,EAAMlB,GAC7C,IAAIqU,EAAWY,EAAKZ,SAChBrU,EACAqU,EAASk+C,SAASwX,EAAY7oE,GAG9BmT,EAASo+C,YAAYsX,EAAY7oE,GAjC7ByjG,CAAgB1vF,EAAM80D,EAAY7oE,EAAMlB,GACxC,MACJ,KAAK,GAkCb,SAAS4kG,EAAgB3vF,EAAMojE,EAAStO,EAAY7oE,EAAMlB,GACtD,IAAI0kG,EAAczvF,EAAK00D,KAAKt+C,UAAUiB,SAAS/uB,EAAQkrB,gBAAgBiE,MAAO1sB,GAC9E,GAAmB,MAAf0kG,EAAqB,CACrBA,EAAcA,EAAY7jG,WAC1B,IAAIgkG,EAAOxsB,EAAQz1B,OACP,MAARiiD,IACAH,GAA4BG,QAIhCH,EAAc,KAElB,IAAIrwF,EAAWY,EAAKZ,SACD,MAAfqwF,EACArwF,EAASu+C,SAASmX,EAAY7oE,EAAMwjG,GAGpCrwF,EAASq+C,YAAYqX,EAAY7oE,GAlD7B0jG,CAAgB3vF,EAAMojE,EAAStO,EAAY7oE,EAAMlB,GACjD,MACJ,KAAK,GAmDb,SAAS8kG,EAAmB7vF,EAAMojE,EAAStO,EAAY7oE,EAAMlB,GACzD,IAAIykG,EAAkBpsB,EAAQosB,gBAC1BC,EAAcD,EAAkBxvF,EAAK00D,KAAKt+C,UAAUiB,SAASm4E,EAAiBzkG,GAASA,EAC3FiV,EAAKZ,SAAS+H,YAAY2tD,EAAY7oE,EAAMwjG;;;;;;;OAjDpCI,CAJ4B,SAAZ5/F,EAAIyE,OACA,GAAhB0uE,EAAQ1uE,MACR6lE,EAAOzvC,cACP9qB,EACyBojE,EAAStO,EAAY7oE,EAAMlB,GAGhE,OAAO,EA8FX,SAASyoE,GAAmBxzD,GAExB,IADA,IAAI8vF,EAAW9vF,EAAK/P,IAAI8/F,mBACjB/vF,EAAK4D,QAAUsxD,GAAel1D,IAAO,CACxC,IAAIgwF,EAAShwF,EAAK40D,cAClB50D,EAAOA,EAAK4D,OAGZ,IADA,IAAIjL,EAAMq3F,EAAO9vF,UAAY8vF,EAAOx5B,WAC3BrsE,EAAI,EAAGA,GAAKwO,EAAKxO,IAED,UADjBmsE,EAAUt2D,EAAK/P,IAAIowB,MAAMl2B,IAChBuK,OACQ,UAAhB4hE,EAAQ5hE,QACR4hE,EAAQmH,MAAMwyB,SAAWH,KAAcx5B,EAAQmH,MAAMwyB,UACtD19B,GAAYvyD,EAAM7V,GAAGwlF,aAEJ,EAAhBrZ,EAAQ5hE,OAA+BvK,EAAImsE,EAAQE,WAAaw5B,EAAO9vF,YACjD,SAArBo2D,EAAQ8E,YACa,UAArB9E,EAAQ8E,aAEVjxE,GAAKmsE,EAAQE,YAKzB,GAAyB,UAArBx2D,EAAK/P,IAAIkrE,UACT,IAAShxE,EAAI,EAAGA,EAAI6V,EAAK/P,IAAIowB,MAAM/1B,OAAQH,IAAK,CAC5C,IAAImsE,EACiB,WADjBA,EAAUt2D,EAAK/P,IAAIowB,MAAMl2B,IAChBuK,OAA2D,UAAhB4hE,EAAQ5hE,OAC5D69D,GAAYvyD,EAAM7V,GAAGwlF,WAGzBxlF,GAAKmsE,EAAQE,YAIzB,SAAS05B,GAAoBlwF,EAAMs2D,GAC/B,IAAIuZ,EAAYtd,GAAYvyD,EAAMs2D,EAAQp2D,WAC1C,GAAK2vE,EAAUztD,MAAf,CAGA,IAAIjJ,EACAg3E,OAAY7gG,EAChB,GAAoB,SAAhBgnE,EAAQ5hE,MAAyC,CACjD,IAAI07F,EAAa95B,EAAQ1yD,OAAOA,OAChCusF,EAAYE,GAAgBrwF,EAAMowF,EAAWlwF,UAAWkwF,EAAWlwF,UAAYkwF,EAAW55B,WAAYF,EAAQmH,MAAO,IACrHtkD,EAAoBk5C,GAAeryD,EAAMs2D,EAAQ1yD,OAAO1D,WAAWuL,cAE9C,UAAhB6qD,EAAQ5hE,QACby7F,EAAYE,GAAgBrwF,EAAM,EAAGA,EAAK/P,IAAIowB,MAAM/1B,OAAS,EAAGgsE,EAAQmH,MAAO,IAC/EtkD,EAAoBnZ,EAAK8Y,WAE7B+2D,EAAUN,MAAM4gB,GAGhB,IAFA,IAAI3xE,EAAW83C,EAAQmH,MAAMj/C,SACzB8xE,GAAS,EACJnmG,EAAI,EAAGA,EAAIq0B,EAASl0B,OAAQH,IAAK,CACtC,IAAIi5E,EAAU5kD,EAASr0B,GACnBomG,OAAa,EACjB,OAAQntB,EAAQotB,aACZ,KAAK,EACDD,EAAa1gB,EAAUpnC,MACvB,MACJ,KAAK,EACD8nD,EAAa1gB,EACbygB,GAAS,EAGjBn3E,EAAkBiqD,EAAQ/1E,UAAYkjG,EAEtCD,GACAzgB,EAAUH,mBAGlB,SAAS2gB,GAAgBrwF,EAAM04C,EAAYhsC,EAAU+jF,EAAUrjG,GAC3D,IAAK,IAAIjD,EAAIuuD,EAAYvuD,GAAKuiB,EAAUviB,IAAK,CACzC,IAAImsE,EAAUt2D,EAAK/P,IAAIowB,MAAMl2B,GACzBurE,EAAYY,EAAQf,eAAek7B,EAASx0F,IAIhD,GAHiB,MAAby5D,GACAtoE,EAAO9B,KAAKolG,GAAc1wF,EAAMs2D,EAASZ,IAEzB,EAAhBY,EAAQ5hE,OAA+B4hE,EAAQxtD,QAAQjP,WACtDy8D,EAAQxtD,QAAQjP,SAASk2F,mBAAqBU,EAASR,YACpDQ,EAASR,SAAU,CACvB,IAAIp3B,EAAczG,GAAcpyD,EAAM7V,GAOtC,IAJKmsE,EAAQkH,oBAAsBizB,EAASR,YAAcQ,EAASR,WAC/DI,GAAgBrwF,EAAM7V,EAAI,EAAGA,EAAImsE,EAAQE,WAAYi6B,EAAUrjG,GAC/DjD,GAAKmsE,EAAQE,YAEG,SAAhBF,EAAQ5hE,MAER,IADA,IAAIwiE,EAAgB2B,EAAY1B,cAAcC,eACrC10B,EAAI,EAAGA,EAAIw0B,EAAc5sE,OAAQo4C,IAAK,CAC3C,IAAIzV,EAAeiqC,EAAcx0B,GAC7BiuD,EAAMh8B,GAAsB1nC,GAC5B0jE,GAAOA,IAAQ93B,GACfw3B,GAAgBpjE,EAAc,EAAGA,EAAah9B,IAAIowB,MAAM/1B,OAAS,EAAGmmG,EAAUrjG,GAI1F,IAAI4tE,EAAiBnC,EAAYh/D,SAASohE,gBAC1C,GAAID,EACA,IAASt4B,EAAI,EAAGA,EAAIs4B,EAAe1wE,OAAQo4C,IAAK,CAC5C,IAAIkuD,EAAgB51B,EAAet4B,GACnC2tD,GAAgBO,EAAe,EAAGA,EAAc3gG,IAAIowB,MAAM/1B,OAAS,EAAGmmG,EAAUrjG,KAIvFkpE,EAAQkH,oBAAsBizB,EAASR,YAAcQ,EAASR,WAE/D9lG,GAAKmsE,EAAQE,YAGrB,OAAOppE,EAEX,SAASsjG,GAAc1wF,EAAMs2D,EAASu6B,GAClC,GAAsB,MAAlBA,EAEA,OAAQA,GACJ,KAAK,EACD,OAAOz+B,GAAcpyD,EAAMs2D,EAAQp2D,WAAW60D,cAClD,KAAK,EACD,OAAO,IAAIpgC,GAAWy9B,GAAcpyD,EAAMs2D,EAAQp2D,WAAW60D,eACjE,KAAK,EACD,OAAO3C,GAAcpyD,EAAMs2D,EAAQp2D,WAAWrG,SAClD,KAAK,EACD,OAAOu4D,GAAcpyD,EAAMs2D,EAAQp2D,WAAWi3D,cAClD,KAAK,EACD,OAAO9E,GAAeryD,EAAMs2D,EAAQp2D,WAAWuL;;;;;;;OAyC/D,SAASqlF,GAAgB9wF,EAAM81D,EAAY7lE,GACvC,IAAI8+F,EAAWl5B,GAAuB71D,EAAM81D,EAAY7lE,GACnD8+F,GAKLt4B,GAA0Bz2D,EADL/P,EAAI8mE,UAAUppE,MACa,EAAqBohG,EAAU,UAAMz/F;;;;;;;OA4BzF,SAASyhG,GAAmBr8F,EAAO0oE,EAAY4zB,GAE3C,IADA,IAAIxyE,EAAW,GACNr0B,EAAI,EAAGA,EAAI6mG,EAAc1mG,OAAQH,IAAK,CAC3C,IAAIkuB,EAAO24E,EAAc7mG,GACzBq0B,EAASlzB,KAAK,CACVoJ,MAAO,EACPzI,KAAMosB,EACNy2E,GAAI,KACJjwB,gBAAiBxmD,EACjBm3E,gBAAiB,KACjB7hD,OAAQ,OAGhB,MAAO,CAEHztC,WAAY,EACZ0D,OAAQ,KACRoqB,aAAc,KACdzrB,cAAe,EACf+6D,aAAc,EAEdF,WAAYA,EACZ1oE,MAAOA,EACP0mE,WAAY,EACZmC,iBAAkB,EAClBC,oBAAqB,EACrBjI,eAAgB,GAChBC,gBAAiB,EACjBC,WAAY,GACZiB,gBAAiB,EACjBF,WAAY,EACZh4C,SAAUA,EACVy4C,aAAcM,GAAiB/4C,GAC/BnkB,QAAS,GACTyO,QAAS,KACT41B,SAAU,KACV7oC,KAAM,KACN4nE,MAAO,KACP1G,UAAW,MAyMnB,SAAS3oC,GAAWpuB,EAAM81D,EAAY7lE,GAClC,IAAI6kE,EACA11D,EAAWY,EAAKZ,SACpB01D,EAAa11D,EAASgvB,WAAWn+B,EAAI4F,KAAK43C,QAC1C,IAAIshD,EAAWl5B,GAAuB71D,EAAM81D,EAAY7lE,GAIxD,OAHI8+F,GACA3vF,EAAS2Q,YAAYg/E,EAAUj6B,GAE5B,CAAEE,WAAYF,GA0EzB,SAASm8B,GAAsBlmG,EAAOq4E,GAElC,OADwB,MAATr4E,EAAgBA,EAAMa,WAAa,IAChCw3E,EAAQz1B;;;;;;;OAsI9B,SAASujD,GAAc17E,GACnB,OAA8C,IAAzB,EAAbA,EAAK9gB,QAA4D,OAAtB8gB,EAAK1M,QAAQ7c,KAEpE,SAASklG,GAAavtF,EAAQ4R,EAAM47E,GAChC,IAAIv3F,EAAW2b,EAAK1M,SAAW0M,EAAK1M,QAAQjP,SAC5C,GAAIA,EAAU,CACV,IAAKA,EAASu8D,mBACV,MAAM,IAAIpnE,MAAM,oEAEpB,GAAI6K,EAASu8D,oBAC2B,SAApCv8D,EAASu8D,mBAAmB1hE,MAC5B,MAAM,IAAI1F,MAAM,mFAAqFwmB,EAAKtV,UAAY,KAG9H,GAAiB,MAAbsV,EAAK9gB,OAEuC,IAAzB,GADDkP,EAASA,EAAOlP,MAAQ,IAEtC,MAAM,IAAI1F,MAAM,sGAAwGwmB,EAAKtV,UAAY,KAGjJ,GAAIsV,EAAKioD,MAAO,CACZ,GAAiB,SAAbjoD,EAAK9gB,SACHkP,GAAyD,IAA/B,MAAfA,EAAOlP,QACpB,MAAM,IAAI1F,MAAM,kFAAoFwmB,EAAKtV,UAAY,KAEzH,GAAiB,UAAbsV,EAAK9gB,OAAyCkP,EAC9C,MAAM,IAAI5U,MAAM,wEAA0EwmB,EAAKtV,UAAY,KAGnH,GAAIsV,EAAKghD,WAAY,CACjB,IAAI66B,EAAYztF,EAASA,EAAO1D,UAAY0D,EAAO4yD,WAAa46B,EAAY,EAC5E,GAAI57E,EAAKtV,WAAamxF,GAAa77E,EAAKtV,UAAYsV,EAAKghD,WAAa66B,EAClE,MAAM,IAAIriG,MAAM,uEAAyEwmB,EAAKtV,UAAY,MAItH,SAASg1B,GAAmBtxB,EAAQ0tF,EAAW33B,EAAS1jE,GAGpD,IAAI+J,EAAOuxF,GAAW3tF,EAAO8wD,KAAM9wD,EAAOxE,SAAUwE,EAAQ0tF,EAAW33B,GAGvE,OAFA63B,GAASxxF,EAAM4D,EAAOkV,UAAW7iB,GACjCw7F,GAAgBzxF,GACTA,EAEX,SAAS0yD,GAAegC,EAAMzkE,EAAKgG,GAC/B,IAAI+J,EAAOuxF,GAAW78B,EAAMA,EAAKt1D,SAAU,KAAM,KAAMnP,GAGvD,OAFAuhG,GAASxxF,EAAM/J,EAASA,GACxBw7F,GAAgBzxF,GACTA,EAEX,SAAS2yD,GAAoBpqD,EAAY+tD,EAASqD,EAASp6D,GACvD,IACImyF,EADAlyF,EAAe82D,EAAQxtD,QAAQitD,sBAQnC,OAFI27B,EAJClyF,EAIc+I,EAAWmsD,KAAKjwC,gBAAgBnlB,eAAeC,EAAaC,GAH5D+I,EAAWmsD,KAAKt1D,SAK5BmyF,GAAWhpF,EAAWmsD,KAAMg9B,EAAcnpF,EAAY+tD,EAAQxtD,QAAQ+wD,kBAAmBF,GAEpG,SAAS43B,GAAW78B,EAAMt1D,EAAUwE,EAAQgxD,EAAe3kE,GACvD,IAAIowB,EAAQ,IAAI92B,MAAM0G,EAAIowB,MAAM/1B,QAC5BsxE,EAAc3rE,EAAI0hG,YAAc,IAAIpoG,MAAM0G,EAAI0hG,aAAe,KAgBjE,MAfW,CACP1hG,IAAKA,EACL2T,OAAQA,EACRywD,oBAAqB,KACrBO,cAAeA,EACf3+D,QAAS,KACT6iB,UAAW,KACXuH,MAAOA,EACP0xC,MAAO,GACP2C,KAAMA,EACNt1D,SAAUA,EACV20D,UAAW,IAAIxqE,MAAM0G,EAAI2hG,cACzBh2B,YAAaA,EACb3J,WAAY,GAIpB,SAASu/B,GAASxxF,EAAM8Y,EAAW7iB,GAC/B+J,EAAK8Y,UAAYA,EACjB9Y,EAAK/J,QAAUA,EAEnB,SAASw7F,GAAgBzxF,GACrB,IAAI81D,EACAb,GAAgBj1D,KAEhB81D,EAAa1D,GAAcpyD,EAAK4D,OADlB5D,EAAK40D,cAC6BhxD,OAAO1D,WAAW60D,eAItE,IAFA,IAAI9kE,EAAM+P,EAAK/P,IACXowB,EAAQrgB,EAAKqgB,MACRl2B,EAAI,EAAGA,EAAI8F,EAAIowB,MAAM/1B,OAAQH,IAAK,CACvC,IAAImsE,EAAUrmE,EAAIowB,MAAMl2B,GACxBqoE,GAASC,eAAezyD,EAAM7V,GAC9B,IAAI0nG,OAAW,EACf,OAAwB,UAAhBv7B,EAAQ5hE,OACZ,KAAK,EACD,IAAI6c,EAAKzB,GAAc9P,EAAM81D,EAAYQ,GACrCxrC,OAAgBx7B,EACpB,GAAoB,SAAhBgnE,EAAQ5hE,MAAsC,CAC9C,IAAIo9F,EAAc57B,GAAkBI,EAAQxtD,QAAQgiB,eACpDA,EAAgB0nC,GAASG,oBAAoB3yD,EAAMs2D,EAASw7B,EAAavgF,GAE7Ey9E,GAAuBhvF,EAAM8qB,EAAewrC,EAAS/kD,GACrDsgF,EAAW,CACP98B,cAAexjD,EACfuZ,cAAeA,EACfqsC,cAAe,KACft9D,SAAUy8D,EAAQxtD,QAAQjP,SAAWgiE,GAAmB77D,EAAMs2D,QAAWhnE,GAEzD,SAAhBgnE,EAAQ5hE,QACRm9F,EAAS16B,cAAgBkD,GAAwBr6D,EAAMs2D,EAASu7B,IAEpE,MACJ,KAAK,EACDA,EAAWzjE,GAAWpuB,EAAM81D,EAAYQ,GACxC,MACJ,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACDu7B,EAAWxxE,EAAMl2B,KACkB,KAAhBmsE,EAAQ5hE,QAEvBm9F,EAAW,CAAEpmF,SADEiyD,GAAuB19D,EAAMs2D,KAGhD,MAEJ,KAAK,GAEDu7B,EAAW,CAAEpmF,SADEmyD,GAAmB59D,EAAMs2D,IAExC,MAEJ,KAAK,OACDu7B,EAAWxxE,EAAMl2B,MAGb0nG,EAAW,CAAEpmF,SADEqyD,GAAwB99D,EAAMs2D,KAG7B,MAAhBA,EAAQ5hE,OAER88F,GADep/B,GAAcpyD,EAAMs2D,EAAQ1yD,OAAO1D,WAAW4qB,cAC1C+mE,EAASpmF,SAAUomF,EAASpmF,UAEnD,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,IACDomF,EArjBL,CAAE9mG,WAAOuE,GAsjBJ,MACJ,KAAK,SACL,KAAK,UACDuiG,EA/yBL,IAAI5iB,GAgzBC,MACJ,KAAK,EACD6hB,GAAgB9wF,EAAM81D,EAAYQ,GAElCu7B,OAAWviG,EAGnB+wB,EAAMl2B,GAAK0nG,EAIfE,GAAyB/xF,EAAM+tF,GAAWiE,iBAE1CC,GAAkBjyF,EAAM,UAAiE,UAA6B,GAE1H,SAASizD,GAAmBjzD,GACxBkyF,GAA2BlyF,GAC3BwyD,GAASc,iBAAiBtzD,EAAM,GAChCmyF,GAAwBnyF,EAAM+tF,GAAWqE,gBACzC5/B,GAASe,eAAevzD,EAAM,GAC9B+xF,GAAyB/xF,EAAM+tF,GAAWqE,gBAG1CpyF,EAAK+xD,QAAS,GAElB,SAASiB,GAAmBhzD,GACP,EAAbA,EAAK+xD,OACL/xD,EAAK+xD,QAAS,EACd/xD,EAAK+xD,OAAS,GAGd/xD,EAAK+xD,QAAS,EAElBH,GAAe5xD,EAAM,EAA8B,KACnDkyF,GAA2BlyF,GAC3BwyD,GAASc,iBAAiBtzD,EAAM,GAChCmyF,GAAwBnyF,EAAM+tF,GAAWsE,gBACzCJ,GAAkBjyF,EAAM,SAAiC,UAA8B,GACvF,IAAIsyF,EAAW1gC,GAAe5xD,EAAM,IAAmC,KACvE8+D,GAAgC9+D,EAAM,SAAqCsyF,EAAW,QAAiC,IACvH9/B,GAASe,eAAevzD,EAAM,GAC9B+xF,GAAyB/xF,EAAM+tF,GAAWsE,gBAC1CJ,GAAkBjyF,EAAM,UAA+B,UAA8B,GAErF8+D,GAAgC9+D,EAAM,UADtCsyF,EAAW1gC,GAAe5xD,EAAM,IAA6C,MACM,QAA8B,IAC5F,EAAjBA,EAAK/P,IAAIyE,QACTsL,EAAK+xD,QAAS,GAElB/xD,EAAK+xD,QAAS,GACdH,GAAe5xD,EAAM,IAA0C,MAEnE,SAASuyF,GAAmBvyF,EAAMs2D,EAASk8B,EAAU9kD,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GACrF,OAAiB,IAAbF,EAgCR,SAASG,EAAyB3yF,EAAMs2D,EAAS5oB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GACjF,OAAwB,UAAhBp8B,EAAQ5hE,OACZ,KAAK,EACD,OA9hCZ,SAASk+F,EAA4B5yF,EAAM/P,EAAKy9C,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GAChF,IAAIG,EAAU5iG,EAAIuuB,SAASl0B,OACvBwoG,GAAU,EAqBd,OApBID,EAAU,GAAKvD,GAA2BtvF,EAAM/P,EAAK,EAAGy9C,KACxDolD,GAAU,GACVD,EAAU,GAAKvD,GAA2BtvF,EAAM/P,EAAK,EAAG69C,KACxDglD,GAAU,GACVD,EAAU,GAAKvD,GAA2BtvF,EAAM/P,EAAK,EAAGg+C,KACxD6kD,GAAU,GACVD,EAAU,GAAKvD,GAA2BtvF,EAAM/P,EAAK,EAAGm+C,KACxD0kD,GAAU,GACVD,EAAU,GAAKvD,GAA2BtvF,EAAM/P,EAAK,EAAGs+C,KACxDukD,GAAU,GACVD,EAAU,GAAKvD,GAA2BtvF,EAAM/P,EAAK,EAAGy+C,KACxDokD,GAAU,GACVD,EAAU,GAAKvD,GAA2BtvF,EAAM/P,EAAK,EAAG4+C,KACxDikD,GAAU,GACVD,EAAU,GAAKvD,GAA2BtvF,EAAM/P,EAAK,EAAG++C,KACxD8jD,GAAU,GACVD,EAAU,GAAKvD,GAA2BtvF,EAAM/P,EAAK,EAAGwiG,KACxDK,GAAU,GACVD,EAAU,GAAKvD,GAA2BtvF,EAAM/P,EAAK,EAAGyiG,KACxDI,GAAU,GACPA,EAugCQF,CAA4B5yF,EAAMs2D,EAAS5oB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GAC1F,KAAK,EACD,OApcZ,SAASK,EAAyB/yF,EAAM/P,EAAKy9C,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GAC7E,IAAII,GAAU,EACVt0E,EAAWvuB,EAAIuuB,SACfq0E,EAAUr0E,EAASl0B,OAqBvB,GApBIuoG,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGy9C,KACnDolD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAG69C,KACnDglD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGg+C,KACnD6kD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGm+C,KACnD0kD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGs+C,KACnDukD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGy+C,KACnDokD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAG4+C,KACnDikD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAG++C,KACnD8jD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGwiG,KACnDK,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGyiG,KACnDI,GAAU,GACVA,EAAS,CACT,IAAI/nG,EAAQkF,EAAI4F,KAAK43C,OACjBolD,EAAU,IACV9nG,GAASkmG,GAAsBvjD,EAAIlvB,EAAS,KAC5Cq0E,EAAU,IACV9nG,GAASkmG,GAAsBnjD,EAAItvB,EAAS,KAC5Cq0E,EAAU,IACV9nG,GAASkmG,GAAsBhjD,EAAIzvB,EAAS,KAC5Cq0E,EAAU,IACV9nG,GAASkmG,GAAsB7iD,EAAI5vB,EAAS,KAC5Cq0E,EAAU,IACV9nG,GAASkmG,GAAsB1iD,EAAI/vB,EAAS,KAC5Cq0E,EAAU,IACV9nG,GAASkmG,GAAsBviD,EAAIlwB,EAAS,KAC5Cq0E,EAAU,IACV9nG,GAASkmG,GAAsBpiD,EAAIrwB,EAAS,KAC5Cq0E,EAAU,IACV9nG,GAASkmG,GAAsBjiD,EAAIxwB,EAAS,KAC5Cq0E,EAAU,IACV9nG,GAASkmG,GAAsBwB,EAAIj0E,EAAS,KAC5Cq0E,EAAU,IACV9nG,GAASkmG,GAAsByB,EAAIl0E,EAAS,KAChD,IAAIs2C,EAAa3C,GAAWnyD,EAAM/P,EAAIiQ,WAAW80D,WACjDh1D,EAAKZ,SAAS2tB,SAAS+nC,EAAY/pE,GAEvC,OAAO+nG,EAmZQC,CAAyB/yF,EAAMs2D,EAAS5oB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GACvF,KAAK,MACD,OApoRZ,SAASM,EAA8BhzF,EAAM/P,EAAKy9C,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GAClF,IAAIh0B,EAAerM,GAAeryD,EAAM/P,EAAIiQ,WACxCgG,EAAYw4D,EAAajzD,SACzBqnF,GAAU,EACVl0B,OAAUtvE,EACVujG,EAAU5iG,EAAIuuB,SAASl0B,OAmD3B,OAlDIuoG,EAAU,GAAKh/B,GAAa7zD,EAAM/P,EAAK,EAAGy9C,KAC1ColD,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK,EAAGy9C,EAAIkxB,IAErDi0B,EAAU,GAAKh/B,GAAa7zD,EAAM/P,EAAK,EAAG69C,KAC1CglD,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK,EAAG69C,EAAI8wB,IAErDi0B,EAAU,GAAKh/B,GAAa7zD,EAAM/P,EAAK,EAAGg+C,KAC1C6kD,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK,EAAGg+C,EAAI2wB,IAErDi0B,EAAU,GAAKh/B,GAAa7zD,EAAM/P,EAAK,EAAGm+C,KAC1C0kD,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK,EAAGm+C,EAAIwwB,IAErDi0B,EAAU,GAAKh/B,GAAa7zD,EAAM/P,EAAK,EAAGs+C,KAC1CukD,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK,EAAGs+C,EAAIqwB,IAErDi0B,EAAU,GAAKh/B,GAAa7zD,EAAM/P,EAAK,EAAGy+C,KAC1CokD,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK,EAAGy+C,EAAIkwB,IAErDi0B,EAAU,GAAKh/B,GAAa7zD,EAAM/P,EAAK,EAAG4+C,KAC1CikD,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK,EAAG4+C,EAAI+vB,IAErDi0B,EAAU,GAAKh/B,GAAa7zD,EAAM/P,EAAK,EAAG++C,KAC1C8jD,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK,EAAG++C,EAAI4vB,IAErDi0B,EAAU,GAAKh/B,GAAa7zD,EAAM/P,EAAK,EAAGwiG,KAC1CK,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK,EAAGwiG,EAAI7zB,IAErDi0B,EAAU,GAAKh/B,GAAa7zD,EAAM/P,EAAK,EAAGyiG,KAC1CI,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK,EAAGyiG,EAAI9zB,IAErDA,GACA14D,EAAUu/C,YAAYmZ,GAET,MAAZ3uE,EAAIyE,OACLw9D,GAA4BlyD,EAAM,IAAmC/P,EAAIiQ,YACzEgG,EAAUzL,WAEE,OAAZxK,EAAIyE,OACJwR,EAAUvL,YAEPm4F,EA4kRQE,CAA8BhzF,EAAMs2D,EAAS5oB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GAC5F,KAAK,GACL,KAAK,GACL,KAAK,IACD,OAvpBZ,SAASO,EAAmCjzF,EAAM/P,EAAKy9C,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GACvF,IAAIl0E,EAAWvuB,EAAIuuB,SACfs0E,GAAU,EACVD,EAAUr0E,EAASl0B,OAqBvB,GApBIuoG,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGy9C,KACnDolD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAG69C,KACnDglD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGg+C,KACnD6kD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGm+C,KACnD0kD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGs+C,KACnDukD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGy+C,KACnDokD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAG4+C,KACnDikD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAG++C,KACnD8jD,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGwiG,KACnDK,GAAU,GACVD,EAAU,GAAK7+B,GAAsBh0D,EAAM/P,EAAK,EAAGyiG,KACnDI,GAAU,GACVA,EAAS,CACT,IAAIh3F,EAAOw2D,GAAqBtyD,EAAM/P,EAAIiQ,WACtCnV,OAAQ,EACZ,OAAoB,UAAZkF,EAAIyE,OACR,KAAK,GACD3J,EAAQ,GACJ8nG,EAAU,GACV9nG,EAAMO,KAAKoiD,GACXmlD,EAAU,GACV9nG,EAAMO,KAAKwiD,GACX+kD,EAAU,GACV9nG,EAAMO,KAAK2iD,GACX4kD,EAAU,GACV9nG,EAAMO,KAAK8iD,GACXykD,EAAU,GACV9nG,EAAMO,KAAKijD,GACXskD,EAAU,GACV9nG,EAAMO,KAAKojD,GACXmkD,EAAU,GACV9nG,EAAMO,KAAKujD,GACXgkD,EAAU,GACV9nG,EAAMO,KAAK0jD,GACX6jD,EAAU,GACV9nG,EAAMO,KAAKmnG,GACXI,EAAU,GACV9nG,EAAMO,KAAKonG,GACf,MACJ,KAAK,GACD3nG,EAAQ,GACJ8nG,EAAU,IACV9nG,EAAMyzB,EAAS,GAAGvyB,MAAQyhD,GAC1BmlD,EAAU,IACV9nG,EAAMyzB,EAAS,GAAGvyB,MAAQ6hD,GAC1B+kD,EAAU,IACV9nG,EAAMyzB,EAAS,GAAGvyB,MAAQgiD,GAC1B4kD,EAAU,IACV9nG,EAAMyzB,EAAS,GAAGvyB,MAAQmiD,GAC1BykD,EAAU,IACV9nG,EAAMyzB,EAAS,GAAGvyB,MAAQsiD,GAC1BskD,EAAU,IACV9nG,EAAMyzB,EAAS,GAAGvyB,MAAQyiD,GAC1BmkD,EAAU,IACV9nG,EAAMyzB,EAAS,GAAGvyB,MAAQ4iD,GAC1BgkD,EAAU,IACV9nG,EAAMyzB,EAAS,GAAGvyB,MAAQ+iD,GAC1B6jD,EAAU,IACV9nG,EAAMyzB,EAAS,GAAGvyB,MAAQwmG,GAC1BI,EAAU,IACV9nG,EAAMyzB,EAAS,GAAGvyB,MAAQymG,GAC9B,MACJ,KAAK,IACD,IAAIpd,EAAO5nC,EACX,OAAQmlD,GACJ,KAAK,EACD9nG,EAAQuqF,EAAKxH,UAAUpgC,GACvB,MACJ,KAAK,EACD3iD,EAAQuqF,EAAKxH,UAAUhgC,GACvB,MACJ,KAAK,EACD/iD,EAAQuqF,EAAKxH,UAAUhgC,EAAIG,GAC3B,MACJ,KAAK,EACDljD,EAAQuqF,EAAKxH,UAAUhgC,EAAIG,EAAIG,GAC/B,MACJ,KAAK,EACDrjD,EAAQuqF,EAAKxH,UAAUhgC,EAAIG,EAAIG,EAAIG,GACnC,MACJ,KAAK,EACDxjD,EAAQuqF,EAAKxH,UAAUhgC,EAAIG,EAAIG,EAAIG,EAAIG,GACvC,MACJ,KAAK,EACD3jD,EAAQuqF,EAAKxH,UAAUhgC,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,GAC3C,MACJ,KAAK,EACD9jD,EAAQuqF,EAAKxH,UAAUhgC,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,GAC/C,MACJ,KAAK,EACDjkD,EAAQuqF,EAAKxH,UAAUhgC,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,GACnD,MACJ,KAAK,GACD1nG,EAAQuqF,EAAKxH,UAAUhgC,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,IAKvE52F,EAAK/Q,MAAQA,EAEjB,OAAO+nG,EAuiBQG,CAAmCjzF,EAAMs2D,EAAS5oB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GACjG,QACI,KAAM,eA5CHC,CAAyB3yF,EAAMs2D,EAAS5oB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GA+C3F,SAASQ,EAA0BlzF,EAAMs2D,EAASlpE,GAC9C,OAAwB,UAAhBkpE,EAAQ5hE,OACZ,KAAK,EACD,OArhCZ,SAASy+F,EAA6BnzF,EAAM/P,EAAK7C,GAE7C,IADA,IAAI0lG,GAAU,EACL3oG,EAAI,EAAGA,EAAIiD,EAAO9C,OAAQH,IAC3BmlG,GAA2BtvF,EAAM/P,EAAK9F,EAAGiD,EAAOjD,MAChD2oG,GAAU,GAElB,OAAOA,EA+gCQK,CAA6BnzF,EAAMs2D,EAASlpE,GACvD,KAAK,EACD,OAjaZ,SAASgmG,EAA0BpzF,EAAM/P,EAAK7C,GAG1C,IAFA,IAAIoxB,EAAWvuB,EAAIuuB,SACfs0E,GAAU,EACL3oG,EAAI,EAAGA,EAAIiD,EAAO9C,OAAQH,IAG3B6pE,GAAsBh0D,EAAM/P,EAAK9F,EAAGiD,EAAOjD,MAC3C2oG,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAI/nG,EAAQ,GACZ,IAASZ,EAAI,EAAGA,EAAIiD,EAAO9C,OAAQH,IAC/BY,GAAgBkmG,GAAsB7jG,EAAOjD,GAAIq0B,EAASr0B,IAE9DY,EAAQkF,EAAI4F,KAAK43C,OAAS1iD,EAC1B,IAAI+pE,EAAa3C,GAAWnyD,EAAM/P,EAAIiQ,WAAW80D,WACjDh1D,EAAKZ,SAAS2tB,SAAS+nC,EAAY/pE,GAEvC,OAAO+nG,EA8YQM,CAA0BpzF,EAAMs2D,EAASlpE,GACpD,KAAK,MACD,OA1lRZ,SAASimG,EAA+BrzF,EAAM/P,EAAK7C,GAK/C,IAJA,IAAIsxE,EAAerM,GAAeryD,EAAM/P,EAAIiQ,WACxCgG,EAAYw4D,EAAajzD,SACzBqnF,GAAU,EACVl0B,OAAUtvE,EACLnF,EAAI,EAAGA,EAAIiD,EAAO9C,OAAQH,IAC3B0pE,GAAa7zD,EAAM/P,EAAK9F,EAAGiD,EAAOjD,MAClC2oG,GAAU,EACVl0B,EAAUD,GAAW3+D,EAAM0+D,EAAczuE,EAAK9F,EAAGiD,EAAOjD,GAAIy0E,IAapE,OAVIA,GACA14D,EAAUu/C,YAAYmZ,GAET,MAAZ3uE,EAAIyE,OACLw9D,GAA4BlyD,EAAM,IAAmC/P,EAAIiQ,YACzEgG,EAAUzL,WAEE,OAAZxK,EAAIyE,OACJwR,EAAUvL,YAEPm4F,EAqkRQO,CAA+BrzF,EAAMs2D,EAASlpE,GACzD,KAAK,GACL,KAAK,GACL,KAAK,IACD,OArjBZ,SAASkmG,EAAoCtzF,EAAM/P,EAAK7C,GAGpD,IAFA,IAAIoxB,EAAWvuB,EAAIuuB,SACfs0E,GAAU,EACL3oG,EAAI,EAAGA,EAAIiD,EAAO9C,OAAQH,IAG3B6pE,GAAsBh0D,EAAM/P,EAAK9F,EAAGiD,EAAOjD,MAC3C2oG,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIh3F,EAAOw2D,GAAqBtyD,EAAM/P,EAAIiQ,WACtCnV,OAAQ,EACZ,OAAoB,UAAZkF,EAAIyE,OACR,KAAK,GACD3J,EAAQqC,EACR,MACJ,KAAK,GAED,IADArC,EAAQ,GACCZ,EAAI,EAAGA,EAAIiD,EAAO9C,OAAQH,IAC/BY,EAAMyzB,EAASr0B,GAAG8B,MAAQmB,EAAOjD,GAErC,MACJ,KAAK,IACD,IAAImrF,EAAOloF,EAAO,GACd81C,EAAS91C,EAAOsK,MAAM,GAC1B3M,EAAQuqF,EAAKxH,UAAUtjF,MAAM8qF,EAAM9pF,EAAS03C,IAGpDpnC,EAAK/Q,MAAQA,EAEjB,OAAO+nG;;;;;;;OAshBQQ,CAAoCtzF,EAAMs2D,EAASlpE,GAC9D,QACI,KAAM,eAzDH8lG,CAA0BlzF,EAAMs2D,EAAS5oB,GAGxD,SAASwkD,GAA2BlyF,GAChC,IAAI/P,EAAM+P,EAAK/P,IACf,GAAsB,EAAhBA,EAAIkrE,UAGV,IAAK,IAAIhxE,EAAI,EAAGA,EAAI8F,EAAIowB,MAAM/1B,OAAQH,IAAK,CACvC,IAAImsE,EAAUrmE,EAAIowB,MAAMl2B,GACxB,GAAoB,EAAhBmsE,EAAQ5hE,MAAmC,CAC3C,IAAIsmE,EAAiB5I,GAAcpyD,EAAM7V,GAAG0P,SAASohE,gBACrD,GAAID,EACA,IAAK,IAAI6X,EAAM,EAAGA,EAAM7X,EAAe1wE,OAAQuoF,IAAO,CAClD,IAAI+d,EAAgB51B,EAAe6X,GACnC+d,EAAc7+B,OAAS,GACvBuC,GAAsCs8B,EAAe5wF,SAIH,IAA/B,EAArBs2D,EAAQ8E,cAIdjxE,GAAKmsE,EAAQE,aAoCzB,SAAS+8B,GAAmBvzF,EAAMs2D,EAASk8B,EAAU9kD,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GAQrF,OAPiB,IAAbF,EASR,SAASgB,EAAyBxzF,EAAMs2D,EAAS5oB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GACjF,IAAIG,EAAUv8B,EAAQ93C,SAASl0B,OAC3BuoG,EAAU,GACV5+B,GAAsBj0D,EAAMs2D,EAAS,EAAG5oB,GACxCmlD,EAAU,GACV5+B,GAAsBj0D,EAAMs2D,EAAS,EAAGxoB,GACxC+kD,EAAU,GACV5+B,GAAsBj0D,EAAMs2D,EAAS,EAAGroB,GACxC4kD,EAAU,GACV5+B,GAAsBj0D,EAAMs2D,EAAS,EAAGloB,GACxCykD,EAAU,GACV5+B,GAAsBj0D,EAAMs2D,EAAS,EAAG/nB,GACxCskD,EAAU,GACV5+B,GAAsBj0D,EAAMs2D,EAAS,EAAG5nB,GACxCmkD,EAAU,GACV5+B,GAAsBj0D,EAAMs2D,EAAS,EAAGznB,GACxCgkD,EAAU,GACV5+B,GAAsBj0D,EAAMs2D,EAAS,EAAGtnB,GACxC6jD,EAAU,GACV5+B,GAAsBj0D,EAAMs2D,EAAS,EAAGm8B,GACxCI,EAAU,GACV5+B,GAAsBj0D,EAAMs2D,EAAS,EAAGo8B,GA7BxCc,CAAyBxzF,EAAMs2D,EAAS5oB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GA+BpF,SAASe,EAA0BzzF,EAAMs2D,EAASlpE,GAC9C,IAAK,IAAIjD,EAAI,EAAGA,EAAIiD,EAAO9C,OAAQH,IAC/B8pE,GAAsBj0D,EAAMs2D,EAASnsE,EAAGiD,EAAOjD,IA9B/CspG,CAA0BzzF,EAAMs2D,EAAS5oB,IAGtC,EAkCX,SAASgmD,GAAoB1zF,EAAMs2D,GAE/B,GADgB/D,GAAYvyD,EAAMs2D,EAAQp2D,WAC5BkiB,MACV,MAAMgvC,GAA4CoB,GAASY,mBAAmBpzD,EAAMs2D,EAAQp2D,WAAY,SAAWo2D,EAAQmH,MAAMxhE,GAAK,aAAc,SAAWq6D,EAAQmH,MAAMxhE,GAAK,SAAsD,IAA9B,EAAb+D,EAAK+xD,QAG1M,SAASmB,GAAYlzD,GACjB,KAAiB,IAAbA,EAAK+xD,OAAT,CAMA,GAHAogC,GAAwBnyF,EAAM+tF,GAAW4F,SACzC5B,GAAyB/xF,EAAM+tF,GAAW4F,SAC1C70B,GAAgC9+D,EAAM,QAClCA,EAAK47D,YACL,IAAK,IAAIzxE,EAAI,EAAGA,EAAI6V,EAAK47D,YAAYtxE,OAAQH,IACzC6V,EAAK47D,YAAYzxE,MAjyS7B,SAASypG,EAAoB5zF,GACzB,GAAmB,GAAbA,EAAK+xD,MAAX,CAGA,IAAIgJ,EAAiBpG,GAAsB30D,GAC3C,GAAI+6D,EAAgB,CAChB,IAAIC,EAAiBD,EAAelhE,SAASohE,gBACzCD,IACAhjE,GAAgBgjE,EAAgBA,EAAe9pE,QAAQ8O,IACvDwyD,GAASgB,mBAAmBxzD,MA2xSpC4zF,CAAoB5zF,GAChBA,EAAKZ,SAAS0uB,aAQtB,SAAS+lE,EAAiB7zF,GAEtB,IADA,IAAIqnC,EAAMrnC,EAAK/P,IAAIowB,MAAM/1B,OAChBH,EAAI,EAAGA,EAAIk9C,EAAKl9C,IAAK,CAC1B,IAAI8F,EAAM+P,EAAK/P,IAAIowB,MAAMl2B,GACT,EAAZ8F,EAAIyE,MACJsL,EAAKZ,SAAS0uB,YAAYskC,GAAcpyD,EAAM7V,GAAG4qE,eAEhC,EAAZ9kE,EAAIyE,MACTsL,EAAKZ,SAAS0uB,YAAYqkC,GAAWnyD,EAAM7V,GAAG6qE,aAE7B,SAAZ/kE,EAAIyE,OAAuD,UAAZzE,EAAIyE,QACxD69D,GAAYvyD,EAAM7V,GAAGkmC,WAlBzBwjE,CAAiB7zF,GAEjBi1D,GAAgBj1D,IAChBA,EAAKZ,SAASixB,UAElBrwB,EAAK+xD,OAAS,KA0BlB,SAASggC,GAAyB/xF,EAAMutB,GACpC,IAAIt9B,EAAM+P,EAAK/P,IACf,GAAsB,SAAhBA,EAAIkrE,UAGV,IAAK,IAAIhxE,EAAI,EAAGA,EAAI8F,EAAIowB,MAAM/1B,OAAQH,IAAK,CACvC,IAAImsE,EAAUrmE,EAAIowB,MAAMl2B,GACJ,SAAhBmsE,EAAQ5hE,MAERo/F,GAAe1hC,GAAcpyD,EAAM7V,GAAG2gC,cAAeyC,GAEQ,IAAlC,SAArB+oC,EAAQ8E,cAIdjxE,GAAKmsE,EAAQE,aAIzB,SAAS27B,GAAwBnyF,EAAMutB,GACnC,IAAIt9B,EAAM+P,EAAK/P,IACf,GAAsB,SAAhBA,EAAIkrE,UAGV,IAAK,IAAIhxE,EAAI,EAAGA,EAAI8F,EAAIowB,MAAM/1B,OAAQH,IAAK,CACvC,IAAImsE,EAAUrmE,EAAIowB,MAAMl2B,GACxB,GAAoB,SAAhBmsE,EAAQ5hE,MAGR,IADA,IAAIwiE,EAAgB9E,GAAcpyD,EAAM7V,GAAGgtE,cAAcC,eAChD10B,EAAI,EAAGA,EAAIw0B,EAAc5sE,OAAQo4C,IACtCoxD,GAAe58B,EAAcx0B,GAAInV,QAGwB,IAAlC,SAArB+oC,EAAQ8E,cAIdjxE,GAAKmsE,EAAQE,aAIzB,SAASs9B,GAAe9zF,EAAMutB,GAC1B,IAAIwmE,EAAY/zF,EAAK+xD,MACrB,OAAQxkC,GACJ,KAAKwgE,GAAWqE,eAC8B,IAAzB,IAAZ2B,KAC+C,KAA/B,GAAZA,GACD9gC,GAAmBjzD,GAEF,GAAZ+zF,GACLC,GAAyBh0F,EAAM+tF,GAAWkG,+BAGlD,MACJ,KAAKlG,GAAWkG,6BAC8B,IAAzB,IAAZF,KACe,GAAZA,EACA9gC,GAAmBjzD,GAEF,GAAZ+zF,GACLC,GAAyBh0F,EAAMutB,IAGvC,MACJ,KAAKwgE,GAAWsE,eAC8B,IAAzB,IAAZ0B,KAC+C,KAA/B,GAAZA,GACD/gC,GAAmBhzD,GAEF,GAAZ+zF,GACLC,GAAyBh0F,EAAM+tF,GAAWmG,+BAGlD,MACJ,KAAKnG,GAAWmG,6BAC8B,IAAzB,IAAZH,KACe,GAAZA,EACA/gC,GAAmBhzD,GAEF,GAAZ+zF,GACLC,GAAyBh0F,EAAMutB,IAGvC,MACJ,KAAKwgE,GAAW4F,QAGZzgC,GAAYlzD,GACZ,MACJ,KAAK+tF,GAAWiE,gBACZP,GAAgBzxF,IAI5B,SAASg0F,GAAyBh0F,EAAMutB,GACpC4kE,GAAwBnyF,EAAMutB,GAC9BwkE,GAAyB/xF,EAAMutB,GAEnC,SAAS0kE,GAAkBjyF,EAAMm0F,EAAYC,EAAwBC,GACjE,GAAMr0F,EAAK/P,IAAIkrE,UAAYg5B,GAAiBn0F,EAAK/P,IAAIkrE,UAAYi5B,EAIjE,IADA,IAAIhD,EAAYpxF,EAAK/P,IAAIowB,MAAM/1B,OACtBH,EAAI,EAAGA,EAAIinG,EAAWjnG,IAAK,CAChC,IAAImsE,EAAUt2D,EAAK/P,IAAIowB,MAAMl2B,GAC7B,GAAKmsE,EAAQ5hE,MAAQy/F,GAAgB79B,EAAQ5hE,MAAQ0/F,EAEjD,OADA5hC,GAASC,eAAezyD,EAAMs2D,EAAQp2D,WAC9Bm0F,GACJ,KAAK,EACDnE,GAAoBlwF,EAAMs2D,GAC1B,MACJ,KAAK,EACDo9B,GAAoB1zF,EAAMs2D,GAIhCA,EAAQ8E,WAAa+4B,GAAiB79B,EAAQ8E,WAAag5B,IAG7DjqG,GAAKmsE,EAAQE;;;;;;;QA/HzB,SAAWu3B,GACPA,EAAWA,EAA4B,gBAAI,GAAK,kBAChDA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAAoB,QAAI,GAAK,UAN5C,CAOGA,KAAeA,GAAa,KAoI/B,IAAI7T,IAAc,EAClB,SAASoa,KACL,IAAIpa,GAAJ,CAGAA,IAAc,EACd,IAAIqa,EAAWjlF,KAwCnB,SAASklF,IACL,MAAO,CACH/hC,eAAgBgiC,GAChB/hC,eAAgBgiC,GAChBx/D,mBAAoBy/D,GACpBhiC,oBAAqBiiC,GACrBhiC,kBAAmBiiC,GACnBhiC,iBAAkBiiC,GAClBhiC,sBAAuBiiC,GACvBhiC,eAAgBiiC,GAChBhiC,mBAAoBiiC,GACpBhiC,mBAAoBiiC,GACpBhiC,YAAaiiC,GACb/hC,mBAAoB,SAAUpzD,EAAME,GAAa,OAAO,IAAIk1F,GAAcp1F,EAAME,IAChFmzD,YAAagiC,GACb/hC,iBAAkBgiC,GAClB/hC,eAAgBgiC,IAxDSf,GAmBjC,SAASgB,IACL,MAAO,CACH/iC,eAAgB,aAChBC,eAAgB+iC,GAChBvgE,mBAAoBA,GACpBy9B,oBAAqBA,GACrBC,kBAAmBA,GACnBC,iBAAkBY,GAClBX,sBAAuBW,GACvBV,eAAgBU,GAChBT,mBAAoBA,GACpBC,mBAAoBA,GACpBC,YAAaA,GACbE,mBAAoB,SAAUpzD,EAAME,GAAa,OAAO,IAAIk1F,GAAcp1F,EAAME,IAChFmzD,YAAa,SAAUrzD,EAAME,EAAW0zC,EAAW6gB,GAC/C,OAAOz0D,EAAK/P,IAAIojE,YAAYrzD,EAAME,EAAW0zC,EAAW6gB,IAE5DnB,iBAAkB,SAAUtzD,EAAMq0F,GAAa,OAAOr0F,EAAK/P,IAAIqjE,iBAA+B,IAAd+gC,EAAuCqB,GAAyBC,GAAwB31F,IACxKuzD,eAAgB,SAAUvzD,EAAMq0F,GAAa,OAAOr0F,EAAK/P,IAAIsjE,eAA6B,IAAd8gC,EAAuCqB,GAAyBC,GAAwB31F,KArCnHw1F,GACrDhjC,GAASC,eAAiB8hC,EAAS9hC,eACnCD,GAASE,eAAiB6hC,EAAS7hC,eACnCF,GAASt9B,mBAAqBq/D,EAASr/D,mBACvCs9B,GAASG,oBAAsB4hC,EAAS5hC,oBACxCH,GAASI,kBAAoB2hC,EAAS3hC,kBACtCJ,GAASK,iBAAmB0hC,EAAS1hC,iBACrCL,GAASM,sBAAwByhC,EAASzhC,sBAC1CN,GAASO,eAAiBwhC,EAASxhC,eACnCP,GAASQ,mBAAqBuhC,EAASvhC,mBACvCR,GAASS,mBAAqBshC,EAASthC,mBACvCT,GAASU,YAAcqhC,EAASrhC,YAChCV,GAASW,WAAaA,GACtBX,GAASY,mBAAqBmhC,EAASnhC,mBACvCZ,GAASa,YAAckhC,EAASlhC,YAChCb,GAASc,iBAAmBihC,EAASjhC,iBACrCd,GAASe,eAAiBghC,EAAShhC,eACnCf,GAASgB,mBAAqBA,IA0ClC,SAASiiC,GAAmBG,EAAYz/D,EAAkBwyB,EAAoB14D,EAAKsmC,EAAUtgC,GACzF,IAAIwuB,EAAkB8R,EAASniC,SAASS,IAAIm0D,IAC5C,OAAO0J,GAAemjC,GAAeD,EAAYr/D,EAAU9R,EAAiB0R,EAAkBwyB,GAAqB14D,EAAKgG,GAE5H,SAASy+F,GAAoBkB,EAAYz/D,EAAkBwyB,EAAoB14D,EAAKsmC,EAAUtgC,GAC1F,IAAIwuB,EAAkB8R,EAASniC,SAASS,IAAIm0D,IACxC0L,EAAOmhC,GAAeD,EAAYr/D,EAAU,IAAIu/D,GAAsBrxE,GAAkB0R,EAAkBwyB,GAC1GotC,EAAkBC,GAA6B/lG,GACnD,OAAOgmG,GAAqBC,GAAYpsG,OAAQ4oE,GAAgB,KAAM,CAACgC,EAAMqhC,EAAiB9/F,IAElG,SAAS4/F,GAAeD,EAAYr/D,EAAU9R,EAAiB0R,EAAkBwyB,GAC7E,IAAIvyC,EAAYmgB,EAASniC,SAASS,IAAI20D,IAClC38B,EAAe0J,EAASniC,SAASS,IAAIkZ,IACrC3O,EAAWqlB,EAAgBnlB,eAAe,KAAM,MACpD,MAAO,CACHi3B,SAAUA,EACVniC,SAAUwhG,EACVz/D,iBAAkBA,EAClB04D,eAAgBlmC,EAChBvyC,UAAWA,EACXqO,gBAAiBA,EACjBrlB,SAAUA,EACVytB,aAAcA,GAGtB,SAAS8nE,GAAwBpsF,EAAY+oF,EAAW33B,EAAS1jE,GAC7D,IAAI8/F,EAAkBC,GAA6Br8B,GACnD,OAAOs8B,GAAqBC,GAAYpsG,OAAQorC,GAAoB,KAAM,CAAC3sB,EAAY+oF,EAAWyE,EAAiB9/F,IAEvH,SAAS2+F,GAAyBrsF,EAAY+tD,EAASqD,EAASp6D,GAQ5D,OALIo6D,EAFwBw8B,GAAiBthG,IAAIyhE,EAAQxtD,QAAQ+wD,kBAAkBn7B,SAASpwC,QAK9E0nG,GAA6Br8B,GAEpCs8B,GAAqBC,GAAYpsG,OAAQ6oE,GAAqB,KAAM,CAACpqD,EAAY+tD,EAASqD,EAASp6D,IAE9G,SAASs1F,GAAuB54B,EAAY3lC,EAAgB4lC,EAAqBjsE,GAE7E,OAAO2iE,GAAkBqJ,EAAY3lC,EAAgB4lC,EAkFzD,SAASk6B,EAAiCnmG,GACtC,IAAIxD,EASJ,SAAS4pG,EAAiBpmG,GACtB,IAAIqmG,GAAe,EACfC,GAAyB,EAC7B,OAA+B,IAA3BC,GAAkBr+F,OAGtBlI,EAAIP,UAAUmI,SAAQ,SAAU2d,GAC5B,IAAIihF,EAAWD,GAAkB3hG,IAAI2gB,EAAKlnB,OACxB,KAAbknB,EAAK9gB,OAA8C+hG,IACpDH,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,uBAGpEzmG,EAAIsoE,QAAQ1gE,SAAQ,SAAUtP,GAC1BouG,GAA2B9+F,SAAQ,SAAU4+F,EAAUnoG,GAC/CsB,EAAiBtB,GAAOe,aAAe9G,IACvC+tG,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,2BAb7D,CAAEJ,aAAcA,EAAcC,uBAAwBA,GAb5DF,CAAiBpmG,GAAsCsmG,EAAyB9pG,EAAG8pG,uBAC5F,OAD+C9pG,EAAG6pG,cAgClD,SAASM,EAAuB3mG,GAC5B,IAAK,IAAI9F,EAAI,EAAGA,EAAI8F,EAAIP,UAAUpF,OAAQH,IAAK,CAC3C,IAAIu0C,EAAWzuC,EAAIP,UAAUvF,GACzBosG,IAIA73D,EAAShqC,OAAS,MAEtB,IAAI+hG,EAAWD,GAAkB3hG,IAAI6pC,EAASpwC,OAC1CmoG,IACA/3D,EAAShqC,OAA0B,KAAjBgqC,EAAShqC,MAA8C+hG,EAAS/hG,MAClFgqC,EAASlD,KAAOm6B,GAAa8gC,EAASj7D,MACtCkD,EAAS3zC,MAAQ0rG,EAAS1rG,OAGlC,GAAI4rG,GAA2Bx+F,KAAO,EAAG,CACrC,IAAI0+F,EAAc,IAAIt4D,IAAItuC,EAAIsoE,SAC9Bo+B,GAA2B9+F,SAAQ,SAAU4+F,EAAUnoG,GACnD,GAAIuoG,EAAYj2D,IAAIhxC,EAAiBtB,GAAOe,YAAa,CACrD,IAAIqvC,EAAW,CACXpwC,MAAOA,EACPoG,MAAO+hG,EAAS/hG,OAAS6hG,EAAyB,KAA0B,GAC5E/6D,KAAMm6B,GAAa8gC,EAASj7D,MAC5BzwC,MAAO0rG,EAAS1rG,MAChB4C,MAAOsC,EAAIP,UAAUpF,QAEzB2F,EAAIP,UAAUpE,KAAKozC,GACnBzuC,EAAIioE,eAAevE,GAASrlE,IAAUowC,OArDtDk4D,CADA3mG,EAAMA,EAAI5H,SAAQ,WAAc,OAAOorE,OAEhCxjE,GANIA,EAtFWmmG,CAAiCnmG,IAG3D,IA0KIimG,GAQAY,GACAC,GACAC,GApLAR,GAAoB,IAAIn4D,IACxBs4D,GAA6B,IAAIt4D,IACjC83D,GAAmB,IAAI93D,IAC3B,SAASy2D,GAAsB2B,GAE3B,IAAIvhG,EADJshG,GAAkB33D,IAAI43D,EAASnoG,MAAOmoG,GAER,mBAAnBA,EAASnoG,QAAyB4G,EAAgBtF,EAAiB6mG,EAASnoG,SAC/C,mBAA7B4G,EAAc7F,YACrBsnG,GAA2B93D,IAAI43D,EAASnoG,MAAOmoG,GAGvD,SAAS1B,GAA2BkC,EAAMC,GACtC,IAAIC,EAAcjhC,GAAkBiD,GAAkC+9B,IAClEpF,EAAc57B,GAAkBihC,EAAY92E,MAAM,GAAGvX,QAAQgiB,eACjEqrE,GAAiBt3D,IAAIo4D,EAAMnF,GAE/B,SAASkD,KACLwB,GAAkB3gE,QAClB8gE,GAA2B9gE,QAC3BsgE,GAAiBtgE,QAQrB,SAASmgE,GAA6B/lG,GAClC,GAA+B,IAA3BumG,GAAkBr+F,KAClB,OAAOlI,EAEX,IAAImnG,EAWJ,SAASC,EAA2CpnG,GAGhD,IAFA,IAAIqnG,EAAoC,GACpCC,EAAiB,KACZptG,EAAI,EAAGA,EAAI8F,EAAIowB,MAAM/1B,OAAQH,IAAK,CACvC,IAAImsE,EAAUrmE,EAAIowB,MAAMl2B,GACJ,EAAhBmsE,EAAQ5hE,QACR6iG,EAAiBjhC,GAEjBihC,GAAkC,KAAhBjhC,EAAQ5hE,OAC1B8hG,GAAkB51D,IAAI01B,EAAQ53B,SAASpwC,SACvCgpG,EAAkChsG,KAAKisG,EAAer3F,WACtDq3F,EAAiB,MAGzB,OAAOD,EAzBkCD,CAA2CpnG,GACxF,GAAsD,IAAlDmnG,EAAuC9sG,OACvC,OAAO2F,EAIXA,EAAMA,EAAI5H,SAAQ,WAAc,OAAOorE,MACvC,IAAK,IAAItpE,EAAI,EAAGA,EAAIitG,EAAuC9sG,OAAQH,IAC/DqtG,EAAgCvnG,EAAKmnG,EAAuCjtG,IAEhF,OAAO8F,EAiBP,SAASunG,EAAgC79B,EAAS89B,GAC9C,IAAK,IAAIttG,EAAIstG,EAAU,EAAGttG,EAAIwvE,EAAQt5C,MAAM/1B,OAAQH,IAAK,CACrD,IAAImsE,EAAUqD,EAAQt5C,MAAMl2B,GAC5B,GAAoB,EAAhBmsE,EAAQ5hE,MAER,OAEJ,GAAoB,KAAhB4hE,EAAQ5hE,MAA2C,CACnD,IAAIgqC,EAAW43B,EAAQ53B,SACnB+3D,EAAWD,GAAkB3hG,IAAI6pC,EAASpwC,OAC1CmoG,IACAngC,EAAQ5hE,OAAyB,KAAhB4hE,EAAQ5hE,MAA8C+hG,EAAS/hG,MAChFgqC,EAASlD,KAAOm6B,GAAa8gC,EAASj7D,MACtCkD,EAAS3zC,MAAQ0rG,EAAS1rG,UA4E9C,SAAS2qG,GAAuB11F,EAAMo9D,EAAYo1B,EAAU9kD,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GAC5F,IAAIp8B,EAAUt2D,EAAK/P,IAAIowB,MAAM+8C,GAE7B,OADAm1B,GAAmBvyF,EAAMs2D,EAASk8B,EAAU9kD,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GACxD,IAAhBp8B,EAAQ5hE,MACZ49D,GAAqBtyD,EAAMo9D,GAAYryE,WACvCuE,EAER,SAASqmG,GAAuB31F,EAAMo9D,EAAYo1B,EAAU9kD,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GAC5F,IAAIp8B,EAAUt2D,EAAK/P,IAAIowB,MAAM+8C,GAE7B,OADAm2B,GAAmBvzF,EAAMs2D,EAASk8B,EAAU9kD,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIyjD,EAAIC,GACxD,IAAhBp8B,EAAQ5hE,MACZ49D,GAAqBtyD,EAAMo9D,GAAYryE,WACvCuE,EAER,SAAS2lG,GAAwBj1F,GAC7B,OAAOi2F,GAAqBC,GAAYtiE,cAAeo/B,GAAoB,KAAM,CAAChzD,IAEtF,SAASk1F,GAAwBl1F,GAC7B,OAAOi2F,GAAqBC,GAAYriE,eAAgBo/B,GAAoB,KAAM,CAACjzD,IAEvF,SAASm1F,GAAiBn1F,GACtB,OAAOi2F,GAAqBC,GAAY7lE,QAAS6iC,GAAa,KAAM,CAAClzD,IAazE,SAASy0F,GAAoBz0F,EAAME,GAC/B62F,GAAe/2F,EACfg3F,GAAoB92F,EAExB,SAASm1F,GAAiBr1F,EAAME,EAAW0zC,EAAW6gB,GAElD,OADAggC,GAAoBz0F,EAAME,GACnB+1F,GAAqBC,GAAY7iC,YAAarzD,EAAK/P,IAAIojE,YAAa,KAAM,CAACrzD,EAAME,EAAW0zC,EAAW6gB,IAElH,SAAS6gC,GAAsBt1F,EAAMq0F,GACjC,GAAiB,IAAbr0F,EAAK+xD,MACL,MAAMJ,GAAmBukC,GAAYY,KAGzC,OADArC,GAAoBz0F,EAAM03F,GAAyB13F,EAAM,IAClDA,EAAK/P,IAAIqjE,kBAChB,SAASqkC,EAAuB33F,EAAME,EAAWsyF,GAE7C,IADA,IAAIplG,EAAS,GACJT,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpCS,EAAOT,EAAK,GAAKtC,UAAUsC,GAE/B,IAAI2pE,EAAUt2D,EAAK/P,IAAIowB,MAAMngB,GAU7B,OATkB,IAAdm0F,EACAuD,GAAwB53F,EAAMs2D,EAASk8B,EAAUplG,GAGjDyqG,GAAwB73F,EAAMs2D,EAASk8B,EAAUplG,GAEjC,MAAhBkpE,EAAQ5hE,OACR+/F,GAAoBz0F,EAAM03F,GAAyB13F,EAAME,IAErC,IAAhBo2D,EAAQ5hE,MACZ49D,GAAqBtyD,EAAMs2D,EAAQp2D,WAAWnV,WAC9CuE,IAlBiD0Q,GAqB7D,SAASu1F,GAAoBv1F,EAAMq0F,GAC/B,GAAiB,IAAbr0F,EAAK+xD,MACL,MAAMJ,GAAmBukC,GAAYY,KAGzC,OADArC,GAAoBz0F,EAAM83F,GAA0B93F,EAAM,IACnDA,EAAK/P,IAAIsjE,gBAChB,SAASwkC,EAAuB/3F,EAAME,EAAWsyF,GAE7C,IADA,IAAIplG,EAAS,GACJT,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpCS,EAAOT,EAAK,GAAKtC,UAAUsC,GAE/B,IAAI2pE,EAAUt2D,EAAK/P,IAAIowB,MAAMngB,GAU7B,OATkB,IAAdm0F,EACAuD,GAAwB53F,EAAMs2D,EAASk8B,EAAUplG,GAGjDyqG,GAAwB73F,EAAMs2D,EAASk8B,EAAUplG,GAEjC,EAAhBkpE,EAAQ5hE,OACR+/F,GAAoBz0F,EAAM83F,GAA0B93F,EAAME,IAEtC,IAAhBo2D,EAAQ5hE,MACZ49D,GAAqBtyD,EAAMs2D,EAAQp2D,WAAWnV,WAC9CuE,IAlB+C0Q,GAqB3D,SAAS43F,GAAwB53F,EAAMs2D,EAASk8B,EAAUwF,GAEtD,GADczF,GAAmB/nG,WAAM,EAAQgB,EAAS,CAACwU,EAAMs2D,EAASk8B,GAAWwF,IACtE,CACT,IAAI5qG,EAAsB,IAAbolG,EAA+BwF,EAAY,GAAKA,EAC7D,GAAoB,MAAhB1hC,EAAQ5hE,MAAmC,CAE3C,IADA,IAAIujG,EAAgB,GACX9tG,EAAI,EAAGA,EAAImsE,EAAQ93C,SAASl0B,OAAQH,IAAK,CAC9C,IAAIi5E,EAAU9M,EAAQ93C,SAASr0B,GAC3BY,EAAQqC,EAAOjD,GACC,EAAhBi5E,EAAQ1uE,QACRujG,GAlx0BehsG,EAkx0ByBm3E,EAAQvE,gBA/w0BzD,cAGX,SAASq5B,EAAoBtgG,GACzB,OAAOA,EAAMxB,QAAQsiB,IAAmB,WAEpC,IADA,IAAI7tB,EAAI,GACC8B,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpC9B,EAAE8B,GAAMtC,UAAUsC,GAEtB,MAAO,IAAM9B,EAAE,GAAGuqB,iBAVf8iF,CAAoBjsG,EAAKmK,QAAQ,QAAS,QAix0B7BuiB,GAA2B5tB,IAGvC,IAAIuvE,EAAQhE,EAAQ1yD,OAChB2N,EAAK6gD,GAAcpyD,EAAMs6D,EAAMp6D,WAAW60D,cAC9C,GAAKuF,EAAMxxD,QAAQ7c,KAMf,IAAK,IAAIiwB,KAAQ+7E,EAEA,OADTltG,EAAQktG,EAAc/7E,IAEtBlc,EAAKZ,SAAS4H,aAAauK,EAAI2K,EAAMnxB,GAGrCiV,EAAKZ,SAASsS,gBAAgBH,EAAI2K,QAV1Clc,EAAKZ,SAAS2tB,SAASxb,EAAI,YAAcpb,KAAKxF,UAAUsnG,EAAe,KAAM;;;;;;;;AA1x0B7F,IAAmChsG,EA2y0BnC,SAAS4rG,GAAwB73F,EAAMs2D,EAASk8B,EAAUplG,GACtDmmG,GAAmB/oG,WAAM,EAAQgB,EAAS,CAACwU,EAAMs2D,EAASk8B,GAAWplG,IAEzE,SAASsqG,GAAyB13F,EAAME,GACpC,IAAK,IAAI/V,EAAI+V,EAAW/V,EAAI6V,EAAK/P,IAAIowB,MAAM/1B,OAAQH,IAAK,CACpD,IAAImsE,EAAUt2D,EAAK/P,IAAIowB,MAAMl2B,GAC7B,GAAoB,MAAhBmsE,EAAQ5hE,OAAqC4hE,EAAQ93C,UAAY83C,EAAQ93C,SAASl0B,OAClF,OAAOH,EAGf,OAAO,KAEX,SAAS2tG,GAA0B93F,EAAME,GACrC,IAAK,IAAI/V,EAAI+V,EAAW/V,EAAI6V,EAAK/P,IAAIowB,MAAM/1B,OAAQH,IAAK,CACpD,IAAImsE,EAAUt2D,EAAK/P,IAAIowB,MAAMl2B,GAC7B,GAAqB,EAAhBmsE,EAAQ5hE,OAAkC4hE,EAAQ93C,UAAY83C,EAAQ93C,SAASl0B,OAChF,OAAOH,EAGf,OAAO,MA5HX,SAAW+rG,GACPA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAA2B,cAAI,GAAK,gBAChDA,EAAYA,EAA4B,eAAI,GAAK,iBACjDA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAyB,YAAI,GAAK,cALlD,CAMGA,KAAgBA,GAAc,KAwHjC,IAAId,GAA+B,WAC/B,SAASA,EAAcp1F,EAAME,GACzBlX,KAAKgX,KAAOA,EACZhX,KAAKkX,UAAYA,EACA,MAAbA,IACAlX,KAAKkX,UAAYA,EAAY,GAEjClX,KAAKstE,QAAUt2D,EAAK/P,IAAIowB,MAAMngB,GAG9B,IAFA,IAAIo6D,EAAQtxE,KAAKstE,QACb6hC,EAASn4F,EACNs6D,GAAiD,IAAzB,EAAdA,EAAM5lE,QACnB4lE,EAAQA,EAAM12D,OAElB,IAAK02D,EACD,MAAQA,GAAS69B,GACb79B,EAAQzF,GAAasjC,GACrBA,EAASA,EAAOv0F,OAGxB5a,KAAKsxE,MAAQA,EACbtxE,KAAKmvG,OAASA,EAqHlB,OAnHA/uG,OAAO4D,eAAeooG,EAAcvrG,UAAW,eAAgB,CAC3DgL,IAAK,WAED,OAAOu9D,GAAcppE,KAAKmvG,OAAQnvG,KAAKsxE,MAAMp6D,WAAW4qB,eAAiB9hC,KAAKgX,MAElFghB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeooG,EAAcvrG,UAAW,WAAY,CACvDgL,IAAK,WACD,OAAOmnE,GAAiBhzE,KAAKmvG,OAAQnvG,KAAKsxE,QAE9Ct5C,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeooG,EAAcvrG,UAAW,YAAa,CACxDgL,IAAK,WACD,OAAO7L,KAAKovG,aAAat/E,WAE7BkI,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeooG,EAAcvrG,UAAW,UAAW,CACtDgL,IAAK,WACD,OAAO7L,KAAKovG,aAAaniG,SAE7B+qB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeooG,EAAcvrG,UAAW,iBAAkB,CAC7DgL,IAAK,WACD,IAAI0qC,EAAS,GACb,GAAIv2C,KAAKsxE,MACL,IAAK,IAAInwE,EAAInB,KAAKsxE,MAAMp6D,UAAY,EAAG/V,GAAKnB,KAAKsxE,MAAMp6D,UAAYlX,KAAKsxE,MAAM9D,WAAYrsE,IAAK,CAC3F,IAAIkuG,EAAWrvG,KAAKmvG,OAAOloG,IAAIowB,MAAMl2B,GAChB,MAAjBkuG,EAAS3jG,OACT6qC,EAAOj0C,KAAK+sG,EAAS35D,SAASpwC,OAElCnE,GAAKkuG,EAAS7hC,WAGtB,OAAOj3B,GAEXve,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeooG,EAAcvrG,UAAW,aAAc,CACzDgL,IAAK,WACD,IAAI4gE,EAAa,GACjB,GAAIzsE,KAAKsxE,MAAO,CACZg+B,GAAkBtvG,KAAKmvG,OAAQnvG,KAAKsxE,MAAO7E,GAC3C,IAAK,IAAItrE,EAAInB,KAAKsxE,MAAMp6D,UAAY,EAAG/V,GAAKnB,KAAKsxE,MAAMp6D,UAAYlX,KAAKsxE,MAAM9D,WAAYrsE,IAAK,CAC3F,IAAIkuG,EAAWrvG,KAAKmvG,OAAOloG,IAAIowB,MAAMl2B,GAChB,MAAjBkuG,EAAS3jG,OACT4jG,GAAkBtvG,KAAKmvG,OAAQE,EAAU5iC,GAE7CtrE,GAAKkuG,EAAS7hC,YAGtB,OAAOf,GAEXz0C,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeooG,EAAcvrG,UAAW,yBAA0B,CACrEgL,IAAK,WACD,IAAI0lE,EA6DhB,SAASg+B,EAAgBv4F,GACrB,KAAOA,IAASi1D,GAAgBj1D,IAC5BA,EAAOA,EAAK4D,OAEhB,OAAI5D,EAAK4D,OACEwuD,GAAcpyD,EAAK4D,OAAQixD,GAAa70D,GAAME,WAElD,KApEcq4F,CAAgBvvG,KAAKovG,cAClC,OAAO79B,EAASA,EAAOxF,mBAAgBzlE,GAE3C0xB,YAAY,EACZC,cAAc,IAElB73B,OAAO4D,eAAeooG,EAAcvrG,UAAW,aAAc,CACzDgL,IAAK,WACD,OAA4B,EAArB7L,KAAKstE,QAAQ5hE,MAA2BogE,GAAW9rE,KAAKgX,KAAMhX,KAAKstE,SACtExB,GAAW9rE,KAAKmvG,OAAQnvG,KAAKsxE,QAErCt5C,YAAY,EACZC,cAAc,IAElBm0E,EAAcvrG,UAAU6nE,SAAW,SAAU5jD,GAEzC,IADA,IAII0qF,EACAC,EALArrG,EAAS,GACJT,EAAK,EAAGA,EAAKtC,UAAUC,OAAQqC,IACpCS,EAAOT,EAAK,GAAKtC,UAAUsC,GAIN,EAArB3D,KAAKstE,QAAQ5hE,OACb8jG,EAAaxvG,KAAKgX,KAAK/P,IACvBwoG,EAAezvG,KAAKstE,QAAQp2D,YAG5Bs4F,EAAaxvG,KAAKmvG,OAAOloG,IACzBwoG,EAAezvG,KAAKsxE,MAAMp6D,WAI9B,IAAIw4F,EAAkBC,GAAmBH,EAAYC,GACjDG,GAAuB,EACvBC,EAAa,WACb,IAAIpsG,EAEJ,QADAmsG,IAC4BF,GAChBjsG,EAAKqhB,EAAQviB,OAAOsB,KAAKrC,MAAMiC,EAAIjB,EAAS,CAACsiB,GAAU1gB,IAGxDqmE,IAGf+kC,EAAWnwG,QAAQwwG,GACfD,EAAsBF,IACtB5qF,EAAQviB,MAAM,qEACduiB,EAAQviB,MAAMf,MAAMsjB,EAAStiB,EAAS4B,MAGvCgoG,EAzIuB,GA2IlC,SAASuD,GAAmBh/B,EAASz5D,GAEjC,IADA,IAAIw4F,GAAmB,EACdvuG,EAAI,EAAGA,GAAK+V,EAAW/V,IAER,EADNwvE,EAAQt5C,MAAMl2B,GAChBuK,OACRgkG,IAGR,OAAOA,EAWX,SAASJ,GAAkBt4F,EAAMs2D,EAASb,GACtC,IAAK,IAAIqjC,KAAWxiC,EAAQb,WACxBA,EAAWqjC,GAAWpI,GAAc1wF,EAAMs2D,EAASA,EAAQb,WAAWqjC,IAG9E,SAAS7C,GAAqB1oE,EAAQ5hC,EAAIhD,EAAM+D,GAC5C,IAAIqsG,EAAYjC,GACZkC,EAAUjC,GACVkC,EAAejC,GACnB,IACIF,GAAiBvpE,EACjB,IAAI5Q,EAAShxB,EAAGnB,MAAM7B,EAAM+D,GAI5B,OAHAqqG,GAAeiC,EACfhC,GAAoBiC,EACpBnC,GAAiBiC,EACVp8E,EAEX,MAAOvxB,GACH,GA5wVR,SAAS8tG,EAAiB1nC,GACtB,QAAS7jD,GAAgB6jD,GA2wVjB0nC,CAAiB9tG,KAAO2rG,GACxB,MAAM3rG,EAEV,MAjyVR,SAAS+tG,EAAsB3nC,EAAKv7D,GAOhC,OANMu7D,aAAexiE,QAGjBwiE,EAAM,IAAIxiE,MAAMwiE,EAAI5lE,aAExB6lE,GAAiBD,EAAKv7D,GACfu7D,EA0xVG2nC,CAAsB/tG,EAAGguG,OAGvC,SAASA,KACL,OAAOrC,GAAe,IAAI3B,GAAc2B,GAAcC,IAAqB,KAE/E,IAAIlB,GAAuC,WACvC,SAASA,EAAsB1W,GAC3Bp2F,KAAKo2F,SAAWA,EAqBpB,OAnBA0W,EAAsBjsG,UAAUyV,eAAiB,SAAUwJ,EAASuwF,GAChE,OAAO,IAAIC,GAAetwG,KAAKo2F,SAAS9/E,eAAewJ,EAASuwF,KAEpEvD,EAAsBjsG,UAAUy8B,MAAQ,WAChCt9B,KAAKo2F,SAAS94D,OACdt9B,KAAKo2F,SAAS94D,SAGtBwvE,EAAsBjsG,UAAU8O,IAAM,WAC9B3P,KAAKo2F,SAASzmF,KACd3P,KAAKo2F,SAASzmF,OAGtBm9F,EAAsBjsG,UAAU0vG,kBAAoB,WAChD,OAAIvwG,KAAKo2F,SAASma,kBACPvwG,KAAKo2F,SAASma,oBAElBx1E,QAAQC,QAAQ,OAEpB8xE,EAvB+B,GAyBtCwD,GAAgC,WAChC,SAASA,EAAela,GACpBp2F,KAAKo2F,SAAWA,EAShBp2F,KAAKwwG,oBAAsBJ,GAC3BpwG,KAAK8S,KAAO9S,KAAKo2F,SAAStjF,KAkJ9B,OAhJAw9F,EAAezvG,UAAUupE,mBAAqB,SAAUxK,GACpD,OAAO5/D,KAAKwwG,oBAAoB5wC,IAEpC0wC,EAAezvG,UAAUikC,YAAc,SAAUtY,GAC7C,IAAIm4E,EAAYC,GAAep4E,IA9uEvC,SAASikF,EAAyBjkF,GAC9Bq4E,GAAuBhjD,OAAOr1B,EAAK00E,YA8uE/BuP,CAAyB9L,GACrBA,aAAqB1D,KACrB0D,EAAUhsC,UAAUr3D,OAAS,GAE7BtB,KAAKo2F,SAAStxD,aACd9kC,KAAKo2F,SAAStxD,YAAYtY,IAGlC8jF,EAAezvG,UAAUwmC,QAAU,WAC/BrnC,KAAKo2F,SAAS/uD,WAElBipE,EAAezvG,UAAUimB,cAAgB,SAAU7jB,EAAMm4B,GACrD,IAAI7S,EAAKvoB,KAAKo2F,SAAStvE,cAAc7jB,EAAMm4B,GACvCs1E,EAAW1wG,KAAKoqE,mBAAmB7hD,GACvC,GAAImoF,EAAU,CACV,IAAIC,EAAU,IAAIvP,GAAuB74E,EAAI,KAAMmoF,GACnDC,EAAQ1tG,KAAOA,EACf6hG,GAAe6L,GAEnB,OAAOpoF,GAEX+nF,EAAezvG,UAAUwtC,cAAgB,SAAUtsC,GAC/C,IAAIulD,EAAUtnD,KAAKo2F,SAAS/nD,cAActsC,GACtC2uG,EAAW1wG,KAAKoqE,mBAAmB9iB,GAIvC,OAHIopD,GACA5L,GAAe,IAAI7D,GAAoB35C,EAAS,KAAMopD,IAEnDppD,GAEXgpD,EAAezvG,UAAUukC,WAAa,SAAUrjC,GAC5C,IAAI8K,EAAO7M,KAAKo2F,SAAShxD,WAAWrjC,GAChC2uG,EAAW1wG,KAAKoqE,mBAAmBv9D,GAIvC,OAHI6jG,GACA5L,GAAe,IAAI7D,GAAoBp0F,EAAM,KAAM6jG,IAEhD7jG,GAEXyjG,EAAezvG,UAAUkmB,YAAc,SAAUnM,EAAQinF,GACrD,IAAI8O,EAAU/L,GAAehqF,GACzBg2F,EAAehM,GAAe/C,GAC9B8O,GAAWC,GAAgBD,aAAmBvP,IAC9CuP,EAAQtP,SAASuP,GAErB5wG,KAAKo2F,SAASrvE,YAAYnM,EAAQinF,IAEtCyO,EAAezvG,UAAU4mC,aAAe,SAAU7sB,EAAQinF,EAAUD,GAChE,IAAI+O,EAAU/L,GAAehqF,GACzBg2F,EAAehM,GAAe/C,GAC9BgP,EAAajM,GAAehD,GAC5B+O,GAAWC,GAAgBD,aAAmBvP,IAC9CuP,EAAQlpE,aAAaopE,EAAYD,GAErC5wG,KAAKo2F,SAAS3uD,aAAa7sB,EAAQinF,EAAUD,IAEjD0O,EAAezvG,UAAUmnB,YAAc,SAAUpN,EAAQk2F,GACrD,IAAIH,EAAU/L,GAAehqF,GACzBg2F,EAAehM,GAAekM,GAC9BH,GAAWC,GAAgBD,aAAmBvP,IAC9CuP,EAAQ3oF,YAAY4oF,GAExB5wG,KAAKo2F,SAASpuE,YAAYpN,EAAQk2F,IAEtCR,EAAezvG,UAAUm+B,kBAAoB,SAAU6mE,EAAgBkL,GACnE,IAAIxoF,EAAKvoB,KAAKo2F,SAASp3D,kBAAkB6mE,EAAgBkL,GACrDL,EAAWN,KAIf,OAHIM,GACA5L,GAAe,IAAI1D,GAAuB74E,EAAI,KAAMmoF,IAEjDnoF,GAEX+nF,EAAezvG,UAAUmd,aAAe,SAAUuK,EAAItlB,EAAMlB,EAAOq5B,GAC/D,IAAIu1E,EAAU/L,GAAer8E,GACzBooF,GAAWA,aAAmBvP,KAE9BuP,EAAQloF,WADO2S,EAAYA,EAAY,IAAMn4B,EAAOA,GACrBlB,GAEnC/B,KAAKo2F,SAASp4E,aAAauK,EAAItlB,EAAMlB,EAAOq5B,IAEhDk1E,EAAezvG,UAAU6nB,gBAAkB,SAAUH,EAAItlB,EAAMm4B,GAC3D,IAAIu1E,EAAU/L,GAAer8E,GACzBooF,GAAWA,aAAmBvP,KAE9BuP,EAAQloF,WADO2S,EAAYA,EAAY,IAAMn4B,EAAOA,GACrB,MAEnCjD,KAAKo2F,SAAS1tE,gBAAgBH,EAAItlB,EAAMm4B,IAE5Ck1E,EAAezvG,UAAUyzD,SAAW,SAAU/rC,EAAItlB,GAC9C,IAAI0tG,EAAU/L,GAAer8E,GACzBooF,GAAWA,aAAmBvP,KAC9BuP,EAAQh4E,QAAQ11B,IAAQ,GAE5BjD,KAAKo2F,SAAS9hC,SAAS/rC,EAAItlB,IAE/BqtG,EAAezvG,UAAU2zD,YAAc,SAAUjsC,EAAItlB,GACjD,IAAI0tG,EAAU/L,GAAer8E,GACzBooF,GAAWA,aAAmBvP,KAC9BuP,EAAQh4E,QAAQ11B,IAAQ,GAE5BjD,KAAKo2F,SAAS5hC,YAAYjsC,EAAItlB,IAElCqtG,EAAezvG,UAAU8zD,SAAW,SAAUpsC,EAAI+gB,EAAOvnC,EAAO2J,GAC5D,IAAIilG,EAAU/L,GAAer8E,GACzBooF,GAAWA,aAAmBvP,KAC9BuP,EAAQz9F,OAAOo2B,GAASvnC,GAE5B/B,KAAKo2F,SAASzhC,SAASpsC,EAAI+gB,EAAOvnC,EAAO2J,IAE7C4kG,EAAezvG,UAAU4zD,YAAc,SAAUlsC,EAAI+gB,EAAO59B,GACxD,IAAIilG,EAAU/L,GAAer8E,GACzBooF,GAAWA,aAAmBvP,KAC9BuP,EAAQz9F,OAAOo2B,GAAS,MAE5BtpC,KAAKo2F,SAAS3hC,YAAYlsC,EAAI+gB,EAAO59B,IAEzC4kG,EAAezvG,UAAUsd,YAAc,SAAUoK,EAAItlB,EAAMlB,GACvD,IAAI4uG,EAAU/L,GAAer8E,GACzBooF,GAAWA,aAAmBvP,KAC9BuP,EAAQ1a,WAAWhzF,GAAQlB,GAE/B/B,KAAKo2F,SAASj4E,YAAYoK,EAAItlB,EAAMlB,IAExCuuG,EAAezvG,UAAUgrD,OAAS,SAAU5mD,EAAQ2lD,EAAWrgB,GAC3D,GAAsB,iBAAXtlC,EAAqB,CAC5B,IAAI0rG,EAAU/L,GAAe3/F,GACzB0rG,GACAA,EAAQh4C,UAAUr2D,KAAK,IAAI0+F,GAAmBp2C,EAAWrgB,IAGjE,OAAOvqC,KAAKo2F,SAASvqC,OAAO5mD,EAAQ2lD,EAAWrgB,IAEnD+lE,EAAezvG,UAAUorB,WAAa,SAAUO,GAC5C,OAAOxsB,KAAKo2F,SAASnqE,WAAWO,IAEpC8jF,EAAezvG,UAAUkoB,YAAc,SAAUyD,GAC7C,OAAOxsB,KAAKo2F,SAASrtE,YAAYyD,IAErC8jF,EAAezvG,UAAUkjC,SAAW,SAAUvX,EAAMzqB,GAChD,OAAO/B,KAAKo2F,SAASryD,SAASvX,EAAMzqB,IAEjCuuG,EA9JwB,GAwM/BU,GAAkC,SAAUtrF,GAE5C,SAASsrF,EAAiB/9B,EAAYI,EAAsB49B,GACxD,IAAI1lE,EAGJ7lB,EAAOnkB,KAAKvB,OAASA,KAIrB,OAHAurC,EAAM0nC,WAAaA,EACnB1nC,EAAM8nC,qBAAuBA,EAC7B9nC,EAAM0lE,oBAAsBA,EACrB1lE,EAUX,OAnBA7qC,EAAUswG,EAAkBtrF,GAW5BsrF,EAAiBnwG,UAAUC,OAAS,SAAUwsC,GAC1Cg+D,KAIA,IAAIrkG,EAhCZ,SAASiqG,EAAwBjqG,GAC7B,IAAIP,EAAYnG,MAAMs9C,KAAK52C,EAAIP,WAC3B6oE,EAAUhvE,MAAMs9C,KAAK52C,EAAIsoE,SACzBL,EAAiB,GACrB,IAAK,IAAInpE,KAAOkB,EAAIioE,eAChBA,EAAenpE,GAAOkB,EAAIioE,eAAenpE,GAE7C,MAAO,CACH1G,QAAS4H,EAAI5H,QACboV,MAAOxN,EAAIwN,MACX/N,UAAWA,EACX6oE,QAASA,EACTL,eAAgBA,GAoBNgiC,CAAwBhkC,GAAkBltE,KAAKixG,sBACzD,OAAOznC,GAASI,kBAAkB5pE,KAAKizE,WAAY3lC,GAAkBqL,GAASC,KAAM54C,KAAKqzE,qBAAsBpsE,IAE5G+pG,EApB0B,CAqBnCpjG;;;;;;;;;;;;;;;AAwEFtO,EAAQ6gD,6BAA+BA,GACvC7gD,EAAQ8yF,uBAAyBA,GACjC9yF,EAAQqyF,OAASA,GACjBryF,EAAQyxF,gBAAkBA,GAC1BzxF,EAAQ0xF,sBAAwBA,GAChC1xF,EAAQqmG,kBAAoBA,GAC5BrmG,EAAQo+F,eAAiBA,GACzBp+F,EAAQqG,UAAYA,EACpBrG,EAAQ20F,iBAAmBA,GAC3B30F,EAAQ6xG,uBAp23BqB,CACzBluG,KAAM,mBAo23BV3D,EAAQovC,kBAAoBA,GAC5BpvC,EAAQk0F,SAAWA,GACnBl0F,EAAQ40F,gBAAkBA,GAC1B50F,EAAQ0wF,UAAYA,GACpB1wF,EAAQy/D,iBAAmBA,GAC3Bz/D,EAAQ+/D,yBAA2BA,GACnC//D,EAAQw/D,aAAeA,GACvBx/D,EAAQihD,aAAeA,GACvBjhD,EAAQ8gD,gBAAkBA,GAC1B9gD,EAAQozF,sBAAwBA,GAChCpzF,EAAQ2lG,aAAeA,GACvB3lG,EAAQ0hG,mBAAqBA,GAC7B1hG,EAAQ0lG,UAAYA,GACpB1lG,EAAQ2hE,sBAAwBA,GAChC3hE,EAAQ+uF,UAAYA,GACpB/uF,EAAQqsC,WAAaA,GACrBrsC,EAAQyhG,gBAAkBA,GAC1BzhG,EAAQylB,aAAeA,GACvBzlB,EAAQ6lF,aAAeA,GACvB7lF,EAAQoG,KAAOA,EACfpG,EAAQgxF,YAAcA,GACtBhxF,EAAQkxF,aAAeA,GACvBlxF,EAAQqL,SAAWA,GACnBrL,EAAQ+F,OAASA,EACjB/F,EAAQ00C,WAAaA,GACrB10C,EAAQmL,eAAiBA,GACzBnL,EAAQq5C,SAAWA,GACnBr5C,EAAQ6wF,MAAQA,GAChB7wF,EAAQ6nE,gBAAkBA,GAC1B7nE,EAAQmoE,gBAAkBA,GAC1BnoE,EAAQohF,UAAY+R,GACpBnzF,EAAQuzF,6BAA+BA,GACvCvzF,EAAQ8xG,iBA733Be,CACnBnuG,KAAM,oBA633BV3D,EAAQsxF,SAAWA,GACnBtxF,EAAQsO,gBAAkBA,GAC1BtO,EAAQigG,sBAAwBA,GAChCjgG,EAAQqO,YAAcA,GACtBrO,EAAQw8F,aAAeA,GACvBx8F,EAAQ+0F,OAASA,GACjB/0F,EAAQiG,SAAWA,EACnBjG,EAAQ+wF,OAASA,GACjB/wF,EAAQ+yF,iBAAmBA,GAC3B/yF,EAAQ6yF,YAAcA,GACtB7yF,EAAQ4yF,qBAAuBA,GAC/B5yF,EAAQwwF,KAAOA,GACfxwF,EAAQ08F,YAAcA,GACtB18F,EAAQ89C,MAAQA,GAChB99C,EAAQ2mF,UAAYA,GACpB3mF,EAAQg+C,mBAAqBA,GAC7Bh+C,EAAQ47C,cAAgBA,GACxB57C,EAAQ4gE,UAAYA,GACpB5gE,EAAQ0gE,iBAAmBA,GAC3B1gE,EAAQg9C,0BAA4BA,GACpCh9C,EAAQkhE,UAAYA,GACpBlhE,EAAQkG,KAAOA,EACflG,EAAQ88D,aAAeA,GACvB98D,EAAQmG,SAAWA,EACnBnG,EAAQ0gG,uBAAyBA,GACjC1gG,EAAQsgG,6BAA+BA,GACvCtgG,EAAQqzF,aAAeA,GACvBrzF,EAAQszF,oBAAsBA,GAC9BtzF,EAAQwsC,YAAcA,GACtBxsC,EAAQ44F,YAAcA,GACtB54F,EAAQw6F,oBAAsBA,GAC9Bx6F,EAAQuvC,KAAOA,GACfvvC,EAAQmhE,QAAUA,GAClBnhE,EAAQ2gE,QAAUA,GAClB3gE,EAAQmhD,UAAYA,GACpBnhD,EAAQkhD,aAAeA,GACvBlhD,EAAQitC,iBAAmBA,GAC3BjtC,EAAQsqC,QAAUk3D,GAClBxhG,EAAQ6jD,aAAeA,GACvB7jD,EAAQ+xG,iBAtoGR,SAASA,GAAiBC,GACtB,OAAOA,EAASzpG,KAAI,SAAU0gB,GAAM,OAAOA,EAAGq3C,kBAsoGlDtgE,EAAQm9F,eAAiBA,GACzBn9F,EAAQy8F,eAAiBA,GACzBz8F,EAAQ48F,sBAAwBA,GAChC58F,EAAQiH,iBAAmBA,EAC3BjH,EAAQiyG,gBAtiIR,SAASA,KACDvZ,KAAcA,GAAU1+D,WACxB0+D,GAAU3wD,WAqiIlB/nC,EAAQkyG,eAjv3BR,SAASA,KACL,GAAInrF,GACA,MAAM,IAAIrgB,MAAM,iDAEpBogB,IAAW,GA8u3Bf9mB,EAAQkJ,WAAaA,EACrBlJ,EAAQmyG,aAAe7M,GACvBtlG,EAAQqgG,iBAAmBA,GAC3BrgG,EAAQi9F,YAAcA,GACtBj9F,EAAQ0M,OAASA,GACjB1M,EAAQgnB,UAAYA,GACpBhnB,EAAQ4lG,aAAeA,GACvB5lG,EAAQoJ,kBAAoBA,EAC5BpJ,EAAQoyG,qBAzrIR,SAASA,GAAqBngE,GAC1ByoD,GAAqBzoD,GAyrIzBjyC,EAAQqyG,0BAA4B9V,GACpCv8F,EAAQsyG,wBAA0BhgB,GAClCtyF,EAAQuyG,iCAAmCvyC,GAC3ChgE,EAAQwyG,wDAA0Dxe,GAClEh0F,EAAQyyG,uDAAyD3e,GACjE9zF,EAAQ0yG,wCAA0C9e,GAClD5zF,EAAQ2yG,uCAAyCjf,GACjD1zF,EAAQ4yG,kBAAoBnzC,GAC5Bz/D,EAAQ6yG,SAAW7f,GACnBhzF,EAAQ8yG,mBAjjSgB,QAkjSxB9yG,EAAQ+yG,aAvtVY,GAwtVpB/yG,EAAQgzG,WAvtVQ,GAwtVhBhzG,EAAQizG,0BAA4B95D,GACpCn5C,EAAQkzG,gBAAkBh+D,GAC1Bl1C,EAAQmzG,uBAAyBt4C,GACjC76D,EAAQozG,aAAe/oG,EACvBrK,EAAQqzG,YAAc9oG,GACtBvK,EAAQszG,eAAiBroG,GACzBjL,EAAQuzG,YAAc1rG,EACtB7H,EAAQwzG,YAAc7oG,GACtB3K,EAAQyzG,aAAehpG,GACvBzK,EAAQ0zG,aAAejsG,EACvBzH,EAAQ2zG,uCAAyC79B,GACjD91E,EAAQ4zG,WAAan/E,GACrBz0B,EAAQ6zG,iBAAmB1wB,GAC3BnjF,EAAQ8zG,YAAcnb,GACtB34F,EAAQ+zG,wBAA0BlkE,GAClC7vC,EAAQg0G,yBAA2Bp9B,GACnC52E,EAAQi0G,qBAAuBp8B,GAC/B73E,EAAQk0G,oBAAsBpxB,GAC9B9iF,EAAQm0G,+CAAiD7kE,GACzDtvC,EAAQo0G,qCAAuCjjB,GAC/CnxF,EAAQq0G,qCAAuCjjB,GAC/CpxF,EAAQs0G,sCAAwC1/D,GAChD50C,EAAQu0G,oCAAsC/iB,GAC9CxxF,EAAQw0G,gCAAkCnjB,GAC1CrxF,EAAQy0G,uCAAyCj0C,GACjDxgE,EAAQ00G,gCA59J4B,EA69JpC10G,EAAQ20G,qCAAuC7zC,GAC/C9gE,EAAQ40G,wCAA0CnsC,GAClDzoE,EAAQ60G,8CAAgDjsC,GACxD5oE,EAAQ80G,eAAiBrnF,GACzBztB,EAAQ+0G,gBAAkBxmF,GAC1BvuB,EAAQg1G,cAAgBprF,GACxB5pB,EAAQi1G,iCAAmCtuF,GAC3C3mB,EAAQk1G;;;;;;;;AA1+ER,SAASlM,GAAU58F,EAAO4gE,EAAmBoB,EAAgBF,EAAYnD,EAAaoqC,GAClF/oG,GAAS,EACT,IAAIjI,EAAK4oE,GAAuBC,GAEhC,MAAO,CAEHp1D,WAAY,EACZ0D,OAAQ,KACRoqB,aAAc,KACdzrB,cAAe,EACf+6D,aAAc,EAEd5oE,MAAOA,EACP0oE,YAAa,EACbhC,WAAY,EACZmC,iBAAkB,EAClBC,oBAAqB,EACrBjI,eAfiE9oE,EAAG8oE,eAgBpEC,gBAhBkI/oE,EAAG+oE,gBAiBrIC,WAjBiGhpE,EAAGgpE,WAkBpGiB,eAAgBA,EAChBF,WAAYA,EACZh4C,SAAU,GACVy4C,aAAc,EACd58D,QAAS,GACTyO,QAAS,CACLgmF,GAAI,KACJ7iG,KAAM,KACN0a,MAAO,KACP9M,SA1BO4jG,EAAkBvnC,GAAkBunC,GAAmB,KA2B9D5jC,kBAAmB,KACnB/uC,cAAe,KACfirC,sBAAuB,KACvB0I,gBAAiB,KACjBD,aAAc,KACdnL,YAAaA,GAAeI,IAEhC/0B,SAAU,KACV7oC,KAAM,KACN4nE,MAAO,KACP1G,UAAW,OAm8EnBzuE,EAAQo1G,6BAl43BR,SAASC,GAA4BC,GACjC,OAAO,IAAInvF,GAAamvF,IAk43B5Bt1G,EAAQu1G,oCAn13BR,SAASC,GAAmCC,GACxC,OAAO,IAAIhvF,GAAoBgvF,IAm13BnCz1G,EAAQ01G,+BA523BR,SAASC,GAA8BC,GACnC,OAAO,IAAIrvF,GAAeqvF,IA423B9B51G,EAAQ61G,8BAz33BR,SAASC,GAA6BC,GAClC,OAAO,IAAIzvF,GAAcyvF,IAy33B7B/1G,EAAQg2G,4BAl23BR,SAASC,GAA2BC,GAChC,OAAO,IAAI1vF,GAAY0vF,IAk23B3Bl2G,EAAQm2G,KAt7UR,SAASC,GAAuBtjF,EAAUqtC,EAAe2Q,EAAgBh/D,EAAQC,EAASN,GACtF,OAAO,IAAIs/D,GAAkBj+C,EAAUqtC,EAAe2Q,EAAgBh/D,EAAQC,EAASN,IAs7U3FzR,EAAQq2G,gBA3QR,SAAS5rC,KAEL,OADAuhC,KACO9hC,GAASO,kBA0QpBzqE,EAAQs2G,0CAA4C9zD,GACpDxiD,EAAQu2G,KAvQR,SAASC,GAAsB5+D,EAAcg8B,EAAqB6iC,GAC9D,OAAO,IAAI/E,GAAiB95D,EAAcg8B,EAAqB6iC,IAuQnEz2G,EAAQ02G,kBAAoB/oB,GAC5B3tF,EAAQ22G,kBAAoBjoB,GAC5B1uF,EAAQ42G,iBAAmBxqB,GAC3BpsF,EAAQ62G,qBAAuBxqB,GAC/BrsF,EAAQ82G,mCAAqCrb,GAC7Cz7F,EAAQ+2G,aAAe1mB,GACvBrwF,EAAQg3G,gBAAkBxhE,GAC1Bx1C,EAAQi3G,KA5lWR,SAASC,GAAoBpyG,GACzB,MAAO,CACH6O,GANyB,cAOzBC,OAAQ9O,EAAO8O,OACfH,cAAe3O,EAAO2O,cACtBD,KAAM1O,EAAO0O,OAwlWrBxT,EAAQm3G,wBAA0B7uC,GAClCtoE,EAAQo3G,wBAA0B7uC,GAClCvoE,EAAQq3G,eAAiB/rE,GACzBtrC,EAAQs3G,cAAgBn0D,GACxBnjD,EAAQu3G,KA3hUR,SAAS96F,GAAaq4D,EAAY1oE,EAAO6gE,EAAgBiB,EAAYrpE,EAAMquC,EAAMtvC,EAAOmO,GACpF,IAAImkB,EAAW,GACf,GAAItyB,EACA,IAAK,IAAImsB,KAAQnsB,EAAO,CACpB,IAAIO,EAAKvB,EAAOgB,EAAMmsB,GAAO,GAC7BmG,EADgD/xB,EAAG,IAC1B,CACrBiI,MAAO,EACPzI,KAAMosB,EACNwmD,gBAJqEpyE,EAAG,GAKxEqiG,GAAI,KACJU,gBAAiB,KACjB7hD,OAAQ,MAIpB,IAAImyD,EAAa,GACjB,GAAIzlG,EACA,IAAK,IAAIhN,KAAYgN,EACjBylG,EAAWx0G,KAAK,CAAEuE,KAAM,EAAyBxC,SAAUA,EAAUY,OAAQ,KAAM2lD,UAAWv5C,EAAQhN,KAI9G,OAAO4qE,GAAKmF,EADZ1oE,GAAS,MACsB6gE,EAAgBiB,EAAYrpE,EAAMA,EAAMquC,EAAMhd,EAAUshF,IAsgU3Fx3G,EAAQy3G,KAt9ER,SAAS3P,GAAWhzB,EAAY1oE,EAAO4gE,EAAmBoB,EAAgBF,EAAYwpC,EAAkBC,EAAYzhF,EAAUnkB,EAASg5D,EAAavoC,EAAeirC,GAC/J,IAAItpE,OACe,IAAfwzG,IAAyBA,EAAa,IACrC5sC,IACDA,EAAcI,IAElB,IAAI5gD,EAAKwiD,GAAuBC,GAAoBC,EAAiB1iD,EAAG0iD,eAAgBE,EAAa5iD,EAAG4iD,WAAYD,EAAkB3iD,EAAG2iD,gBACrIs5B,EAAK,KACL7iG,EAAO,KACP+zG,IACkDlR,GAAlDriG,EAAKvB,EAAOosE,GAAe0oC,GAAmB,IAAY,GAAI/zG,EAAOQ,EAAG,IAE5E+xB,EAAWA,GAAY,GAEvB,IADA,IAAI0hF,EAAc,GACT/1G,EAAI,EAAGA,EAAIq0B,EAASl0B,OAAQH,IAAK,CACtC,IAAI2oB,EAAK5nB,EAAOszB,EAASr0B,GAAI,GAAI8sE,EAAenkD,EAAG,GAAgCqtF,EAA0BrtF,EAAG,GAC5Go1E,EAAKh9F,EAAOosE,GAD4DxkD,EAAG,IAC3B,GAAIstF,EAAOlY,EAAG,GAAIpmC,EAASomC,EAAG,GAC9EsH,OAAkBlgG,EAClBq+C,OAASr+C,EACb,OAAuB,GAAf2nE,GACJ,KAAK,EACDtpB,EAASwyD,EACT,MACJ,KAAK,EACL,KAAK,EACD3Q,EAAkB2Q,EAG1BD,EAAY/1G,GACR,CAAEuK,MAAOuiE,EAAc63B,GAAIsR,EAAMn0G,KAAM61D,EAAQ+c,gBAAiB/c,EAAQ0tC,gBAAiBA,EAAiB7hD,OAAQA,GAE1HtzC,EAAUA,GAAW,GACrB,IAAIylG,EAAa,GACjB,IAAS31G,EAAI,EAAGA,EAAIkQ,EAAQ/P,OAAQH,IAAK,CACrC,IAAIg+F,EAAKj9F,EAAOmP,EAAQlQ,GAAI,GAC5B21G,EAAW31G,GACP,CAAE0F,KAAM,EAAuB5B,OAFMk6F,EAAG,GAEOv0C,UAFSu0C,EAAG,GAEU96F,SAAU,MAGvF,IAAIsZ,GADJs5F,EAAaA,GAAc,IACJpvG,KAAI,SAAUpE,GACjC,IAAIomB,EAAK3nB,EAAOuB,EAAI,GAA8B1B,EAAQ8nB,EAAG,GACzDC,EAAK5nB,EAAOosE,GAD2BzkD,EAAG,IACI,GAClD,MAAO,CADoDC,EAAG,GAAWA,EAAG,GAC1D/nB,MAOtB,OALAgrE,EA/qRJ,SAASsqC,EAAqBxwG,GAC1B,GAAIA,GAdyB,gBAcjBA,EAAKoM,GAAmC,CAEhD,IAAIqkG,EAAmC,MAAtBzwG,EAAKkM,eAAyBlM,EAAKkM,gBAAkBzT,EAAQwJ,kBAAkByuG,MAC5F1wG,EAAKqM,OAAO5R,QAAUlB,OAAO6wC,KAAKpqC,EAAKiM,MAAMxR,OAE7CuF,EAAKoM,GADLqkG,EACU,IAAM1sC,KAlBC,UA2BzB,OAHI/jE,GAxBqB,YAwBbA,EAAKoM,KACbpM,EAAO,MAEJA,GAAQ,KAgqRSwwG,CAAqBtqC,GACzCjrC,IACAp2B,GAAS,UAGN,CAEHwL,WAAY,EACZ0D,OAAQ,KACRoqB,aAAc,KACdzrB,cAAe,EACf+6D,aAAc,EAEdF,WAAYA,EACZ1oE,MAVJA,GAAS,EAWL0mE,WAAY,EACZmC,iBAAkB,EAClBC,oBAAqB,EACrBjI,eAAgBA,EAChBC,gBAAiBA,EACjBC,WAAYA,EACZiB,eAAgBA,EAChBF,WAAYA,EACZh4C,SAAU0hF,EACVjpC,aAAcM,GAAiB2oC,GAC/B7lG,QAASylG,EACTh3F,QAAS,CACLgmF,GAAIA,EACJ7iG,KAAMA,EACN0a,MAAOA,EACP9M,SAAU,KAEVggE,kBAAmB,KACnB/uC,cAAeA,GAAiB,KAChCirC,sBAAuBA,EACvB0I,gBAAiB,KACjBD,aAAc,KACdnL,YAAaA,GAAeI,IAEhC/0B,SAAU,KACV7oC,KAAM,KACN4nE,MAAO,KACP1G,UAAW,OAi4EnBzuE,EAAQk4G,gBAAkB1/B,GAC1Bx4E,EAAQm4G,yCAA2CpsB,GACnD/rF,EAAQo4G,mCAAqCvnC,GAC7C7wE,EAAQq4G,gBArrFR,SAASC,GAA0BC,GAC/B,OAAO,MAqrFXv4G,EAAQw4G,yBAA2BtU,GACnClkG,EAAQy4G,eAAiB1/C,GACzB/4D,EAAQ04G,gBAAkBz/C,GAC1Bj5D,EAAQ24G,kBAAoBrxG,EAC5BtH,EAAQ44G,aAAetoF,GACvBtwB,EAAQ64G,uBAptSR,SAASC,GAAsBrgC,GAE3B,OADWD,GAAeC,GACdz4E,EAAQ+4E,iBAAiBggC,eAAiB,MAmtS1D/4G,EAAQg5G,qBAAuBlgC,GAC/B94E,EAAQi5G,6BAA+B/Y,GACvClgG,EAAQk5G,2BAA6BryF,GACrC7mB,EAAQm5G,QAAUnvG,EAClBhK,EAAQo5G,sBAAwBpN,GAChChsG,EAAQq5G,mBAt0VR,SAASC,GAAkBC,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3G,OAAQnB,GACJ,KAAK,EACD,OAAOC,EAAKtqC,GAAkBuqC,GAAMC,EACxC,KAAK,EACD,OAAOF,EAAKtqC,GAAkBuqC,GAAMC,EAAKxqC,GAAkByqC,GAAMC,EACrE,KAAK,EACD,OAAOJ,EAAKtqC,GAAkBuqC,GAAMC,EAAKxqC,GAAkByqC,GAAMC,EAAK1qC,GAAkB2qC,GACpFC,EACR,KAAK,EACD,OAAON,EAAKtqC,GAAkBuqC,GAAMC,EAAKxqC,GAAkByqC,GAAMC,EAAK1qC,GAAkB2qC,GACpFC,EAAK5qC,GAAkB6qC,GAAMC,EACrC,KAAK,EACD,OAAOR,EAAKtqC,GAAkBuqC,GAAMC,EAAKxqC,GAAkByqC,GAAMC,EAAK1qC,GAAkB2qC,GACpFC,EAAK5qC,GAAkB6qC,GAAMC,EAAK9qC,GAAkB+qC,GAAMC,EAClE,KAAK,EACD,OAAOV,EAAKtqC,GAAkBuqC,GAAMC,EAAKxqC,GAAkByqC,GAAMC,EAAK1qC,GAAkB2qC,GACpFC,EAAK5qC,GAAkB6qC,GAAMC,EAAK9qC,GAAkB+qC,GAAMC,EAAKhrC,GAAkBirC,GAAMC,EAC/F,KAAK,EACD,OAAOZ,EAAKtqC,GAAkBuqC,GAAMC,EAAKxqC,GAAkByqC,GAAMC,EAAK1qC,GAAkB2qC,GACpFC,EAAK5qC,GAAkB6qC,GAAMC,EAAK9qC,GAAkB+qC,GAAMC,EAAKhrC,GAAkBirC,GACjFC,EAAKlrC,GAAkBmrC,GAAMC,EACrC,KAAK,EACD,OAAOd,EAAKtqC,GAAkBuqC,GAAMC,EAAKxqC,GAAkByqC,GAAMC,EAAK1qC,GAAkB2qC,GACpFC,EAAK5qC,GAAkB6qC,GAAMC,EAAK9qC,GAAkB+qC,GAAMC,EAAKhrC,GAAkBirC,GACjFC,EAAKlrC,GAAkBmrC,GAAMC,EAAKprC,GAAkBqrC,GAAMC,EAClE,KAAK,EACD,OAAOhB,EAAKtqC,GAAkBuqC,GAAMC,EAAKxqC,GAAkByqC,GAAMC,EAAK1qC,GAAkB2qC,GACpFC,EAAK5qC,GAAkB6qC,GAAMC,EAAK9qC,GAAkB+qC,GAAMC,EAAKhrC,GAAkBirC,GACjFC,EAAKlrC,GAAkBmrC,GAAMC,EAAKprC,GAAkBqrC,GAAMC,EAAKtrC,GAAkBurC,GAAMC,EAC/F,QACI,MAAM,IAAIh0G,MAAM,8CAwyV5B1G,EAAQ26G,aA90VR,SAASC,GAAYrB,EAAYsB,GAE7B,IADA,IAAIxmF,EAAS,GACJxyB,EAAI,EAAGA,EAAiB,EAAb03G,EAAgB13G,GAAQ,EACxCwyB,EAASA,EAASwmF,EAAeh5G,GAAKqtE,GAAkB2rC,EAAeh5G,EAAI,IAE/E,OAAOwyB,EAASwmF,EAA4B,EAAbtB,IA00VnCv5G,EAAQ86G,4BAA8Bze,GACtCr8F,EAAQ+6G,kCAho9BR,SAASC,GAAiCC,GACtC,OAAkC,MAA3BA,GACHA,IAA4Bj7G,EAAQ+N,wBAAwB1B,SA+n9BpErM,EAAQk7G,oBAAsB73D,GAC9BrjD,EAAQm7G,cAAgBhwD,GACxBnrD,EAAQo7G,WAAalwD,GACrBlrD,EAAQq7G,aAlhK4B,EAmhKpCr7G,EAAQs7G,gBAAkBt4D,GAC1BhjD,EAAQu7G,eAAiB73G,EACzB1D,EAAQw7G,WAAal0D,GACrBtnD,EAAQ4K,KA/wVR,SAAS6wG,GAAUr0G,GAIf,IAHA,IAAIwoE,EAAiB,GACjBK,EAAU,GACV96D,EAAQ,KACHtT,EAAI,EAAGA,EAAIuF,EAAUpF,OAAQH,IAAK,CACvC,IAAIu0C,EAAWhvC,EAAUvF,GACrBu0C,EAASpwC,QAAUkvC,KACnB//B,EAAQihC,EAAS3zC,OAEA,WAAjB2zC,EAAShqC,OACT6jE,EAAQjtE,KAAKozC,EAASpwC,OAE1BowC,EAAS/wC,MAAQxD,EACjB+tE,EAAevE,GAASj1B,EAASpwC,QAAUowC,EAE/C,MAAO,CAEHr2C,QAAS,KACT6vE,eAAgBA,EAChBxoE,UAAWA,EACX6oE,QAASA,EACT96D,MAAOA,IA2vVfnV,EAAQ07G,KA/xVR,SAASC,GAAiBvvG,EAAOpG,EAAOvD,EAAOywC,GAM3C,OAFAzwC,EAAQ2G,EAAkB3G,GAEnB,CAEH4C,OAAQ,EACR6tC,KAJUm6B,GAAan6B,EAAM7qC,EAAUrC,IAKvCoG,MAAOA,EACPpG,MAAOA,EACPvD,MAAOA,IAoxVfzC,EAAQ47G,KAvkER,SAASC,GAAaztC,EAAgB/oE,GAClC,MAAO,CAEHuS,WAAY,EACZ0D,OAAQ,KACRoqB,aAAc,KACdzrB,cAAe,EACf+6D,aAAc,EAEdF,YAAa,EACb1oE,MAAO,EACP0mE,WAAY,EACZmC,iBAAkB,EAClBC,oBAAqB,EACrBjI,eAAgB,GAChBC,gBAAiB,EACjBC,WAAY,GACZiB,eAAgBA,EAChBF,WAAY,EACZh4C,SAAU,GACVy4C,aAAc,EACd58D,QAAS,GACTyO,QAAS,KACT41B,SAAU,KACV7oC,KAAM,KACN4nE,MAAO,KACP1G,UAAW,CAAEppE,MAAOA,KA8iE5BrF,EAAQ87G,KA5oUR,SAAStvF,GAAU9U,EAAMrS,GACrB,IAAIsC,EAAM+P,EAAK/P,IAAIowB,MAAM1yB,GACzB,GAAgB,EAAZsC,EAAIyE,MAA6B,CACjC,IAAI6lE,EAASnI,GAAcpyD,EAAM/P,EAAIiQ,WACrC,OAAOjQ,EAAI6Y,QAAQjP,SAAW0gE,EAAO1gE,SAAW0gE,EAAOxF,cAEtD,GAAgB,EAAZ9kE,EAAIyE,MACT,OAAOy9D,GAAWnyD,EAAM/P,EAAIiQ,WAAW80D,WAEtC,GAAgB,MAAZ/kE,EAAIyE,MACT,OAAO29D,GAAeryD,EAAM/P,EAAIiQ,WAAWuL,SAE/C,MAAM,IAAIzc,MAAM,gDAAkDrB,IAioUtErF,EAAQ+7G,uBA9TR,SAASvxC,GAAsBmkC,EAAM/gE,GAEjC,OADAo+D,KACO9hC,GAASM,sBAAsBmkC,EAAM/gE,IA6ThD5tC,EAAQg8G;;;;;;;;AAnUR,SAASzxC,GAAiB4jC,GAEtB,OADAnC,KACO9hC,GAASK,iBAAiB4jC,IAkUrCnuG,EAAQi8G,KAzhER,SAASC,GAAapnC,EAAYqnC,GAC9B,OAAO1T,GAAmB,GAAwB3zB,EAAYllE,GAASusG,KAyhE3En8G,EAAQo8G,4BAA8BxvB,GACtC5sF,EAAQq8G,KAviUR,SAASxmG,GAAQzJ,EAAOvH,EAAMquC,GAE1B,OAAOy8B,IAAM,EADbvjE,GAAS,GACc,KAAM,EAAGvH,EAAMA,EAAMquC,IAsiUhDlzC,EAAQs8G,KAzhER,SAASC,GAAcznC,EAAY0nC,GAI/B,IAHA,IAAI7qE,EAAO7wC,OAAO6wC,KAAK6qE,GACnBC,EAAS9qE,EAAK3vC,OACd0mG,EAAgB,GACX7mG,EAAI,EAAGA,EAAI46G,EAAQ56G,IAGxB6mG,EAAc1lG,KAFJ2uC,EAAK9vC,IAInB,OAAO4mG,GAAmB,GAAyB3zB,EAAY4zB,IAihEnE1oG,EAAQ08G,KAjiER,SAASC,GAAY7nC,EAAYqnC,GAE7B,OAAO1T,GAAmB,IAAwB3zB,EAAYllE,GAASusG,EAAW,KAgiEtFn8G,EAAQ48G,KAtiUR,SAASltC,GAAYtjE,EAAO6gE,EAAgBjnE,EAAOvD,EAAOywC,GACtD,OAAOy8B,IAAM,EAAGvjE,EAAO6gE,EAAgB,EAAGjnE,EAAOvD,EAAOywC,IAsiU5DlzC,EAAQ68G,2BAlmbR,SAASC,KACA/iD,KACDA,IAAa,EACbC,GAAkB,eAAgB1B,IAClC0B,GAAkB,aAActB,IAChCsB,GAAkB,eAAgBb,IAClCa,GAAkB,qBAAsBrB,IACxCqB,GAAkB,iBAAkBf,IACpCe,GAAkB,cAAelB,IACjCkB,GAAkB,oBAAqBnB,IACvCmB,GAAkB,gBAAiBjB,IACnCiB,GAAkB,eAAgBF,MAwlb1C95D,EAAQ+8G,mBAAqB/iD,GAC7Bh6D,EAAQg9G,KAnwER,SAAS7U,GAAS/7F,EAAOuH,EAAIuiB,GACzB,IAAI0hF,EAAc,GAClB,IAAK,IAAI7yG,KAAYmxB,EAEjB0hF,EAAY50G,KAAK,CAAE+B,SAAUA,EAAUmjG,YADrBhyE,EAASnxB,KAG/B,MAAO,CAEH6S,WAAY,EACZ0D,OAAQ,KACRoqB,aAAc,KACdzrB,cAAe,EACf+6D,aAAc,EAGdF,YAAa,EACb1oE,MAAOA,EACP0mE,WAAY,EACZmC,iBAAkB,EAClBC,oBAAqB,EACrB9G,gBAAiB,EACjBnB,eAAgB,GAChBC,gBAAiB,EACjBC,WAAY,GACZe,WAAY,EACZh4C,SAAU,GACVy4C,aAAc,EACd58D,QAAS,GACTyO,QAAS,KACT41B,SAAU,KACV7oC,KAAM,KACN4nE,MAAO,CAAExhE,GAAIA,EAAIg0F,SAAU96B,GAAcl5D,GAAKuiB,SAAU0hF,GACxDnpC,UAAW,OAouEnBzuE,EAAQi9G,oBAhySR,SAASC,GAAmB1pG,EAAMkvE,EAAUy6B,GAChB,iBAAbz6B,IACPy6B,EAAYz6B,EACZA,EAAWlvE,EAAKxT,EAAQ+4E,iBAAiBqkC,WAE7C16B,EAAWA,EAAS51D,cAAchf,QAAQ,KAAM,KAChDyqE,GAAYmK,GAAYlvE,EACpB2pG,IACA5kC,GAAYmK,GAAU1iF,EAAQ+4E,iBAAiBskC,WAAaF,IAyxSpEn9G,EAAQs9G,uBAn5PR,SAASC,GAAsB5pG,EAAI5T,GAC/B,IAAIm4C,EAAW+3B,GAAQ1jE,IAAIoH,GAC3BgvE,GAAwBhvE,EAAIukC,GAAYA,EAASy7B,WAAY5zE,EAAQ4zE,YACrE1D,GAAQ15B,IAAI5iC,EAAI5T,IAi5PpBC,EAAQw9G,sBAAwB36B,GAChC7iF,EAAQy9G,iBA1ibR,SAASC,GAAkBv9C,EAA8Er5D,QACxF,IAATA,IAAmBA,EAAO,IAG9B,IAAIq1B,EAAkBr1B,EAAKq1B,iBAAmBplB,GAC1C+W,EAAYhnB,EAAKgnB,WAAa,KAC9BwsC,EAAe5lD,GAAgByrD,GAC/B7F,EAAa/yD,MAAQ44D,IACrB7F,EAAa/yD,KAAO44D,GAExB,IAUI3vC,EAVAmtF,EAAerjD,EAAajnD,UAAU,GAAG,GAEzCkkE,EAAY/3C,GADGrD,EAAgBnlB,eAAe,KAAM,MACRlQ,EAAKm1B,MAAQ0hF,EAAcrjD,EAAa7mD,eACpFgkE,EAAYnd,EAAatnD,OAAS,IAClC,IACA4wB,EAAcg3B,GAAkB9zD,EAAK6gD,UAAW7gD,EAAK8gD,eACrD9wC,EAAWqlB,EAAgBnlB,eAAeugE,EAAWjd,GACrDK,EAAYx7B,GAAY,GAAe,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,KAAM,MAC9E+H,EAAWlL,GAAY,KAAM2+B,EAAW/2B,EAAa6zC,EAAW,KAAM,KAAMt7C,EAAiBrlB,OAAU9P,EAAWF,EAAKgF,UAAY,MACvIoP,GAAUgsB,EAAU,MAEpB,IACQ/K,EAAgB6B,OAChB7B,EAAgB6B,QAEpBxN,EAAY6pC,GADQH,GAAwBqd,EAAWjd,EAAcpzB,EAAU/K,EAAiBrlB,EAAUgX,GAC3DwsC,EAAcpzB,EAAUtD,EAAa98B,EAAK0zD,cAAgB,MAEzG99B,GAAWi+B,EAAWzzB,EAAU,MAEhCjK,GAAY09B,EAAWzzB,EAAU,KAAM,MAE3C,QACIprB,KACIqgB,EAAgB9rB,KAChB8rB,EAAgB9rB,MAExB,OAAOmgB,GAugbXxwB,EAAQ49G,yBAj9LR,SAASC,KACW,IAAI9nE,IACD,IAAIA,IACvB81C,GAAY7pF,OAAS,GA+8LzBhC,EAAQ89G,iBA3vMR,SAASC,KACLpyB,GAAa;;;;;;;QA2vMjB3rF,EAAQg+G,2BAA6B58D,GACrCphD,EAAQi+G,kBAr9PR,SAASC,GAAiB32G,EAAMwpC,EAAYL,EAAgBc,GACxD,OAAOpuC,GAAc,WACjB,IAAIe,EACAg6G,EAAQ52G,EAMR62G,EAAkBD,EAAM58G,UAAYT,OAAOskB,eAAe+4F,EAAM58G,WAAa,KAC7E88G,EAAoBD,GAAmBA,EAAgB98G,YACxC,OAAfyvC,SACyB/pC,IAArBm3G,EAAMptE,YACJstE,GAAqBA,EAAkBttE,aAAeotE,EAAMptE,WAI9DotE,EAAMptE,WAAaA,GAHlB5sC,EAAKg6G,EAAMptE,YAAY/tC,KAAKd,MAAMiC,EAAIjB,EAAS6tC,KAMjC,OAAnBL,IAIAytE,EAAMztE,eAAiBA,GAEJ,OAAnBc,IAWI2sE,EAAM3sE,oBANmBxqC,IAAzBm3G,EAAM3sE,gBACJ6sE,GACEA,EAAkB7sE,iBAAmB2sE,EAAM3sE,eAIxBA,EAHA/vC,EAASA,EAAS,GAAI08G,EAAM3sE,gBAAiBA,QAo7PpFxxC,EAAQs+G,oBAAsBzyG,GAC9B7L,EAAQu+G,aAvk8BR,SAASC,GAAY5nG,GACjBF,GAAWE,GAuk8Bf5W,EAAQy+G,aAAeh8B,GACvBziF,EAAQ0+G,OAASj2D,GACjBzoD,EAAQ2+G,WAAat2G,EACrBrI,EAAQ4+G,KA11DR,SAASC,GAAQ/pC,EAAY1G,EAAgB0wC,GAEzC,IADA,IAAI5oF,EAAW,GACNr0B,EAAI,EAAGA,EAAIi9G,EAAW98G,OAAQH,IACnCq0B,EAASr0B,EAAI,GAAK,CACduK,MAAO,EACPzI,KAAM,KACN6iG,GAAI,KACJjwB,gBAAiB,KACjB2wB,gBAAiB,KACjB7hD,OAAQy5D,EAAWj9G,IAG3B,MAAO,CAEH+V,WAAY,EACZ0D,OAAQ,KACRoqB,aAAc,KACdzrB,cAAe,EACf+6D,aAAc,EAEdF,WAAYA,EACZ1oE,MAAO,EACP0mE,WAAY,EACZmC,iBAAkB,EAClBC,oBAAqB,EACrBjI,eAAgB,GAChBC,gBAAiB,EACjBC,WAAY,GACZiB,eAAgBA,EAChBF,WAAY,EACZh4C,SAAUA,EACVy4C,aAAc,EACd58D,QAAS,GACTyO,QAAS,KACT41B,SAAU,KACV7oC,KAAM,CAAE43C,OAAQ25D,EAAW,IAC3B3pC,MAAO,KACP1G,UAAW,OAszDnBzuE,EAAQ++G,qBAAuBpyB,GAC/B3sF,EAAQg/G,sBAruSR,SAASC,KACL1mC,GAAc,IAquSlBv4E,EAAQk/G,KAzqWR,SAASC,GAAYznG,EAAM0nG,EAAS5zC,EAAY/oE,GAC5C,GAAIohD,GAAaI,UAAUxhD,GAAQ,CAC/BA,EAAQohD,GAAaG,OAAOvhD,GAC5B,IAAI48G,EAAmB3nG,EAAK/P,IAAIowB,MAAMqnF,GAASnlG,aAAeuxD,EAC1DrqD,EAAW0iC,GAAaG,OAAOtsC,EAAK+zD,UAAU4zC,IAClD3nG,EAAK+zD,UAAU4zC,GAAoB,IAAIx7D,GAAa1iC,GAExD,OAAO1e,GAmqWXzC,EAAQs/G,iBAAmB54F,GAC3B1mB,EAAQu/G,KAztDR,SAASluC,GAAQjlE,EAAO2rB,EAAOizC,EAAkBC,GAY7C,IAVA,IAAIu0C,EAAmB,EACnBC,EAAsB,EACtBC,EAAgB,EAChBC,EAAoB,EACpBC,EAAqB,EACrBC,EAAgB,KAChBC,EAAsB,KACtBC,GAAmC,EACnCC,GAAoC,EACpClyC,EAAqB,KAChBjsE,EAAI,EAAGA,EAAIk2B,EAAM/1B,OAAQH,IAAK,CACnC,IAAIqrB,EAAO6K,EAAMl2B,GAQjB,GAPAqrB,EAAKtV,UAAY/V,EACjBqrB,EAAK5R,OAASukG,EACd3yF,EAAKjT,aAAeulG,EACpBtyF,EAAK8nD,YAAcyqC,EACnBvyF,EAAKwY,aAAeo6E,EACpBJ,GAAiBxyF,EAAK9gB,MACtBwzG,GAAsB1yF,EAAKggD,gBACvBhgD,EAAK1M,QAAS,CACd,IAAIwxD,EAAQ9kD,EAAK1M,QACjBwxD,EAAMmE,gBACF0pC,EAAgBA,EAAcr/F,QAAQ21D,gBAAkBr1E,OAAOU,OAAO,MAC1EwwE,EAAMkE,aAAelE,EAAMmE,gBAE3B4pC,GAAmC,EACnCC,GAAoC,EAChC9yF,EAAK1M,QAAQjP,WACbquG,GAAsB1yF,EAAK1M,QAAQjP,SAASk2F,oBASpD,GANAoB,GAAagX,EAAe3yF,EAAM6K,EAAM/1B,QACxCw9G,GAAoBtyF,EAAKgJ,SAASl0B,OAClCy9G,GAAuBvyF,EAAKnb,QAAQ/P,QAC/B89G,GAAqC,EAAb5yF,EAAK9gB,QAC9B0hE,EAAqB5gD,GAER,MAAbA,EAAK9gB,MAAiC,CACjC2zG,IACDA,GAAmC,EAEnCF,EAAcr/F,QAAQ21D,gBAClBr1E,OAAOU,OAAOq+G,EAAcr/F,QAAQ21D,iBACxC0pC,EAAcr/F,QAAQ01D,aAAe2pC,EAAcr/F,QAAQ21D,iBAE/D,IACI73C,EAAuD,IAA3B,MAAbpR,EAAK9gB,OAD6C,IAAhC,KAAb8gB,EAAK9gB,QAEJkyB,EACrBuhF,EAAcr/F,QAAQ21D,gBAAgB9K,GAASn+C,EAAKkpB,SAASpwC,QAAUknB,GAGlE8yF,IACDA,GAAoC,EAEpCH,EAAcr/F,QAAQ01D,aAClBp1E,OAAOU,OAAOq+G,EAAcr/F,QAAQ21D,kBAE5C0pC,EAAcr/F,QAAQ01D,aAAa7K,GAASn+C,EAAKkpB,SAASpwC,QAAUknB,GAEpEoR,IACAuhF,EAAcr/F,QAAQ+wD,kBAAoBrkD,GAclD,GAXI2yF,GACAA,EAAc/sC,YAAc5lD,EAAK9gB,MACjCyzG,EAAc5qC,kBAAoB/nD,EAAK9gB,MACvCyzG,EAAc3qC,qBAAuBhoD,EAAKggD,gBACtChgD,EAAK1M,SAAW0M,EAAK1M,QAAQjP,WAC7BsuG,EAAc3qC,qBAAuBhoD,EAAK1M,QAAQjP,SAASk2F,qBAI/DkY,GAAqBzyF,EAAK9gB,MAE1B8gB,EAAKghD,WAAa,EAClB2xC,EAAgB3yF,EACX07E,GAAc17E,KACf4yF,EAAsB5yF,QAS1B,KAAO2yF,GAAiBh+G,IAAMg+G,EAAcjoG,UAAYioG,EAAc3xC,YAAY,CAC9E,IAAI+xC,EAAYJ,EAAcvkG,OAC1B2kG,IACAA,EAAUntC,YAAc+sC,EAAc/sC,WACtCmtC,EAAU/qC,qBAAuB2qC,EAAc3qC,qBAK/C4qC,GAHJD,EAAgBI,IAEKrX,GAAciX,GACTA,EAAcn6E,aAGdm6E,GAQtC,MAAO,CAEH9/G,QAAS,KACT8yE,UAAW6sC,EACXQ,cAAeP,EACflY,mBAAoBmY,EACpBxzG,MAAOA,EACP2rB,MAAOA,EACPizC,iBAAkBA,GAAoBG,GACtCF,eAAgBA,GAAkBE,GAClCJ,YAbc,SAAUrzD,EAAME,EAAW0zC,EAAW6gB,GACpD,OAAOp0C,EAAMngB,GAAW4I,QAAQuqD,YAAYrzD,EAAM4zC,EAAW6gB,IAa7Dm9B,aAAckW,EACdnW,YAAaoW,EACb3xC,mBAAoBA,IAimD5B9tE,EAAQmgH,cAn6aR,SAASC,GAAa5vF,GAClB,OAAOmE,GAAenE,GAAWk3B,OAm6arC1nD,EAAQu8D,wBAA0BA,GAClCv8D,EAAQ+6D,2BAA6BA,GACrC/6D,EAAQk9D,qBAAuBA,GAC/Bl9D,EAAQq/D,mBAAqBA,GAC7Br/D,EAAQ+0B,UAAYA,GACpB/0B,EAAQ+kD,YAAcA,GACtB/kD,EAAQ2mD,wBAA0BA,GAClC3mD,EAAQ6mD,wBAA0BA,GAClC7mD,EAAQ8mD,wBAA0BA,GAClC9mD,EAAQ+mD,wBAA0BA,GAClC/mD,EAAQgnD,wBAA0BA,GAClChnD,EAAQinD,wBAA0BA,GAClCjnD,EAAQknD,wBAA0BA,GAClClnD,EAAQmnD,wBAA0BA,GAClCnnD,EAAQonD,wBAA0BA,GAClCpnD,EAAQ6xD,WAAaA,GACrB7xD,EAAQw2D,uBAAyBA,GACjCx2D,EAAQy2D,uBAAyBA,GACjCz2D,EAAQ02D,uBAAyBA,GACjC12D,EAAQ22D,uBAAyBA,GACjC32D,EAAQ42D,uBAAyBA,GACjC52D,EAAQ62D,uBAAyBA,GACjC72D,EAAQ82D,uBAAyBA,GACjC92D,EAAQ+2D,uBAAyBA,GACjC/2D,EAAQg3D,uBAAyBA,GACjCh3D,EAAQuxD,YAAcA,GACtBvxD,EAAQ2rD,iCAAmCA,GAC3C3rD,EAAQ8nD,YAAcA,GACtB9nD,EAAQwoD,sBAAwBA,GAChCxoD,EAAQuoD,wBAA0BA,GAClCvoD,EAAQgrF,eAAiBA,GACzBhrF,EAAQiwB,wBAA0BA,GAClCjwB,EAAQgR,kBAAoBA,GAC5BhR,EAAQ2V,kBAAoBA,GAC5B3V,EAAQ6G,mBAAqBA,EAC7B7G,EAAQkH,iBAAmBA,EAC3BlH,EAAQ8U,iBAAmBA,GAC3B9U,EAAQ4V,aAAeA,GACvB5V,EAAQ4oD,kBAAoBA,GAC5B5oD,EAAQ8Y,kBAAoBA,GAC5B9Y,EAAQgqD,UAAYA,GACpBhqD,EAAQoqD,mBAAqBA,GAC7BpqD,EAAQmqD,sBAAwBA,GAChCnqD,EAAQiqD,wBAA0BA,GAClCjqD,EAAQ2pD,aAAeA,GACvB3pD,EAAQqpD,eAAiBA,GACzBrpD,EAAQ+qD,kBAAoBA,GAC5B/qD,EAAQqqD,oBAAsBA,GAC9BrqD,EAAQ6Y,iBAAmBA,GAC3B7Y,EAAQirD,iBAAmBA,GAC3BjrD,EAAQkO,eAAiBA,GACzBlO,EAAQklB,sBAAwBA,GAChCllB,EAAQo4D,eAAiBA,GACzBp4D,EAAQ8/E,OAASA,GACjB9/E,EAAQqgF,YAAcA,GACtBrgF,EAAQ+/E,iBAAmBA,GAC3B//E,EAAQ0+E,UAAYA,GACpB1+E,EAAQogF,UAAYA,GACpBpgF,EAAQ69E,kBAAoBA,GAC5B79E,EAAQm8E,YAAcA,GACtBn8E,EAAQwM,SAAWA,GACnBxM,EAAQ6oD,kBAAoBA,GAC5B7oD,EAAQyrF,8BAAgCA,GACxCzrF,EAAQipD,iBAAmBA,GAC3BjpD,EAAQyM,oBAAsBA,GAC9BzM,EAAQqrD,WAAaA,GACrBrrD,EAAQqrF,YAAcA,GACtBrrF,EAAQoc,gBAAkBA,GAC1Bpc,EAAQmc,kBAAoBA,GAC5Bnc,EAAQkc,eAAiBA,GACzBlc,EAAQktD,cAAgBA,GACxBltD,EAAQglF,OAASA,GACjBhlF,EAAQqlF,YAAcA,GACtBrlF,EAAQylF,YAAcA,GACtBzlF,EAAQ0lF,YAAcA,GACtB1lF,EAAQ2lF,YAAcA,GACtB3lF,EAAQ4lF,YAAcA,GACtB5lF,EAAQquD,aAAeA,GACvBruD,EAAQ6tD,gBAAkBA,GAC1B7tD,EAAQkpD,WAAaA,GACrBlpD,EAAQuuD,sBAAwBA,GAChCvuD,EAAQwuD,uBAAyBA,GACjCxuD,EAAQyuD,uBAAyBA,GACjCzuD,EAAQ0uD,uBAAyBA,GACjC1uD,EAAQ2uD,uBAAyBA,GACjC3uD,EAAQ4uD,uBAAyBA,GACjC5uD,EAAQ6uD,uBAAyBA,GACjC7uD,EAAQ8uD,uBAAyBA,GACjC9uD,EAAQ+uD,uBAAyBA,GACjC/uD,EAAQgvD,uBAAyBA,GACjChvD,EAAQojF,gBAAkBA,GAC1BpjF,EAAQwjF,gBAAkBA,GAC1BxjF,EAAQ2jF,gBAAkBA,GAC1B3jF,EAAQ6jF,gBAAkBA,GAC1B7jF,EAAQ+jF,gBAAkBA,GAC1B/jF,EAAQikF,gBAAkBA,GAC1BjkF,EAAQmkF,gBAAkBA,GAC1BnkF,EAAQqkF,gBAAkBA,GAC1BrkF,EAAQukF,gBAAkBA,GAC1BvkF,EAAQykF,gBAAkBA,GAC1BzkF,EAAQoqF,eAAiBA,GACzBpqF,EAAQ0oD,YAAcA,GACtB1oD,EAAQ4gB,cAAgBA,GACxB5gB,EAAQ2gB,kBAAoBA,GAC5B3gB,EAAQugB,gBAAkBA,GAC1BvgB,EAAQiZ,cAAgBA,GACxBjZ,EAAQ6uB,eAAiBA,GACzB7uB,EAAQuvB,sBAAwBA,GAChCvvB,EAAQ0vB,iBAAmBA,GAC3B1vB,EAAQivB,gBAAkBA,GAC1BjvB,EAAQovB,cAAgBA,GACxBpvB,EAAQ6vB,2BAA6BA,GACrC7vB,EAAQk1B,SAAWA,GACnBl1B,EAAQyU,oBAAsBA,GAC9BzU,EAAQkV,mBAAqBA,GAC7BlV,EAAQkrF,qBAAuBA,GAC/BlrF,EAAQ0qF,kBAAoBA,GAC5B1qF,EAAQwxD,WAAaA,GACrBxxD,EAAQi3D,uBAAyBA,GACjCj3D,EAAQk3D,uBAAyBA,GACjCl3D,EAAQm3D,uBAAyBA,GACjCn3D,EAAQo3D,uBAAyBA,GACjCp3D,EAAQq3D,uBAAyBA,GACjCr3D,EAAQs3D,uBAAyBA,GACjCt3D,EAAQu3D,uBAAyBA,GACjCv3D,EAAQw3D,uBAAyBA,GACjCx3D,EAAQy3D,uBAAyBA,GACjCz3D,EAAQqxD,YAAcA,GACtBrxD,EAAQ03D,wBAA0BA,GAClC13D,EAAQ43D,wBAA0BA,GAClC53D,EAAQ63D,wBAA0BA,GAClC73D,EAAQ83D,wBAA0BA,GAClC93D,EAAQ+3D,wBAA0BA,GAClC/3D,EAAQg4D,wBAA0BA,GAClCh4D,EAAQi4D,wBAA0BA,GAClCj4D,EAAQk4D,wBAA0BA,GAClCl4D,EAAQm4D,wBAA0BA,GAClCn4D,EAAQmxD,iBAAmBA,GAC3BnxD,EAAQioD,WAAaA,GACrBjoD,EAAQwrF,uBAAyBA,GACjCxrF,EAAQ41D,OAASA,GACjB51D,EAAQ81D,kBAAoBA,GAC5B91D,EAAQ+1D,mBAAqBA,GAC7B/1D,EAAQg2D,mBAAqBA,GAC7Bh2D,EAAQi2D,mBAAqBA,GAC7Bj2D,EAAQk2D,mBAAqBA,GAC7Bl2D,EAAQm2D,mBAAqBA,GAC7Bn2D,EAAQo2D,mBAAqBA,GAC7Bp2D,EAAQq2D,mBAAqBA,GAC7Br2D,EAAQs2D,mBAAqBA,GAC7Bt2D,EAAQu2D,mBAAqBA,GAC7Bv2D,EAAQq4D,6BAA+BA,GACvCr4D,EAAQ6qF,YAAcA,GAEtB/pF,OAAO4D,eAAe1E,EAAS,aAAc,CAAEyC,OAAO","sourcesContent":["/**\n * @license Angular v10.0.0-next.3+44.sha-a6a7e1b\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, (function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\r\n\r\n    function __classPrivateFieldGet(receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    }\r\n\r\n    function __classPrivateFieldSet(receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return { toString: fn }.toString();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        return noSideEffects(function () {\n            var metaCtor = makeMetadataCtor(props);\n            function DecoratorFactory() {\n                var _a;\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (this instanceof DecoratorFactory) {\n                    metaCtor.call.apply(metaCtor, __spread([this], args));\n                    return this;\n                }\n                var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n                return function TypeDecorator(cls) {\n                    if (typeFn)\n                        typeFn.apply(void 0, __spread([cls], args));\n                    // Use of Object.defineProperty is important since it creates non-enumerable property which\n                    // prevents the property is copied during subclassing.\n                    var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                        cls[ANNOTATIONS] :\n                        Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                    annotations.push(annotationInstance);\n                    if (additionalProcessing)\n                        additionalProcessing(cls);\n                    return cls;\n                };\n            }\n            if (parentClass) {\n                DecoratorFactory.prototype = Object.create(parentClass.prototype);\n            }\n            DecoratorFactory.prototype.ngMetadataName = name;\n            DecoratorFactory.annotationCls = DecoratorFactory;\n            return DecoratorFactory;\n        });\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        return noSideEffects(function () {\n            var metaCtor = makeMetadataCtor(props);\n            function ParamDecoratorFactory() {\n                var _a;\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (this instanceof ParamDecoratorFactory) {\n                    metaCtor.apply(this, args);\n                    return this;\n                }\n                var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n                ParamDecorator.annotation = annotationInstance;\n                return ParamDecorator;\n                function ParamDecorator(cls, unusedKey, index) {\n                    // Use of Object.defineProperty is important since it creates non-enumerable property which\n                    // prevents the property is copied during subclassing.\n                    var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                        cls[PARAMETERS] :\n                        Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                    // there might be gaps if some in between parameters do not have annotations.\n                    // we pad with nulls.\n                    while (parameters.length <= index) {\n                        parameters.push(null);\n                    }\n                    (parameters[index] = parameters[index] || []).push(annotationInstance);\n                    return cls;\n                }\n            }\n            if (parentClass) {\n                ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n            }\n            ParamDecoratorFactory.prototype.ngMetadataName = name;\n            ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n            return ParamDecoratorFactory;\n        });\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        return noSideEffects(function () {\n            var metaCtor = makeMetadataCtor(props);\n            function PropDecoratorFactory() {\n                var _a;\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (this instanceof PropDecoratorFactory) {\n                    metaCtor.apply(this, args);\n                    return this;\n                }\n                var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n                function PropDecorator(target, name) {\n                    var constructor = target.constructor;\n                    // Use of Object.defineProperty is important since it creates non-enumerable property which\n                    // prevents the property is copied during subclassing.\n                    var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                        constructor[PROP_METADATA] :\n                        Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                    meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                    meta[name].unshift(decoratorInstance);\n                    if (additionalProcessing)\n                        additionalProcessing.apply(void 0, __spread([target, name], args));\n                }\n                return PropDecorator;\n            }\n            if (parentClass) {\n                PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n            }\n            PropDecoratorFactory.prototype.ngMetadataName = name;\n            PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n            return PropDecoratorFactory;\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token,\n            providedIn: opts.providedIn || null,\n            factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory,\n            providers: options.providers || [],\n            imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        return getOwnDefinition(type, type[NG_PROV_DEF]) ||\n            getOwnDefinition(type, type[NG_INJECTABLE_DEF]);\n    }\n    /**\n     * Return `def` only if it is defined directly on `type` and is not inherited from a base\n     * class of `type`.\n     *\n     * The function `Object.hasOwnProperty` is not sufficient to distinguish this case because in older\n     * browsers (e.g. IE10) static property inheritance is implemented by copying the properties.\n     *\n     * Instead, the definition's `token` is compared to the `type`, and if they don't match then the\n     * property was not defined directly on the type itself, and was likely inherited. The definition\n     * is only returned if the `type` matches the `def.token`.\n     */\n    function getOwnDefinition(type, def) {\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        // See `jit/injectable.ts#compileInjectable` for context on NG_PROV_DEF_FALLBACK.\n        var def = type &&\n            (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF] ||\n                (type[NG_PROV_DEF_FALLBACK] && type[NG_PROV_DEF_FALLBACK]()));\n        if (def) {\n            var typeName = getTypeName(type);\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + typeName + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + typeName + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /** Gets the name of a type, accounting for some cross-browser differences. */\n    function getTypeName(type) {\n        // `Function.prototype.name` behaves differently between IE and other browsers. In most browsers\n        // it'll always return the name of the function itself, no matter how many other functions it\n        // inherits from. On IE the function doesn't have its own `name` property, but it takes it from\n        // the lowest level in the prototype chain. E.g. if we have `class Foo extends Parent` most\n        // browsers will evaluate `Foo.name` to `Foo` while IE will return `Parent`. We work around\n        // the issue by converting the function to a string and parsing its name out that way via a regex.\n        if (type.hasOwnProperty('name')) {\n            return type.name;\n        }\n        var match = ('' + type).match(/^function\\s*([^\\s(]+)/);\n        return match === null ? '' : match[1];\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n    // which will break inheriting the injectable definition from a grandparent through an\n    // undecorated parent class. We work around it by defining a fallback method which will be\n    // used to retrieve the definition. This should only be a problem in JIT mode, because in\n    // AOT TypeScript seems to have a workaround for static properties. When inheriting from an\n    // undecorated parent is no longer supported in v10, this can safely be removed.\n    var NG_PROV_DEF_FALLBACK = getClosureSafeProperty({ ɵprovFallback: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Concatenates two strings with separator, allocating new strings only when necessary.\n     *\n     * @param before before string.\n     * @param separator separator string.\n     * @param after after string.\n     * @returns concatenated string.\n     */\n    function concatStringsWithSpace(before, after) {\n        return (before == null || before === '') ?\n            (after === null ? '' : after) :\n            ((after == null || after === '') ? before : before + ' ' + after);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () {\n            return stringify(this());\n        };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Invalid\"] = 3] = \"Invalid\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n    var ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(ViewEncapsulation || (ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstCreatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () {\n            return \"InjectionToken \" + this._desc;\n        };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = {};\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactoryDep(index) {\n        var msg = ngDevMode ?\n            \"This constructor is not compatible with Angular Dependency Injection because its dependency at index \" + index + \" of the parameter list is invalid.\\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\\n\\nPlease check that 1) the type for the parameter at index \" + index + \" is correct and 2) the correct Angular decorators are defined for this class and its ancestors.\" :\n            'invalid';\n        throw new Error(msg);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (!(typeof actual === 'number')) {\n            throwError(msg, typeof actual, 'number', '===');\n        }\n    }\n    function assertNumberInRange(actual, minInclusive, maxInclusive) {\n        assertNumber(actual, 'Expected a number');\n        assertLessThanOrEqual(actual, maxInclusive, 'Expected number to be less than or equal to');\n        assertGreaterThanOrEqual(actual, minInclusive, 'Expected number to be greater than or equal to');\n    }\n    function assertString(actual, msg) {\n        if (!(typeof actual === 'string')) {\n            throwError(msg, actual === null ? 'null' : typeof actual, 'string', '===');\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (!(actual == expected)) {\n            throwError(msg, actual, expected, '==');\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (!(actual != expected)) {\n            throwError(msg, actual, expected, '!=');\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (!(actual === expected)) {\n            throwError(msg, actual, expected, '===');\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (!(actual !== expected)) {\n            throwError(msg, actual, expected, '!==');\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (!(actual < expected)) {\n            throwError(msg, actual, expected, '<');\n        }\n    }\n    function assertLessThanOrEqual(actual, expected, msg) {\n        if (!(actual <= expected)) {\n            throwError(msg, actual, expected, '<=');\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (!(actual > expected)) {\n            throwError(msg, actual, expected, '>');\n        }\n    }\n    function assertGreaterThanOrEqual(actual, expected, msg) {\n        if (!(actual >= expected)) {\n            throwError(msg, actual, expected, '>=');\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg, actual, null, '==');\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg, actual, null, '!=');\n        }\n    }\n    function throwError(msg, actual, expected, comparison) {\n        throw new Error(\"ASSERTION ERROR: \" + msg +\n            (comparison == null ? '' : \" [Expected=> \" + expected + \" \" + comparison + \" \" + actual + \" <=Actual]\"));\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n    /**\n     * Remove item from array (Same as `Array.splice()` but faster.)\n     *\n     * `Array.splice()` is not as fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * https://jsperf.com/fast-array-splice (About 20x faster)\n     *\n     * @param array Array to splice\n     * @param index Index of element in array to remove.\n     * @param count Number of items to remove.\n     */\n    function arraySplice(array, index, count) {\n        var length = array.length - count;\n        while (index < length) {\n            array[index] = array[index + count];\n            index++;\n        }\n        while (count--) {\n            array.pop(); // shrink the array\n        }\n    }\n    /**\n     * Same as `Array.splice(index, 0, value)` but faster.\n     *\n     * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * @param array Array to splice.\n     * @param index Index in array where the `value` should be added.\n     * @param value Value to add to array.\n     */\n    function arrayInsert(array, index, value) {\n        ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n        var end = array.length;\n        while (end > index) {\n            var previousEnd = end - 1;\n            array[end] = array[previousEnd];\n            end = previousEnd;\n        }\n        array[index] = value;\n    }\n    /**\n     * Same as `Array.splice2(index, 0, value1, value2)` but faster.\n     *\n     * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * @param array Array to splice.\n     * @param index Index in array where the `value` should be added.\n     * @param value1 Value to add to array.\n     * @param value2 Value to add to array.\n     */\n    function arrayInsert2(array, index, value1, value2) {\n        ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n        var end = array.length;\n        if (end == index) {\n            // inserting at the end.\n            array.push(value1, value2);\n        }\n        else if (end === 1) {\n            // corner case when we have less items in array than we have items to insert.\n            array.push(value2, array[0]);\n            array[0] = value1;\n        }\n        else {\n            end--;\n            array.push(array[end - 1], array[end]);\n            while (end > index) {\n                var previousEnd = end - 2;\n                array[end] = array[previousEnd];\n                end--;\n            }\n            array[index] = value1;\n            array[index + 1] = value2;\n        }\n    }\n    /**\n     * Insert a `value` into an `array` so that the array remains sorted.\n     *\n     * NOTE:\n     * - Duplicates are not allowed, and are ignored.\n     * - This uses binary search algorithm for fast inserts.\n     *\n     * @param array A sorted array to insert into.\n     * @param value The value to insert.\n     * @returns index of the inserted value.\n     */\n    function arrayInsertSorted(array, value) {\n        var index = arrayIndexOfSorted(array, value);\n        if (index < 0) {\n            // if we did not find it insert it.\n            index = ~index;\n            arrayInsert(array, index, value);\n        }\n        return index;\n    }\n    /**\n     * Remove `value` from a sorted `array`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to remove from.\n     * @param value The value to remove.\n     * @returns index of the removed value.\n     *   - positive index if value found and removed.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     *     inserted)\n     */\n    function arrayRemoveSorted(array, value) {\n        var index = arrayIndexOfSorted(array, value);\n        if (index >= 0) {\n            arraySplice(array, index, 1);\n        }\n        return index;\n    }\n    /**\n     * Get an index of an `value` in a sorted `array`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to binary search.\n     * @param value The value to look for.\n     * @returns index of the value.\n     *   - positive index if value found.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     *     located)\n     */\n    function arrayIndexOfSorted(array, value) {\n        return _arrayIndexOfSorted(array, value, 0);\n    }\n    /**\n     * Set a `value` for a `key`.\n     *\n     * @param keyValueArray to modify.\n     * @param key The key to locate or create.\n     * @param value The value to set for a `key`.\n     * @returns index (always even) of where the value vas set.\n     */\n    function keyValueArraySet(keyValueArray, key, value) {\n        var index = keyValueArrayIndexOf(keyValueArray, key);\n        if (index >= 0) {\n            // if we found it set it.\n            keyValueArray[index | 1] = value;\n        }\n        else {\n            index = ~index;\n            arrayInsert2(keyValueArray, index, key, value);\n        }\n        return index;\n    }\n    /**\n     * Retrieve a `value` for a `key` (on `undefined` if not found.)\n     *\n     * @param keyValueArray to search.\n     * @param key The key to locate.\n     * @return The `value` stored at the `key` location or `undefined if not found.\n     */\n    function keyValueArrayGet(keyValueArray, key) {\n        var index = keyValueArrayIndexOf(keyValueArray, key);\n        if (index >= 0) {\n            // if we found it retrieve it.\n            return keyValueArray[index | 1];\n        }\n        return undefined;\n    }\n    /**\n     * Retrieve a `key` index value in the array or `-1` if not found.\n     *\n     * @param keyValueArray to search.\n     * @param key The key to locate.\n     * @returns index of where the key is (or should have been.)\n     *   - positive (even) index if key found.\n     *   - negative index if key not found. (`~index` (even) to get the index where it should have\n     *     been inserted.)\n     */\n    function keyValueArrayIndexOf(keyValueArray, key) {\n        return _arrayIndexOfSorted(keyValueArray, key, 1);\n    }\n    /**\n     * Delete a `key` (and `value`) from the `KeyValueArray`.\n     *\n     * @param keyValueArray to modify.\n     * @param key The key to locate or delete (if exist).\n     * @returns index of where the key was (or should have been.)\n     *   - positive (even) index if key found and deleted.\n     *   - negative index if key not found. (`~index` (even) to get the index where it should have\n     *     been.)\n     */\n    function keyValueArrayDelete(keyValueArray, key) {\n        var index = keyValueArrayIndexOf(keyValueArray, key);\n        if (index >= 0) {\n            // if we found it remove it.\n            arraySplice(keyValueArray, index, 2);\n        }\n        return index;\n    }\n    /**\n     * INTERNAL: Get an index of an `value` in a sorted `array` by grouping search by `shift`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to binary search.\n     * @param value The value to look for.\n     * @param shift grouping shift.\n     *   - `0` means look at every location\n     *   - `1` means only look at every other (even) location (the odd locations are to be ignored as\n     *         they are values.)\n     * @returns index of the value.\n     *   - positive index if value found.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     * inserted)\n     */\n    function _arrayIndexOfSorted(array, value, shift) {\n        ngDevMode && assertEqual(Array.isArray(array), true, 'Expecting an array');\n        var start = 0;\n        var end = array.length >> shift;\n        while (end !== start) {\n            var middle = start + ((end - start) >> 1); // find the middle.\n            var current = array[middle << shift];\n            if (value === current) {\n                return (middle << shift);\n            }\n            else if (current > value) {\n                end = middle;\n            }\n            else {\n                start = middle + 1; // We already searched middle so make it non-inclusive by adding 1\n            }\n        }\n        return ~(end << shift);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        return noSideEffects(function () {\n            // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n            // See the `initNgDevMode` docstring for more information.\n            (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n            var type = componentDefinition.type;\n            var typePrototype = type.prototype;\n            var declaredInputs = {};\n            var def = {\n                type: type,\n                providersResolver: null,\n                decls: componentDefinition.decls,\n                vars: componentDefinition.vars,\n                factory: null,\n                template: componentDefinition.template || null,\n                consts: componentDefinition.consts || null,\n                ngContentSelectors: componentDefinition.ngContentSelectors,\n                hostBindings: componentDefinition.hostBindings || null,\n                hostVars: componentDefinition.hostVars || 0,\n                hostAttrs: componentDefinition.hostAttrs || null,\n                contentQueries: componentDefinition.contentQueries || null,\n                declaredInputs: declaredInputs,\n                inputs: null,\n                outputs: null,\n                exportAs: componentDefinition.exportAs || null,\n                onChanges: null,\n                onInit: typePrototype.ngOnInit || null,\n                doCheck: typePrototype.ngDoCheck || null,\n                afterContentInit: typePrototype.ngAfterContentInit || null,\n                afterContentChecked: typePrototype.ngAfterContentChecked || null,\n                afterViewInit: typePrototype.ngAfterViewInit || null,\n                afterViewChecked: typePrototype.ngAfterViewChecked || null,\n                onDestroy: typePrototype.ngOnDestroy || null,\n                onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n                directiveDefs: null,\n                pipeDefs: null,\n                selectors: componentDefinition.selectors || EMPTY_ARRAY,\n                viewQuery: componentDefinition.viewQuery || null,\n                features: componentDefinition.features || null,\n                data: componentDefinition.data || {},\n                // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in\n                // the next line. Also `None` should be 0 not 2.\n                encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n                id: 'c',\n                styles: componentDefinition.styles || EMPTY_ARRAY,\n                _: null,\n                setInput: null,\n                schemas: componentDefinition.schemas || null,\n                tView: null,\n            };\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            return def;\n        });\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var autoRegisterModuleById = {};\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        if (def.id != null) {\n            noSideEffects(function () {\n                autoRegisterModuleById[def.id] = def.type;\n            });\n        }\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER_FACTORY = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var CHILD_HEAD = 13;\n    var CHILD_TAIL = 14;\n    var DECLARATION_VIEW = 15;\n    var DECLARATION_COMPONENT_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // [Assert functions do not constraint type when they are guarded by a truthy\n    // expression.](https://github.com/microsoft/TypeScript/issues/37295)\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') &&\n            assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstCreatePass(tView, errMessage) {\n        assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n    }\n    function assertFirstUpdatePass(tView, errMessage) {\n        assertEqual(tView.firstUpdatePass, true, errMessage || 'Should only be called in first update pass.');\n    }\n    /**\n     * This is a basic sanity check that an object is probably a directive def. DirectiveDef is\n     * an interface, so we can't do a direct instanceof check.\n     */\n    function assertDirectiveDef(obj) {\n        if (obj.type === undefined || obj.selectors == undefined || obj.inputs === undefined) {\n            throwError(\"Expected a DirectiveDef/ComponentDef and this object does not seem to have the expected shape.\");\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var MATH_ML_NAMESPACE = 'http://www.w3.org/1998/MathML/';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Most of the use of `document` in Angular is from within the DI system so it is possible to simply\n     * inject the `DOCUMENT` token and are done.\n     *\n     * Ivy is special because it does not rely upon the DI and must get hold of the document some other\n     * way.\n     *\n     * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.\n     * Wherever ivy needs the global document, it calls `getDocument()` instead.\n     *\n     * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to\n     * tell ivy what the global `document` is.\n     *\n     * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)\n     * by calling `setDocument()` when providing the `DOCUMENT` token.\n     */\n    var DOCUMENT = undefined;\n    /**\n     * Tell ivy what the `document` is for this platform.\n     *\n     * It is only necessary to call this if the current platform is not a browser.\n     *\n     * @param document The object representing the global `document` in this environment.\n     */\n    function setDocument(document) {\n        DOCUMENT = document;\n    }\n    /**\n     * Access the object that represents the `document` for this platform.\n     *\n     * Ivy calls this whenever it needs to access the `document` object.\n     * For example to create the renderer or to do sanitization.\n     */\n    function getDocument() {\n        if (DOCUMENT !== undefined) {\n            return DOCUMENT;\n        }\n        else if (typeof document !== 'undefined') {\n            return document;\n        }\n        // No \"document\" can be found. This should only happen if we are running ivy outside Angular and\n        // the current platform is not a browser. Since this is not a supported scenario at the moment\n        // this should not happen in Angular apps.\n        // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a\n        // public API. Meanwhile we just return `undefined` and let the application fail.\n        return undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) {\n            return getDocument();\n        }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(tView, index) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, tView.data.length, 'wrong index for TNode');\n        return tView.data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /** Returns a constant from `TConstants` instance. */\n    function getConstant(consts, index) {\n        return consts === null || index == null ? null : consts[index];\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n    function getLContainerActiveIndex(lContainer) {\n        return lContainer[ACTIVE_INDEX] >> 1 /* SHIFT */;\n    }\n    function setLContainerActiveIndex(lContainer, index) {\n        lContainer[ACTIVE_INDEX] = index << 1 /* SHIFT */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current `LView`.\n     */\n    function getLView() {\n        return instructionState.lFrame.lView;\n    }\n    /**\n     * Return the current `TView`.\n     */\n    function getTView() {\n        return instructionState.lFrame.tView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        // TODO(misko): remove this from the LView since it is ngDevMode=true mode only.\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            index = lFrame.bindingRootIndex = lFrame.tView.bindingStartIndex;\n        }\n        return index;\n    }\n    function getBindingIndex() {\n        return instructionState.lFrame.bindingIndex;\n    }\n    function setBindingIndex(value) {\n        return instructionState.lFrame.bindingIndex = value;\n    }\n    function nextBindingIndex() {\n        return instructionState.lFrame.bindingIndex++;\n    }\n    function incrementBindingIndex(count) {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingIndex;\n        lFrame.bindingIndex = lFrame.bindingIndex + count;\n        return index;\n    }\n    /**\n     * Set a new binding root index so that host template functions can execute.\n     *\n     * Bindings inside the host template are 0 index. But because we don't know ahead of time\n     * how many host bindings we have we can't pre-compute them. For this reason they are all\n     * 0 index and we just shift the root so that they match next available location in the LView.\n     *\n     * @param bindingRootIndex Root index for `hostBindings`\n     * @param currentDirectiveIndex `TData[currentDirectiveIndex]` will point to the current directive\n     *        whose `hostBindings` are being processed.\n     */\n    function setBindingRootForHostBindings(bindingRootIndex, currentDirectiveIndex) {\n        var lFrame = instructionState.lFrame;\n        lFrame.bindingIndex = lFrame.bindingRootIndex = bindingRootIndex;\n        setCurrentDirectiveIndex(currentDirectiveIndex);\n    }\n    /**\n     * When host binding is executing this points to the directive index.\n     * `TView.data[getCurrentDirectiveIndex()]` is `DirectiveDef`\n     * `LView[getCurrentDirectiveIndex()]` is directive instance.\n     */\n    function getCurrentDirectiveIndex() {\n        return instructionState.lFrame.currentDirectiveIndex;\n    }\n    /**\n     * Sets an index of a directive whose `hostBindings` are being processed.\n     *\n     * @param currentDirectiveIndex `TData` index where current directive instance can be found.\n     */\n    function setCurrentDirectiveIndex(currentDirectiveIndex) {\n        instructionState.lFrame.currentDirectiveIndex = currentDirectiveIndex;\n    }\n    /**\n     * Retrieve the current `DirectiveDef` which is active when `hostBindings` instruction is being\n     * executed.\n     *\n     * @param tData Current `TData` where the `DirectiveDef` will be looked up at.\n     */\n    function getCurrentDirectiveDef(tData) {\n        var currentDirectiveIndex = instructionState.lFrame.currentDirectiveIndex;\n        return currentDirectiveIndex === -1 ? null : tData[currentDirectiveIndex];\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        if (ngDevMode) {\n            assertEqual(newLFrame.isParent, true, 'Expected clean LFrame');\n            assertEqual(newLFrame.lView, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.tView, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.selectedIndex, 0, 'Expected clean LFrame');\n            assertEqual(newLFrame.elementDepthCount, 0, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentDirectiveIndex, -1, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentNamespace, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentSanitizer, null, 'Expected clean LFrame');\n            assertEqual(newLFrame.bindingRootIndex, -1, 'Expected clean LFrame');\n            assertEqual(newLFrame.currentQueryIndex, 0, 'Expected clean LFrame');\n        }\n        var tView = newView[TVIEW];\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        newLFrame.tView = tView;\n        newLFrame.contextLView = newView;\n        newLFrame.bindingIndex = tView.bindingStartIndex;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            tView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            currentDirectiveIndex: -1,\n            bindingRootIndex: -1,\n            bindingIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    /**\n     * A lightweight version of leave which is used with DI.\n     *\n     * This function only resets `previousOrParentTNode` and `LView` as those are the only properties\n     * used with DI (`enterDI()`).\n     *\n     * NOTE: This function is reexported as `leaveDI`. However `leaveDI` has return type of `void` where\n     * as `leaveViewLight` has `LFrame`. This is so that `leaveViewLight` can be used in `leaveView`.\n     */\n    function leaveViewLight() {\n        var oldLFrame = instructionState.lFrame;\n        instructionState.lFrame = oldLFrame.parent;\n        oldLFrame.previousOrParentTNode = null;\n        oldLFrame.lView = null;\n        return oldLFrame;\n    }\n    /**\n     * This is a lightweight version of the `leaveView` which is needed by the DI system.\n     *\n     * NOTE: this function is an alias so that we can change the type of the function to have `void`\n     * return type.\n     */\n    var leaveDI = leaveViewLight;\n    /**\n     * Leave the current `LView`\n     *\n     * This pops the `LFrame` with the associated `LView` from the stack.\n     *\n     * IMPORTANT: We must zero out the `LFrame` values here otherwise they will be retained. This is\n     * because for performance reasons we don't release `LFrame` but rather keep it for next use.\n     */\n    function leaveView() {\n        var oldLFrame = leaveViewLight();\n        oldLFrame.isParent = true;\n        oldLFrame.tView = null;\n        oldLFrame.selectedIndex = 0;\n        oldLFrame.contextLView = null;\n        oldLFrame.elementDepthCount = 0;\n        oldLFrame.currentDirectiveIndex = -1;\n        oldLFrame.currentNamespace = null;\n        oldLFrame.currentSanitizer = null;\n        oldLFrame.bindingRootIndex = -1;\n        oldLFrame.bindingIndex = -1;\n        oldLFrame.currentQueryIndex = 0;\n    }\n    function nextContextImpl(level) {\n        var contextLView = instructionState.lFrame.contextLView =\n            walkUpViews(level, instructionState.lFrame.contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode &&\n                assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the currently selected element index.\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index;\n    }\n    /**\n     * Gets the `tNode` that represents currently selected element.\n     */\n    function getSelectedTNode() {\n        var lFrame = instructionState.lFrame;\n        return getTNode(lFrame.tView, lFrame.selectedIndex);\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = SVG_NAMESPACE;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = MATH_ML_NAMESPACE;\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = []))\n                    .push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode &&\n            assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n     * Factory for creating instances of injectors in the NodeInjector.\n     *\n     * This factory is complicated by the fact that it can resolve `multi` factories as well.\n     *\n     * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n     * - One without `multi` support (most common)\n     * - One with `multi` values, (rare).\n     *\n     * Since VMs can cache up to 4 inline hidden classes this is OK.\n     *\n     * - Single factory: Only `resolving` and `factory` is defined.\n     * - `providers` factory: `componentProviders` is a number and `index = -1`.\n     * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n     */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64 /* AT_SIGN */;\n    }\n    /**\n     * Merges `src` `TAttributes` into `dst` `TAttributes` removing any duplicates in the process.\n     *\n     * This merge function keeps the order of attrs same.\n     *\n     * @param dst Location of where the merged `TAttributes` should end up.\n     * @param src `TAttributes` which should be appended to `dst`\n     */\n    function mergeHostAttrs(dst, src) {\n        if (src === null || src.length === 0) {\n            // do nothing\n        }\n        else if (dst === null || dst.length === 0) {\n            // We have source, but dst is empty, just make a copy.\n            dst = src.slice();\n        }\n        else {\n            var srcMarker = -1 /* ImplicitAttributes */;\n            for (var i = 0; i < src.length; i++) {\n                var item = src[i];\n                if (typeof item === 'number') {\n                    srcMarker = item;\n                }\n                else {\n                    if (srcMarker === 0 /* NamespaceURI */) {\n                        // Case where we need to consume `key1`, `key2`, `value` items.\n                    }\n                    else if (srcMarker === -1 /* ImplicitAttributes */ ||\n                        srcMarker === 2 /* Styles */) {\n                        // Case where we have to consume `key1` and `value` only.\n                        mergeHostAttribute(dst, srcMarker, item, null, src[++i]);\n                    }\n                    else {\n                        // Case where we have to consume `key1` only.\n                        mergeHostAttribute(dst, srcMarker, item, null, null);\n                    }\n                }\n            }\n        }\n        return dst;\n    }\n    /**\n     * Append `key`/`value` to existing `TAttributes` taking region marker and duplicates into account.\n     *\n     * @param dst `TAttributes` to append to.\n     * @param marker Region where the `key`/`value` should be added.\n     * @param key1 Key to add to `TAttributes`\n     * @param key2 Key to add to `TAttributes` (in case of `AttributeMarker.NamespaceURI`)\n     * @param value Value to add or to overwrite to `TAttributes` Only used if `marker` is not Class.\n     */\n    function mergeHostAttribute(dst, marker, key1, key2, value) {\n        var i = 0;\n        // Assume that new markers will be inserted at the end.\n        var markerInsertPosition = dst.length;\n        // scan until correct type.\n        if (marker === -1 /* ImplicitAttributes */) {\n            markerInsertPosition = -1;\n        }\n        else {\n            while (i < dst.length) {\n                var dstValue = dst[i++];\n                if (typeof dstValue === 'number') {\n                    if (dstValue === marker) {\n                        markerInsertPosition = -1;\n                        break;\n                    }\n                    else if (dstValue > marker) {\n                        // We need to save this as we want the markers to be inserted in specific order.\n                        markerInsertPosition = i - 1;\n                        break;\n                    }\n                }\n            }\n        }\n        // search until you find place of insertion\n        while (i < dst.length) {\n            var item = dst[i];\n            if (typeof item === 'number') {\n                // since `i` started as the index after the marker, we did not find it if we are at the next\n                // marker\n                break;\n            }\n            else if (item === key1) {\n                // We already have same token\n                if (key2 === null) {\n                    if (value !== null) {\n                        dst[i + 1] = value;\n                    }\n                    return;\n                }\n                else if (key2 === dst[i + 1]) {\n                    dst[i + 2] = value;\n                    return;\n                }\n            }\n            // Increment counter.\n            i++;\n            if (key2 !== null)\n                i++;\n            if (value !== null)\n                i++;\n        }\n        // insert at location.\n        if (markerInsertPosition !== -1) {\n            dst.splice(markerInsertPosition, 0, marker);\n            i = markerInsertPosition + 1;\n        }\n        dst.splice(i++, 0, key1);\n        if (key2 !== null) {\n            dst.splice(i++, 0, key2);\n        }\n        if (value !== null) {\n            dst.splice(i++, 0, value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () { return (typeof requestAnimationFrame !== 'undefined' &&\n        requestAnimationFrame || // browser only\n        setTimeout // everything else\n    )\n        .bind(_global); })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstCreatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode &&\n            assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return tNode.classes;\n        }\n        if (attrNameToInject === 'style') {\n            return tNode.styles;\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode !== null) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? lView[DECLARATION_COMPONENT_VIEW][T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(lView, currentTView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n     * Retrieve or instantiate the injectable from the `LView` at particular `index`.\n     *\n     * This function checks to see if the value has already been instantiated and if so returns the\n     * cached `injectable`. Otherwise if it detects that the value is still a factory it\n     * instantiates the `injectable` and caches the value.\n     */\n    function getNodeInjectable(lView, tView, index, tNode) {\n        var value = lView[index];\n        var tData = tView.data;\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n                // This code path is hit for both directives and providers.\n                // For perf reasons, we want to avoid searching for hooks on providers.\n                // It does no harm to try (the hooks just won't exist), but the extra\n                // checks are unnecessary and this is a hot path. So we check to see\n                // if the index of the dependency is in the directive range for this\n                // tNode. If it's not, we know it's a provider and skip hook registration.\n                if (tView.firstCreatePass && index >= tNode.directiveStart) {\n                    ngDevMode && assertDirectiveDef(tData[index]);\n                    registerPreOrderHooks(index, tData[index], tView);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        return noSideEffects(function () {\n            var proto = Object.getPrototypeOf(type.prototype).constructor;\n            var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n            if (factory !== null) {\n                return factory;\n            }\n            else {\n                // There is no factory defined. Either this was improper usage of inheritance\n                // (no Angular decorator on the superclass) or there is no constructor at all\n                // in the inheritance chain. Since the two cases cannot be distinguished, the\n                // latter has to be assumed.\n                return function (t) { return new t(); };\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () {\n            return \"HTML\" /* Html */;\n        };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () {\n            return \"Style\" /* Style */;\n        };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () {\n            return \"Script\" /* Script */;\n        };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () {\n            return \"URL\" /* Url */;\n        };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () {\n            return \"ResourceURL\" /* ResourceUrl */;\n        };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            var inertBodyElement = this.inertDocument.body;\n            if (inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(inertBodyElement);\n            }\n            inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (inertBodyElement.querySelector && !inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (inertBodyElement.querySelector && inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window.DOMParser().parseFromString(html, 'text/html').body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            // Note that previously we used to do something like `this.inertDocument.body.innerHTML = html`\n            // and we returned the inert `body` node. This was changed, because IE seems to treat setting\n            // `innerHTML` on an inserted element differently, compared to one that hasn't been inserted\n            // yet. In particular, IE appears to split some of the text into multiple text nodes rather\n            // than keeping them in a single one which ends up messing with Ivy's i18n parsing further\n            // down the line. This has been worked around by creating a new inert `body` and using it as\n            // the root node in which we insert the HTML.\n            var inertBody = this.inertDocument.createElement('body');\n            inertBody.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(inertBody);\n            }\n            return inertBody;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) {\n            this.buf.push(encodeEntities(chars));\n        };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) {\n            return '&#' + match.charCodeAt(0) + ';';\n        })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:attr|calc|var)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' &&\n            (tag === 'embed' || tag === 'frame' || tag === 'iframe' || tag === 'media' ||\n                tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        if (value === undefined && mode === undefined) {\n            // This is a workaround for the fact that `StyleSanitizeFn` should not exist once PR#34480\n            // lands. For now the `StyleSanitizeFn` and should act like `(value: any) => string` as a\n            // work around.\n            return ɵɵsanitizeStyle(prop);\n        }\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = stylePropNeedsSanitization(prop);\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : unwrapSafeValue(value);\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function stylePropNeedsSanitization(prop) {\n        return prop === 'background-image' || prop === 'backgroundImage' || prop === 'background' ||\n            prop === 'border-image' || prop === 'borderImage' || prop === 'border-image-source' ||\n            prop === 'borderImageSource' || prop === 'filter' || prop === 'list-style' ||\n            prop === 'listStyle' || prop === 'list-style-image' || prop === 'listStyleImage' ||\n            prop === 'clip-path' || prop === 'clipPath';\n    }\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue, propName) {\n        var field = propName ? \" for '\" + propName + \"'\" : '';\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value\" + field + \": '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook?\";\n        }\n        // TODO: include debug context, see `viewDebugError` function in\n        // `packages/core/src/view/errors.ts` for reference.\n        throw new Error(msg);\n    }\n    function constructDetailsForInterpolation(lView, rootIndex, expressionIndex, meta, changedValue) {\n        var _a = __read(meta.split(INTERPOLATION_DELIMITER)), propName = _a[0], prefix = _a[1], chunks = _a.slice(2);\n        var oldValue = prefix, newValue = prefix;\n        for (var i = 0; i < chunks.length; i++) {\n            var slotIdx = rootIndex + i;\n            oldValue += \"\" + lView[slotIdx] + chunks[i];\n            newValue += \"\" + (slotIdx === expressionIndex ? changedValue : lView[slotIdx]) + chunks[i];\n        }\n        return { propName: propName, oldValue: oldValue, newValue: newValue };\n    }\n    /**\n     * Constructs an object that contains details for the ExpressionChangedAfterItHasBeenCheckedError:\n     * - property name (for property bindings or interpolations)\n     * - old and new values, enriched using information from metadata\n     *\n     * More information on the metadata storage format can be found in `storePropertyBindingMetadata`\n     * function description.\n     */\n    function getExpressionChangedErrorDetails(lView, bindingIndex, oldValue, newValue) {\n        var tData = lView[TVIEW].data;\n        var metadata = tData[bindingIndex];\n        if (typeof metadata === 'string') {\n            // metadata for property interpolation\n            if (metadata.indexOf(INTERPOLATION_DELIMITER) > -1) {\n                return constructDetailsForInterpolation(lView, bindingIndex, bindingIndex, metadata, newValue);\n            }\n            // metadata for property binding\n            return { propName: metadata, oldValue: oldValue, newValue: newValue };\n        }\n        // metadata is not available for this expression, check if this expression is a part of the\n        // property interpolation by going from the current binding index left and look for a string that\n        // contains INTERPOLATION_DELIMITER, the layout in tView.data for this case will look like this:\n        // [..., 'id�Prefix � and � suffix', null, null, null, ...]\n        if (metadata === null) {\n            var idx = bindingIndex - 1;\n            while (typeof tData[idx] !== 'string' && tData[idx + 1] === null) {\n                idx--;\n            }\n            var meta = tData[idx];\n            if (typeof meta === 'string') {\n                var matches = meta.match(new RegExp(INTERPOLATION_DELIMITER, 'g'));\n                // first interpolation delimiter separates property name from interpolation parts (in case of\n                // property interpolations), so we subtract one from total number of found delimiters\n                if (matches && (matches.length - 1) > bindingIndex - idx) {\n                    return constructDetailsForInterpolation(lView, idx, bindingIndex, meta, newValue);\n                }\n            }\n        }\n        return { propName: undefined, oldValue: oldValue, newValue: newValue };\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n    /**\n     * Returns `true` if the `TNode` has a directive which has `@Input()` for `class` binding.\n     *\n     * ```\n     * <div my-dir [class]=\"exp\"></div>\n     * ```\n     * and\n     * ```\n     * @Directive({\n     * })\n     * class MyDirective {\n     *   @Input()\n     *   class: string;\n     * }\n     * ```\n     *\n     * In the above case it is necessary to write the reconciled styling information into the\n     * directive's input.\n     *\n     * @param tNode\n     */\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    /**\n     * Returns `true` if the `TNode` has a directive which has `@Input()` for `style` binding.\n     *\n     * ```\n     * <div my-dir [style]=\"exp\"></div>\n     * ```\n     * and\n     * ```\n     * @Directive({\n     * })\n     * class MyDirective {\n     *   @Input()\n     *   class: string;\n     * }\n     * ```\n     *\n     * In the above case it is necessary to write the reconciled styling information into the\n     * directive's input.\n     *\n     * @param tNode\n     */\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns an index of `classToSearch` in `className` taking token boundaries into account.\n     *\n     * `classIndexOf('AB A', 'A', 0)` will be 3 (not 0 since `AB!==A`)\n     *\n     * @param className A string containing classes (whitespace separated)\n     * @param classToSearch A class name to locate\n     * @param startingIndex Starting location of search\n     * @returns an index of the located class (or -1 if not found)\n     */\n    function classIndexOf(className, classToSearch, startingIndex) {\n        ngDevMode && assertNotEqual(classToSearch, '', 'can not look for \"\" string.');\n        var end = className.length;\n        while (true) {\n            var foundIndex = className.indexOf(classToSearch, startingIndex);\n            if (foundIndex === -1)\n                return foundIndex;\n            if (foundIndex === 0 || className.charCodeAt(foundIndex - 1) <= 32 /* SPACE */) {\n                // Ensure that it has leading whitespace\n                var length_1 = classToSearch.length;\n                if (foundIndex + length_1 === end ||\n                    className.charCodeAt(foundIndex + length_1) <= 32 /* SPACE */) {\n                    // Ensure that it has trailing whitespace\n                    return foundIndex;\n                }\n            }\n            // False positive, keep searching from where we left off.\n            startingIndex = foundIndex + 1;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    /**\n     * Search the `TAttributes` to see if it contains `cssClassToMatch` (case insensitive)\n     *\n     * @param attrs `TAttributes` to search through.\n     * @param cssClassToMatch class to match (lowercase)\n     * @param isProjectionMode Whether or not class matching should look into the attribute `class` in\n     *    addition to the `AttributeMarker.Classes`.\n     */\n    function isCssClassMatching(attrs, cssClassToMatch, isProjectionMode) {\n        // TODO(misko): The fact that this function needs to know about `isProjectionMode` seems suspect.\n        // It is strange to me that sometimes the class information comes in form of `class` attribute\n        // and sometimes in form of `AttributeMarker.Classes`. Some investigation is needed to determine\n        // if that is the right behavior.\n        ngDevMode &&\n            assertEqual(cssClassToMatch, cssClassToMatch.toLowerCase(), 'Class name expected to be lowercase.');\n        var i = 0;\n        while (i < attrs.length) {\n            var item = attrs[i++];\n            if (isProjectionMode && item === 'class') {\n                item = attrs[i];\n                if (classIndexOf(item.toLowerCase(), cssClassToMatch, 0) !== -1) {\n                    return true;\n                }\n            }\n            else if (item === 1 /* Classes */) {\n                // We found the classes section. Start searching for the class.\n                while (i < attrs.length && typeof (item = attrs[i++]) == 'string') {\n                    // while we have strings\n                    if (item.toLowerCase() === cssClassToMatch)\n                        return true;\n                }\n                return false;\n            }\n        }\n        return false;\n    }\n    /**\n     * Checks whether the `tNode` represents an inline template (e.g. `*ngFor`).\n     *\n     * @param tNode current TNode\n     */\n    function isInlineTemplate(tNode) {\n        return tNode.type === 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.attrs !== null) {\n                    if (!isCssClassMatching(tNode.attrs, selectorAttrValue, isProjectionMode)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate(tNode), isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode &&\n                            assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        classIndexOf(compareAgainstClassName, selectorAttrValue, 0) !== -1 ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                var attr = attrs[i];\n                // Return in case we checked all template attrs and are switching to the next section in the\n                // attrs array (that starts with a number that represents an attribute marker).\n                if (typeof attr === 'number')\n                    return -1;\n                if (attr === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    function maybeWrapInNotSelector(isNegativeMode, chunk) {\n        return isNegativeMode ? ':not(' + chunk.trim() + ')' : chunk;\n    }\n    function stringifyCSSSelector(selector) {\n        var result = selector[0];\n        var i = 1;\n        var mode = 2 /* ATTRIBUTE */;\n        var currentChunk = '';\n        var isNegativeMode = false;\n        while (i < selector.length) {\n            var valueOrMarker = selector[i];\n            if (typeof valueOrMarker === 'string') {\n                if (mode & 2 /* ATTRIBUTE */) {\n                    var attrValue = selector[++i];\n                    currentChunk +=\n                        '[' + valueOrMarker + (attrValue.length > 0 ? '=\"' + attrValue + '\"' : '') + ']';\n                }\n                else if (mode & 8 /* CLASS */) {\n                    currentChunk += '.' + valueOrMarker;\n                }\n                else if (mode & 4 /* ELEMENT */) {\n                    currentChunk += ' ' + valueOrMarker;\n                }\n            }\n            else {\n                //\n                // Append current chunk to the final result in case we come across SelectorFlag, which\n                // indicates that the previous section of a selector is over. We need to accumulate content\n                // between flags to make sure we wrap the chunk later in :not() selector if needed, e.g.\n                // ```\n                //  ['', Flags.CLASS, '.classA', Flags.CLASS | Flags.NOT, '.classB', '.classC']\n                // ```\n                // should be transformed to `.classA :not(.classB .classC)`.\n                //\n                // Note: for negative selector part, we accumulate content between flags until we find the\n                // next negative flag. This is needed to support a case where `:not()` rule contains more than\n                // one chunk, e.g. the following selector:\n                // ```\n                //  ['', Flags.ELEMENT | Flags.NOT, 'p', Flags.CLASS, 'foo', Flags.CLASS | Flags.NOT, 'bar']\n                // ```\n                // should be stringified to `:not(p.foo) :not(.bar)`\n                //\n                if (currentChunk !== '' && !isPositive(valueOrMarker)) {\n                    result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n                    currentChunk = '';\n                }\n                mode = valueOrMarker;\n                // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n                // mode is maintained for remaining chunks of a selector.\n                isNegativeMode = isNegativeMode || !isPositive(mode);\n            }\n            i++;\n        }\n        if (currentChunk !== '') {\n            result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n        }\n        return result;\n    }\n    /**\n     * Generates string representation of CSS selector in parsed form.\n     *\n     * ComponentDef and DirectiveDef are generated with the selector in parsed form to avoid doing\n     * additional parsing at runtime (for example, for directive matching). However in some cases (for\n     * example, while bootstrapping a component), a string version of the selector is required to query\n     * for the host element on the page. This function takes the parsed form of a selector and returns\n     * its string representation.\n     *\n     * @param selectorList selector in parsed form\n     * @returns string representation of a given selector\n     */\n    function stringifyCSSSelectorList(selectorList) {\n        return selectorList.map(stringifyCSSSelector).join(',');\n    }\n    /**\n     * Extracts attributes and classes information from a given CSS selector.\n     *\n     * This function is used while creating a component dynamically. In this case, the host element\n     * (that is created dynamically) should contain attributes and classes specified in component's CSS\n     * selector.\n     *\n     * @param selector CSS selector in parsed form (in a form of array)\n     * @returns object with `attrs` and `classes` fields that contain extracted information\n     */\n    function extractAttrsAndClassesFromSelector(selector) {\n        var attrs = [];\n        var classes = [];\n        var i = 1;\n        var mode = 2 /* ATTRIBUTE */;\n        while (i < selector.length) {\n            var valueOrMarker = selector[i];\n            if (typeof valueOrMarker === 'string') {\n                if (mode === 2 /* ATTRIBUTE */) {\n                    if (valueOrMarker !== '') {\n                        attrs.push(valueOrMarker, selector[++i]);\n                    }\n                }\n                else if (mode === 8 /* CLASS */) {\n                    classes.push(valueOrMarker);\n                }\n            }\n            else {\n                // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n                // mode is maintained for remaining chunks of a selector. Since attributes and classes are\n                // extracted only for \"positive\" part of the selector, we can stop here.\n                if (!isPositive(mode))\n                    break;\n                mode = valueOrMarker;\n            }\n            i++;\n        }\n        return { attrs: attrs, classes: classes };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = (typeof ngDevMode === 'undefined' || ngDevMode) ? { __brand__: 'NO_CHANGE' } : {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     text(0, 'Hello');\n     *     text(1, 'Goodbye')\n     *     element(2, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     advance(2); // Advance twice to the <div>.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param delta Number of elements to advance forwards by.\n     *\n     * @codeGenApi\n     */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getTView(), getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        // TODO(misko): Remove this function as it is no longer being used.\n        selectIndexInternal(getTView(), getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(tView, lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function toTStylingRange(prev, next) {\n        ngDevMode && assertNumberInRange(prev, 0, 32767 /* UNSIGNED_MASK */);\n        ngDevMode && assertNumberInRange(next, 0, 32767 /* UNSIGNED_MASK */);\n        return (prev << 17 /* PREV_SHIFT */ | next << 2 /* NEXT_SHIFT */);\n    }\n    function getTStylingRangePrev(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange >> 17 /* PREV_SHIFT */) & 32767 /* UNSIGNED_MASK */;\n    }\n    function getTStylingRangePrevDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange & 2 /* PREV_DUPLICATE */) ==\n            2 /* PREV_DUPLICATE */;\n    }\n    function setTStylingRangePrev(tStylingRange, previous) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        ngDevMode && assertNumberInRange(previous, 0, 32767 /* UNSIGNED_MASK */);\n        return ((tStylingRange & ~4294836224 /* PREV_MASK */) |\n            (previous << 17 /* PREV_SHIFT */));\n    }\n    function setTStylingRangePrevDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange | 2 /* PREV_DUPLICATE */);\n    }\n    function getTStylingRangeNext(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange & 131068 /* NEXT_MASK */) >> 2 /* NEXT_SHIFT */;\n    }\n    function setTStylingRangeNext(tStylingRange, next) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        ngDevMode && assertNumberInRange(next, 0, 32767 /* UNSIGNED_MASK */);\n        return ((tStylingRange & ~131068 /* NEXT_MASK */) | //\n            next << 2 /* NEXT_SHIFT */);\n    }\n    function getTStylingRangeNextDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange & 1 /* NEXT_DUPLICATE */) ===\n            1 /* NEXT_DUPLICATE */;\n    }\n    function setTStylingRangeNextDuplicate(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        return (tStylingRange | 1 /* NEXT_DUPLICATE */);\n    }\n    function getTStylingRangeTail(tStylingRange) {\n        ngDevMode && assertNumber(tStylingRange, 'expected number');\n        var next = getTStylingRangeNext(tStylingRange);\n        return next === 0 ? getTStylingRangePrev(tStylingRange) : next;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LVIEW_COMPONENT_CACHE;\n    var LVIEW_EMBEDDED_CACHE;\n    var LVIEW_ROOT;\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLViewFromTViewBlueprint(tView) {\n        var debugTView = tView;\n        var lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);\n        return lView.concat(tView.blueprint);\n    }\n    function getLViewToClone(type, name) {\n        switch (type) {\n            case 0 /* Root */:\n                if (LVIEW_ROOT === undefined)\n                    LVIEW_ROOT = new (createNamedArrayType('LRootView'))();\n                return LVIEW_ROOT;\n            case 1 /* Component */:\n                if (LVIEW_COMPONENT_CACHE === undefined)\n                    LVIEW_COMPONENT_CACHE = new Map();\n                var componentArray = LVIEW_COMPONENT_CACHE.get(name);\n                if (componentArray === undefined) {\n                    componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();\n                    LVIEW_COMPONENT_CACHE.set(name, componentArray);\n                }\n                return componentArray;\n            case 2 /* Embedded */:\n                if (LVIEW_EMBEDDED_CACHE === undefined)\n                    LVIEW_EMBEDDED_CACHE = new Map();\n                var embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);\n                if (embeddedArray === undefined) {\n                    embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();\n                    LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);\n                }\n                return embeddedArray;\n        }\n        throw new Error('unreachable code');\n    }\n    function nameSuffix(text) {\n        if (text == null)\n            return '';\n        var index = text.lastIndexOf('_Template');\n        return '_' + (index === -1 ? text : text.substr(0, index));\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up\n     * in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(type, //\n        id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstCreatePass, //\n        firstUpdatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.type = type;\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstCreatePass = firstCreatePass;\n            this.firstUpdatePass = firstUpdatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNode = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        directiveStylingLast, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        mergedAttrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        residualStyles, //\n        classes, //\n        residualClasses, //\n        classBindings, //\n        styleBindings) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.directiveStylingLast = directiveStylingLast;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.mergedAttrs = mergedAttrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.residualStyles = residualStyles;\n            this.classes = classes;\n            this.residualClasses = residualClasses;\n            this.classBindings = classBindings;\n            this.styleBindings = styleBindings;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 128 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"styleBindings_\", {\n            get: function () {\n                return toDebugStyleBinding(this, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"classBindings_\", {\n            get: function () {\n                return toDebugStyleBinding(this, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TNodeDebug = TNode;\n    function toDebugStyleBinding(tNode, isClassBased) {\n        var tData = tNode.tView_.data;\n        var bindings = [];\n        var range = isClassBased ? tNode.classBindings : tNode.styleBindings;\n        var prev = getTStylingRangePrev(range);\n        var next = getTStylingRangeNext(range);\n        var isTemplate = next !== 0;\n        var cursor = isTemplate ? next : prev;\n        while (cursor !== 0) {\n            var itemKey = tData[cursor];\n            var itemRange = tData[cursor + 1];\n            bindings.unshift({\n                key: itemKey,\n                index: cursor,\n                isTemplate: isTemplate,\n                prevDuplicate: getTStylingRangePrevDuplicate(itemRange),\n                nextDuplicate: getTStylingRangeNextDuplicate(itemRange),\n                nextIndex: getTStylingRangeNext(itemRange),\n                prevIndex: getTStylingRangePrev(itemRange),\n            });\n            if (cursor === prev)\n                isTemplate = false;\n            cursor = getTStylingRangePrev(itemRange);\n        }\n        bindings.push((isClassBased ? tNode.residualClasses : tNode.residualStyles) || null);\n        return bindings;\n    }\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because\n    // `LView` constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements\n     * (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element\n     * itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () {\n                return toDebug(this._raw_lView[PARENT]);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () {\n                return toHtml(this._raw_lView[HOST], true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () {\n                return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () {\n                return this._raw_lView[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into\n             * a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () {\n                return this._raw_lView[TVIEW];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () {\n                return this._raw_lView[CLEANUP];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () {\n                return this._raw_lView[INJECTOR$1];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () {\n                return this._raw_lView[RENDERER_FACTORY];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () {\n                return this._raw_lView[RENDERER];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () {\n                return this._raw_lView[SANITIZER];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () {\n                return toDebug(this._raw_lView[CHILD_HEAD]);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () {\n                return toDebug(this._raw_lView[NEXT]);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () {\n                return toDebug(this._raw_lView[CHILD_TAIL]);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () {\n                return toDebug(this._raw_lView[DECLARATION_VIEW]);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () {\n                return this._raw_lView[QUERIES];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () {\n                return this._raw_lView[T_HOST];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        return {\n            html: toHtml(native),\n            native: native,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () {\n                return getLContainerActiveIndex(this._raw_lContainer);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"hasTransplantedViews\", {\n            get: function () {\n                return (this._raw_lContainer[ACTIVE_INDEX] & 1 /* HAS_TRANSPLANTED_VIEWS */) ===\n                    1 /* HAS_TRANSPLANTED_VIEWS */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () {\n                return toDebug(this._raw_lContainer[PARENT]);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () {\n                return this._raw_lContainer[MOVED_VIEWS];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () {\n                return this._raw_lContainer[HOST];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () {\n                return this._raw_lContainer[NATIVE];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () {\n                return toDebug(this._raw_lContainer[NEXT]);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () {\n                return getTNode(this._lView[TVIEW], this.nodeIndex);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView));\n                });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value,\n                                            attrName: attrName,\n                                            sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text',\n                                            nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /**\n     * Process the `TView.expandoInstructions`. (Execute the `hostBindings`.)\n     *\n     * @param tView `TView` containing the `expandoInstructions`\n     * @param lView `LView` associated with the `TView`\n     */\n    function setHostBindingsByExecutingExpandoInstructions(tView, lView) {\n        ngDevMode && assertSame(tView, lView[TVIEW], '`LView` is not associated with the `TView`!');\n        try {\n            var expandoInstructions = tView.expandoInstructions;\n            if (expandoInstructions !== null) {\n                var bindingRootIndex = tView.expandoStartIndex;\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                // TODO(misko): PERF It is possible to get here with `TView.expandoInstructions` containing no\n                // functions to execute. This is wasteful as there is no work to be done, but we still need\n                // to iterate over the instructions.\n                // In example of this is in this test: `host_binding_spec.ts`\n                // `fit('should not cause problems if detectChanges is called when a property updates', ...`\n                // In the above test we get here with expando [0, 0, 1] which requires a lot of processing but\n                // there is no function to execute.\n                for (var i = 0; i < expandoInstructions.length; i++) {\n                    var instruction = expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce\n                            // `-0` which requires non standard math arithmetic and it can prevent VM optimizations.\n                            // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n                            // TODO(misko): PERF This should be refactored to use `~instruction` as that does not\n                            // suffer from `-0` and it is faster/more compact.\n                            currentElementIndex = 0 - instruction;\n                            setSelectedIndex(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            setBindingRootForHostBindings(bindingRootIndex, currentDirectiveIndex);\n                            var hostCtx = lView[currentDirectiveIndex];\n                            instruction(2 /* Update */, hostCtx);\n                        }\n                        // TODO(misko): PERF Relying on incrementing the `currentDirectiveIndex` here is\n                        // sub-optimal. The implications are that if we have a lot of directives but none of them\n                        // have host bindings we nevertheless need to iterate over the expando instructions to\n                        // update the counter. It would be much better if we could encode the\n                        // `currentDirectiveIndex` into the `expandoInstruction` array so that we only need to\n                        // iterate over those directives which actually have `hostBindings`.\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setSelectedIndex(-1);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode &&\n            assertEqual(tView.type == 2 /* Embedded */ ? parentLView !== null : true, true, 'Embedded views must have parentLView');\n        lView[DECLARATION_COMPONENT_VIEW] =\n            tView.type == 2 /* Embedded */ ? parentLView[DECLARATION_COMPONENT_VIEW] : lView;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param tView `TView` associated with `LView`\n     * @param view The `LView` containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(tView, lView, numSlotsToAlloc) {\n        ngDevMode &&\n            assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            if (tView.firstCreatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    lView.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(tView, lView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(tView, lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstCreatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstCreatePass) {\n                tView.firstCreatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(tView, lView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var flags = lView[FLAGS];\n        if ((flags & 256 /* Destroyed */) === 256 /* Destroyed */)\n            return;\n        enterView(lView, lView[T_HOST]);\n        var checkNoChangesMode = getCheckNoChangesMode();\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingIndex(tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(tView, lView, templateFn, 2 /* Update */, context);\n            }\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoCheck)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindingsByExecutingExpandoInstructions(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n            if (tView.firstUpdatePass === true) {\n                // We need to make sure that we only flip the flag on successful `refreshView` only\n                // Don't do this in `finally` block.\n                // If we did this in `finally` block then an exception could block the execution of styling\n                // instructions which in turn would be unable to insert themselves into the styling linked\n                // list. The result of this would be that if the exception would not be throw on subsequent CD\n                // the styling would be unable to process it data and reflect to the DOM.\n                tView.firstUpdatePass = false;\n            }\n            // Do not reset the dirty state when running in check no changes mode. We don't want components\n            // to behave differently depending on whether check no changes is enabled or not. For example:\n            // Marking an OnPush component as dirty from within the `ngAfterViewInit` hook in order to\n            // refresh a `NgClass` binding should work. If we would reset the dirty state in the check\n            // no changes cycle, the component would be not be dirty for the next update pass. This would\n            // be different in production mode where the component dirty state is not reset.\n            if (!checkNoChangesMode) {\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            }\n        }\n        finally {\n            leaveView();\n        }\n    }\n    function renderComponentOrTemplate(tView, lView, templateFn, context) {\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(lView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                renderView(tView, lView, context);\n            }\n            refreshView(tView, lView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(tView, lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setSelectedIndex(-1);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(tView, lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n        if ((tNode.flags & 128 /* hasHostBindings */) === 128 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTComponentView(def) {\n        return def.tView ||\n            (def.tView = createTView(1 /* Component */, -1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(type, viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(type, viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstCreatePass: boolean,\n            true, // firstUpdatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: DestroyHookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TConstants|null\n            {\n                type: type,\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstCreatePass: true,\n                firstUpdatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    function assertHostNodeExists(rElement, elementOrSelector) {\n        if (!rElement) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param rendererFactory Factory function to create renderer instance.\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     * @param encapsulation View Encapsulation defined for component that requests host element.\n     */\n    function locateHostElement(renderer, elementOrSelector, encapsulation) {\n        if (isProceduralRenderer(renderer)) {\n            // When using native Shadow DOM, do not clear host element to allow native slot projection\n            var preserveContent = encapsulation === exports.ViewEncapsulation.ShadowDom;\n            return renderer.selectRootElement(elementOrSelector, preserveContent);\n        }\n        var rElement = typeof elementOrSelector === 'string' ?\n            renderer.querySelector(elementOrSelector) :\n            elementOrSelector;\n        ngDevMode && assertHostNodeExists(rElement, elementOrSelector);\n        // Always clear host element's content when Renderer3 is in use. For procedural renderer case we\n        // make it depend on whether ShadowDom encapsulation is used (in which case the content should be\n        // preserved to allow native slot projection). ShadowDom encapsulation requires procedural\n        // renderer, and procedural renderer case is handled above.\n        rElement.textContent = '';\n        return rElement;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(tView, lView, context, cleanupFn) {\n        var lCleanup = getLCleanup(lView);\n        lCleanup.push(context);\n        if (tView.firstCreatePass) {\n            getTViewCleanup(tView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(tView, lView, cleanupFn) {\n        getLCleanup(lView).push(cleanupFn);\n        if (tView.firstCreatePass) {\n            getTViewCleanup(tView).push(lView[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeDebug(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // directiveStylingLast: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // mergedAttrs\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        null, // inputs: PropertyAliases|null\n        null, // outputs: PropertyAliases|null\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: string|null\n        undefined, // residualStyles: string|null\n        null, // classes: string|null\n        undefined, // residualClasses: string|null\n        0, // classBindings: TStylingRange;\n        0) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                directiveStylingLast: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                mergedAttrs: null,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: null,\n                outputs: null,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                residualStyles: undefined,\n                classes: null,\n                residualClasses: undefined,\n                classBindings: 0,\n                styleBindings: 0,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            // Do not use unbound attributes as inputs to structural directives, since structural\n            // directive inputs can only be set using microsyntax (e.g. `<div *dir=\"exp\">`).\n            // TODO(FW-1930): microsyntax expressions may also contain unbound/static attributes, which\n            // should be set for inline templates.\n            var initialInputs = (tNodeAttrs !== null && !isInlineTemplate(tNode)) ?\n                generateInitialInputs(directiveInputs, tNodeAttrs) :\n                null;\n            inputsFromAttrs.push(initialInputs);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(tView, tNode, lView, propName, value, renderer, sanitizer, nativeOnly) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByTNode(tNode, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(tView, lView, dataValue, propName, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, tNode.index);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(tView, lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(tView, lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+1]\n             */\n            for (var i = 0; i < dataValue.length; i += 2) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 1], value);\n            }\n        }\n    }\n    function validateProperty(tView, lView, element, propName, tNode) {\n        // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n        // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n        // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n        // execute the check below.\n        if (tView.schemas === null)\n            return true;\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        if (matchingSchemas(tView, lView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName)) {\n            return true;\n        }\n        // Note: `typeof Node` returns 'function' in most browsers, but on IE it is 'object' so we\n        // need to account for both here, while being careful for `typeof null` also returning 'object'.\n        return typeof Node === 'undefined' || Node === null || !(element instanceof Node);\n    }\n    function matchingSchemas(tView, lView, tagName) {\n        var schemas = tView.schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, lView, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, lView, def);\n        }\n        var directive = getNodeInjectable(lView, tView, lView.length - 1, rootTNode);\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(rootTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstCreatePass(tView);\n        var hasDirectives = false;\n        if (getBindingsEnabled()) {\n            var directiveDefs = findDirectiveDefMatches(tView, lView, tNode);\n            var exportsMap = localRefs === null ? null : { '': -1 };\n            if (directiveDefs !== null) {\n                var totalDirectiveHostVars = 0;\n                hasDirectives = true;\n                initTNodeFlags(tNode, tView.data.length, directiveDefs.length);\n                // When the same token is provided by several directives on the same node, some rules apply in\n                // the viewEngine:\n                // - viewProviders have priority over providers\n                // - the last directive in NgModule.declarations has priority over the previous one\n                // So to match these rules, the order in which providers are added in the arrays is very\n                // important.\n                for (var i = 0; i < directiveDefs.length; i++) {\n                    var def = directiveDefs[i];\n                    if (def.providersResolver)\n                        def.providersResolver(def);\n                }\n                generateExpandoInstructionBlock(tView, tNode, directiveDefs.length);\n                var preOrderHooksFound = false;\n                var preOrderCheckHooksFound = false;\n                for (var i = 0; i < directiveDefs.length; i++) {\n                    var def = directiveDefs[i];\n                    // Merge the attrs in the order of matches. This assumes that the first directive is the\n                    // component itself, so that the component has the least priority.\n                    tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, def.hostAttrs);\n                    baseResolveDirective(tView, lView, def);\n                    saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                    if (def.contentQueries !== null)\n                        tNode.flags |= 8 /* hasContentQuery */;\n                    if (def.hostBindings !== null || def.hostAttrs !== null || def.hostVars !== 0)\n                        tNode.flags |= 128 /* hasHostBindings */;\n                    // Only push a node index into the preOrderHooks array if this is the first\n                    // pre-order hook found on this node.\n                    if (!preOrderHooksFound && (def.onChanges || def.onInit || def.doCheck)) {\n                        // We will push the actual hook function into this array later during dir instantiation.\n                        // We cannot do it now because we must ensure hooks are registered in the same\n                        // order that directives are created (i.e. injection order).\n                        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(tNode.index - HEADER_OFFSET);\n                        preOrderHooksFound = true;\n                    }\n                    if (!preOrderCheckHooksFound && (def.onChanges || def.doCheck)) {\n                        (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = []))\n                            .push(tNode.index - HEADER_OFFSET);\n                        preOrderCheckHooksFound = true;\n                    }\n                    addHostBindingsToExpandoInstructions(tView, def);\n                    totalDirectiveHostVars += def.hostVars;\n                }\n                initializeInputAndOutputAliases(tView, tNode);\n                growHostVarsSpace(tView, lView, totalDirectiveHostVars);\n            }\n            if (exportsMap)\n                cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        }\n        // Merge the template attrs last so that they have the highest priority.\n        tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, tNode.attrs);\n        return hasDirectives;\n    }\n    /**\n     * Add `hostBindings` to the `TView.expandoInstructions`.\n     *\n     * @param tView `TView` to which the `hostBindings` should be added.\n     * @param def `ComponentDef`/`DirectiveDef`, which contains the `hostVars`/`hostBindings` to add.\n     */\n    function addHostBindingsToExpandoInstructions(tView, def) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var expando = tView.expandoInstructions;\n        // TODO(misko): PERF we are adding `hostBindings` even if there is nothing to add! This is\n        // suboptimal for performance. `def.hostBindings` may be null,\n        // but we still need to push null to the array as a placeholder\n        // to ensure the directive counter is incremented (so host\n        // binding functions always line up with the corrective directive).\n        // This is suboptimal for performance. See `currentDirectiveIndex`\n        //  comment in `setHostBindingsByExecutingExpandoInstructions` for more\n        // details.  expando.push(def.hostBindings);\n        expando.push(def.hostBindings);\n        var hostVars = def.hostVars;\n        if (hostVars !== 0) {\n            expando.push(def.hostVars);\n        }\n    }\n    /**\n     * Grow the `LView`, blueprint and `TView.data` to accommodate the `hostBindings`.\n     *\n     * To support locality we don't know ahead of time how many `hostVars` of the containing directives\n     * we need to allocate. For this reason we allow growing these data structures as we discover more\n     * directives to accommodate them.\n     *\n     * @param tView `TView` which needs to be grown.\n     * @param lView `LView` which needs to be grown.\n     * @param count Size by which we need to grow the data structures.\n     */\n    function growHostVarsSpace(tView, lView, count) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertSame(tView, lView[TVIEW], '`LView` must be associated with `TView`!');\n        for (var i = 0; i < count; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode, native) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstCreatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        attachPatchData(native, lView);\n        var initialInputs = tNode.initialInputs;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var isComponent = isComponentDef(def);\n            if (isComponent) {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */);\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(lView, tView, i, tNode);\n            attachPatchData(directive, lView);\n            if (initialInputs !== null) {\n                setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n            }\n            if (isComponent) {\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                componentView[CONTEXT] = directive;\n            }\n        }\n    }\n    function invokeDirectivesHostBindings(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstCreatePass = tView.firstCreatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var currentDirectiveIndex = getCurrentDirectiveIndex();\n        try {\n            setSelectedIndex(elementIndex);\n            for (var dirIndex = start; dirIndex < end; dirIndex++) {\n                var def = tView.data[dirIndex];\n                var directive = lView[dirIndex];\n                setCurrentDirectiveIndex(dirIndex);\n                if (def.hostBindings !== null || def.hostVars !== 0 || def.hostAttrs !== null) {\n                    invokeHostBindingsInCreationMode(def, directive);\n                }\n                else if (firstCreatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setSelectedIndex(-1);\n            setCurrentDirectiveIndex(currentDirectiveIndex);\n        }\n    }\n    /**\n     * Invoke the host bindings in creation mode.\n     *\n     * @param def `DirectiveDef` which may contain the `hostBindings` function.\n     * @param directive Instance of directive.\n     */\n    function invokeHostBindingsInCreationMode(def, directive) {\n        if (def.hostBindings !== null) {\n            def.hostBindings(1 /* Create */, directive);\n        }\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n        // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce `-0` which\n        // requires non standard math arithmetic and it can prevent VM optimizations.\n        // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n        var elementIndex = HEADER_OFFSET - tNode.index;\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = []))\n            .push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Matches the current node against all available selectors.\n     * If a component is matched (at most one), it is returned in first position in the array.\n     */\n    function findDirectiveDefMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode &&\n            assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n     */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : []))\n            .push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (isComponentDef(def))\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initTNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode &&\n            assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTComponentView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(tNode, lView, name, value, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByTNode(tNode, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */ << 1 /* SHIFT */, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            var activeIndexFlag = void 0;\n            if (isLContainer(viewOrContainer) &&\n                (activeIndexFlag = viewOrContainer[ACTIVE_INDEX]) >> 1 /* SHIFT */ ===\n                    -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    if (viewAttachedToChangeDetector(embeddedLView)) {\n                        refreshView(embeddedTView, embeddedLView, embeddedTView.template, embeddedLView[CONTEXT]);\n                    }\n                }\n                if ((activeIndexFlag & 1 /* HAS_TRANSPLANTED_VIEWS */) !== 0) {\n                    // We should only CD moved views if the component where they were inserted does not match\n                    // the component where they were declared and insertion is on-push. Moved views also\n                    // contains intra component moves, or check-always which need to be skipped.\n                    refreshTransplantedViews(viewOrContainer, lView[DECLARATION_COMPONENT_VIEW]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /**\n     * Refresh transplanted LViews.\n     *\n     * See: `ActiveIndexFlag.HAS_TRANSPLANTED_VIEWS` and `LView[DECLARATION_COMPONENT_VIEW]` for\n     * explanation of transplanted views.\n     *\n     * @param lContainer The `LContainer` which has transplanted views.\n     * @param declaredComponentLView The `lContainer` parent component `LView`.\n     */\n    function refreshTransplantedViews(lContainer, declaredComponentLView) {\n        var movedViews = lContainer[MOVED_VIEWS];\n        ngDevMode && assertDefined(movedViews, 'Transplanted View flags set but missing MOVED_VIEWS');\n        for (var i = 0; i < movedViews.length; i++) {\n            var movedLView = movedViews[i];\n            var insertionLContainer = movedLView[PARENT];\n            ngDevMode && assertLContainer(insertionLContainer);\n            var insertedComponentLView = insertionLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(insertedComponentLView, 'Missing LView');\n            // Check if we have a transplanted view by compering declaration and insertion location.\n            if (insertedComponentLView !== declaredComponentLView) {\n                // Yes the `LView` is transplanted.\n                // Here we would like to know if the component is `OnPush`. We don't have\n                // explicit `OnPush` flag instead we set `CheckAlways` to false (which is `OnPush`)\n                // Not to be confused with `ManualOnPush` which is used with wether a DOM event\n                // should automatically mark a view as dirty.\n                var insertionComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) === 0;\n                if (insertionComponentIsOnPush) {\n                    // Here we know that the template has been transplanted across components and is\n                    // on-push (not just moved within a component). If the insertion is marked dirty, then\n                    // there is no need to CD here as we will do it again later when we get to insertion\n                    // point.\n                    var movedTView = movedLView[TVIEW];\n                    ngDevMode && assertDefined(movedTView, 'TView must be allocated');\n                    refreshView(movedTView, movedLView, movedTView.template, movedLView[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var componentTView = componentView[TVIEW];\n            refreshView(componentTView, componentView, componentTView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        var componentTView = componentView[TVIEW];\n        syncViewWithBlueprint(componentTView, componentView);\n        renderView(componentTView, componentView, componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param tView The `TView` that contains the blueprint for syncing\n     * @param lView The view to sync\n     */\n    function syncViewWithBlueprint(tView, lView) {\n        for (var i = lView.length; i < tView.blueprint.length; i++) {\n            lView.push(tView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(tView, lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(tView, lView, context) {\n        var rendererFactory = lView[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            refreshView(tView, lView, tView.template, context);\n        }\n        catch (error) {\n            handleError(lView, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(tView, view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(tView, view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param tNode `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, tNode, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getLCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(tView) {\n        return tView.cleanup || (tView.cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(currentDef, tNode, lView) {\n        // TODO(FW-2043): the `currentDef` is null when host bindings are invoked while creating root\n        // component (see packages/core/src/render3/component.ts). This is not consistent with the process\n        // of creating inner components, when current directive index is available in the state. In order\n        // to avoid relying on current def being `null` (thus special-casing root component creation), the\n        // process of creating root component should be unified with the process of creating inner\n        // components.\n        if (currentDef === null || isComponentDef(currentDef)) {\n            lView = unwrapLView(lView[tNode.index]);\n        }\n        return lView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param tView The current TView\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     *        possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(tView, lView, inputs, publicName, value) {\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            if (def.setInput !== null) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(tView, lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(tView.node, lView);\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(tView, lView, renderer, action, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param tView The `TView' of the `LView` to be detached\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(tView, lView) {\n        applyView(tView, lView, lView[RENDERER], 2 /* Detach */, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView[TVIEW], rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    isLView(lViewOrLContainer) && cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                if (lViewOrLContainer === null)\n                    lViewOrLContainer = rootView;\n                isLView(lViewOrLContainer) && cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param tView The `TView' of the `LView` to insert\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(tView, lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(tView);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertDefined(lView, 'LView required');\n        ngDevMode && assertLContainer(declarationContainer);\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var insertedLContainer = lView[PARENT];\n        ngDevMode && assertLContainer(insertedLContainer);\n        var insertedComponentLView = insertedLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n        ngDevMode && assertDefined(insertedComponentLView, 'Missing insertedComponentLView');\n        var insertedComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) !== 16 /* CheckAlways */;\n        if (insertedComponentIsOnPush) {\n            var declaredComponentLView = lView[DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(declaredComponentLView, 'Missing declaredComponentLView');\n            if (declaredComponentLView !== insertedComponentLView) {\n                // At this point the declaration-component is not same as insertion-component and we are in\n                // on-push mode, this means that this is a transplanted view. Mark the declared lView as\n                // having\n                // transplanted views so that those views can participate in CD.\n                declarationContainer[ACTIVE_INDEX] |= 1 /* HAS_TRANSPLANTED_VIEWS */;\n            }\n        }\n        if (movedViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            movedViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode &&\n            assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = movedViews.indexOf(lView);\n        movedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach[TVIEW], viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView[TVIEW], detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting clean up (e.g. removing listeners, calling onDestroys).\n     *\n     * @param tView The `TView' of the `LView` to be destroyed\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(tView, lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(tView, lView, renderer, 3 /* Destroy */, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param tView `TView` for the `LView` to clean up.\n     * @param lView The LView to clean up\n     */\n    function cleanUpView(tView, lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            lView[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            lView[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(tView, lView);\n            removeListeners(tView, lView);\n            var hostTNode = lView[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ &&\n                isProceduralRenderer(lView[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                lView[RENDERER].destroy();\n            }\n            var declarationContainer = lView[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(lView[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== lView[PARENT]) {\n                    detachMovedView(declarationContainer, lView);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = lView[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(tView);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(tView, lView) {\n        var tCleanup = tView.cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(tView, lView) {\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = lView[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    var toCall = destroyHooks[i + 1];\n                    if (Array.isArray(toCall)) {\n                        for (var j = 0; j < toCall.length; j += 2) {\n                            toCall[j + 1].call(context[toCall[j]]);\n                        }\n                    }\n                    else {\n                        toCall.call(context);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tView, tNode, currentView) {\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null &&\n            (parentTNode.type === 4 /* ElementContainer */ ||\n                parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                ngDevMode && assertNodeOfPossibleTypes(hostTNode, 3 /* Element */);\n                return currentView[HOST];\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = tView.data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param tView The `TView' to be appended\n     * @param lView The current LView\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(tView, lView, childEl, childTNode) {\n        var renderParent = getRenderParent(tView, childTNode, lView);\n        if (renderParent != null) {\n            var renderer = lView[RENDERER];\n            var parentTNode = childTNode.parent || lView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, lView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Returns the first native node for a given LView, starting from the provided TNode.\n     *\n     * Native nodes are returned in the order in which those appear in the native tree (DOM).\n     */\n    function getFirstNativeNode(lView, tNode) {\n        if (tNode !== null) {\n            ngDevMode &&\n                assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */, 5 /* IcuContainer */, 1 /* Projection */);\n            var tNodeType = tNode.type;\n            if (tNodeType === 3 /* Element */) {\n                return getNativeByTNode(tNode, lView);\n            }\n            else if (tNodeType === 0 /* Container */) {\n                return getBeforeNodeForView(-1, lView[tNode.index]);\n            }\n            else if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                var elIcuContainerChild = tNode.child;\n                if (elIcuContainerChild !== null) {\n                    return getFirstNativeNode(lView, elIcuContainerChild);\n                }\n                else {\n                    var rNodeOrLContainer = lView[tNode.index];\n                    if (isLContainer(rNodeOrLContainer)) {\n                        return getBeforeNodeForView(-1, rNodeOrLContainer);\n                    }\n                    else {\n                        return unwrapRNode(rNodeOrLContainer);\n                    }\n                }\n            }\n            else {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedTNode = componentHost.projection[tNode.projection];\n                if (firstProjectedTNode != null) {\n                    return getFirstNativeNode(parentView, firstProjectedTNode);\n                }\n                else {\n                    return getFirstNativeNode(lView, tNode.next);\n                }\n            }\n        }\n        return null;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var firstTNodeOfView = lView[TVIEW].firstChild;\n            if (firstTNodeOfView !== null) {\n                return getFirstNativeNode(lView, firstTNodeOfView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode &&\n                assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param tView The `TView' which needs to be inserted, detached, destroyed\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(tView, lView, renderer, action, renderParent, beforeNode) {\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param tView The `TView` of `LView` which needs to be inserted, detached, destroyed\n     * @param lView The `LView` which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(tView, lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tView, tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = lView[DECLARATION_COMPONENT_VIEW];\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(lView[TVIEW], lView, renderer, action, renderParent, anchor);\n        }\n    }\n    /**\n     * Writes class/style to element.\n     *\n     * @param renderer Renderer to use.\n     * @param isClassBased `true` if it should be written to `class` (`false` to write to `style`)\n     * @param rNode The Node to write to.\n     * @param prop Property to write to. This would be the class/style name.\n     * @param value Value to write. If `null`/`undefined`/`false` this is considered a remove (set/add\n     *        otherwise).\n     */\n    function applyStyling(renderer, isClassBased, rNode, prop, value) {\n        var isProcedural = isProceduralRenderer(renderer);\n        if (isClassBased) {\n            // We actually want JS true/false here because any truthy value should add the class\n            if (!value) {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProcedural) {\n                    renderer.removeClass(rNode, prop);\n                }\n                else {\n                    rNode.classList.remove(prop);\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProcedural) {\n                    renderer.addClass(rNode, prop);\n                }\n                else {\n                    ngDevMode && assertDefined(rNode.classList, 'HTMLElement expected');\n                    rNode.classList.add(prop);\n                }\n            }\n        }\n        else {\n            // TODO(misko): Can't import RendererStyleFlags2.DashCase as it causes imports to be resolved in\n            // different order which causes failures. Using direct constant as workaround for now.\n            var flags = prop.indexOf('-') == -1 ? undefined : 2 /* RendererStyleFlags2.DashCase */;\n            if (value == null /** || value === undefined */) {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProcedural) {\n                    renderer.removeStyle(rNode, prop, flags);\n                }\n                else {\n                    rNode.style.removeProperty(prop);\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProcedural) {\n                    renderer.setStyle(rNode, prop, value, flags);\n                }\n                else {\n                    ngDevMode && assertDefined(rNode.style, 'HTMLElement expected');\n                    rNode.style.setProperty(prop, value);\n                }\n            }\n        }\n    }\n    /**\n     * Write `cssText` to `RElement`.\n     *\n     * This function does direct write without any reconciliation. Used for writing initial values, so\n     * that static styling values do not pull in the style parser.\n     *\n     * @param renderer Renderer to use\n     * @param element The element which needs to be updated.\n     * @param newValue The new class list to write.\n     */\n    function writeDirectStyle(renderer, element, newValue) {\n        ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n        if (isProceduralRenderer(renderer)) {\n            renderer.setAttribute(element, 'style', newValue);\n        }\n        else {\n            element.style.cssText = newValue;\n        }\n        ngDevMode && ngDevMode.rendererSetStyle++;\n    }\n    /**\n     * Write `className` to `RElement`.\n     *\n     * This function does direct write without any reconciliation. Used for writing initial values, so\n     * that static styling values do not pull in the style parser.\n     *\n     * @param renderer Renderer to use\n     * @param element The element which needs to be updated.\n     * @param newValue The new class list to write.\n     */\n    function writeDirectClass(renderer, element, newValue) {\n        ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n        if (isProceduralRenderer(renderer)) {\n            if (newValue === '') {\n                // There are tests in `google3` which expect `element.getAttribute('class')` to be `null`.\n                renderer.removeAttribute(element, 'class');\n            }\n            else {\n                renderer.setAttribute(element, 'class', newValue);\n            }\n        }\n        else {\n            element.className = newValue;\n        }\n        ngDevMode && ngDevMode.rendererSetClassName++;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If `startTNode.parent` exists and has an injector, returns TNode for that injector.\n     * Otherwise, unwraps a parent injector location number to find the view offset from the current\n     * injector, then walks up the declaration view tree until the TNode of the parent injector is\n     * found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        // If there is an injector on the parent TNode, retrieve the TNode for that injector.\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var tNode = startTNode.parent;\n            // If tNode.injectorIndex === tNode.parent.injectorIndex, then the index belongs to a parent\n            // injector.\n            while (tNode.parent != null && injectorIndex == tNode.parent.injectorIndex) {\n                tNode = tNode.parent;\n            }\n            return tNode;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                var lView = this._lView;\n                if (lView[HOST] == null) {\n                    var hostTView = lView[T_HOST];\n                    return collectNativeNodes(lView[TVIEW], lView, hostTView.child, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () {\n                return this._lView[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView[TVIEW], this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) {\n            storeCleanupFn(this._lView[TVIEW], this._lView, callback);\n        };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () {\n            markViewDirty(this._cdRefInjectingView || this._lView);\n        };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () {\n            this._lView[FLAGS] &= ~128 /* Attached */;\n        };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () {\n            this._lView[FLAGS] |= 128 /* Attached */;\n        };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            detectChangesInternal(this._lView[TVIEW], this._lView, this.context);\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () {\n            checkNoChangesInternal(this._lView[TVIEW], this._lView, this.context);\n        };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView[TVIEW], this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () {\n            detectChangesInRootView(this._view);\n        };\n        RootViewRef.prototype.checkNoChanges = function () {\n            checkNoChangesInRootView(this._view);\n        };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () {\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(tView, lView, tNode, result, isProjection) {\n        if (isProjection === void 0) { isProjection = false; }\n        while (tNode !== null) {\n            ngDevMode &&\n                assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */, 5 /* IcuContainer */);\n            var lNode = lView[tNode.index];\n            if (lNode !== null) {\n                result.push(unwrapRNode(lNode));\n            }\n            // A given lNode can represent either a native node or a LContainer (when it is a host of a\n            // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n            // from the views in this container.\n            if (isLContainer(lNode)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                    var lViewInAContainer = lNode[i];\n                    var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                    if (lViewFirstChildTNode !== null) {\n                        collectNativeNodes(lViewInAContainer[TVIEW], lViewInAContainer, lViewFirstChildTNode, result);\n                    }\n                }\n            }\n            var tNodeType = tNode.type;\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                collectNativeNodes(tView, lView, tNode.child, result);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedNode = componentHost.projection[tNode.projection];\n                if (firstProjectedNode !== null && parentView !== null) {\n                    collectNativeNodes(parentView[TVIEW], parentView, firstProjectedNode, result, true);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef, _super);\n                function ElementRef() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef, _super);\n                function TemplateRef(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var embeddedLView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    embeddedLView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        embeddedLView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(embeddedTView, embeddedLView, context);\n                    var viewRef = new ViewRef(embeddedLView);\n                    viewRef._tViewNode = embeddedLView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef, _super);\n                function ViewContainerRef(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n                    get: function () {\n                        return new NodeInjector(this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n                    get: function () {\n                        return this._lContainer.length - CONTAINER_HEADER_OFFSET;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef.prototype.insert = function (viewRef, index) {\n                    var lView = viewRef._lView;\n                    var tView = lView[TVIEW];\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, detach it first so we clean up references appropriately.\n                        var prevIdx = this.indexOf(viewRef);\n                        // A view might be attached either to this or a different container. The `prevIdx` for\n                        // those cases will be:\n                        // equal to -1 for views attached to this ViewContainerRef\n                        // >= 0 for views attached to a different ViewContainerRef\n                        if (prevIdx !== -1) {\n                            this.detach(prevIdx);\n                        }\n                        else {\n                            var prevLContainer = lView[PARENT];\n                            ngDevMode &&\n                                assertEqual(isLContainer(prevLContainer), true, 'An attached view should have its PARENT point to a container.');\n                            // We need to re-create a R3ViewContainerRef instance since those are not stored on\n                            // LView (nor anywhere else).\n                            var prevVCRef = new R3ViewContainerRef(prevLContainer, prevLContainer[T_HOST], prevLContainer[PARENT]);\n                            prevVCRef.detach(prevVCRef.indexOf(viewRef));\n                        }\n                    }\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(tView, lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(tView, lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    return this.insert(viewRef, newIndex);\n                };\n                ViewContainerRef.prototype.indexOf = function (viewRef) {\n                    var viewRefsArr = this._lContainer[VIEW_REFS];\n                    return viewRefsArr !== null ? viewRefsArr.indexOf(viewRef) : -1;\n                };\n                ViewContainerRef.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, \"ViewRef index must be positive, got \" + index);\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode &&\n            assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            setLContainerActiveIndex(lContainer, -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */);\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            // The comment node in question is already part of the DOM structure so we don't need to append\n            // it again.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n                // A `ViewContainerRef` can be injected by the root (topmost / bootstrapped) component. In\n                // this case we can't use TView / TNode data structures to insert container's marker node\n                // (both a parent of a comment node and the comment node itself are not part of any view). In\n                // this specific case we use low-level DOM manipulation to insert container's marker (comment)\n                // node.\n                if (isRootView(hostView)) {\n                    var renderer = hostView[RENDERER];\n                    var hostNative = getNativeByTNode(hostTNode, hostView);\n                    var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                    nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n                }\n                else {\n                    appendChild(hostView[TVIEW], hostView, commentNode, hostTNode);\n                }\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */ || tNode.type === 5 /* IcuContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = lView[DECLARATION_COMPONENT_VIEW]; // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () {\n            return true;\n        };\n        ReflectionCapabilities.prototype.factory = function (t) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return new (t.bind.apply(t, __spread([void 0], args)))();\n            };\n        };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) {\n            return {};\n        };\n        ReflectionCapabilities.prototype.getter = function (name) {\n            return new Function('o', 'return o.' + name + ';');\n        };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) {\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) {\n            return enumIdentifier[name];\n        };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep) && dep.length > 0) {\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                var proto = Object.getPrototypeOf(param);\n                if (param instanceof Optional || proto.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || proto.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || proto.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || proto.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else if (dep === undefined || (Array.isArray(dep) && dep.length === 0)) {\n            meta.token = undefined;\n            meta.resolved = R3ResolvedDependencyType.Invalid;\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n            // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n            // which will break inheriting the injectable definition from a grandparent through an\n            // undecorated parent class. We work around it by defining a method which should be used\n            // as a fallback. This should only be a problem in JIT mode, because in AOT TypeScript\n            // seems to have a workaround for static properties. When inheriting from an undecorated\n            // parent is no longer supported in v10, this can safely be removed.\n            if (!type.hasOwnProperty(NG_PROV_DEF_FALLBACK)) {\n                type[NG_PROV_DEF_FALLBACK] = function () { return type[NG_PROV_DEF]; };\n            }\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Injectable\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        var injector = createInjectorWithoutInjectorInstances(defType, parent, additionalProviders, name);\n        injector._resolveInjectorDefTypes();\n        return injector;\n    }\n    /**\n     * Creates a new injector without eagerly resolving its injector types. Can be used in places\n     * where resolving the injector types immediately can lead to an infinite loop. The injector types\n     * should be resolved at a later point by calling `_resolveInjectorDefTypes`.\n     */\n    function createInjectorWithoutInjectorInstances(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        return new R3Injector(defType, additionalProviders, parent || getNullInjector(), name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () {\n                return this._destroyed;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        /** @internal */\n        R3Injector.prototype._resolveInjectorDefTypes = function () {\n            var _this = this;\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Track the InjectorType and add a provider for it. It's important that this is done after the\n            // def's imports.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            var factory = providerToFactory(provider, ngModuleType, providers);\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            var unwrappedProvider = resolveForwardRef(provider);\n            return getFactoryDef(unwrappedProvider) || injectableDefOrInjectorDefFactory(unwrappedProvider);\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return getFactoryDef(classRef_1) || injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface. Injectors are configured\n     * with [providers](guide/glossary#provider) that associate\n     * dependencies of various types with [injection tokens](guide/glossary#di-token).\n     *\n     * @see [\"DI Providers\"](guide/dependency-injection-providers).\n     * @see `StaticProvider`\n     *\n     * @usageNotes\n     *\n     *  The following example creates a service injector instance.\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     *\n     * ### Usage example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () {\n                return _globalKeyRegistry.numberOfKeys;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () {\n                return this._allKeys.size;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) {\n            this.reflectionCapabilities = caps;\n        };\n        Reflector.prototype.factory = function (type) {\n            return this.reflectionCapabilities.factory(type);\n        };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) {\n            return this.reflectionCapabilities.getter(name);\n        };\n        Reflector.prototype.setter = function (name) {\n            return this.reflectionCapabilities.setter(name);\n        };\n        Reflector.prototype.method = function (name) {\n            return this.reflectionCapabilities.method(name);\n        };\n        Reflector.prototype.importUri = function (type) {\n            return this.reflectionCapabilities.importUri(type);\n        };\n        Reflector.prototype.resourceUri = function (type) {\n            return this.reflectionCapabilities.resourceUri(type);\n        };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = {};\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () {\n            return this.objs.length;\n        };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () {\n            return this.displayName;\n        };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compute the static styling (class/style) from `TAttributes`.\n     *\n     * This function should be called during `firstCreatePass` only.\n     *\n     * @param tNode The `TNode` into which the styling information should be loaded.\n     * @param attrs `TAttributes` containing the styling information.\n     */\n    function computeStaticStyling(tNode, attrs) {\n        ngDevMode &&\n            assertFirstCreatePass(getTView(), 'Expecting to be called in first template pass only');\n        var styles = tNode.styles;\n        var classes = tNode.classes;\n        var mode = 0;\n        for (var i = 0; i < attrs.length; i++) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                mode = value;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = concatStringsWithSpace(classes, value);\n            }\n            else if (mode == 2 /* Styles */) {\n                var style = value;\n                var styleValue = attrs[++i];\n                styles = concatStringsWithSpace(styles, style + ': ' + styleValue + ';');\n            }\n        }\n        styles !== null && (tNode.styles = styles);\n        classes !== null && (tNode.classes = classes);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isIterable(obj) {\n        return obj !== null && typeof obj === 'object' && obj[getSymbolIterator()] !== undefined;\n    }\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) {\n            return new WrappedValue(value);\n        };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) {\n            return WrappedValue.isWrapped(value) ? value.wrapped : value;\n        };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) {\n            return value instanceof WrappedValue;\n        };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /**\n     * Updates binding if changed, then returns whether it was updated.\n     *\n     * This function also checks the `CheckNoChangesMode` and throws if changes are made.\n     * Some changes (Objects/iterables) during `CheckNoChangesMode` are exempt to comply with VE\n     * behavior.\n     *\n     * @param lView current `LView`\n     * @param bindingIndex The binding in the `LView` to check\n     * @param value New value to check against `lView[bindingIndex]`\n     * @returns `true` if the bindings has changed. (Throws if binding has changed during\n     *          `CheckNoChangesMode`)\n     */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    var details = getExpressionChangedErrorDetails(lView, bindingIndex, oldValueToCompare, value);\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, details.oldValue, details.newValue, details.propName);\n                }\n                // There was a change, but the `devModeEqual` decided that the change is exempt from an error.\n                // For this reason we exit as if no change. The early exit is needed to prevent the changed\n                // value to be written into `LView` (If we would write the new value that we would not see it\n                // as change on next CD.)\n                return false;\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, name, value, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(tView.data, tNode, 'attr.' + name, bindingIndex);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = getBindingIndex();\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        setBindingIndex(bindingIndex);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, nextBindingIndex(), v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        incrementBindingIndex(2);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        incrementBindingIndex(3);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        incrementBindingIndex(4);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n            renderStringify(v2) + i2 + renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        incrementBindingIndex(5);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n            renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        incrementBindingIndex(6);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        incrementBindingIndex(7);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n            renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 +\n            renderStringify(v5) + i5 + renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        incrementBindingIndex(8);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n            renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 +\n            renderStringify(v5) + i5 + renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            var tNode = getSelectedTNode();\n            elementAttributeInternal(tNode, lView, attrName, interpolated, sanitizer, namespace);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([getTView().data, tNode, 'attr.' + attrName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component.\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view[TVIEW], view, component);\n    }\n    /**\n     * Marks the component as dirty (needing change detection). Marking a component dirty will\n     * schedule a change detection on it at some point in the future.\n     *\n     * Marking an already dirty component as dirty won't do anything. Only one outstanding change\n     * detection can be scheduled per component tree.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tView = getTView();\n        var tNode = containerInternal(tView, lView, index, null, null);\n        if (tView.firstCreatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    function templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        // TODO(pk): refactor getOrCreateTNode to have the \"create\" only version\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 0 /* Container */, tagName || null, getConstant(tViewConsts, attrsIndex));\n        resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        registerPostOrderHooks(tView, tNode);\n        var embeddedTView = tNode.tViews = createTView(2 /* Embedded */, -1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n        var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n        embeddedTViewNode.injectorIndex = tNode.injectorIndex;\n        embeddedTView.node = embeddedTViewNode;\n        if (tView.queries !== null) {\n            tView.queries.template(tView, tNode);\n            embeddedTView.queries = tView.queries.embeddedTView(tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrsIndex Index of template attributes in the `consts` array.\n     * @param localRefs Index of the local references in the `consts` array.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.firstCreatePass ?\n            templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, false);\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        appendChild(tView, lView, comment, tNode);\n        attachPatchData(comment, lView);\n        addToViewTree(lView, lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode));\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = getTView();\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = getLContainerActiveIndex(lContainer);\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(tView, lView, nodeIndex, tagName, attrs) {\n        ngDevMode &&\n            assertEqual(getBindingIndex(), tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(tView, lView, comment, tNode);\n        attachPatchData(comment, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(tView, lView, index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        var tNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(tNode, lView, resolveForwardRef(token), flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, value, lView[RENDERER], sanitizer, false);\n            ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Given `<div style=\"...\" my-dir>` and `MyDir` with `@Input('style')` we need to write to\n     * directive input.\n     */\n    function setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased) {\n        var inputs = tNode.inputs;\n        var property = isClassBased ? 'class' : 'style';\n        // We support both 'class' and `className` hence the fallback.\n        setInputsForProperty(tView, lView, inputs[property], property, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n        var hasDirectives = resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        ngDevMode && warnAboutUnknownElement(tView, lView, native, tNode, hasDirectives);\n        if (tNode.mergedAttrs !== null) {\n            computeStaticStyling(tNode, tNode.mergedAttrs);\n        }\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = HEADER_OFFSET + index;\n        ngDevMode &&\n            assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var renderer = lView[RENDERER];\n        var native = lView[adjustedIndex] = elementCreate(name, renderer, getNamespace());\n        var tNode = tView.firstCreatePass ?\n            elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        var mergedAttrs = tNode.mergedAttrs;\n        if (mergedAttrs !== null) {\n            setUpAttributes(renderer, native, mergedAttrs);\n        }\n        var classes = tNode.classes;\n        if (classes !== null) {\n            writeDirectClass(renderer, native, classes);\n        }\n        var styles = tNode.styles;\n        if (styles !== null) {\n            writeDirectStyle(renderer, native, styles);\n        }\n        appendChild(tView, lView, native, tNode);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex !== null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        decreaseElementDepthCount();\n        var tView = getTView();\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (tNode.classes !== null && hasClassInput(tNode)) {\n            setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.classes, true);\n        }\n        if (tNode.styles !== null && hasStyleInput(tNode)) {\n            setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.styles, false);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n        ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n        ɵɵelementEnd();\n    }\n    function warnAboutUnknownElement(tView, lView, element, tNode, hasDirectives) {\n        var schemas = tView.schemas;\n        // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n        // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n        // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n        // execute the check below.\n        if (schemas === null)\n            return;\n        var tagName = tNode.tagName;\n        // If the element matches any directive, it's considered as valid.\n        if (!hasDirectives && tagName !== null) {\n            // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n            // as a custom element. Note that unknown elements with a dash in their name won't be instances\n            // of HTMLUnknownElement in browsers that support web components.\n            var isUnknown = \n            // Note that we can't check for `typeof HTMLUnknownElement === 'function'`,\n            // because while most browsers return 'function', IE returns 'object'.\n            (typeof HTMLUnknownElement !== 'undefined' && HTMLUnknownElement &&\n                element instanceof HTMLUnknownElement) ||\n                (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                    !customElements.get(tagName));\n            if (isUnknown && !matchingSchemas(tView, lView, tagName)) {\n                var warning = \"'\" + tagName + \"' is not a known element:\\n\";\n                warning += \"1. If '\" + tagName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (tagName && tagName.indexOf('-') > -1) {\n                    warning += \"2. If '\" + tagName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    warning +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                console.warn(warning);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) {\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, 'ng-container', attrs);\n        // While ng-container doesn't necessarily support styling, we use the style context to identify\n        // and execute directives on the ng-container.\n        if (attrs !== null) {\n            computeStaticStyling(tNode, attrs);\n        }\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        resolveDirectives(tView, lView, tNode, localRefs);\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        ngDevMode &&\n            assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n        var tNode = tView.firstCreatePass ?\n            elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'ng-container' : '');\n        appendChild(tView, lView, native, tNode);\n        attachPatchData(native, lView);\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n        ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, getLContainerActiveIndex(lContainer), viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender[TVIEW], viewToRender, lContainer, getLContainerActiveIndex(lContainer));\n            }\n            lContainer[ACTIVE_INDEX] += 2 /* INCREMENT */;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(2 /* Embedded */, viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = getTView();\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(tView, lView, context); // creation mode pass\n        }\n        refreshView(tView, lView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tView = getTView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(tView, lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵlistener;\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component or directive.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = getTView();\n        var currentDef = getCurrentDirectiveDef(tView.data);\n        var renderer = loadComponentRenderer(currentDef, tNode, lView);\n        listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵcomponentHostSyntheticListener;\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(tView, lView, eventName, tNodeIdx) {\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstCreatePass = tView.firstCreatePass;\n        var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n        // When the ɵɵlistener instruction was generated and is executed we know that there is either a\n        // native listener or a directive output on this element. As such we we know that we will have to\n        // register a listener and store its cleanup function on LView.\n        var lCleanup = getLCleanup(lView);\n        ngDevMode &&\n            assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(tView, lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs !== null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                for (var i = 0; i < propsLength; i += 2) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 1];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = getLView()[DECLARATION_COMPONENT_VIEW][T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tView = getTView();\n        var tProjectionNode = getOrCreateTNode(tView, lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(tView, lView, tProjectionNode);\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            ngDevMode &&\n                storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([tView.data, tNode, propName, getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ$1 = {};\n    var EMPTY_ARRAY$3 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ$1);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY$3);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: The word `styling` is used interchangeably as style or class styling.\n     *\n     * This file contains code to link styling instructions together so that they can be replayed in\n     * priority order. The file exists because Ivy styling instruction execution order does not match\n     * that of the priority order. The purpose of this code is to create a linked list so that the\n     * instructions can be traversed in priority order when computing the styles.\n     *\n     * Assume we are dealing with the following code:\n     * ```\n     * @Component({\n     *   template: `\n     *     <my-cmp [style]=\" {color: '#001'} \"\n     *             [style.color]=\" #002 \"\n     *             dir-style-color-1\n     *             dir-style-color-2> `\n     * })\n     * class ExampleComponent {\n     *   static ngComp = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#001'});\n     *     ɵɵstyleProp('color', '#002');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `[dir-style-color-1]',\n     * })\n     * class Style1Directive {\n     *   @HostBinding('style') style = {color: '#005'};\n     *   @HostBinding('style.color') color = '#006';\n     *\n     *   static ngDir = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#005'});\n     *     ɵɵstyleProp('color', '#006');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `[dir-style-color-2]',\n     * })\n     * class Style2Directive {\n     *   @HostBinding('style') style = {color: '#007'};\n     *   @HostBinding('style.color') color = '#008';\n     *\n     *   static ngDir = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#007'});\n     *     ɵɵstyleProp('color', '#008');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `my-cmp',\n     * })\n     * class MyComponent {\n     *   @HostBinding('style') style = {color: '#003'};\n     *   @HostBinding('style.color') color = '#004';\n     *\n     *   static ngComp = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#003'});\n     *     ɵɵstyleProp('color', '#004');\n     *     ...\n     *   }\n     * }\n     * ```\n     *\n     * The Order of instruction execution is:\n     *\n     * NOTE: the comment binding location is for illustrative purposes only.\n     *\n     * ```\n     * // Template: (ExampleComponent)\n     *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n     *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n     * // MyComponent\n     *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n     *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n     * // Style1Directive\n     *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n     *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n     * // Style2Directive\n     *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n     *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n     * ```\n     *\n     * The correct priority order of concatenation is:\n     *\n     * ```\n     * // MyComponent\n     *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n     *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n     * // Style1Directive\n     *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n     *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n     * // Style2Directive\n     *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n     *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n     * // Template: (ExampleComponent)\n     *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n     *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n     * ```\n     *\n     * What color should be rendered?\n     *\n     * Once the items are correctly sorted in the list, the answer is simply the last item in the\n     * concatenation list which is `#002`.\n     *\n     * To do so we keep a linked list of all of the bindings which pertain to this element.\n     * Notice that the bindings are inserted in the order of execution, but the `TView.data` allows\n     * us to traverse them in the order of priority.\n     *\n     * |Idx|`TView.data`|`LView`          | Notes\n     * |---|------------|-----------------|--------------\n     * |...|            |                 |\n     * |10 |`null`      |`{color: '#001'}`| `ɵɵstyleMap('color', {color: '#001'})`\n     * |11 |`30 | 12`   | ...             |\n     * |12 |`color`     |`'#002'`         | `ɵɵstyleProp('color', '#002')`\n     * |13 |`10 | 0`    | ...             |\n     * |...|            |                 |\n     * |20 |`null`      |`{color: '#003'}`| `ɵɵstyleMap('color', {color: '#003'})`\n     * |21 |`0 | 22`    | ...             |\n     * |22 |`color`     |`'#004'`         | `ɵɵstyleProp('color', '#004')`\n     * |23 |`20 | 24`   | ...             |\n     * |24 |`null`      |`{color: '#005'}`| `ɵɵstyleMap('color', {color: '#005'})`\n     * |25 |`22 | 26`   | ...             |\n     * |26 |`color`     |`'#006'`         | `ɵɵstyleProp('color', '#006')`\n     * |27 |`24 | 28`   | ...             |\n     * |28 |`null`      |`{color: '#007'}`| `ɵɵstyleMap('color', {color: '#007'})`\n     * |29 |`26 | 30`   | ...             |\n     * |30 |`color`     |`'#008'`         | `ɵɵstyleProp('color', '#008')`\n     * |31 |`28 | 10`   | ...             |\n     *\n     * The above data structure allows us to re-concatenate the styling no matter which data binding\n     * changes.\n     *\n     * NOTE: in addition to keeping track of next/previous index the `TView.data` also stores prev/next\n     * duplicate bit. The duplicate bit if true says there either is a binding with the same name or\n     * there is a map (which may contain the name). This information is useful in knowing if other\n     * styles with higher priority need to be searched for overwrites.\n     *\n     * NOTE: See `should support example in 'tnode_linked_list.ts' documentation` in\n     * `tnode_linked_list_spec.ts` for working example.\n     */\n    var __unused_const_as_closure_does_not_like_standalone_comment_blocks__;\n    /**\n     * Insert new `tStyleValue` at `TData` and link existing style bindings such that we maintain linked\n     * list of styles and compute the duplicate flag.\n     *\n     * Note: this function is executed during `firstUpdatePass` only to populate the `TView.data`.\n     *\n     * The function works by keeping track of `tStylingRange` which contains two pointers pointing to\n     * the head/tail of the template portion of the styles.\n     *  - if `isHost === false` (we are template) then insertion is at tail of `TStylingRange`\n     *  - if `isHost === true` (we are host binding) then insertion is at head of `TStylingRange`\n     *\n     * @param tData The `TData` to insert into.\n     * @param tNode `TNode` associated with the styling element.\n     * @param tStylingKey See `TStylingKey`.\n     * @param index location of where `tStyleValue` should be stored (and linked into list.)\n     * @param isHostBinding `true` if the insertion is for a `hostBinding`. (insertion is in front of\n     *               template.)\n     * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n     *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n     */\n    function insertTStylingBinding(tData, tNode, tStylingKeyWithStatic, index, isHostBinding, isClassBinding) {\n        ngDevMode && assertFirstUpdatePass(getTView());\n        var tBindings = isClassBinding ? tNode.classBindings : tNode.styleBindings;\n        var tmplHead = getTStylingRangePrev(tBindings);\n        var tmplTail = getTStylingRangeNext(tBindings);\n        tData[index] = tStylingKeyWithStatic;\n        var isKeyDuplicateOfStatic = false;\n        var tStylingKey;\n        if (Array.isArray(tStylingKeyWithStatic)) {\n            // We are case when the `TStylingKey` contains static fields as well.\n            var staticKeyValueArray = tStylingKeyWithStatic;\n            tStylingKey = staticKeyValueArray[1]; // unwrap.\n            // We need to check if our key is present in the static so that we can mark it as duplicate.\n            if (tStylingKey === null ||\n                keyValueArrayIndexOf(staticKeyValueArray, tStylingKey) > 0) {\n                // tStylingKey is present in the statics, need to mark it as duplicate.\n                isKeyDuplicateOfStatic = true;\n            }\n        }\n        else {\n            tStylingKey = tStylingKeyWithStatic;\n        }\n        if (isHostBinding) {\n            // We are inserting host bindings\n            // If we don't have template bindings then `tail` is 0.\n            var hasTemplateBindings = tmplTail !== 0;\n            // This is important to know because that means that the `head` can't point to the first\n            // template bindings (there are none.) Instead the head points to the tail of the template.\n            if (hasTemplateBindings) {\n                // template head's \"prev\" will point to last host binding or to 0 if no host bindings yet\n                var previousNode = getTStylingRangePrev(tData[tmplHead + 1]);\n                tData[index + 1] = toTStylingRange(previousNode, tmplHead);\n                // if a host binding has already been registered, we need to update the next of that host\n                // binding to point to this one\n                if (previousNode !== 0) {\n                    // We need to update the template-tail value to point to us.\n                    tData[previousNode + 1] =\n                        setTStylingRangeNext(tData[previousNode + 1], index);\n                }\n                // The \"previous\" of the template binding head should point to this host binding\n                tData[tmplHead + 1] = setTStylingRangePrev(tData[tmplHead + 1], index);\n            }\n            else {\n                tData[index + 1] = toTStylingRange(tmplHead, 0);\n                // if a host binding has already been registered, we need to update the next of that host\n                // binding to point to this one\n                if (tmplHead !== 0) {\n                    // We need to update the template-tail value to point to us.\n                    tData[tmplHead + 1] = setTStylingRangeNext(tData[tmplHead + 1], index);\n                }\n                // if we don't have template, the head points to template-tail, and needs to be advanced.\n                tmplHead = index;\n            }\n        }\n        else {\n            // We are inserting in template section.\n            // We need to set this binding's \"previous\" to the current template tail\n            tData[index + 1] = toTStylingRange(tmplTail, 0);\n            ngDevMode &&\n                assertEqual(tmplHead !== 0 && tmplTail === 0, false, 'Adding template bindings after hostBindings is not allowed.');\n            if (tmplHead === 0) {\n                tmplHead = index;\n            }\n            else {\n                // We need to update the previous value \"next\" to point to this binding\n                tData[tmplTail + 1] = setTStylingRangeNext(tData[tmplTail + 1], index);\n            }\n            tmplTail = index;\n        }\n        // Now we need to update / compute the duplicates.\n        // Starting with our location search towards head (least priority)\n        if (isKeyDuplicateOfStatic) {\n            tData[index + 1] = setTStylingRangePrevDuplicate(tData[index + 1]);\n        }\n        markDuplicates(tData, tStylingKey, index, true, isClassBinding);\n        markDuplicates(tData, tStylingKey, index, false, isClassBinding);\n        markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding);\n        tBindings = toTStylingRange(tmplHead, tmplTail);\n        if (isClassBinding) {\n            tNode.classBindings = tBindings;\n        }\n        else {\n            tNode.styleBindings = tBindings;\n        }\n    }\n    /**\n     * Look into the residual styling to see if the current `tStylingKey` is duplicate of residual.\n     *\n     * @param tNode `TNode` where the residual is stored.\n     * @param tStylingKey `TStylingKey` to store.\n     * @param tData `TData` associated with the current `LView`.\n     * @param index location of where `tStyleValue` should be stored (and linked into list.)\n     * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n     *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n     */\n    function markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding) {\n        var residual = isClassBinding ? tNode.residualClasses : tNode.residualStyles;\n        if (residual != null /* or undefined */ && typeof tStylingKey == 'string' &&\n            keyValueArrayIndexOf(residual, tStylingKey) >= 0) {\n            // We have duplicate in the residual so mark ourselves as duplicate.\n            tData[index + 1] = setTStylingRangeNextDuplicate(tData[index + 1]);\n        }\n    }\n    /**\n     * Marks `TStyleValue`s as duplicates if another style binding in the list has the same\n     * `TStyleValue`.\n     *\n     * NOTE: this function is intended to be called twice once with `isPrevDir` set to `true` and once\n     * with it set to `false` to search both the previous as well as next items in the list.\n     *\n     * No duplicate case\n     * ```\n     *   [style.color]\n     *   [style.width.px] <<- index\n     *   [style.height.px]\n     * ```\n     *\n     * In the above case adding `[style.width.px]` to the existing `[style.color]` produces no\n     * duplicates because `width` is not found in any other part of the linked list.\n     *\n     * Duplicate case\n     * ```\n     *   [style.color]\n     *   [style.width.em]\n     *   [style.width.px] <<- index\n     * ```\n     * In the above case adding `[style.width.px]` will produce a duplicate with `[style.width.em]`\n     * because `width` is found in the chain.\n     *\n     * Map case 1\n     * ```\n     *   [style.width.px]\n     *   [style.color]\n     *   [style]  <<- index\n     * ```\n     * In the above case adding `[style]` will produce a duplicate with any other bindings because\n     * `[style]` is a Map and as such is fully dynamic and could produce `color` or `width`.\n     *\n     * Map case 2\n     * ```\n     *   [style]\n     *   [style.width.px]\n     *   [style.color]  <<- index\n     * ```\n     * In the above case adding `[style.color]` will produce a duplicate because there is already a\n     * `[style]` binding which is a Map and as such is fully dynamic and could produce `color` or\n     * `width`.\n     *\n     * NOTE: Once `[style]` (Map) is added into the system all things are mapped as duplicates.\n     * NOTE: We use `style` as example, but same logic is applied to `class`es as well.\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tStylingKey `TStylingKeyPrimitive` which contains the value to compare to other keys in\n     *        the linked list.\n     * @param index Starting location in the linked list to search from\n     * @param isPrevDir Direction.\n     *        - `true` for previous (lower priority);\n     *        - `false` for next (higher priority).\n     */\n    function markDuplicates(tData, tStylingKey, index, isPrevDir, isClassBinding) {\n        var tStylingAtIndex = tData[index + 1];\n        var isMap = tStylingKey === null;\n        var cursor = isPrevDir ? getTStylingRangePrev(tStylingAtIndex) : getTStylingRangeNext(tStylingAtIndex);\n        var foundDuplicate = false;\n        // We keep iterating as long as we have a cursor\n        // AND either:\n        // - we found what we are looking for, OR\n        // - we are a map in which case we have to continue searching even after we find what we were\n        //   looking for since we are a wild card and everything needs to be flipped to duplicate.\n        while (cursor !== 0 && (foundDuplicate === false || isMap)) {\n            ngDevMode && assertDataInRange(tData, cursor);\n            var tStylingValueAtCursor = tData[cursor];\n            var tStyleRangeAtCursor = tData[cursor + 1];\n            if (isStylingMatch(tStylingValueAtCursor, tStylingKey)) {\n                foundDuplicate = true;\n                tData[cursor + 1] = isPrevDir ? setTStylingRangeNextDuplicate(tStyleRangeAtCursor) :\n                    setTStylingRangePrevDuplicate(tStyleRangeAtCursor);\n            }\n            cursor = isPrevDir ? getTStylingRangePrev(tStyleRangeAtCursor) :\n                getTStylingRangeNext(tStyleRangeAtCursor);\n        }\n        if (foundDuplicate) {\n            // if we found a duplicate, than mark ourselves.\n            tData[index + 1] = isPrevDir ? setTStylingRangePrevDuplicate(tStylingAtIndex) :\n                setTStylingRangeNextDuplicate(tStylingAtIndex);\n        }\n    }\n    /**\n     * Determines if two `TStylingKey`s are a match.\n     *\n     * When computing weather a binding contains a duplicate, we need to compare if the instruction\n     * `TStylingKey` has a match.\n     *\n     * Here are examples of `TStylingKey`s which match given `tStylingKeyCursor` is:\n     * - `color`\n     *    - `color`    // Match another color\n     *    - `null`     // That means that `tStylingKey` is a `classMap`/`styleMap` instruction\n     *    - `['', 'color', 'other', true]` // wrapped `color` so match\n     *    - `['', null, 'other', true]`       // wrapped `null` so match\n     *    - `['', 'width', 'color', 'value']` // wrapped static value contains a match on `'color'`\n     * - `null`       // `tStylingKeyCursor` always match as it is `classMap`/`styleMap` instruction\n     *\n     * @param tStylingKeyCursor\n     * @param tStylingKey\n     */\n    function isStylingMatch(tStylingKeyCursor, tStylingKey) {\n        ngDevMode &&\n            assertNotEqual(Array.isArray(tStylingKey), true, 'Expected that \\'tStylingKey\\' has been unwrapped');\n        if (tStylingKeyCursor === null || // If the cursor is `null` it means that we have map at that\n            // location so we must assume that we have a match.\n            tStylingKey == null || // If `tStylingKey` is `null` then it is a map therefor assume that it\n            // contains a match.\n            (Array.isArray(tStylingKeyCursor) ? tStylingKeyCursor[1] : tStylingKeyCursor) ===\n                tStylingKey // If the keys match explicitly than we are a match.\n        ) {\n            return true;\n        }\n        else if (Array.isArray(tStylingKeyCursor) && typeof tStylingKey === 'string') {\n            // if we did not find a match, but `tStylingKeyCursor` is `KeyValueArray` that means cursor has\n            // statics and we need to check those as well.\n            return keyValueArrayIndexOf(tStylingKeyCursor, tStylingKey) >=\n                0; // see if we are matching the key\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Global state of the parser. (This makes parser non-reentrant, but that is not an issue)\n    var parserState = {\n        textEnd: 0,\n        key: 0,\n        keyEnd: 0,\n        value: 0,\n        valueEnd: 0,\n    };\n    /**\n     * Retrieves the last parsed `key` of style.\n     * @param text the text to substring the key from.\n     */\n    function getLastParsedKey(text) {\n        return text.substring(parserState.key, parserState.keyEnd);\n    }\n    /**\n     * Retrieves the last parsed `value` of style.\n     * @param text the text to substring the key from.\n     */\n    function getLastParsedValue(text) {\n        return text.substring(parserState.value, parserState.valueEnd);\n    }\n    /**\n     * Initializes `className` string for parsing and parses the first token.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n     *   const key = getLastParsedKey();\n     *   ...\n     * }\n     * ```\n     * @param text `className` to parse\n     * @returns index where the next invocation of `parseClassNameNext` should resume.\n     */\n    function parseClassName(text) {\n        resetParserState(text);\n        return parseClassNameNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n    }\n    /**\n     * Parses next `className` token.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n     *   const key = getLastParsedKey();\n     *   ...\n     * }\n     * ```\n     *\n     * @param text `className` to parse\n     * @param index where the parsing should resume.\n     * @returns index where the next invocation of `parseClassNameNext` should resume.\n     */\n    function parseClassNameNext(text, index) {\n        var end = parserState.textEnd;\n        if (end === index) {\n            return -1;\n        }\n        index = parserState.keyEnd = consumeClassToken(text, parserState.key = index, end);\n        return consumeWhitespace(text, index, end);\n    }\n    /**\n     * Initializes `cssText` string for parsing and parses the first key/values.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n     *   const key = getLastParsedKey();\n     *   const value = getLastParsedValue();\n     *   ...\n     * }\n     * ```\n     * @param text `cssText` to parse\n     * @returns index where the next invocation of `parseStyleNext` should resume.\n     */\n    function parseStyle(text) {\n        resetParserState(text);\n        return parseStyleNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n    }\n    /**\n     * Parses the next `cssText` key/values.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n     *   const key = getLastParsedKey();\n     *   const value = getLastParsedValue();\n     *   ...\n     * }\n     *\n     * @param text `cssText` to parse\n     * @param index where the parsing should resume.\n     * @returns index where the next invocation of `parseStyleNext` should resume.\n     */\n    function parseStyleNext(text, startIndex) {\n        var end = parserState.textEnd;\n        var index = parserState.key = consumeWhitespace(text, startIndex, end);\n        if (end === index) {\n            // we reached an end so just quit\n            return -1;\n        }\n        index = parserState.keyEnd = consumeStyleKey(text, index, end);\n        index = consumeSeparator(text, index, end, 58 /* COLON */);\n        index = parserState.value = consumeWhitespace(text, index, end);\n        index = parserState.valueEnd = consumeStyleValue(text, index, end);\n        return consumeSeparator(text, index, end, 59 /* SEMI_COLON */);\n    }\n    /**\n     * Reset the global state of the styling parser.\n     * @param text The styling text to parse.\n     */\n    function resetParserState(text) {\n        parserState.key = 0;\n        parserState.keyEnd = 0;\n        parserState.value = 0;\n        parserState.valueEnd = 0;\n        parserState.textEnd = text.length;\n    }\n    /**\n     * Returns index of next non-whitespace character.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index of next non-whitespace character (May be the same as `start` if no whitespace at\n     *          that location.)\n     */\n    function consumeWhitespace(text, startIndex, endIndex) {\n        while (startIndex < endIndex && text.charCodeAt(startIndex) <= 32 /* SPACE */) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Returns index of last char in class token.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last char in class token.\n     */\n    function consumeClassToken(text, startIndex, endIndex) {\n        while (startIndex < endIndex && text.charCodeAt(startIndex) > 32 /* SPACE */) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes all of the characters belonging to style key and token.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last style key character.\n     */\n    function consumeStyleKey(text, startIndex, endIndex) {\n        var ch;\n        while (startIndex < endIndex &&\n            ((ch = text.charCodeAt(startIndex)) === 45 /* DASH */ || ch === 95 /* UNDERSCORE */ ||\n                ((ch & -33 /* UPPER_CASE */) >= 65 /* A */ && (ch & -33 /* UPPER_CASE */) <= 90 /* Z */))) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes all whitespace and the separator `:` after the style key.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after separator and surrounding whitespace.\n     */\n    function consumeSeparator(text, startIndex, endIndex, separator) {\n        startIndex = consumeWhitespace(text, startIndex, endIndex);\n        if (startIndex < endIndex) {\n            if (ngDevMode && text.charCodeAt(startIndex) !== separator) {\n                malformedStyleError(text, String.fromCharCode(separator), startIndex);\n            }\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes style value honoring `url()` and `\"\"` text.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last style value character.\n     */\n    function consumeStyleValue(text, startIndex, endIndex) {\n        var ch1 = -1; // 1st previous character\n        var ch2 = -1; // 2nd previous character\n        var ch3 = -1; // 3rd previous character\n        var i = startIndex;\n        var lastChIndex = i;\n        while (i < endIndex) {\n            var ch = text.charCodeAt(i++);\n            if (ch === 59 /* SEMI_COLON */) {\n                return lastChIndex;\n            }\n            else if (ch === 34 /* DOUBLE_QUOTE */ || ch === 39 /* SINGLE_QUOTE */) {\n                lastChIndex = i = consumeQuotedText(text, ch, i, endIndex);\n            }\n            else if (startIndex ===\n                i - 4 && // We have seen only 4 characters so far \"URL(\" (Ignore \"foo_URL()\")\n                ch3 === 85 /* U */ &&\n                ch2 === 82 /* R */ && ch1 === 76 /* L */ && ch === 40 /* OPEN_PAREN */) {\n                lastChIndex = i = consumeQuotedText(text, 41 /* CLOSE_PAREN */, i, endIndex);\n            }\n            else if (ch > 32 /* SPACE */) {\n                // if we have a non-whitespace character then capture its location\n                lastChIndex = i;\n            }\n            ch3 = ch2;\n            ch2 = ch1;\n            ch1 = ch & -33 /* UPPER_CASE */;\n        }\n        return lastChIndex;\n    }\n    /**\n     * Consumes all of the quoted characters.\n     *\n     * @param text Text to scan\n     * @param quoteCharCode CharCode of either `\"` or `'` quote or `)` for `url(...)`.\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after quoted characters.\n     */\n    function consumeQuotedText(text, quoteCharCode, startIndex, endIndex) {\n        var ch1 = -1; // 1st previous character\n        var index = startIndex;\n        while (index < endIndex) {\n            var ch = text.charCodeAt(index++);\n            if (ch == quoteCharCode && ch1 !== 92 /* BACK_SLASH */) {\n                return index;\n            }\n            if (ch == 92 /* BACK_SLASH */ && ch1 === 92 /* BACK_SLASH */) {\n                // two back slashes cancel each other out. For example `\"\\\\\"` should properly end the\n                // quotation. (It should not assume that the last `\"` is escaped.)\n                ch1 = 0;\n            }\n            else {\n                ch1 = ch;\n            }\n        }\n        throw ngDevMode ? malformedStyleError(text, String.fromCharCode(quoteCharCode), endIndex) :\n            new Error();\n    }\n    function malformedStyleError(text, expecting, index) {\n        ngDevMode && assertEqual(typeof text === 'string', true, 'String expected here');\n        throw throwError(\"Malformed style at location \" + index + \" in string '\" + text.substring(0, index) + '[>>' +\n            text.substring(index, index + 1) + '<<]' + text.substr(index + 1) +\n            (\"'. Expecting '\" + expecting + \"'.\"));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        checkStylingProperty(prop, value, suffix, false);\n        return ɵɵstyleProp;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        checkStylingProperty(className, value, null, true);\n        return ɵɵclassProp;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        checkStylingMap(styleKeyValueArraySet, styleStringParser, styles, false);\n    }\n    /**\n     * Parse text as style and add values to KeyValueArray.\n     *\n     * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n     * needed. It is only referenced from `ɵɵstyleMap`.\n     *\n     * @param keyValueArray KeyValueArray to add parsed values to.\n     * @param text text to parse.\n     */\n    function styleStringParser(keyValueArray, text) {\n        for (var i = parseStyle(text); i >= 0; i = parseStyleNext(text, i)) {\n            styleKeyValueArraySet(keyValueArray, getLastParsedKey(text), getLastParsedValue(text));\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        checkStylingMap(keyValueArraySet, classStringParser, classes, true);\n    }\n    /**\n     * Parse text as class and add values to KeyValueArray.\n     *\n     * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n     * needed. It is only referenced from `ɵɵclassMap`.\n     *\n     * @param keyValueArray KeyValueArray to add parsed values to.\n     * @param text text to parse.\n     */\n    function classStringParser(keyValueArray, text) {\n        for (var i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n            keyValueArraySet(keyValueArray, getLastParsedKey(text), true);\n        }\n    }\n    /**\n     * Common code between `ɵɵclassProp` and `ɵɵstyleProp`.\n     *\n     * @param prop property name.\n     * @param value binding value.\n     * @param suffixOrSanitizer suffix or sanitization function\n     * @param isClassBased `true` if `class` change (`false` if `style`)\n     */\n    function checkStylingProperty(prop, value, suffixOrSanitizer, isClassBased) {\n        var lView = getLView();\n        var tView = getTView();\n        // Styling instructions use 2 slots per binding.\n        // 1. one for the value / TStylingKey\n        // 2. one for the intermittent-value / TStylingRange\n        var bindingIndex = incrementBindingIndex(2);\n        if (tView.firstUpdatePass) {\n            stylingFirstUpdatePass(tView, prop, bindingIndex, isClassBased);\n        }\n        if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n            // This is a work around. Once PR#34480 lands the sanitizer is passed explicitly and this line\n            // can be removed.\n            var styleSanitizer = void 0;\n            if (suffixOrSanitizer == null) {\n                if (styleSanitizer = getCurrentStyleSanitizer()) {\n                    suffixOrSanitizer = styleSanitizer;\n                }\n            }\n            var tNode = tView.data[getSelectedIndex() + HEADER_OFFSET];\n            updateStyling(tView, tNode, lView, lView[RENDERER], prop, lView[bindingIndex + 1] = normalizeAndApplySuffixOrSanitizer(value, suffixOrSanitizer), isClassBased, bindingIndex);\n        }\n    }\n    /**\n     * Common code between `ɵɵclassMap` and `ɵɵstyleMap`.\n     *\n     * @param keyValueArraySet (See `keyValueArraySet` in \"util/array_utils\") Gets passed in as a\n     * function so that\n     *        `style` can pass in version which does sanitization. This is done for tree shaking\n     *        purposes.\n     * @param stringParser Parser used to parse `value` if `string`. (Passed in as `style` and `class`\n     *        have different parsers.)\n     * @param value bound value from application\n     * @param isClassBased `true` if `class` change (`false` if `style`)\n     */\n    function checkStylingMap(keyValueArraySet, stringParser, value, isClassBased) {\n        var tView = getTView();\n        var bindingIndex = incrementBindingIndex(2);\n        if (tView.firstUpdatePass) {\n            stylingFirstUpdatePass(tView, null, bindingIndex, isClassBased);\n        }\n        var lView = getLView();\n        if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n            // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n            // if so as not to read unnecessarily.\n            var tNode = tView.data[getSelectedIndex() + HEADER_OFFSET];\n            if (hasStylingInputShadow(tNode, isClassBased) && !isInHostBindings(tView, bindingIndex)) {\n                if (ngDevMode) {\n                    // verify that if we are shadowing then `TData` is appropriately marked so that we skip\n                    // processing this binding in styling resolution.\n                    var tStylingKey = tView.data[bindingIndex];\n                    assertEqual(Array.isArray(tStylingKey) ? tStylingKey[1] : tStylingKey, false, 'Styling linked list shadow input should be marked as \\'false\\'');\n                }\n                // VE does not concatenate the static portion like we are doing here.\n                // Instead VE just ignores the static completely if dynamic binding is present.\n                // Because of locality we have already set the static portion because we don't know if there\n                // is a dynamic portion until later. If we would ignore the static portion it would look like\n                // the binding has removed it. This would confuse `[ngStyle]`/`[ngClass]` to do the wrong\n                // thing as it would think that the static portion was removed. For this reason we\n                // concatenate it so that `[ngStyle]`/`[ngClass]`  can continue to work on changed.\n                var staticPrefix = isClassBased ? tNode.classes : tNode.styles;\n                ngDevMode && isClassBased === false && staticPrefix !== null &&\n                    assertEqual(staticPrefix.endsWith(';'), true, 'Expecting static portion to end with \\';\\'');\n                if (staticPrefix !== null) {\n                    // We want to make sure that falsy values of `value` become empty strings.\n                    value = concatStringsWithSpace(staticPrefix, value ? value : '');\n                }\n                // Given `<div [style] my-dir>` such that `my-dir` has `@Input('style')`.\n                // This takes over the `[style]` binding. (Same for `[class]`)\n                setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased);\n            }\n            else {\n                updateStylingMap(tView, tNode, lView, lView[RENDERER], lView[bindingIndex + 1], lView[bindingIndex + 1] = toStylingKeyValueArray(keyValueArraySet, stringParser, value), isClassBased, bindingIndex);\n            }\n        }\n    }\n    /**\n     * Determines when the binding is in `hostBindings` section\n     *\n     * @param tView Current `TView`\n     * @param bindingIndex index of binding which we would like if it is in `hostBindings`\n     */\n    function isInHostBindings(tView, bindingIndex) {\n        // All host bindings are placed after the expando section.\n        return bindingIndex >= tView.expandoStartIndex;\n    }\n    /**\n     * Collects the necessary information to insert the binding into a linked list of style bindings\n     * using `insertTStylingBinding`.\n     *\n     * @param tView `TView` where the binding linked list will be stored.\n     * @param tStylingKey Property/key of the binding.\n     * @param bindingIndex Index of binding associated with the `prop`\n     * @param isClassBased `true` if `class` change (`false` if `style`)\n     */\n    function stylingFirstUpdatePass(tView, tStylingKey, bindingIndex, isClassBased) {\n        ngDevMode && assertFirstUpdatePass(tView);\n        var tData = tView.data;\n        if (tData[bindingIndex + 1] === null) {\n            // The above check is necessary because we don't clear first update pass until first successful\n            // (no exception) template execution. This prevents the styling instruction from double adding\n            // itself to the list.\n            // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n            // if so as not to read unnecessarily.\n            var tNode = tData[getSelectedIndex() + HEADER_OFFSET];\n            var isHostBindings = isInHostBindings(tView, bindingIndex);\n            if (hasStylingInputShadow(tNode, isClassBased) && tStylingKey === null && !isHostBindings) {\n                // `tStylingKey === null` implies that we are either `[style]` or `[class]` binding.\n                // If there is a directive which uses `@Input('style')` or `@Input('class')` than\n                // we need to neutralize this binding since that directive is shadowing it.\n                // We turn this into a noop by setting the key to `false`\n                tStylingKey = false;\n            }\n            tStylingKey = wrapInStaticStylingKey(tData, tNode, tStylingKey, isClassBased);\n            insertTStylingBinding(tData, tNode, tStylingKey, bindingIndex, isHostBindings, isClassBased);\n        }\n    }\n    /**\n     * Adds static styling information to the binding if applicable.\n     *\n     * The linked list of styles not only stores the list and keys, but also stores static styling\n     * information on some of the keys. This function determines if the key should contain the styling\n     * information and computes it.\n     *\n     * See `TStylingStatic` for more details.\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param stylingKey `TStylingKeyPrimitive` which may need to be wrapped into `TStylingKey`\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function wrapInStaticStylingKey(tData, tNode, stylingKey, isClassBased) {\n        var hostDirectiveDef = getCurrentDirectiveDef(tData);\n        var residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n        if (hostDirectiveDef === null) {\n            // We are in template node.\n            // If template node already had styling instruction then it has already collected the static\n            // styling and there is no need to collect them again. We know that we are the first styling\n            // instruction because the `TNode.*Bindings` points to 0 (nothing has been inserted yet).\n            var isFirstStylingInstructionInTemplate = (isClassBased ? tNode.classBindings : tNode.styleBindings) === 0;\n            if (isFirstStylingInstructionInTemplate) {\n                // It would be nice to be able to get the statics from `mergeAttrs`, however, at this point\n                // they are already merged and it would not be possible to figure which property belongs where\n                // in the priority.\n                stylingKey = collectStylingFromDirectives(null, tData, tNode, stylingKey, isClassBased);\n                stylingKey = collectStylingFromTAttrs(stylingKey, tNode.attrs, isClassBased);\n                // We know that if we have styling binding in template we can't have residual.\n                residual = null;\n            }\n        }\n        else {\n            // We are in host binding node and there was no binding instruction in template node.\n            // This means that we need to compute the residual.\n            var directiveStylingLast = tNode.directiveStylingLast;\n            var isFirstStylingInstructionInHostBinding = directiveStylingLast === -1 || tData[directiveStylingLast] !== hostDirectiveDef;\n            if (isFirstStylingInstructionInHostBinding) {\n                stylingKey =\n                    collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased);\n                if (residual === null) {\n                    // - If `null` than either:\n                    //    - Template styling instruction already ran and it has consumed the static\n                    //      styling into its `TStylingKey` and so there is no need to update residual. Instead\n                    //      we need to update the `TStylingKey` associated with the first template node\n                    //      instruction. OR\n                    //    - Some other styling instruction ran and determined that there are no residuals\n                    var templateStylingKey = getTemplateHeadTStylingKey(tData, tNode, isClassBased);\n                    if (templateStylingKey !== undefined && Array.isArray(templateStylingKey)) {\n                        // Only recompute if `templateStylingKey` had static values. (If no static value found\n                        // then there is nothing to do since this operation can only produce less static keys, not\n                        // more.)\n                        templateStylingKey = collectStylingFromDirectives(null, tData, tNode, templateStylingKey[1] /* unwrap previous statics */, isClassBased);\n                        templateStylingKey =\n                            collectStylingFromTAttrs(templateStylingKey, tNode.attrs, isClassBased);\n                        setTemplateHeadTStylingKey(tData, tNode, isClassBased, templateStylingKey);\n                    }\n                }\n                else {\n                    // We only need to recompute residual if it is not `null`.\n                    // - If existing residual (implies there was no template styling). This means that some of\n                    //   the statics may have moved from the residual to the `stylingKey` and so we have to\n                    //   recompute.\n                    // - If `undefined` this is the first time we are running.\n                    residual = collectResidual(tData, tNode, isClassBased);\n                }\n            }\n        }\n        if (residual !== undefined) {\n            isClassBased ? (tNode.residualClasses = residual) : (tNode.residualStyles = residual);\n        }\n        return stylingKey;\n    }\n    /**\n     * Retrieve the `TStylingKey` for the template styling instruction.\n     *\n     * This is needed since `hostBinding` styling instructions are inserted after the template\n     * instruction. While the template instruction needs to update the residual in `TNode` the\n     * `hostBinding` instructions need to update the `TStylingKey` of the template instruction because\n     * the template instruction is downstream from the `hostBindings` instructions.\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @return `TStylingKey` if found or `undefined` if not found.\n     */\n    function getTemplateHeadTStylingKey(tData, tNode, isClassBased) {\n        var bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;\n        if (getTStylingRangeNext(bindings) === 0) {\n            // There does not seem to be a styling instruction in the `template`.\n            return undefined;\n        }\n        return tData[getTStylingRangePrev(bindings)];\n    }\n    /**\n     * Update the `TStylingKey` of the first template instruction in `TNode`.\n     *\n     * Logically `hostBindings` styling instructions are of lower priority than that of the template.\n     * However, they execute after the template styling instructions. This means that they get inserted\n     * in front of the template styling instructions.\n     *\n     * If we have a template styling instruction and a new `hostBindings` styling instruction is\n     * executed it means that it may need to steal static fields from the template instruction. This\n     * method allows us to update the first template instruction `TStylingKey` with a new value.\n     *\n     * Assume:\n     * ```\n     * <div my-dir style=\"color: red\" [style.color]=\"tmplExp\"></div>\n     *\n     * @Directive({\n     *   host: {\n     *     'style': 'width: 100px',\n     *     '[style.color]': 'dirExp',\n     *   }\n     * })\n     * class MyDir {}\n     * ```\n     *\n     * when `[style.color]=\"tmplExp\"` executes it creates this data structure.\n     * ```\n     *  ['', 'color', 'color', 'red', 'width', '100px'],\n     * ```\n     *\n     * The reason for this is that the template instruction does not know if there are styling\n     * instructions and must assume that there are none and must collect all of the static styling.\n     * (both\n     * `color' and 'width`)\n     *\n     * When `'[style.color]': 'dirExp',` executes we need to insert a new data into the linked list.\n     * ```\n     *  ['', 'color', 'width', '100px'],  // newly inserted\n     *  ['', 'color', 'color', 'red', 'width', '100px'], // this is wrong\n     * ```\n     *\n     * Notice that the template statics is now wrong as it incorrectly contains `width` so we need to\n     * update it like so:\n     * ```\n     *  ['', 'color', 'width', '100px'],\n     *  ['', 'color', 'color', 'red'],    // UPDATE\n     * ```\n     *\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param tStylingKey New `TStylingKey` which is replacing the old one.\n     */\n    function setTemplateHeadTStylingKey(tData, tNode, isClassBased, tStylingKey) {\n        var bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;\n        ngDevMode &&\n            assertNotEqual(getTStylingRangeNext(bindings), 0, 'Expecting to have at least one template styling binding.');\n        tData[getTStylingRangePrev(bindings)] = tStylingKey;\n    }\n    /**\n     * Collect all static values after the current `TNode.directiveStylingLast` index.\n     *\n     * Collect the remaining styling information which has not yet been collected by an existing\n     * styling instruction.\n     *\n     * @param tData `TData` where the `DirectiveDefs` are stored.\n     * @param tNode `TNode` which contains the directive range.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function collectResidual(tData, tNode, isClassBased) {\n        var residual = undefined;\n        var directiveEnd = tNode.directiveEnd;\n        ngDevMode &&\n            assertNotEqual(tNode.directiveStylingLast, -1, 'By the time this function gets called at least one hostBindings-node styling instruction must have executed.');\n        // We add `1 + tNode.directiveStart` because we need to skip the current directive (as we are\n        // collecting things after the last `hostBindings` directive which had a styling instruction.)\n        for (var i = 1 + tNode.directiveStylingLast; i < directiveEnd; i++) {\n            var attrs = tData[i].hostAttrs;\n            residual = collectStylingFromTAttrs(residual, attrs, isClassBased);\n        }\n        return collectStylingFromTAttrs(residual, tNode.attrs, isClassBased);\n    }\n    /**\n     * Collect the static styling information with lower priority than `hostDirectiveDef`.\n     *\n     * (This is opposite of residual styling.)\n     *\n     * @param hostDirectiveDef `DirectiveDef` for which we want to collect lower priority static\n     *        styling. (Or `null` if template styling)\n     * @param tData `TData` where the linked list is stored.\n     * @param tNode `TNode` for which the styling is being computed.\n     * @param stylingKey Existing `TStylingKey` to update or wrap.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased) {\n        // We need to loop because there can be directives which have `hostAttrs` but don't have\n        // `hostBindings` so this loop catches up to the current directive..\n        var currentDirective = null;\n        var directiveEnd = tNode.directiveEnd;\n        var directiveStylingLast = tNode.directiveStylingLast;\n        if (directiveStylingLast === -1) {\n            directiveStylingLast = tNode.directiveStart;\n        }\n        else {\n            directiveStylingLast++;\n        }\n        while (directiveStylingLast < directiveEnd) {\n            currentDirective = tData[directiveStylingLast];\n            ngDevMode && assertDefined(currentDirective, 'expected to be defined');\n            stylingKey = collectStylingFromTAttrs(stylingKey, currentDirective.hostAttrs, isClassBased);\n            if (currentDirective === hostDirectiveDef)\n                break;\n            directiveStylingLast++;\n        }\n        if (hostDirectiveDef !== null) {\n            // we only advance the styling cursor if we are collecting data from host bindings.\n            // Template executes before host bindings and so if we would update the index,\n            // host bindings would not get their statics.\n            tNode.directiveStylingLast = directiveStylingLast;\n        }\n        return stylingKey;\n    }\n    /**\n     * Convert `TAttrs` into `TStylingStatic`.\n     *\n     * @param stylingKey existing `TStylingKey` to update or wrap.\n     * @param attrs `TAttributes` to process.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function collectStylingFromTAttrs(stylingKey, attrs, isClassBased) {\n        var desiredMarker = isClassBased ? 1 /* Classes */ : 2 /* Styles */;\n        var currentMarker = -1 /* ImplicitAttributes */;\n        if (attrs !== null) {\n            for (var i = 0; i < attrs.length; i++) {\n                var item = attrs[i];\n                if (typeof item === 'number') {\n                    currentMarker = item;\n                }\n                else {\n                    if (currentMarker === desiredMarker) {\n                        if (!Array.isArray(stylingKey)) {\n                            stylingKey = stylingKey === undefined ? [] : ['', stylingKey];\n                        }\n                        keyValueArraySet(stylingKey, item, isClassBased ? true : attrs[++i]);\n                    }\n                }\n            }\n        }\n        return stylingKey === undefined ? null : stylingKey;\n    }\n    /**\n     * Convert user input to `KeyValueArray`.\n     *\n     * This function takes user input which could be `string`, Object literal, or iterable and converts\n     * it into a consistent representation. The output of this is `KeyValueArray` (which is an array\n     * where\n     * even indexes contain keys and odd indexes contain values for those keys).\n     *\n     * The advantage of converting to `KeyValueArray` is that we can perform diff in an input\n     * independent\n     * way.\n     * (ie we can compare `foo bar` to `['bar', 'baz'] and determine a set of changes which need to be\n     * applied)\n     *\n     * The fact that `KeyValueArray` is sorted is very important because it allows us to compute the\n     * difference in linear fashion without the need to allocate any additional data.\n     *\n     * For example if we kept this as a `Map` we would have to iterate over previous `Map` to determine\n     * which values need to be deleted, over the new `Map` to determine additions, and we would have to\n     * keep additional `Map` to keep track of duplicates or items which have not yet been visited.\n     *\n     * @param keyValueArraySet (See `keyValueArraySet` in \"util/array_utils\") Gets passed in as a\n     * function so that\n     *        `style` can pass in version which does sanitization. This is done for tree shaking\n     *        purposes.\n     * @param stringParser The parser is passed in so that it will be tree shakable. See\n     *        `styleStringParser` and `classStringParser`\n     * @param value The value to parse/convert to `KeyValueArray`\n     */\n    function toStylingKeyValueArray(keyValueArraySet, stringParser, value) {\n        if (value == null /*|| value === undefined */ || value === '')\n            return EMPTY_ARRAY$3;\n        var styleKeyValueArray = [];\n        var unwrappedValue = unwrapSafeValue(value);\n        if (Array.isArray(unwrappedValue)) {\n            for (var i = 0; i < unwrappedValue.length; i++) {\n                keyValueArraySet(styleKeyValueArray, unwrappedValue[i], true);\n            }\n        }\n        else if (typeof unwrappedValue === 'object') {\n            for (var key in unwrappedValue) {\n                if (unwrappedValue.hasOwnProperty(key)) {\n                    keyValueArraySet(styleKeyValueArray, key, unwrappedValue[key]);\n                }\n            }\n        }\n        else if (typeof unwrappedValue === 'string') {\n            stringParser(styleKeyValueArray, unwrappedValue);\n        }\n        else {\n            ngDevMode &&\n                throwError('Unsupported styling type ' + typeof unwrappedValue + ': ' + unwrappedValue);\n        }\n        return styleKeyValueArray;\n    }\n    /**\n     * Set a `value` for a `key` taking style sanitization into account.\n     *\n     * See: `keyValueArraySet` for details\n     *\n     * @param keyValueArray KeyValueArray to add to.\n     * @param key Style key to add. (This key will be checked if it needs sanitization)\n     * @param value The value to set (If key needs sanitization it will be sanitized)\n     */\n    function styleKeyValueArraySet(keyValueArray, key, value) {\n        if (stylePropNeedsSanitization(key)) {\n            value = ɵɵsanitizeStyle(value);\n        }\n        keyValueArraySet(keyValueArray, key, value);\n    }\n    /**\n     * Update map based styling.\n     *\n     * Map based styling could be anything which contains more than one binding. For example `string`,\n     * or object literal. Dealing with all of these types would complicate the logic so\n     * instead this function expects that the complex input is first converted into normalized\n     * `KeyValueArray`. The advantage of normalization is that we get the values sorted, which makes it\n     * very cheap to compute deltas between the previous and current value.\n     *\n     * @param tView Associated `TView.data` contains the linked list of binding priorities.\n     * @param tNode `TNode` where the binding is located.\n     * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n     * @param renderer Renderer to use if any updates.\n     * @param oldKeyValueArray Previous value represented as `KeyValueArray`\n     * @param newKeyValueArray Current value represented as `KeyValueArray`\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param bindingIndex Binding index of the binding.\n     */\n    function updateStylingMap(tView, tNode, lView, renderer, oldKeyValueArray, newKeyValueArray, isClassBased, bindingIndex) {\n        if (oldKeyValueArray === NO_CHANGE) {\n            // On first execution the oldKeyValueArray is NO_CHANGE => treat it as empty KeyValueArray.\n            oldKeyValueArray = EMPTY_ARRAY$3;\n        }\n        var oldIndex = 0;\n        var newIndex = 0;\n        var oldKey = 0 < oldKeyValueArray.length ? oldKeyValueArray[0] : null;\n        var newKey = 0 < newKeyValueArray.length ? newKeyValueArray[0] : null;\n        while (oldKey !== null || newKey !== null) {\n            ngDevMode && assertLessThan(oldIndex, 999, 'Are we stuck in infinite loop?');\n            ngDevMode && assertLessThan(newIndex, 999, 'Are we stuck in infinite loop?');\n            var oldValue = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex + 1] : undefined;\n            var newValue = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex + 1] : undefined;\n            var setKey = null;\n            var setValue = undefined;\n            if (oldKey === newKey) {\n                // UPDATE: Keys are equal => new value is overwriting old value.\n                oldIndex += 2;\n                newIndex += 2;\n                if (oldValue !== newValue) {\n                    setKey = newKey;\n                    setValue = newValue;\n                }\n            }\n            else if (newKey === null || oldKey !== null && oldKey < newKey) {\n                // DELETE: oldKey key is missing or we did not find the oldKey in the newValue\n                // (because the keyValueArray is sorted and `newKey` is found later alphabetically).\n                // `\"background\" < \"color\"` so we need to delete `\"background\"` because it is not found in the\n                // new array.\n                oldIndex += 2;\n                setKey = oldKey;\n            }\n            else {\n                // CREATE: newKey's is earlier alphabetically than oldKey's (or no oldKey) => we have new key.\n                // `\"color\" > \"background\"` so we need to add `color` because it is in new array but not in\n                // old array.\n                ngDevMode && assertDefined(newKey, 'Expecting to have a valid key');\n                newIndex += 2;\n                setKey = newKey;\n                setValue = newValue;\n            }\n            if (setKey !== null) {\n                updateStyling(tView, tNode, lView, renderer, setKey, setValue, isClassBased, bindingIndex);\n            }\n            oldKey = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex] : null;\n            newKey = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex] : null;\n        }\n    }\n    /**\n     * Update a simple (property name) styling.\n     *\n     * This function takes `prop` and updates the DOM to that value. The function takes the binding\n     * value as well as binding priority into consideration to determine which value should be written\n     * to DOM. (For example it may be determined that there is a higher priority overwrite which blocks\n     * the DOM write, or if the value goes to `undefined` a lower priority overwrite may be consulted.)\n     *\n     * @param tView Associated `TView.data` contains the linked list of binding priorities.\n     * @param tNode `TNode` where the binding is located.\n     * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n     * @param renderer Renderer to use if any updates.\n     * @param prop Either style property name or a class name.\n     * @param value Either style value for `prop` or `true`/`false` if `prop` is class.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param bindingIndex Binding index of the binding.\n     */\n    function updateStyling(tView, tNode, lView, renderer, prop, value, isClassBased, bindingIndex) {\n        if (tNode.type !== 3 /* Element */) {\n            // It is possible to have styling on non-elements (such as ng-container).\n            // This is rare, but it does happen. In such a case, just ignore the binding.\n            return;\n        }\n        var tData = tView.data;\n        var tRange = tData[bindingIndex + 1];\n        var higherPriorityValue = getTStylingRangeNextDuplicate(tRange) ?\n            findStylingValue(tData, tNode, lView, prop, getTStylingRangeNext(tRange), isClassBased) :\n            undefined;\n        if (!isStylingValuePresent(higherPriorityValue)) {\n            // We don't have a next duplicate, or we did not find a duplicate value.\n            if (!isStylingValuePresent(value)) {\n                // We should delete current value or restore to lower priority value.\n                if (getTStylingRangePrevDuplicate(tRange)) {\n                    // We have a possible prev duplicate, let's retrieve it.\n                    value = findStylingValue(tData, null, lView, prop, bindingIndex, isClassBased);\n                }\n            }\n            var rNode = getNativeByIndex(getSelectedIndex(), lView);\n            applyStyling(renderer, isClassBased, rNode, prop, value);\n        }\n    }\n    /**\n     * Search for styling value with higher priority which is overwriting current value, or a\n     * value of lower priority to which we should fall back if the value is `undefined`.\n     *\n     * When value is being applied at a location, related values need to be consulted.\n     * - If there is a higher priority binding, we should be using that one instead.\n     *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp1`\n     *   requires that we check `exp2` to see if it is set to value other than `undefined`.\n     * - If there is a lower priority binding and we are changing to `undefined`\n     *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp2` to\n     *   `undefined` requires that we check `exp1` (and static values) and use that as new value.\n     *\n     * NOTE: The styling stores two values.\n     * 1. The raw value which came from the application is stored at `index + 0` location. (This value\n     *    is used for dirty checking).\n     * 2. The normalized value (converted to `KeyValueArray` if map and sanitized) is stored at `index +\n     * 1`.\n     *    The advantage of storing the sanitized value is that once the value is written we don't need\n     *    to worry about sanitizing it later or keeping track of the sanitizer.\n     *\n     * @param tData `TData` used for traversing the priority.\n     * @param tNode `TNode` to use for resolving static styling. Also controls search direction.\n     *   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.\n     *      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.\n     *   - `null` search prev and go all the way to end. Return last value where\n     *     `isStylingValuePresent(value)` is true.\n     * @param lView `LView` used for retrieving the actual values.\n     * @param prop Property which we are interested in.\n     * @param index Starting index in the linked list of styling bindings where the search should start.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function findStylingValue(tData, tNode, lView, prop, index, isClassBased) {\n        // `TNode` to use for resolving static styling. Also controls search direction.\n        //   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.\n        //      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.\n        //   - `null` search prev and go all the way to end. Return last value where\n        //     `isStylingValuePresent(value)` is true.\n        var isPrevDirection = tNode === null;\n        var value = undefined;\n        while (index > 0) {\n            var rawKey = tData[index];\n            var containsStatics = Array.isArray(rawKey);\n            // Unwrap the key if we contain static values.\n            var key = containsStatics ? rawKey[1] : rawKey;\n            var isStylingMap = key === null;\n            var valueAtLViewIndex = lView[index + 1];\n            if (valueAtLViewIndex === NO_CHANGE) {\n                // In firstUpdatePass the styling instructions create a linked list of styling.\n                // On subsequent passes it is possible for a styling instruction to try to read a binding\n                // which\n                // has not yet executed. In that case we will find `NO_CHANGE` and we should assume that\n                // we have `undefined` (or empty array in case of styling-map instruction) instead. This\n                // allows the resolution to apply the value (which may later be overwritten when the\n                // binding actually executes.)\n                valueAtLViewIndex = isStylingMap ? EMPTY_ARRAY$3 : undefined;\n            }\n            var currentValue = isStylingMap ? keyValueArrayGet(valueAtLViewIndex, prop) :\n                key === prop ? valueAtLViewIndex : undefined;\n            if (containsStatics && !isStylingValuePresent(currentValue)) {\n                currentValue = keyValueArrayGet(rawKey, prop);\n            }\n            if (isStylingValuePresent(currentValue)) {\n                value = currentValue;\n                if (isPrevDirection) {\n                    return value;\n                }\n            }\n            var tRange = tData[index + 1];\n            index = isPrevDirection ? getTStylingRangePrev(tRange) : getTStylingRangeNext(tRange);\n        }\n        if (tNode !== null) {\n            // in case where we are going in next direction AND we did not find anything, we need to\n            // consult residual styling\n            var residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n            if (residual != null /** OR residual !=== undefined */) {\n                value = keyValueArrayGet(residual, prop);\n            }\n        }\n        return value;\n    }\n    /**\n     * Determines if the binding value should be used (or if the value is 'undefined' and hence priority\n     * resolution should be used.)\n     *\n     * @param value Binding style value.\n     */\n    function isStylingValuePresent(value) {\n        // Currently only `undefined` value is considered non-binding. That is `undefined` says I don't\n        // have an opinion as to what this binding should be and you should consult other bindings by\n        // priority to determine the valid value.\n        // This is extracted into a single function so that we have a single place to control this.\n        return value !== undefined;\n    }\n    /**\n     * Sanitizes or adds suffix to the value.\n     *\n     * If value is `null`/`undefined` no suffix is added\n     * @param value\n     * @param suffixOrSanitizer\n     */\n    function normalizeAndApplySuffixOrSanitizer(value, suffixOrSanitizer) {\n        if (value == null /** || value === undefined */) {\n            // do nothing\n        }\n        else if (typeof suffixOrSanitizer === 'function') {\n            // sanitize the value.\n            value = suffixOrSanitizer(value);\n        }\n        else if (typeof suffixOrSanitizer === 'string') {\n            value = value + suffixOrSanitizer;\n        }\n        else if (typeof value === 'object') {\n            value = stringify(unwrapSafeValue(value));\n        }\n        return value;\n    }\n    /**\n     * Tests if the `TNode` has input shadow.\n     *\n     * An input shadow is when a directive steals (shadows) the input by using `@Input('style')` or\n     * `@Input('class')` as input.\n     *\n     * @param tNode `TNode` which we would like to see if it has shadow.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function hasStylingInputShadow(tNode, isClassBased) {\n        return (tNode.flags & (isClassBased ? 16 /* hasClassInput */ : 32 /* hasStyleInput */)) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertEqual(getBindingIndex(), tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var tNode = tView.firstCreatePass ?\n            getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, null, null) :\n            tView.data[adjustedIndex];\n        var textNative = lView[adjustedIndex] = createTextNode(value, lView[RENDERER]);\n        appendChild(tView, lView, textNative, tNode);\n        // Text nodes are self closing.\n        setPreviousOrParentTNode(tNode, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     * Update an interpolated class on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate1('key: ', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate2('key: ', v0, '; key1: ', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key2: {{v1}}; key2: {{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate3(\n     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate4(\n     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate5(\n     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}};\n     *             key5: {{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate6(\n     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *    'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n     *             key6: {{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate7(\n     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *    '; key6: ', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated style on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n     *             key6: {{v6}}; key7: {{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolate8(\n     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *    '; key6: ', v6, '; key7: ', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        ɵɵstyleMap(interpolatedValue);\n    }\n    /**\n     * Update an interpolated style on an element with 9 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  class=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n     *         key6: {{v6}}; key7: {{v7}}; key8: {{v8}}; key9: {{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstyleMapInterpolateV(\n     *    ['key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n     *     '; key6: ', v6, '; key7: ', v7, '; key8: ', v8, '; key9: ', v9, 'suffix']);\n     * ```\n     *.\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '; key2: ', value1, '; key2: ', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵstyleMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        ɵɵstyleMap(interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 9 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            elementPropertyInternal(tView, tNode, lView, propName, value, lView[RENDERER], sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component or directive.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var tView = getTView();\n            var tNode = getSelectedTNode();\n            var currentDef = getCurrentDirectiveDef(tView.data);\n            var renderer = loadComponentRenderer(currentDef, tNode, lView);\n            elementPropertyInternal(tView, tNode, lView, propName, value, renderer, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the component instance associated with a given DOM element.\n     *\n     * @usageNotes\n     * Given the following DOM structure:\n     * ```html\n     * <my-app>\n     *   <div>\n     *     <child-comp></child-comp>\n     *   </div>\n     * </my-app>\n     * ```\n     * Calling `getComponent` on `<child-comp>` will return the instance of `ChildComponent`\n     * associated with this DOM element.\n     *\n     * Calling the function on `<my-app>` will return the `MyApp` instance.\n     *\n     *\n     * @param element DOM element from which the component should be retrieved.\n     * @returns Component instance associated with the element or `null` if there\n     *    is no component associated with it.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getComponent(element) {\n        assertDomElement(element);\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * If inside an embedded view (e.g. `*ngIf` or `*ngFor`), retrieves the context of the embedded\n     * view that the element is part of. Otherwise retrieves the instance of the component whose view\n     * owns the element (in this case, the result is the same as calling `getOwningComponent`).\n     *\n     * @param element Element for which to get the surrounding component instance.\n     * @returns Instance of the component that is around the element or null if the element isn't\n     *    inside any component.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getContext(element) {\n        assertDomElement(element);\n        var context = loadLContext(element, false);\n        return context === null ? null : context.lView[CONTEXT];\n    }\n    /**\n     * Retrieves the component instance whose view contains the DOM element.\n     *\n     * For example, if `<child-comp>` is used in the template of `<app-comp>`\n     * (i.e. a `ViewChild` of `<app-comp>`), calling `getOwningComponent` on `<child-comp>`\n     * would return `<app-comp>`.\n     *\n     * @param elementOrDir DOM element, component or directive instance\n     *    for which to retrieve the root components.\n     * @returns Component instance whose view owns the DOM element or null if the element is not\n     *    part of a component view.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getOwningComponent(elementOrDir) {\n        var context = loadLContext(elementOrDir, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieves all root components associated with a DOM element, directive or component instance.\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param elementOrDir DOM element, component or directive instance\n     *    for which to retrieve the root components.\n     * @returns Root components associated with the target object.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getRootComponents(elementOrDir) {\n        return __spread(getRootContext(elementOrDir).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with an element, component or directive instance.\n     *\n     * @param elementOrDir DOM element, component or directive instance for which to\n     *    retrieve the injector.\n     * @returns Injector associated with the element, component or directive instance.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getInjector(elementOrDir) {\n        var context = loadLContext(elementOrDir, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directive instances associated with a given DOM element. Does not include\n     * component instances.\n     *\n     * @usageNotes\n     * Given the following DOM structure:\n     * ```\n     * <my-app>\n     *   <button my-button></button>\n     *   <my-comp></my-comp>\n     * </my-app>\n     * ```\n     * Calling `getDirectives` on `<button>` will return an array with an instance of the `MyButton`\n     * directive that is associated with the DOM element.\n     *\n     * Calling `getDirectives` on `<my-comp>` will return an empty array.\n     *\n     * @param element DOM element for which to get the directives.\n     * @returns Array of directives associated with the element.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getDirectives(element) {\n        var context = loadLContext(element);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        // The `directives` in this case are a named array called `LComponentView`. Clone the\n        // result so we don't expose an internal data structure in the user's console.\n        return context.directives === null ? [] : __spread(context.directives);\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target DOM element, component or directive instance for which to retrieve\n     *    the local references.\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieves the host element of a component or directive instance.\n     * The host element is the DOM element that matched the selector of the directive.\n     *\n     * @param componentOrDirective Component or directive instance for which the host\n     *     element should be retrieved.\n     * @returns Host element of the target.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getHostElement(componentOrDirective) {\n        return getLContext(componentOrDirective).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Element');\n        return loadLContext(node);\n    }\n    /**\n     * Retrieves a list of event listeners associated with a DOM element. The list does include host\n     * listeners, but it does not include event listeners defined outside of the Angular context\n     * (e.g. through `addEventListener`).\n     *\n     * @usageNotes\n     * Given the following DOM structure:\n     * ```\n     * <my-app>\n     *   <div (click)=\"doSomething()\"></div>\n     * </my-app>\n     *\n     * ```\n     * Calling `getListeners` on `<div>` will return an object that looks as follows:\n     * ```\n     * {\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * }\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @returns Array of event listeners on the DOM element.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function getListeners(element) {\n        assertDomElement(element);\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var type = (typeof useCaptureOrIndx === 'boolean' || useCaptureOrIndx >= 0) ? 'dom' : 'output';\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ? useCaptureOrIndx : false;\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture, type: type });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(lView[TVIEW], nodeIndex - HEADER_OFFSET);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n    /**\n     * Retrieve the component `LView` from component/element.\n     *\n     * NOTE: `LView` is a private and should not be leaked outside.\n     *       Don't export this method to `ng.*` on window.\n     *\n     * @param target DOM element or component instance for which to retrieve the LView.\n     */\n    function getComponentLView(target) {\n        var lContext = loadLContext(target);\n        var nodeIndx = lContext.nodeIndex;\n        var lView = lContext.lView;\n        var componentLView = lView[nodeIndx];\n        ngDevMode && assertLView(componentLView);\n        return componentLView;\n    }\n    /** Asserts that a value is a DOM Element. */\n    function assertDomElement(value) {\n        if (typeof Element !== 'undefined' && !(value instanceof Element)) {\n            throw new Error('Expecting instance of DOM Element');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks a component for check (in case of OnPush components) and synchronously\n     * performs change detection on the application this component belongs to.\n     *\n     * @param component Component to {@link ChangeDetectorRef#markForCheck mark for check}.\n     *\n     * @publicApi\n     * @globalApi ng\n     */\n    function applyChanges(component) {\n        markDirty(component);\n        getRootComponents(component).forEach(function (rootComponent) { return detectChanges(rootComponent); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --config=ivy\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getOwningComponent', getOwningComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('applyChanges', applyChanges);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRenderer = rendererFactory.createRenderer(null, null);\n        var hostRNode = locateHostElement(hostRenderer, opts.host || componentTag, componentDef.encapsulation);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootTView, rootView, null);\n            // update mode pass\n            refreshView(rootTView, rootView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param hostRenderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, hostRenderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var mergedAttrs = tNode.mergedAttrs = def.hostAttrs;\n        if (mergedAttrs !== null) {\n            computeStaticStyling(tNode, mergedAttrs);\n            if (rNode !== null) {\n                setUpAttributes(hostRenderer, rNode, mergedAttrs);\n                if (tNode.classes !== null) {\n                    writeDirectClass(hostRenderer, rNode, tNode.classes);\n                }\n                if (tNode.styles !== null) {\n                    writeDirectStyle(hostRenderer, rNode, tNode.styles);\n                }\n            }\n        }\n        var viewRenderer = rendererFactory.createRenderer(rNode, def);\n        var componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, viewRenderer, sanitizer);\n        if (tView.firstCreatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initTNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootLView, rootContext, hostFeatures) {\n        var tView = rootLView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootLView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootLView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass &&\n            (componentDef.hostBindings !== null || componentDef.hostAttrs !== null)) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setSelectedIndex(elementIndex);\n            var rootTView = rootLView[TVIEW];\n            addHostBindingsToExpandoInstructions(rootTView, componentDef);\n            growHostVarsSpace(rootTView, rootLView, componentDef.hostVars);\n            invokeHostBindingsInCreationMode(componentDef, component);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {hostFeatures: [LifecycleHooksFeature]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var shouldInheritFields = true;\n        var inheritanceChain = [definition];\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            if (superDef) {\n                if (shouldInheritFields) {\n                    inheritanceChain.push(superDef);\n                    // Some fields in the definition may be empty, if there were no values to put in them that\n                    // would've justified object creation. Unwrap them if necessary.\n                    var writeableDef = definition;\n                    writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                    writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                    writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                    // Merge hostBindings\n                    var superHostBindings = superDef.hostBindings;\n                    superHostBindings && inheritHostBindings(definition, superHostBindings);\n                    // Merge queries\n                    var superViewQuery = superDef.viewQuery;\n                    var superContentQueries = superDef.contentQueries;\n                    superViewQuery && inheritViewQuery(definition, superViewQuery);\n                    superContentQueries && inheritContentQueries(definition, superContentQueries);\n                    // Merge inputs and outputs\n                    fillProperties(definition.inputs, superDef.inputs);\n                    fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                    fillProperties(definition.outputs, superDef.outputs);\n                    // Merge animations metadata.\n                    // If `superDef` is a Component, the `data` field is present (defaults to an empty object).\n                    if (isComponentDef(superDef) && superDef.data.animation) {\n                        // If super def is a Component, the `definition` is also a Component, since Directives can\n                        // not inherit Components (we throw an error above and cannot reach this code).\n                        var defData = definition.data;\n                        defData.animation = (defData.animation || []).concat(superDef.data.animation);\n                    }\n                    // Inherit hooks\n                    // Assume super class inheritance feature has already run.\n                    writeableDef.afterContentChecked =\n                        writeableDef.afterContentChecked || superDef.afterContentChecked;\n                    writeableDef.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                    writeableDef.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                    writeableDef.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                    writeableDef.doCheck = definition.doCheck || superDef.doCheck;\n                    writeableDef.onDestroy = definition.onDestroy || superDef.onDestroy;\n                    writeableDef.onInit = definition.onInit || superDef.onInit;\n                }\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                        // If `InheritDefinitionFeature` is a part of the current `superDef`, it means that this\n                        // def already has all the necessary information inherited from its super class(es), so we\n                        // can stop merging fields from super classes. However we need to iterate through the\n                        // prototype chain to look for classes that might contain other \"features\" (like\n                        // NgOnChanges), which we should invoke for the original `definition`. We set the\n                        // `shouldInheritFields` flag to indicate that, essentially skipping fields inheritance\n                        // logic and only invoking functions from the \"features\" list.\n                        if (feature === ɵɵInheritDefinitionFeature) {\n                            shouldInheritFields = false;\n                        }\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n        mergeHostAttrsAcrossInheritance(inheritanceChain);\n    }\n    /**\n     * Merge the `hostAttrs` and `hostVars` from the inherited parent to the base class.\n     *\n     * @param inheritanceChain A list of `WritableDefs` starting at the top most type and listing\n     * sub-types in order. For each type take the `hostAttrs` and `hostVars` and merge it with the child\n     * type.\n     */\n    function mergeHostAttrsAcrossInheritance(inheritanceChain) {\n        var hostVars = 0;\n        var hostAttrs = null;\n        // We process the inheritance order from the base to the leaves here.\n        for (var i = inheritanceChain.length - 1; i >= 0; i--) {\n            var def = inheritanceChain[i];\n            // For each `hostVars`, we need to add the superclass amount.\n            def.hostVars = (hostVars += def.hostVars);\n            // for each `hostAttrs` we need to merge it with superclass.\n            def.hostAttrs =\n                mergeHostAttrs(def.hostAttrs, hostAttrs = mergeHostAttrs(hostAttrs, def.hostAttrs));\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        if (prevHostBindings) {\n            definition.hostBindings = function (rf, ctx) {\n                superHostBindings(rf, ctx);\n                prevHostBindings(rf, ctx);\n            };\n        }\n        else {\n            definition.hostBindings = superHostBindings;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () {\n            return this.firstChange;\n        };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    /** @nocollapse */\n    // tslint:disable-next-line:no-toplevel-property-access\n    ɵɵNgOnChangesFeature.ngInherit = true;\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var tView = getTView();\n        if (tView.firstCreatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var tView = getTView();\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex === -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    registerDestroyHooksIfSupported(tView, provider, tInjectables.length);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    registerDestroyHooksIfSupported(tView, provider, tInjectables.length, 0);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    var indexInFactory = multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex :\n                        existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                    registerDestroyHooksIfSupported(tView, provider, existingProvidersFactoryIndex > -1 ? existingProvidersFactoryIndex :\n                        existingViewProvidersFactoryIndex, indexInFactory);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Registers the `ngOnDestroy` hook of a provider, if the provider supports destroy hooks.\n     * @param tView `TView` in which to register the hook.\n     * @param provider Provider whose hook should be registered.\n     * @param contextIndex Index under which to find the context for the hook when it's being invoked.\n     * @param indexInFactory Only required for `multi` providers. Index of the provider in the multi\n     * provider factory.\n     */\n    function registerDestroyHooksIfSupported(tView, provider, contextIndex, indexInFactory) {\n        var providerIsTypeProvider = isTypeProvider(provider);\n        if (providerIsTypeProvider || isClassProvider(provider)) {\n            var prototype = (provider.useClass || provider).prototype;\n            var ngOnDestroy = prototype.ngOnDestroy;\n            if (ngOnDestroy) {\n                var hooks = tView.destroyHooks || (tView.destroyHooks = []);\n                if (!providerIsTypeProvider && provider.multi) {\n                    ngDevMode &&\n                        assertDefined(indexInFactory, 'indexInFactory when registering multi factory destroy hook');\n                    var existingCallbacksIndex = hooks.indexOf(contextIndex);\n                    if (existingCallbacksIndex === -1) {\n                        hooks.push(contextIndex, [indexInFactory, ngOnDestroy]);\n                    }\n                    else {\n                        hooks[existingCallbacksIndex + 1].push(indexInFactory, ngOnDestroy);\n                    }\n                }\n                else {\n                    hooks.push(contextIndex, ngOnDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     * @returns Index at which the factory was inserted.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n        return multiFactory.multi.push(factory) - 1;\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lView, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(lView, lView[TVIEW], this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        // TODO(misko): This needs to be refactored into a separate file so that it can be imported from\n        // `node_manipulation.ts` Currently doing the import cause resolution order to change and fails\n        // the tests. The work around is to have hard coded value in `node_manipulation.ts` for now.\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('10.0.0-next.3+44.sha-a6a7e1b');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) {\n            return isListLikeIterable$1(obj);\n        };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () {\n                return this.map.size === 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () {\n            this.map.clear();\n        };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) {\n            return obj instanceof Map || isJsObject$1(obj);\n        };\n        DefaultKeyValueDifferFactory.prototype.create = function () {\n            return new DefaultKeyValueDiffer();\n        };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation === exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = {};\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs,\n            flags: flags,\n            token: token,\n            value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [],\n                    index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null &&\n            (providedIn === 'any' || providedIn === ngModule._def.scope ||\n                moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) : elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = {};\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () {\n                return new Injector_(this._view, this._elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () {\n                return this._component.constructor;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () {\n            this._viewRef.destroy();\n        };\n        ComponentRef_.prototype.onDestroy = function (callback) {\n            this._viewRef.onDestroy(callback);\n        };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () {\n                return new ElementRef(this._data.renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () {\n                return new Injector_(this._view, this._elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () {\n                return this._embeddedViews.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () {\n                return rootRenderNodes(this._view);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () {\n                return this._view.context;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view.state & 128 /* Destroyed */) !== 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () {\n            markParentViewsForCheck(this._view);\n        };\n        ViewRef_.prototype.detach = function () {\n            this._view.state &= ~4 /* Attached */;\n        };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () {\n            Services.checkNoChangesView(this._view);\n        };\n        ViewRef_.prototype.reattach = function () {\n            this._view.state |= 4 /* Attached */;\n        };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () {\n                return this.get(this._moduleType);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) {\n            this._destroyListeners.push(callback);\n        };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop,\n                    nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: matchedQueries,\n            matchedQueryIds: matchedQueryIds,\n            references: references,\n            ngContentIndex: -1,\n            childCount: childCount,\n            bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    function getNamespace$1(elementName) {\n        var name = elementName.toLowerCase();\n        return name === 'svg' ? SVG_NAMESPACE : (name === 'math' ? MATH_ML_NAMESPACE : null);\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = stringifyCSSSelectorList(componentDef.selectors);\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRenderer = rendererFactory.createRenderer(null, this.componentDef);\n            // Determine a tag name used for creating host elements when this component is created\n            // dynamically. Default to 'div' if this component did not specify any tag name in its selector.\n            var elementName = this.componentDef.selectors[0][0] || 'div';\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(hostRenderer, rootSelectorOrNode, this.componentDef.encapsulation) :\n                elementCreate(elementName, rendererFactory.createRenderer(null, this.componentDef), getNamespace$1(elementName));\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, hostRenderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, hostRenderer);\n                if (hostRNode) {\n                    if (rootSelectorOrNode) {\n                        setUpAttributes(hostRenderer, hostRNode, ['ng-version', VERSION.full]);\n                    }\n                    else {\n                        // If host element is created as a part of this function call (i.e. `rootSelectorOrNode`\n                        // is not defined), also apply attributes and classes extracted from component selector.\n                        // Extract attributes and classes from the first selector only to match VE behavior.\n                        var _a = extractAttrsAndClassesFromSelector(this.componentDef.selectors[0]), attrs = _a.attrs, classes = _a.classes;\n                        if (attrs) {\n                            setUpAttributes(hostRenderer, hostRNode, attrs);\n                        }\n                        if (classes && classes.length > 0) {\n                            writeDirectClass(hostRenderer, hostRNode, classes.join(' '));\n                        }\n                    }\n                }\n                tElementNode = getTNode(rootLView[TVIEW], 0);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection = projectableNodes.map(function (nodesforSlot) {\n                        return Array.from(nodesforSlot);\n                    });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootTView, rootLView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () {\n                return new NodeInjector(this._tNode, this._rootLView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en',\n        [['a', 'p'], ['AM', 'PM'], u],\n        [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u,\n        [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']],\n        0,\n        [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],\n        ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'],\n        'USD',\n        '$',\n        'US Dollar',\n        {},\n        'ltr',\n        plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    /**\n     * Register locale data to be used internally by Angular. See the\n     * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n     *\n     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n     */\n    function registerLocaleData(data, localeId, extraData) {\n        if (typeof localeId !== 'string') {\n            extraData = localeId;\n            localeId = data[exports.ɵLocaleDataIndex.LocaleId];\n        }\n        localeId = localeId.toLowerCase().replace(/_/g, '-');\n        LOCALE_DATA[localeId] = data;\n        if (extraData) {\n            LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData] = extraData;\n        }\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = normalizeLocale(locale);\n        var match = getLocaleData(normalizedLocale);\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = getLocaleData(parentLocale);\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n    /**\n     * Retrieves the default currency code for the given locale.\n     *\n     * The default is defined as the first currency which is still in use.\n     *\n     * @param locale The code of the locale whose currency code we want.\n     * @returns The code of the default currency for the given locale.\n     *\n     */\n    function getLocaleCurrencyCode(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.CurrencyCode] || null;\n    }\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n     * or from the global `ng.common.locale`.\n     */\n    function getLocaleData(normalizedLocale) {\n        if (!(normalizedLocale in LOCALE_DATA)) {\n            LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n                _global.ng.common.locales[normalizedLocale];\n        }\n        return LOCALE_DATA[normalizedLocale];\n    }\n    /**\n     * Helper function to remove all the locale data from `LOCALE_DATA`.\n     */\n    function unregisterAllLocaleData() {\n        LOCALE_DATA = {};\n    }\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyCode\"] = 15] = \"CurrencyCode\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 16] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 17] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 18] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"Directionality\"] = 19] = \"Directionality\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 20] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 21] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n    /**\n     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n     */\n    function normalizeLocale(locale) {\n        return locale.toLowerCase().replace(/_/g, '-');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n    /**\n     * USD currency code that the application uses by default for CurrencyPipe when no\n     * DEFAULT_CURRENCY_CODE is provided.\n     */\n    var USD_CURRENCY_CODE = 'USD';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (isRootTemplateMessage(subTemplateIndex)) {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(getLView(), tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    function allocNodeIndex(startIndex) {\n        return startIndex + i18nVarsCount++;\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one. We should also\n        // keep track whether an element was a parent node or not, so that the logic that consumes\n        // the generated `I18nMutateOpCode`s can leverage this information to properly set TNode state\n        // (whether it's a parent or sibling).\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            var previousTNodeIndex = previousOrParentTNode.index - HEADER_OFFSET;\n            // If current TNode is a sibling node, encode it using a negative index. This information is\n            // required when the `Select` action is processed (see the `readCreateOpCodes` function).\n            if (!getIsParent()) {\n                previousTNodeIndex = ~previousTNodeIndex;\n            }\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousTNodeIndex << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        if (message === '' && isRootTemplateMessage(subTemplateIndex)) {\n            // If top level translation is an empty string, do not invoke additional processing\n            // and just create op codes for empty text node instead.\n            createOpCodes.push(message, allocNodeIndex(startIndex), parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n        }\n        else {\n            var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n            var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n            for (var i = 0; i < msgParts.length; i++) {\n                var value = msgParts[i];\n                if (i & 1) {\n                    // Odd indexes are placeholders (elements and sub-templates)\n                    if (value.charAt(0) === '/') {\n                        // It is a closing tag\n                        if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                            var phIndex = parseInt(value.substr(2), 10);\n                            parentIndex = parentIndexStack[--parentIndexPointer];\n                            createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                        }\n                    }\n                    else {\n                        var phIndex = parseInt(value.substr(1), 10);\n                        var isElement = value.charAt(0) === \"#\" /* ELEMENT */;\n                        // The value represents a placeholder that we move to the designated index.\n                        // Note: positive indicies indicate that a TNode with a given index should also be marked\n                        // as parent while executing `Select` instruction.\n                        createOpCodes.push((isElement ? phIndex : ~phIndex) << 3 /* SHIFT_REF */ |\n                            0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (isElement) {\n                            parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                        }\n                    }\n                }\n                else {\n                    // Even indexes are text (including bindings & ICU expressions)\n                    var parts = extractParts(value);\n                    for (var j = 0; j < parts.length; j++) {\n                        if (j & 1) {\n                            // Odd indexes are ICU expressions\n                            var icuExpression = parts[j];\n                            // Verify that ICU expression has the right shape. Translations might contain invalid\n                            // constructions (while original messages were correct), so ICU parsing at runtime may\n                            // not succeed (thus `icuExpression` remains a string).\n                            if (typeof icuExpression !== 'object') {\n                                throw new Error(\"Unable to parse ICU expression in \\\"\" + templateTranslation + \"\\\" message.\");\n                            }\n                            // Create the comment node that will anchor the ICU expression\n                            var icuNodeIndex = allocNodeIndex(startIndex);\n                            createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            // Update codes for the ICU expression\n                            var mask = getBindingMask(icuExpression);\n                            icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                            // Since this is recursive, the last TIcu that was pushed is the one we want\n                            var tIcuIndex = icuExpressions.length - 1;\n                            updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                            3, // skip 3 opCodes if not changed\n                            -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                            2, // skip 2 opCodes if not changed\n                            icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                        }\n                        else if (parts[j] !== '') {\n                            var text = parts[j];\n                            // Even indexes are text (including bindings)\n                            var hasBinding = text.match(BINDING_REGEXP);\n                            // Create text nodes\n                            var textNodeIndex = allocNodeIndex(startIndex);\n                            createOpCodes.push(\n                            // If there is a binding, the value will be set during update\n                            hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            if (hasBinding) {\n                                addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(tView, lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tView, tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(tView, lView, tNode);\n            return tNode;\n        }\n        appendChild(tView, lView, getNativeByTNode(tNode, lView), tNode);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(tView, lView, slotValue[NATIVE], tNode);\n        }\n        return tNode;\n    }\n    function isRootTemplateMessage(subTemplateIndex) {\n        return subTemplateIndex === undefined;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView, lView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView, lView) {\n        ngDevMode &&\n            assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tView, lView);\n        // Remove deleted nodes\n        var index = rootIndex + 1;\n        while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n            if (visitedNodes.indexOf(index) === -1) {\n                removeNode(tView, lView, index, /* markAsDetached */ true);\n            }\n            // Check if an element has any local refs and skip them\n            var tNode = getTNode(tView, index);\n            if (tNode &&\n                (tNode.type === 0 /* Container */ || tNode.type === 3 /* Element */ ||\n                    tNode.type === 4 /* ElementContainer */) &&\n                tNode.localNames !== null) {\n                // Divide by 2 to get the number of local refs,\n                // since they are stored as an array that also includes directive indexes,\n                // i.e. [\"localRef\", directiveIndex, ...]\n                index += tNode.localNames.length >> 1;\n            }\n            index++;\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(tView, lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, tView, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(tView, lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(tView, destinationNodeIndex);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode =\n                            appendI18nNode(tView, currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        // Negative indicies indicate that a given TNode is a sibling node, not a parent node\n                        // (see `i18nStartFirstPass` for additional information).\n                        var isParent = opCode >= 0;\n                        var nodeIndex = (isParent ? opCode : ~opCode) >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(tView, nodeIndex);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, isParent);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(tView, elementIndex);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(getTNode(tView, elementNodeIndex), lView, attrName, attrValue, null, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode &&\n                            assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(tView, lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode &&\n                            assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(tView, lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, tView, lView, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(lView[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(tView, getTNode(tView, nodeIndex), lView, propName, value, lView[RENDERER], sanitizeFn, false);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(lView, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(tView, nodeIndex);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(tView, lView, nodeIndex_1, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(tView, nestedIcuNodeIndex);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    if (caseIndex > -1) {\n                                        // Add the nodes for the new case\n                                        readCreateOpCodes(-1, tIcu.create[caseIndex], tView, lView);\n                                        caseCreated = true;\n                                    }\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(tView, nodeIndex);\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, tView, lView, caseCreated);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(tView, lView, index, markAsDetached) {\n        var removedPhTNode = getTNode(tView, index);\n        var removedPhRNode = getNativeByIndex(index, lView);\n        if (removedPhRNode) {\n            nativeRemoveNode(lView[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(lView, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(lView[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var tNode = getTNode(tView, previousElementIndex);\n                        // Set attributes for Elements only, for other types (like ElementContainer),\n                        // only set inputs below\n                        if (tNode.type === 3 /* Element */) {\n                            elementAttributeInternal(tNode, lView, attrName, value, null, null);\n                        }\n                        // Check if that attribute is a directive input\n                        var dataValue = tNode.inputs !== null && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(tView, lView, dataValue, attrName, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var tView = getTView();\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n            var lView = getLView();\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, tView, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(getDocument());\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the\n            // parent constructor and checking whether it's the same as the subclass metadata below.\n            // We can't use `hasOwnProperty` here because it doesn't work correctly in IE10 for\n            // static fields that are defined by TS. See\n            // https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which\n                // use tsickle-style annotations and reflect over them in the same way, this could\n                // cause issues, but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have\n                // different decorator types. Decorators on individual fields are not merged, as it's\n                // also incredibly unlikely that a field will be decorated both with an Angular\n                // decorator and a non-Angular decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor ||\n                        parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id) || autoRegisterModuleById[id];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            // When bootstrapping a module we have a dependency graph that looks like this:\n            // ApplicationRef -> ComponentFactoryResolver -> NgModuleRef. The problem is that if the\n            // module being resolved tries to inject the ComponentFactoryResolver, it'll create a\n            // circular dependency which will result in a runtime error, because the injector doesn't\n            // exist yet. We work around the issue by creating the ComponentFactoryResolver ourselves\n            // and providing it, rather than letting the injector resolve it.\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1(_this);\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode &&\n                assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            ngLocaleIdDef && setLocaleId(ngLocaleIdDef);\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            _this._r3Injector = createInjectorWithoutInjectorInstances(ngModuleType, _parent, [\n                { provide: NgModuleRef, useValue: _this }, {\n                    provide: ComponentFactoryResolver,\n                    useValue: _this.componentFactoryResolver\n                }\n            ], stringify(ngModuleType));\n            // We need to resolve the injector types separately from the injector creation, because\n            // the module might be trying to use this ref in its contructor for DI which will cause a\n            // circular error that will eventually error out, because the injector isn't created yet.\n            _this._r3Injector._resolveInjectorDefTypes();\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return lView[bindingIndex] === NO_CHANGE ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        return pureFunction1Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        return pureFunction2Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        return pureFunction3Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        return pureFunction4Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        return pureFunctionVInternal(getLView(), getBindingRoot(), slotOffset, pureFn, exps, thisArg);\n    }\n    /**\n     * Results of a pure function invocation are stored in LView in a dedicated slot that is initialized\n     * to NO_CHANGE. In rare situations a pure pipe might throw an exception on the very first\n     * invocation and not produce any valid results. In this case LView would keep holding the NO_CHANGE\n     * value. The NO_CHANGE is not something that we can use in expressions / bindings thus we convert\n     * it to `undefined`.\n     */\n    function getPureFunctionReturnValue(lView, returnValueIndex) {\n        ngDevMode && assertDataInRange(lView, returnValueIndex);\n        var lastReturnValue = lView[returnValueIndex];\n        return lastReturnValue === NO_CHANGE ? undefined : lastReturnValue;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1Internal(lView, bindingRoot, slotOffset, pureFn, exp, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getPureFunctionReturnValue(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getPureFunctionReturnValue(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getPureFunctionReturnValue(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     */\n    function pureFunction4Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getPureFunctionReturnValue(lView, bindingIndex + 4);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionVInternal(lView, bindingRoot, slotOffset, pureFn, exps, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getPureFunctionReturnValue(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstCreatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var previousInjectImplementation = setInjectImplementation(ɵɵdirectiveInject);\n        // DI for pipes is supposed to behave like directives when placed on a component\n        // host node, which means that we have to disable access to `viewProviders`.\n        var previousIncludeViewProviders = setIncludeViewProviders(false);\n        var pipeInstance = pipeFactory();\n        setIncludeViewProviders(previousIncludeViewProviders);\n        setInjectImplementation(previousInjectImplementation);\n        store(tView, getLView(), index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunction1Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunction2Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ? pureFunction3Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ? pureFunction4Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunctionVInternal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = getBindingIndex();\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) {\n            _super.prototype.next.call(this, value);\n        };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) {\n                    generatorOrNext.next(value);\n                };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) {\n                        setTimeout(function () { return generatorOrNext.error(err); });\n                    } : function (err) {\n                        generatorOrNext.error(err);\n                    };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () {\n                        setTimeout(function () { return generatorOrNext.complete(); });\n                    } : function () {\n                        generatorOrNext.complete();\n                    };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext(value); });\n                } : function (value) {\n                    generatorOrNext(value);\n                };\n                if (error) {\n                    errorFn = this.__isAsync ? function (err) {\n                        setTimeout(function () { return error(err); });\n                    } : function (err) {\n                        error(err);\n                    };\n                }\n                if (complete) {\n                    completeFn = this.__isAsync ? function () {\n                        setTimeout(function () { return complete(); });\n                    } : function () {\n                        complete();\n                    };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) {\n            return this._results.map(fn);\n        };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) {\n            this._results.forEach(fn);\n        };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () {\n            return this._results.slice();\n        };\n        QueryList.prototype.toString = function () {\n            return this._results.toString();\n        };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () {\n            this.changes.emit(this);\n        };\n        /** internal */\n        QueryList.prototype.setDirty = function () {\n            this.dirty = true;\n        };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () {\n            return new LQuery_(this.queryList);\n        };\n        LQuery_.prototype.setDirty = function () {\n            this.queryList.setDirty();\n        };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) {\n            this.dirtyQueriesWithMatches(tView);\n        };\n        LQueries_.prototype.detachView = function (tView) {\n            this.dirtyQueriesWithMatches(tView);\n        };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode &&\n                assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode &&\n                assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () {\n                return this.queries.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) {\n            this.queries.push(tquery);\n        };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) {\n            this.elementStart(tView, tNode);\n        };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                var declarationNodeIdx = this._declarationNodeIndex;\n                var parent_1 = tNode.parent;\n                // Determine if a given TNode is a \"direct\" child of a node on which a content query was\n                // declared (only direct children of query's host node can match with the descendants: false\n                // option). There are 3 main use-case / conditions to consider here:\n                // - <needs-target><i #target></i></needs-target>: here <i #target> parent node is a query\n                // host node;\n                // - <needs-target><ng-template [ngIf]=\"true\"><i #target></i></ng-template></needs-target>:\n                // here <i #target> parent node is null;\n                // - <needs-target><ng-container><i #target></i></ng-container></needs-target>: here we need\n                // to go past `<ng-container>` to determine <i #target> parent node (but we shouldn't traverse\n                // up past the query's host node!).\n                while (parent_1 !== null && parent_1.type === 4 /* ElementContainer */ &&\n                    parent_1.index !== declarationNodeIdx) {\n                    parent_1 = parent_1.parent;\n                }\n                return declarationNodeIdx === (parent_1 !== null ? parent_1.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView, lView[TVIEW], matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode &&\n                assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(tView, lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = tView.data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(tView, lView, queryIndex, result) {\n        var tQuery = tView.queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(tView, lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    result.push(lViewResults[i / 2]);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            var embeddedLView = embeddedLViews[i_2];\n                            collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var tView = getTView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(tView, queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ?\n                    collectQueryResults(tView, lView, queryIndex, []) :\n                    materializeViewResults(tView, lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getTView(), getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getTView(), getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(tView, lView, predicate, descend, read, isStatic) {\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(tView, lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getTView(), getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getTView(), getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(tView, lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(tView, lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(tView, lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(tView, lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleMapInterpolate1': ɵɵstyleMapInterpolate1,\n        'ɵɵstyleMapInterpolate2': ɵɵstyleMapInterpolate2,\n        'ɵɵstyleMapInterpolate3': ɵɵstyleMapInterpolate3,\n        'ɵɵstyleMapInterpolate4': ɵɵstyleMapInterpolate4,\n        'ɵɵstyleMapInterpolate5': ɵɵstyleMapInterpolate5,\n        'ɵɵstyleMapInterpolate6': ɵɵstyleMapInterpolate6,\n        'ɵɵstyleMapInterpolate7': ɵɵstyleMapInterpolate7,\n        'ɵɵstyleMapInterpolate8': ɵɵstyleMapInterpolate8,\n        'ɵɵstyleMapInterpolateV': ɵɵstyleMapInterpolateV,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    var jitOptions = null;\n    function setJitOptions(options) {\n        if (jitOptions !== null) {\n            if (options.defaultEncapsulation !== jitOptions.defaultEncapsulation) {\n                ngDevMode &&\n                    console.error('Provided value for `defaultEncapsulation` can not be changed once it has been set.');\n                return;\n            }\n            if (options.preserveWhitespaces !== jitOptions.preserveWhitespaces) {\n                ngDevMode &&\n                    console.error('Provided value for `preserveWhitespaces` can not be changed once it has been set.');\n                return;\n            }\n        }\n        jitOptions = options;\n    }\n    function getJitOptions() {\n        return jitOptions;\n    }\n    function resetJitOptions() {\n        jitOptions = null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$5 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$5).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$5)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$5)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                    // Set `schemas` on ngModuleDef to an empty array in JIT mode to indicate that runtime\n                    // should verify that there are no unknown elements in a template. In AOT mode, that check\n                    // happens at compile time and `schemas` information is not present on Component and Module\n                    // defs after compilation (so the check doesn't happen the second time at runtime).\n                    if (!ngModuleDef.schemas) {\n                        ngModuleDef.schemas = [];\n                    }\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode &&\n                        verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$5,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$5).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$5).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. This function can\n     * be called on modules with components that have not fully compiled yet, but the result should not\n     * be used until they have.\n     *\n     * @param moduleType module that transitive scope should be calculated for.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // This const was called `jitOptions` previously but had to be renamed to `options` because\n                    // of a bug with Terser that caused optimized JIT builds to throw a `ReferenceError`.\n                    // This bug was investigated in https://github.com/angular/angular-cli/issues/17264.\n                    // We should not rename it back until https://github.com/terser/terser/issues/615 is fixed.\n                    var options = getJitOptions();\n                    var preserveWhitespaces = metadata.preserveWhitespaces;\n                    if (preserveWhitespaces === undefined) {\n                        if (options !== null && options.preserveWhitespaces !== undefined) {\n                            preserveWhitespaces = options.preserveWhitespaces;\n                        }\n                        else {\n                            preserveWhitespaces = false;\n                        }\n                    }\n                    var encapsulation = metadata.encapsulation;\n                    if (encapsulation === undefined) {\n                        if (options !== null && options.defaultEncapsulation !== undefined) {\n                            encapsulation = options.defaultEncapsulation;\n                        }\n                        else {\n                            encapsulation = exports.ViewEncapsulation.Emulated;\n                        }\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: preserveWhitespaces, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: encapsulation, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var reflect = getReflect();\n        var propMetadata = reflect.ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: reflect.hasLifecycleHook(type, 'ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addDirectiveDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type.prototype).constructor;\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the def if there are no annotations and the def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n                shouldAddAbstractDirective(parent)) {\n                compileDirective(parent, null);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnnotation)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        return exportAs === undefined ? null : splitByComma(exportAs);\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnnotation(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    var LIFECYCLE_HOOKS = [\n        'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n        'ngAfterContentInit', 'ngAfterContentChecked'\n    ];\n    function shouldAddAbstractDirective(type) {\n        var reflect = getReflect();\n        if (LIFECYCLE_HOOKS.some(function (hookName) { return reflect.hasLifecycleHook(type, hookName); })) {\n            return true;\n        }\n        var propMetadata = reflect.propMetadata(type);\n        for (var field in propMetadata) {\n            var annotations = propMetadata[field];\n            for (var i = 0; i < annotations.length; i++) {\n                var current = annotations[i];\n                var metadataName = current.ngMetadataName;\n                if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                    metadataName === 'Output' || metadataName === 'HostBinding' ||\n                    metadataName === 'HostListener') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     *\n     * ```\n     *\n     * The following example registers another DOM event handler that listens for key-press events.\n     * ``` ts\n     * import { HostListener, Component } from \"@angular/core\";\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: `<h1>Hello, you have pressed keys {{counter}} number of times!</h1> Press any key to\n     * increment the counter.\n     *   <button (click)=\"resetCounter()\">Reset Counter</button>`\n     * })\n     * class AppComponent {\n     *   counter = 0;\n     *   @HostListener('window:keydown', ['$event'])\n     *   handleKeyDown(event: KeyboardEvent) {\n     *     this.counter++;\n     *   }\n     *   resetCounter() {\n     *     this.counter = 0;\n     *   }\n     * }\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injection token that allows you to provide one or more initialization functions.\n     * These function are injected at application startup and executed during\n     * app initialization. If any of these functions returns a Promise, initialization\n     * does not complete until the Promise is resolved.\n     *\n     * You can, for example, create a factory function that loads language data\n     * or an external configuration, and provide that function to the `APP_INITIALIZER` token.\n     * That way, the function is executed during the application bootstrap process,\n     * and the needed data is available on startup.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises)\n                .then(function () {\n                complete();\n            })\n                .catch(function (e) {\n                _this.reject(e);\n            });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ɵfac = function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); };\n        ApplicationInitStatus.ɵprov = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: ApplicationInitStatus.ɵfac });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ɵfac = function Console_Factory(t) { return new (t || Console)(); };\n        Console.ɵprov = ɵɵdefineInjectable({ token: Console, factory: Console.ɵfac });\n        return Console;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Provide this token to set the default currency code your application uses for\n     * CurrencyPipe when there is no currency code passed into it. This is only used by\n     * CurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * <div class=\"alert is-helpful\">\n     *\n     * **Deprecation notice:**\n     *\n     * The default currency code is currently always `USD` but this is deprecated from v9.\n     *\n     * **In v10 the default currency code will be taken from the current locale.**\n     *\n     * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in\n     * your application `NgModule`:\n     *\n     * ```ts\n     * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}\n     * ```\n     *\n     * </div>\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: DEFAULT_CURRENCY_CODE, useValue: 'EUR' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var DEFAULT_CURRENCY_CODE = new InjectionToken('DefaultCurrencyCode');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) {\n            return undefined;\n        };\n        Compiler.ɵfac = function Compiler_Factory(t) { return new (t || Compiler)(); };\n        Compiler.ɵprov = ɵɵdefineInjectable({ token: Compiler, factory: Compiler.ɵfac });\n        return Compiler;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null); })();\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () {\n                fn && fn.apply(null, null);\n            });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getNativeRequestAnimationFrame() {\n        var nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n        var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n        if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n            // use unpatched version of requestAnimationFrame(native delegate) if possible\n            // to avoid another Change detection\n            var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedRequestAnimationFrame) {\n                nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n            }\n            var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedCancelAnimationFrame) {\n                nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n            }\n        }\n        return { nativeRequestAnimationFrame: nativeRequestAnimationFrame, nativeCancelAnimationFrame: nativeCancelAnimationFrame };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b, _c = _a.shouldCoalesceEventChangeDetection, shouldCoalesceEventChangeDetection = _c === void 0 ? false : _c;\n            this.hasPendingMacrotasks = false;\n            this.hasPendingMicrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n            self.lastRequestAnimationFrameId = -1;\n            self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () {\n            return Zone.current.get('isAngularZone') === true;\n        };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function delayChangeDetectionForEvents(zone) {\n        if (zone.lastRequestAnimationFrameId !== -1) {\n            return;\n        }\n        zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {\n            zone.lastRequestAnimationFrameId = -1;\n            updateMicroTaskStatus(zone);\n            checkStable(zone);\n        });\n        updateMicroTaskStatus(zone);\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        var delayChangeDetectionForEventsDelegate = function () {\n            delayChangeDetectionForEvents(zone);\n        };\n        var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n            zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                        maybeDelayChangeDetection();\n                    }\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone._hasPendingMicrotasks = hasTaskState.microTask;\n                        updateMicroTaskStatus(zone);\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function updateMicroTaskStatus(zone) {\n        if (zone._hasPendingMicrotasks ||\n            (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n            zone.hasPendingMicrotasks = true;\n        }\n        else {\n            zone.hasPendingMicrotasks = false;\n        }\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) {\n            return fn();\n        };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () {\n            return this._pendingCount;\n        };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ɵfac = function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); };\n        Testability.ɵprov = ɵɵdefineInjectable({ token: Testability, factory: Testability.ɵfac });\n        return Testability;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null); })();\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) {\n            this._applications.delete(token);\n        };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () {\n            this._applications.clear();\n        };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) {\n            return this._applications.get(elem) || null;\n        };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () {\n            return Array.from(this._applications.values());\n        };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () {\n            return Array.from(this._applications.keys());\n        };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ɵfac = function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); };\n        TestabilityRegistry.ɵprov = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: TestabilityRegistry.ɵfac });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null); })();\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        if (typeof ngJitMode === 'undefined' || ngJitMode) {\n            // Configure the compiler to use the provided options. This call may fail when multiple modules\n            // are bootstrapped with incompatible options, as a component can only be compiled according to\n            // a single set of options.\n            setJitOptions({\n                defaultEncapsulation: _lastDefined(compilerOptions.map(function (options) { return options.defaultEncapsulation; })),\n                preserveWhitespaces: _lastDefined(compilerOptions.map(function (options) { return options.preserveWhitespaces; })),\n            });\n        }\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n            var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({\n                    next: function (error) {\n                        exceptionHandler.handleError(error);\n                    }\n                }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        if (ivyEnabled) {\n                            // If the `LOCALE_ID` provider is defined at bootstrap then we set the value for ivy\n                            var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                            setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                        }\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance\n                    .constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) {\n            this._destroyListeners.push(callback);\n        };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () {\n                return this._injector;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () {\n                return this._destroyed;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ɵfac = function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); };\n        PlatformRef.ɵprov = ɵɵdefineInjectable({ token: PlatformRef, factory: PlatformRef.ɵfac });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null); })();\n    function getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n                enableLongStackTrace: isDevMode(),\n                shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n            });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            /** @internal */\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({\n                next: function () {\n                    _this._zone.run(function () {\n                        _this.tick();\n                    });\n                }\n            });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () {\n                            observer.next(false);\n                        });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () {\n                _this._unloadComponent(compRef);\n            });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () {\n                return this._views.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationRef.ɵfac = function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); };\n        ApplicationRef.ɵprov = ɵɵdefineInjectable({ token: ApplicationRef, factory: ApplicationRef.ɵfac });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null); })();\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _lastDefined(args) {\n        for (var i = args.length - 1; i >= 0; i--) {\n            if (args[i] !== undefined) {\n                return args[i];\n            }\n        }\n        return undefined;\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ɵfac = function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); };\n        SystemJsNgModuleLoader.ɵprov = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: SystemJsNgModuleLoader.ɵfac });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null); })();\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () {\n                return this._debugContext.injector;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                return this._debugContext.component;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () {\n                return this._debugContext.context;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () {\n                return this._debugContext.references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () {\n                return this._debugContext.providerTokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this.childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () {\n                return getInjector(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getOwningComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(function (listener) { return listener.type === 'dom'; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () {\n                return getLocalRefs(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () {\n                return getInjectionTokens(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = {};\n                // Collect properties from the DOM.\n                copyDomProperties(this.nativeElement, properties);\n                // Collect properties from the bindings. This is needed for animation renderer which has\n                // synthetic properties which don't get reflected into the DOM.\n                collectPropertyBindings(properties, tNode, lView, tData);\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    var lowercaseName = attr.name.toLowerCase();\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(lowercaseName) === -1) {\n                        // Save the lowercase name to align the behavior between browsers.\n                        // IE preserves the case, while all other browser convert it to lower case.\n                        attributes[lowercaseName] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var result = {};\n                var element = this.nativeElement;\n                // SVG elements return an `SVGAnimatedString` instead of a plain string for the `className`.\n                var className = element.className;\n                var classes = className && typeof className !== 'string' ? className.baseVal.split(' ') :\n                    className.split(' ');\n                classes.forEach(function (value) { return result[value] = true; });\n                return result;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback.call(node, eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use '__ngUnwrap__' as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    // In order to ensure that we can detect the special __ngUnwrap__ token described above, we\n                    // use `toString` on the listener and see if it contains the token. We use this approach to\n                    // ensure that it still worked with compiled code since it cannot remove or rename string\n                    // literals. We also considered using a special function name (i.e. if(listener.name ===\n                    // special)) but that was more cumbersome and we were also concerned the compiled code could\n                    // strip the name, turning the condition in to (\"\" === \"\") and always returning true.\n                    if (listener.toString().indexOf('__ngUnwrap__') !== -1) {\n                        var unwrappedListener = listener('__ngUnwrap__');\n                        return invokedListeners.indexOf(unwrappedListener) === -1 &&\n                            unwrappedListener.call(node, eventObj);\n                    }\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function copyDomProperties(element, properties) {\n        if (element) {\n            // Skip own properties (as those are patched)\n            var obj = Object.getPrototypeOf(element);\n            var NodePrototype = Node.prototype;\n            while (obj !== null && obj !== NodePrototype) {\n                var descriptors = Object.getOwnPropertyDescriptors(obj);\n                for (var key in descriptors) {\n                    if (!key.startsWith('__') && !key.startsWith('on')) {\n                        // don't include properties starting with `__` and `on`.\n                        // `__` are patched values which should not be included.\n                        // `on` are listeners which also should not be included.\n                        var value = element[key];\n                        if (isPrimitiveValue(value)) {\n                            properties[key] = value;\n                        }\n                    }\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n        }\n    }\n    function isPrimitiveValue(value) {\n        return typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number' ||\n            value === null;\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode, false);\n        if (context !== null) {\n            var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n            _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n        }\n        else {\n            // If the context is null, then `parentElement` was either created with Renderer2 or native DOM\n            // APIs.\n            _queryNativeNodeDescendants(parentElement.nativeNode, predicate, matches, elementsOnly);\n        }\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = lView[DECLARATION_COMPONENT_VIEW];\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(properties, tNode, lView, tData) {\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__POST_R3__;\n    function getDebugNodeR2__PRE_R3__(nativeNode) {\n        return getDebugNode__PRE_R3__(nativeNode);\n    }\n    function getDebugNodeR2__POST_R3__(_nativeNode) {\n        return null;\n    }\n    var getDebugNodeR2 = getDebugNodeR2__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (typeof ngI18nClosureMode !== 'undefined' && ngI18nClosureMode &&\n            typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n        { provide: DEFAULT_CURRENCY_CODE, useValue: USD_CURRENCY_CODE },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) {\n            queue.push(fn);\n        };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ɵmod = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ɵinj = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: matchedQueries,\n            matchedQueryIds: matchedQueryIds,\n            references: references,\n            ngContentIndex: ngContentIndex,\n            childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null,\n                template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] =\n                { type: 0 /* ElementOutput */, target: target, eventName: eventName, propName: null };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: matchedQueries,\n            matchedQueryIds: matchedQueryIds,\n            references: references,\n            ngContentIndex: ngContentIndex,\n            childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0,\n            bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries,\n            flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP,\n            handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount,\n            lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null,\n            parentNodeDef: parentNodeDef,\n            context: null,\n            component: null,\n            nodes: nodes,\n            state: 13 /* CatInit */,\n            root: root,\n            renderer: renderer,\n            oldValues: new Array(def.bindingCount),\n            disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode : prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode : prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector,\n            projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode,\n            sanitizer: sanitizer,\n            rendererFactory: rendererFactory,\n            renderer: renderer,\n            errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () {\n                return createInjector$1(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () {\n                return this.elOrCompView.component;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () {\n                return this.elOrCompView.context;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) {\n            return this.debugContextFactory(nativeElement);\n        };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () {\n            this.delegate.destroy();\n        };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) {\n            return this.delegate.parentNode(node);\n        };\n        DebugRenderer2.prototype.nextSibling = function (node) {\n            return this.delegate.nextSibling(node);\n        };\n        DebugRenderer2.prototype.setValue = function (node, value) {\n            return this.delegate.setValue(node, value);\n        };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope,\n            providers: providers,\n            modules: modules,\n            providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your `polyfills.ts` file.\\n' +\n                'For server-side rendering applications add the import to your `main.server.ts` file.)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_ID = APP_ID;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.ApplicationModule = ApplicationModule;\n    exports.ApplicationRef = ApplicationRef;\n    exports.Attribute = Attribute;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.Component = Component;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ComponentRef = ComponentRef;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.DEFAULT_CURRENCY_CODE = DEFAULT_CURRENCY_CODE;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.Directive = Directive;\n    exports.ElementRef = ElementRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ErrorHandler = ErrorHandler;\n    exports.EventEmitter = EventEmitter;\n    exports.Host = Host;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.INJECTOR = INJECTOR;\n    exports.Inject = Inject;\n    exports.Injectable = Injectable;\n    exports.InjectionToken = InjectionToken;\n    exports.Injector = Injector;\n    exports.Input = Input;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgProbeToken = NgProbeToken;\n    exports.NgZone = NgZone;\n    exports.Optional = Optional;\n    exports.Output = Output;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.Pipe = Pipe;\n    exports.PlatformRef = PlatformRef;\n    exports.Query = Query;\n    exports.QueryList = QueryList;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.Sanitizer = Sanitizer;\n    exports.Self = Self;\n    exports.SimpleChange = SimpleChange;\n    exports.SkipSelf = SkipSelf;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.TemplateRef = TemplateRef;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.Type = Type;\n    exports.VERSION = VERSION;\n    exports.Version = Version;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.ViewRef = ViewRef$1;\n    exports.WrappedValue = WrappedValue;\n    exports.asNativeElements = asNativeElements;\n    exports.assertPlatform = assertPlatform;\n    exports.createPlatform = createPlatform;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.defineInjectable = defineInjectable;\n    exports.destroyPlatform = destroyPlatform;\n    exports.enableProdMode = enableProdMode;\n    exports.forwardRef = forwardRef;\n    exports.getDebugNode = getDebugNode$1;\n    exports.getModuleFactory = getModuleFactory;\n    exports.getPlatform = getPlatform;\n    exports.inject = inject;\n    exports.isDevMode = isDevMode;\n    exports.platformCore = platformCore;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵConsole = Console;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵand = anchorDef;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵgetDebugNodeR2 = getDebugNodeR2;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵgetLocaleCurrencyCode = getLocaleCurrencyCode;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵglobal = _global;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵpid = pipeDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵqud = queryDef;\n    exports.ɵregisterLocaleData = registerLocaleData;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵresetJitOptions = resetJitOptions;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵsetDocument = setDocument;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵstore = store;\n    exports.ɵstringify = stringify;\n    exports.ɵted = textDef;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵunregisterLocaleData = unregisterAllLocaleData;\n    exports.ɵunv = unwrapValue;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵvid = viewDef;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵinject = ɵɵinject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵinvalidFactoryDep = ɵɵinvalidFactoryDep;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleMapInterpolate1 = ɵɵstyleMapInterpolate1;\n    exports.ɵɵstyleMapInterpolate2 = ɵɵstyleMapInterpolate2;\n    exports.ɵɵstyleMapInterpolate3 = ɵɵstyleMapInterpolate3;\n    exports.ɵɵstyleMapInterpolate4 = ɵɵstyleMapInterpolate4;\n    exports.ɵɵstyleMapInterpolate5 = ɵɵstyleMapInterpolate5;\n    exports.ɵɵstyleMapInterpolate6 = ɵɵstyleMapInterpolate6;\n    exports.ɵɵstyleMapInterpolate7 = ɵɵstyleMapInterpolate7;\n    exports.ɵɵstyleMapInterpolate8 = ɵɵstyleMapInterpolate8;\n    exports.ɵɵstyleMapInterpolateV = ɵɵstyleMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}