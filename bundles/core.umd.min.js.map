{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","fillProperties","source","key","ÉµChangeDetectorStatus","Directive","dir","type","Component","c","changeDetection","Default","Pipe","pure","updateBaseDefFromIOProp","getProp","inheritedBaseDef","ngBaseDef","baseDef","inputs","outputs","declaredInputs","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","Type","Function","isType","v","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty$1","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","GET_PROPERTY_NAME$1","USE_VALUE$1","getClosureSafeProperty","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","ViewEncapsulation","Injectable","preR3InjectableCompile","injectableType","NgModule","ngModule","preR3NgModuleCompile","moduleType","metadata","ngInjectorDef","Version","VERSION","full","major","split","minor","patch","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","def","injectorDefTypes","Set","onDestroy","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","add","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","isPromise","isObservable","subscribe","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","trace","events","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","detectWTF","wtf","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","sink","Subscription","Subject","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","remove","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","listener","dst","reduce","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","unsubscribe","merge","pipe","share","componentOrFactory","componentFactory","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","list","el","splice","RendererStyleFlags2","RenderComponentType","templateUrl","slotCount","encapsulation","styles","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ElementRef","NgModuleFactoryLoader","moduleFactories","QueryList","dirty","_results","changes","find","toArray","reset","flatten","flat","item","flatItem","last","notifyOnChanges","setDirty","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ChangeDetectorRef","TemplateRef","ViewContainerRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","listeners","DebugElement","addChild","references","providerTokens","attributes","classes","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","node","triggerEventHandler","eventObj","element","parentNode","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","componentResourceResolutionQueue","unwrapResponse","response","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrName","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","tagSet","tags","e_1","_c","e_1_1","return","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount","checkBinding","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","createComment","parentEl","selectRootElement","attrs","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","addClass","removeClass","setElementStyle","STYLE","unit","suffix","setStyle","removeStyle","setElementProperty","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","detach","createChangeDetectorRef","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","subscription","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","prefix","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","queueInitHooks","onInit","doCheck","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","throwMultipleComponentError","tNode","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","document","stringify$1","loadInternal","readElementValue","getNextLNode","getChildLNode","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","renderParentNode","beforeNode","projectionNodeIndex","native","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","createTextNode","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","views","lView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","canInsertNativeChildOfElement","canInsertNativeChildOfView","grandParentContainer","canInsertNativeNode","grandParent","nativeInsertBefore","getRenderParent","appendProjectedNode","currentParent","lContainer","ngContainerChild","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","getValue","currFlag","getPointers","hasValueChanged","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setContextDirty","store","DashCase","removeProperty","setClass","isDirtyYes","adjustedIndex","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","CIRCULAR$2","getRenderer","getRendererFactory","previousOrParentNode","isParent","currentQueries","currentElementNode","getCurrentSanitizer","_getViewData","getPreviousOrParentNode","contextViewData","getCleanup","getTViewCleanup","checkNoChangesMode","enterView","newView","host","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","setHostBindings","hostBindings","refreshChildComponents","componentRefresh","defs","dirIndex","executeInitAndContentHooks","createLViewData","createLNodeObject","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","tickRootContext","namespaceHTML","renderComponentOrTemplate","componentOrContext","getRenderFlags","_currentNamespace","elementStart","localRefs","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElementNS","cacheMatchingDirectivesForNode","exportsMap","","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","isContentQueryHost","clone","tDirectives","directiveCreate","saveResolvedLocalsInData","directiveRegistry","diPublic","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","bindingStartIndex","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","tag","rNode","directiveDefs","pipeDefs","onPush","storeCleanupWithContext","storeCleanupFn","elementEnd","addNode","tViews","initialInputs","stylingTemplate","generatePropertyAliases","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","getStylingContext","stylingContext","allocStylingContext","lElement","templateStyleContext","elementStylingApply","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","styleSanitizer","isClassBased_6","valueToApply","baseDirectiveCreate","addComponentLogic","directiveIndex","addToViewTree","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","createLContainer","parentLNode","isForViewContainerRef","adjustedElementIndex","viewAttached","detectChangesInternal","projectionNodeStack$1","adjustedHostIndex","markViewDirty","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","_getComponentHostLElementNode","getRootView","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","NO_CHANGE","initBindings","moveBindingIndexToReservedSlot","currentSlot","restoreBindingIndex","loadElement","loadElementInternal","consumeBinding","bindingUpdated","isDifferent","throwErrorIfNoChangesMode","checkAndUpdateBinding$1","bindingUpdated2","exp1","exp2","different","bindingUpdated4","exp3","exp4","getTView","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","EMPTY$1","EMPTY_ARRAY$3","_renderCompCount$1","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","secondary","newLookup","minifiedKey","declaredName","defineDirective","PRIVATE_PREFIX","onChangesWrapper","delegateHook","simpleChanges","ViewRef$1","_lViewNode","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","isInternalRootView","elementNode","componentTag","LifecycleHooksFeature","projection$$1","nodeList","firstTNode","lNode","ComponentRef$1","ComponentRef$$1","destroyCbs","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","getOrCreateChangeDetectorRef","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","getOrCreateInjectable","bloomHash","bloomHashBit","bloomFindPossibleInjector","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","getOrCreateElementRef","ElementRef$1","ElementRef$$1","getOrCreateContainerRef","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","NodeInjector","_lInjector","getOrCreateTemplateRef","ViewContainerRef$$1","_lContainerNode","_hostNode","_viewRefs","parentLInjector","adjustedIdx","_adjustIndex","newIndex","shift","TemplateRef$1","getFactoryOf","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","containerNode","createEmbeddedViewNode","declarationView","queries","i18nTagRegex","appendI18nNode","previousNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","ngModuleDef","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","pureFunction1","slotOffset","pureFn","exp","thisArg","pureFunction2","pureFunction3","pureFunction4","pureFunctionV","exps","isPure","LQueries_","shallow","deep","track","descend","createQuery$1","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList$1","QueryList_","_values","flatten$1","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","Éµangular_packages_core_core_l","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_m","Éµangular_packages_core_core_o","Éµangular_packages_core_core_n","Éµangular_packages_core_core_r","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_v","Éµangular_packages_core_core_y","Éµangular_packages_core_core_x","Éµangular_packages_core_core_w","Éµangular_packages_core_core_u","Éµangular_packages_core_core_z","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_s","Éµangular_packages_core_core_t","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleUrls","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefineComponent","ÉµdefineDirective","ÉµdefinePipe","definePipe","pipeDef","ÉµdefineNgModule","defineNgModule","declarations","transitiveCompileScopes","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµdirectiveInject","directiveInject","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","injectTemplateRef","ÉµinjectViewContainerRef","injectViewContainerRef","ÉµinjectChangeDetectorRef","injectChangeDetectorRef","ÉµinjectAttribute","injectAttribute","attrNameToInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","getInheritedFactory","proto","ÉµPublicFeature","PublicFeature","definition","ÉµInheritDefinitionFeature","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","isComponentDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","superPrototype","ÉµNgOnChangesFeature","NgOnChangesFeature","declaredToMinifiedInputs","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","writable","currentChange","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNC","ÉµC","Éµx","nextContext","level","walkUpViews","nestingLevel","ÉµE","ÉµNH","ÉµNM","namespaceMathML","ÉµNS","namespaceSVG","ÉµEe","ÉµL","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","addEventListener","cleanupInstances","outputData","createOutput","ÉµT","textNode","ÉµV","embeddedViewStart","viewBlockId","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","ÉµQ","memoryIndex","getOrCreateCurrentQueries","QueryType","ÉµQr","registerContentQuery","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","Éµd","loadDirective","ÉµP","selectorIndex","componentNode","nodeToProject","grandparent","currentComponentHost","firstProjectedNode","Éµb","Éµi1","interpolation1","Éµi2","interpolation2","i0","Éµi3","interpolation3","i1","Éµi4","interpolation4","i2","Éµi5","interpolation5","i3","Éµi6","interpolation6","i4","Éµi7","interpolation7","i5","Éµi8","interpolation8","i6","ÉµiV","interpolationV","Éµpb1","pipeBind1","pipeInstance","Éµpb2","pipeBind2","Éµpb3","pipeBind3","Éµpb4","pipeBind4","ÉµpbV","pipeBindV","Éµf0","pureFunction0","getCreationMode","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","pureFunction5","exp5","Éµf6","pureFunction6","exp6","Éµf7","pureFunction7","exp7","Éµf8","pureFunction8","exp8","ÉµfV","ÉµgV","getCurrentView","ÉµrV","restoreView","viewToRestore","ÉµcR","containerRefreshStart","Éµcr","containerRefreshEnd","nextIndex","ÉµqR","queryRefresh","Éµql","loadQueryList","queryListIdx","Éµe","Éµp","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","ÉµpD","projectionDef","pData","tails","componentChild","bucketIndex","Éµr","reference","ÉµrS","reserveSlots","numSlots","Éµa","elementAttribute","element_1","strValue","Éµs","elementStyling","classDeclarations","styleDeclarations","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","Éµsm","elementStylingMap","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","classesStartIndex","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","Éµsp","elementStyleProp","styleIndex","valueToAdd","Éµsa","Éµcp","elementClassProp","stylingIndex","updateClassProp","addOrRemove","Éµt","textBinding","existingNode","textContent","Éµv","embeddedViewEnd","Éµst","Éµld","ÉµPp","pipeName","getPipeDef","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI1","i18nInterpolation1","ÉµiI2","i18nInterpolation2","ÉµiI3","i18nInterpolation3","idx","ÉµiI4","i18nInterpolation4","b1","ÉµiI5","i18nInterpolation5","ÉµiI6","i18nInterpolation6","ÉµiI7","i18nInterpolation7","b2","ÉµiI8","i18nInterpolation8","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.1+26.sha-97d8b5e\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = false;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (function () { })(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (function () { })(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (function () { })(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty('ngBaseDef')) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty$1(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var Éµ0$2 = GET_PROPERTY_NAME$1;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$2 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return (preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.1+26.sha-97d8b5e');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n        ]; };\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.decorators = [\n            { type: Injectable }\n        ];\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.decorators = [\n            { type: Injectable }\n        ];\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = function () { return [\n            { type: NgZone }\n        ]; };\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = function () { return []; };\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler = compilerFactory.createCompiler([options]);\n            return compiler.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        PlatformRef.ctorParameters = function () { return [\n            { type: Injector }\n        ]; };\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationRef.ctorParameters = function () { return [\n            { type: NgZone },\n            { type: Console },\n            { type: Injector },\n            { type: ErrorHandler },\n            { type: ComponentFactoryResolver },\n            { type: ApplicationInitStatus }\n        ]; };\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = function () { return [\n            { type: Compiler },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n        ]; };\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] }\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = function () { return [\n            { type: ApplicationRef }\n        ]; };\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            debugger;\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // NOTE: The order here matters: Checking window, then global, then self is important.\n    //   checking them in another order can result in errors in some Node environments.\n    var __global$1 = typeof window != 'undefined' && window || typeof global != 'undefined' && global ||\n        typeof self != 'undefined' && self;\n    function ngDevModeResetPerfCounters() {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        return __global$1['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        __global$1['ngDevMode'] = ngDevModeResetPerfCounters();\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns wether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten$1(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attatched to any container.\n     */\n    function getRenderParent(viewNode) {\n        var container = getParentLNode(viewNode);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function canInsertNativeChildOfElement(parent, currentView) {\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reason:\n     * - view is not inserted into any container (view was created but not iserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view this view was inserted into a container and\n     * the container itself has it render parent determined.\n     */\n    function canInsertNativeChildOfView(parent) {\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 4 /* ElementContainer */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(parent, currentView);\n        }\n        else if (parent.tNode.type === 4 /* ElementContainer */) {\n            // Parent is an element container (ng-container).\n            // Its grand-parent might be an element, view or a sequence of ng-container parents.\n            var grandParent = getParentLNode(parent);\n            while (grandParent !== null && grandParent.tNode.type === 4 /* ElementContainer */) {\n                grandParent = getParentLNode(grandParent);\n            }\n            if (grandParent === null) {\n                return false;\n            }\n            else if (grandParent.tNode.type === 3 /* Element */) {\n                return canInsertNativeChildOfElement(grandParent, currentView);\n            }\n            else {\n                return canInsertNativeChildOfView(grandParent);\n            }\n        }\n        else {\n            // Parent is a View.\n            return canInsertNativeChildOfView(parent);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n            }\n            else if (parent.tNode.type === 4 /* ElementContainer */) {\n                var beforeNode = parent.native;\n                var grandParent = getParentLNode(parent);\n                while (grandParent.tNode.type === 4 /* ElementContainer */) {\n                    grandParent = getParentLNode(grandParent);\n                }\n                if (grandParent.tNode.type === 2 /* View */) {\n                    var renderParent = getRenderParent(grandParent);\n                    nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, grandParent.native, child, beforeNode);\n                }\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        else if (node.tNode.type === 4 /* ElementContainer */) {\n            var ngContainerChild = getChildLNode(node);\n            while (ngContainerChild) {\n                appendProjectedNode(ngContainerChild, currentParent, currentView, renderParent);\n                ngContainerChild = getNextLNode(ngContainerChild);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$2 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    var currentElementNode = null;\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var tNode = previousOrParentNode.tNode;\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentNode.data !== viewData && !isContentQueryHost(tNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            tNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData ? viewData[INJECTOR$1] : null,\n            renderer,\n            sanitizer || null,\n            null,\n            -1,\n            null,\n            null // declarationView\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        if (viewNode.data[PARENT] == null && viewNode.data[CONTEXT] && !tView.template) {\n            // This is a root view inside the view tree\n            tickRootContext(viewNode.data[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentNode = null;\n                oldView = enterView(viewNode.data, viewNode);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentNode = _previousOrParentNode;\n            }\n        }\n        return viewNode;\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        currentElementNode = node;\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$2;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$2) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(tNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        ngDevMode && assertNodeOfPossibleTypes(previousOrParentNode, 3 /* Element */);\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n        currentElementNode = null;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var lElement = currentElementNode;\n        var tNode = lElement.tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews = template ?\n                createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n                [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        // check if a given container node matches\n        currentQueries && (currentQueries = currentQueries.addNode(node));\n        queueLifecycleHooks(node.tNode.flags, tView);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = loadElement(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshDescendantViews();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, element, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var template = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            template(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding$1(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = baseDirectiveCreate(0, componentDef.factory(), componentDef);\n            rootContext.components.push(component);\n            elementNode.data[CONTEXT] = component;\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        queueLifecycleHooks(elementNode.tNode.flags, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY$3 = [];\n    ngDevMode && Object.freeze(EMPTY$1);\n    ngDevMode && Object.freeze(EMPTY_ARRAY$3);\n    var _renderCompCount$1 = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation;\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || EMPTY$1,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation == null ? 2 /* ViewEncapsulation.None */ : encapsulation,\n            id: \"c\" + _renderCompCount$1++,\n            styles: EMPTY_ARRAY$3,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$3,\n            declarations: def.declarations || EMPTY_ARRAY$3,\n            imports: def.imports || EMPTY_ARRAY$3,\n            exports: def.exports || EMPTY_ARRAY$3,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    }\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._lViewNode = null;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : domRendererFactory3;\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n                elementNode.data[CONTEXT] = component;\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                LifecycleHooksFeature(component, this.componentDef);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = elementNode.tNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            var lNode = createLNode(++index, 3 /* Element */, nodeList[j], null, null);\n                            if (previousTNode) {\n                                previousTNode.next = lNode.tNode;\n                            }\n                            else {\n                                firstTNode = lNode.tNode;\n                            }\n                            previousTNode = lNode.tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(elementNode, elementNode.data[TVIEW], component, 1 /* Create */);\n                elementNode.data[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._lViewNode.tNode.child = elementNode.tNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef$1(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef$1(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 15 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef$$1(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer);\n            appendChild(hostParent, comment, vcRefHost.view);\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, vcRefHost);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef$$1(_lContainerNode, _hostNode) {\n            this._lContainerNode = _lContainerNode;\n            this._hostNode = _hostNode;\n            this._viewRefs = [];\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = typeAny.ngComponentDef || typeAny.ngDirectiveDef || typeAny.ngPipeDef ||\n            typeAny.ngInjectableDef || typeAny.ngInjectorDef;\n        if (def === undefined || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        debugger;\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory === null) {\n            throw new Error(\"Type \" + proto.name + \" does not support inheritance\");\n        }\n        return factory;\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            this._declarationParentView = _declarationParentView;\n            this.elementRef = elementRef;\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef$1(viewNode.data, context);\n            viewRef._lViewNode = viewNode;\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var node = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var different = bindingUpdated2(v0, v1);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.deep, node);\n            if (isContentQueryHost(node.tNode)) {\n                add(this.shallow, node);\n                if (node.tNode.parent && isContentQueryHost(node.tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, node);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(node.tNode) && add(this.shallow, node);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 15 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery$1(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten$1(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList$1 = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList$1();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_l = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_i = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_j = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_k = _localeFactory;\n    exports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_g = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_h = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_d = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_m = wtfEnabled;\n    exports.Éµangular_packages_core_core_o = createScope;\n    exports.Éµangular_packages_core_core_n = detectWTF;\n    exports.Éµangular_packages_core_core_r = endTimeRange;\n    exports.Éµangular_packages_core_core_p = leave;\n    exports.Éµangular_packages_core_core_q = startTimeRange;\n    exports.Éµangular_packages_core_core_v = getOrCreateChangeDetectorRef;\n    exports.Éµangular_packages_core_core_y = getOrCreateContainerRef;\n    exports.Éµangular_packages_core_core_x = getOrCreateElementRef;\n    exports.Éµangular_packages_core_core_w = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_u = getOrCreateNodeInjector;\n    exports.Éµangular_packages_core_core_z = getOrCreateTemplateRef;\n    exports.Éµangular_packages_core_core_ba = bindingUpdated;\n    exports.Éµangular_packages_core_core_bb = loadInternal;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_s = _def;\n    exports.Éµangular_packages_core_core_t = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.Éµx = nextContext;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.ÉµQr = registerContentQuery;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµgV = getCurrentView;\n    exports.ÉµrV = restoreView;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµql = loadQueryList;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.Éµr = reference;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyling;\n    exports.Éµsm = elementStylingMap;\n    exports.Éµsp = elementStyleProp;\n    exports.Éµsa = elementStylingApply;\n    exports.Éµcp = elementClassProp;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµiA = i18nApply;\n    exports.ÉµiEM = i18nExpMapping;\n    exports.ÉµiI1 = i18nInterpolation1;\n    exports.ÉµiI2 = i18nInterpolation2;\n    exports.ÉµiI3 = i18nInterpolation3;\n    exports.ÉµiI4 = i18nInterpolation4;\n    exports.ÉµiI5 = i18nInterpolation5;\n    exports.ÉµiI6 = i18nInterpolation6;\n    exports.ÉµiI7 = i18nInterpolation7;\n    exports.ÉµiI8 = i18nInterpolation8;\n    exports.ÉµIV = i18nInterpolationV;\n    exports.ÉµiM = i18nMapping;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}