{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_FACTORY_DEF","ngFactoryDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","elementDepthCount","bindingsEnabled","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","activeDirectiveId","hasActiveElementFlag","flag","_selectedIndex","setActiveHostElement","elementIndex","getSelectedIndex","executeElementExitFn","setSelectedIndex","previousOrParentTNode","isParent","_elementExitFn","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","selectView","newView","hostTNode","oldView","_currentSanitizer","RendererStyleFlags3","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","getConfig","hasConfig","allowDirectStyling","hostBindingsMode","config","getLockedConfig","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","bindingIndex","getValue","isContextLocked","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","isHostStylingActive","directiveOrSourceId","stylingMapToString","isClassBased","str","prop","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","bindingValue","totalSources","addNewSourceColumn","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","lockAndFinalizeContext","updateInitialStylingOnContext","initialStyling","hasInitialStyling","lockContext","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","applyStylingValue","applyFn","valueToApply","initialStyles","findInitialStylingValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","hasMapBindings","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","templateBindingsLocked","hostBindingsLocked","mockElement","mapFn","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","bindingStartIndex","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","selectedIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","inputsStore","outputsStore","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","currentChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","metadata","compileFactory","injectFn","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","resolveProvider","computeDeps","providerDeps","staticError","useNew","multiProviderMixError","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","recursivelyProcessProviders","resolvedProvider","multiProvider","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","isHostStyling","getClassesContext","getStylesContext","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","applyStylingMapDirectly","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","Math","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","getDirectiveMetadata","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","getPipeMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","createProxy","handler","g","Proxy","contains","toggle","ownKeys","getOwnPropertyDescriptor","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵINJECTOR_SCOPE","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.9+7.sha-0d186dd.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ngFactoryDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngFactoryDef' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var activeDirectiveId = 0;\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (_selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        _selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (getSelectedIndex() !== elementIndex) {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = 0;\n        }\n    }\n    var _elementExitFn = null;\n    function executeElementExitFn() {\n        _elementExitFn();\n        // TODO (matsko|misko): remove this unassignment once the state management of\n        //                      global variables are better managed.\n        _selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        _elementExitFn = fn;\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param host Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function selectView(newView, hostTNode) {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n    }\n    /* tslint:disable */\n    var _selectedIndex = -1 << 1 /* Size */;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index << 1 /* Size */;\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        initialStyling = initialStyling || allocStylingMapArray();\n        return [\n            0 /* Initial */,\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray() {\n        return [''];\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function hasConfig(context, flag) {\n        return (getConfig(context) & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. context is locked for template or host bindings (depending on `hostBindingsMode`)\n     * 2. There are no collisions (i.e. properties with more than one binding)\n     * 3. There are only \"prop\" or \"map\" bindings present, but not both\n     */\n    function allowDirectStyling(context, hostBindingsMode) {\n        var config = getConfig(context);\n        return ((config & getLockedConfig(hostBindingsMode)) !== 0) &&\n            ((config & 4 /* HasCollisions */) === 0) &&\n            ((config & 3 /* HasPropAndMapBindings */) !== 3 /* HasPropAndMapBindings */);\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function patchConfig(context, flag) {\n        context[0 /* ConfigPosition */] |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[1 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex > 0 ? data[bindingIndex] : null;\n    }\n    function lockContext(context, hostBindingsMode) {\n        patchConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function isContextLocked(context, hostBindingsMode) {\n        return hasConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function getLockedConfig(hostBindingsMode) {\n        return hostBindingsMode ? 128 /* HostBindingsLocked */ :\n            64 /* TemplateBindingsLocked */;\n    }\n    function getPropValuesStartPosition(context) {\n        var startPosition = 3 /* ValuesStartPosition */;\n        if (hasConfig(context, 2 /* HasMapBindings */)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[2 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 3 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 2 /* isComponentHost */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ?\n            value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() ||\n            null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        if (value !== NO_CHANGE) {\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        if (value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        if (!isContextLocked(context, hostBindingsMode)) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tNode.firstTemplatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired);\n            patchConfig(context, hostBindingsMode ? 32 /* HasHostBindings */ : 16 /* HasTemplateBindings */);\n            patchConfig(context, prop ? 1 /* HasPropBindings */ : 2 /* HasMapBindings */);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = (getConfig(context) & 32 /* HasHostBindings */) &&\n                !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, data, prop);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, data, prop) {\n        var valuesCount = getValuesCount(context);\n        if (prop !== null && hasConfig(context, 1 /* HasPropBindings */)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 3 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        if (hasConfig(context, 2 /* HasMapBindings */)) {\n            var bindingsStart = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, countId, sourceIndex, prop, bindingValue, sanitizationRequired) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 3 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(context, 4 /* HasCollisions */);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 3 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[1 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            if (!isContextLocked(stylesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(stylesContext, hostBindingsMode);\n            }\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode);\n            }\n        }\n        if (classesContext) {\n            if (!isContextLocked(classesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(classesContext, hostBindingsMode);\n            }\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     *\n     * Note that the `TStylingContext` styling context contains two locks: one for template bindings\n     * and another for host bindings. Either one of these locks will be set when styling is applied\n     * during the template binding flush and/or during the host bindings flush.\n     */\n    function lockAndFinalizeContext(context, hostBindingsMode) {\n        var initialValues = getStylingMapArray(context);\n        updateInitialStylingOnContext(context, initialValues);\n        lockContext(context, hostBindingsMode);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, COUNT_ID_FOR_STYLING, 0, prop, value, false);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(context, 8 /* HasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        if (hasConfig(context, 2 /* HasMapBindings */)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 3 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * See `allowDirectStylingApply`.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, element, data, bindingIndex, map, applyFn, sanitizer, forceUpdate) {\n        if (forceUpdate || hasValueChanged(data[bindingIndex], map)) {\n            setValue(data, bindingIndex, map);\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                applyStylingValue(renderer, context, element, prop, value, applyFn, bindingIndex, sanitizer);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * See `allowDirectStylingApply`.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, element, data, bindingIndex, prop, value, applyFn, sanitizer) {\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            applyStylingValue(renderer, context, element, prop, value, applyFn, bindingIndex, sanitizer);\n            return true;\n        }\n        return false;\n    }\n    function applyStylingValue(renderer, context, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 2 /* SanitizeOnly */) : valueToApply;\n        }\n        else if (hasConfig(context, 8 /* HasInitialStyling */)) {\n            var initialStyles = getStylingMapArray(context);\n            if (initialStyles) {\n                valueToApply = findInitialStylingValue(initialStyles, prop);\n            }\n        }\n        applyFn(renderer, element, prop, valueToApply, bindingIndex);\n    }\n    function findInitialStylingValue(map, prop) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p >= prop) {\n                return p === prop ? getMapValue(map, i) : null;\n            }\n        }\n        return null;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            if (value) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 3 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isTemplateLocked\", {\n            get: function () { return isContextLocked(this.context, true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"isHostBindingsLocked\", {\n            get: function () { return isContextLocked(this.context, false); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () {\n                var hasMapBindings = hasConfig(this.context, 2 /* HasMapBindings */);\n                var hasPropBindings = hasConfig(this.context, 1 /* HasPropBindings */);\n                var hasCollisions = hasConfig(this.context, 4 /* HasCollisions */);\n                var hasTemplateBindings = hasConfig(this.context, 16 /* HasTemplateBindings */);\n                var hasHostBindings = hasConfig(this.context, 32 /* HasHostBindings */);\n                var templateBindingsLocked = hasConfig(this.context, 64 /* TemplateBindingsLocked */);\n                var hostBindingsLocked = hasConfig(this.context, 128 /* HostBindingsLocked */);\n                var allowDirectStyling$1 = allowDirectStyling(this.context, false) || allowDirectStyling(this.context, true);\n                return {\n                    hasMapBindings: hasMapBindings,\n                    hasPropBindings: hasPropBindings,\n                    hasCollisions: hasCollisions,\n                    hasTemplateBindings: hasTemplateBindings,\n                    hasHostBindings: hasHostBindings,\n                    templateBindingsLocked: templateBindingsLocked,\n                    hostBindingsLocked: hostBindingsLocked,\n                    allowDirectStyling: allowDirectStyling$1,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = hasConfig(this.context, 2 /* HasMapBindings */);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context, null, mockElement, this._data, true, mapFn, sanitizer, false);\n            // and also the host bindings\n            applyStylingViaContext(this.context, null, mockElement, this._data, true, mapFn, sanitizer, true);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = NG_DEV_MODE && createNamedArrayType('LView') || null;\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, lView) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            selectView(oldView, null);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            selectView(oldView, null);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            inputsStore = generatePropertyAliases(directiveDef.inputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            propName[0] === ANIMATION_PROP_PREFIX || typeof Node !== 'function' ||\n            !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 8 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(lView, directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 2 /* isComponentHost */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = (flags & 2 /* isComponentHost */) | 1 /* isDirectiveHost */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            if (tViewNodeChild !== null) {\n                if (tViewNodeChild.type === 4 /* ElementContainer */ ||\n                    tViewNodeChild.type === 5 /* IcuContainer */) {\n                    var currentChild = tViewNodeChild.child;\n                    while (currentChild && (currentChild.type === 4 /* ElementContainer */ ||\n                        currentChild.type === 5 /* IcuContainer */)) {\n                        currentChild = currentChild.child;\n                    }\n                    tViewNodeChild = currentChild || tViewNodeChild;\n                }\n                return getNativeByTNodeOrNull(tViewNodeChild, lView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponentHost(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n            Object.defineProperty(type, NG_INJECTABLE_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        ngFactoryDef = getCompilerFacade().compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngFactoryDef.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            isPipe: false\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(getNativeByTNode(tNode, lView), lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(getSelectedIndex(), bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(elementIndex, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var hostBindingsMode = isHostStyling();\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, native, lView, bindingIndex, prop, value, isClassBased ? setClass : setStyle, sanitizer);\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value);\n            }\n            else {\n                updated = updateStyleViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false);\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true);\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var directiveIndex = getActiveDirectiveId();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = lView[bindingIndex];\n        var hostBindingsMode = isHostStyling();\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingMapDirectly(renderer, context, native, lView, bindingIndex, stylingMapArr, isClassBased ? setClass : setStyle, sanitizer, valueHasChanged);\n        }\n        else {\n            updated = valueHasChanged;\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged);\n            }\n            else {\n                updateStyleViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context, false)) {\n                var inputName = isClassBased ? 'class' : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, classesContext, stylesContext, native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray();\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray();\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = tNode.inputs;\n            if (inputData != null) {\n                if (inputData.hasOwnProperty('class')) {\n                    tNode.flags |= 16 /* hasClassInput */;\n                }\n                if (inputData.hasOwnProperty('style')) {\n                    tNode.flags |= 32 /* hasStyleInput */;\n                }\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        selectView(lContainer[PARENT], null);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, lView[BINDING_INDEX] - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    lView[BINDING_INDEX] - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = selectView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            selectView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ngInjectableDef = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.9+7.sha-0d186dd.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = selectView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                selectView(oldLView, null);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, lView, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearRegisteredModuleState() {\n        modules.clear();\n    }\n    function getRegisteredModulesState() {\n        return new Map(modules);\n    }\n    function restoreRegisteredModulesState(moduleMap) {\n        modules = new Map(moduleMap);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error_1.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/ngDirectiveDef.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/ngFactoryDef.js\", __assign({}, meta.metadata, { injectFn: 'directiveInject', isPipe: false }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/ngFactoryDef.js\", __assign({}, metadata, { injectFn: 'directiveInject', isPipe: true }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/ngPipeDef.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngFactoryDef = function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function (t) { return ApplicationInitStatus.ngFactoryDef(t); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngFactoryDef = function Console_Factory(t) { return new (t || Console)(); };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function (t) { return Console.ngFactoryDef(t); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngFactoryDef = function Compiler_Factory(t) { return new (t || Compiler)(); };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function (t) { return Compiler.ngFactoryDef(t); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngFactoryDef = function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function (t) { return Testability.ngFactoryDef(t); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngFactoryDef = function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function (t) { return TestabilityRegistry.ngFactoryDef(t); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngFactoryDef = function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); };\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function (t) { return PlatformRef.ngFactoryDef(t); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngFactoryDef = function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); };\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function (t) { return ApplicationRef.ngFactoryDef(t); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngFactoryDef = function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function (t) { return SystemJsNgModuleLoader.ngFactoryDef(t); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please add `import \\'@angular/localize/init\\';` to your polyfills.ts file.');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode$1;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}